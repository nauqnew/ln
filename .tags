!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACLOCAL	libsodium/Makefile	/^ACLOCAL = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing aclocal-1.15$/;"	m
ACLOCAL	libsodium/dist-build/Makefile	/^ACLOCAL = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing aclocal-1.15$/;"	m
ACLOCAL	libsodium/msvc-scripts/Makefile	/^ACLOCAL = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing aclocal-1.15$/;"	m
ACLOCAL	libsodium/src/Makefile	/^ACLOCAL = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing aclocal-1.15$/;"	m
ACLOCAL	libsodium/src/libsodium/Makefile	/^ACLOCAL = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing aclocal-1.15$/;"	m
ACLOCAL	libsodium/src/libsodium/include/Makefile	/^ACLOCAL = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing aclocal-1.15$/;"	m
ACLOCAL	libsodium/test/Makefile	/^ACLOCAL = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing aclocal-1.15$/;"	m
ACLOCAL	libsodium/test/default/Makefile	/^ACLOCAL = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing aclocal-1.15$/;"	m
ACLOCAL	secp256k1/Makefile	/^ACLOCAL = ${SHELL} \/home\/wen\/work\/lightning\/secp256k1\/build-aux\/missing aclocal-1.15$/;"	m
ACLOCAL_AMFLAGS	libsodium/Makefile	/^ACLOCAL_AMFLAGS = -I m4$/;"	m
ACLOCAL_AMFLAGS	secp256k1/Makefile	/^ACLOCAL_AMFLAGS = -I build-aux\/m4$/;"	m
ACLOCAL_M4	libsodium/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	libsodium/dist-build/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	libsodium/msvc-scripts/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	libsodium/src/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	libsodium/src/libsodium/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	libsodium/src/libsodium/include/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	libsodium/test/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	libsodium/test/default/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	secp256k1/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACT_ONE_SIZE	lightningd/handshake/handshake.c	293;"	d	file:
ACT_THREE_SIZE	lightningd/handshake/handshake.c	713;"	d	file:
ACT_TWO_SIZE	lightningd/handshake/handshake.c	505;"	d	file:
ADD	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	29;"	d
ADD	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	12;"	d
ADDING	test/test_protocol.c	63;"	d	file:
ADDLO	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	13;"	d
ADD_STATE	test/test_protocol.c	146;"	d	file:
ADLEN	libsodium/test/default/aead_chacha20poly1305.c	10;"	d	file:
ADLEN	libsodium/test/default/aead_chacha20poly1305.c	11;"	d	file:
ADLEN	libsodium/test/default/aead_chacha20poly1305.c	175;"	d	file:
ADLEN	libsodium/test/default/aead_chacha20poly1305.c	176;"	d	file:
AESENCLASTx	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	157;"	d	file:
AESENCx	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	153;"	d	file:
ALIGN	ccan/ccan/tal/test/run-count.c	6;"	d	file:
ALIGNOF	ccan/ccan/alignof/alignof.h	14;"	d
ALIGNOF	ccan/ccan/alignof/alignof.h	17;"	d
ALL	ccan/ccan/io/benchmarks/Makefile	/^ALL:=run-loop run-different-speed run-length-prefix$/;"	m
ALL	ccan/ccan/timer/benchmarks/Makefile	/^ALL:=expected-usage$/;"	m
AMTAR	libsodium/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	libsodium/dist-build/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	libsodium/msvc-scripts/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	libsodium/src/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	libsodium/src/libsodium/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	libsodium/src/libsodium/include/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	libsodium/test/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	libsodium/test/default/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	secp256k1/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AM_CPPFLAGS	libsodium/test/default/Makefile	/^AM_CPPFLAGS = \\$/;"	m
AM_DEFAULT_VERBOSITY	libsodium/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	libsodium/dist-build/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	libsodium/msvc-scripts/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	libsodium/src/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	libsodium/src/libsodium/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	libsodium/src/libsodium/include/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	libsodium/test/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	libsodium/test/default/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	secp256k1/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_LDFLAGS	libsodium/test/default/Makefile	/^AM_LDFLAGS = $/;"	m
AM_RECURSIVE_TARGETS	libsodium/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	libsodium/src/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	libsodium/src/libsodium/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	libsodium/test/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	libsodium/test/default/Makefile	/^AM_RECURSIVE_TARGETS = check recheck$/;"	m
AM_RECURSIVE_TARGETS	secp256k1/Makefile	/^AM_RECURSIVE_TARGETS = cscope check recheck$/;"	m
AM_V_CC	libsodium/src/libsodium/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	libsodium/test/default/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	secp256k1/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CCAS	secp256k1/Makefile	/^AM_V_CCAS = $(am__v_CCAS_$(V))$/;"	m
AM_V_CCLD	libsodium/src/libsodium/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	libsodium/test/default/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	secp256k1/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CPPAS	libsodium/src/libsodium/Makefile	/^AM_V_CPPAS = $(am__v_CPPAS_$(V))$/;"	m
AM_V_GEN	libsodium/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	libsodium/dist-build/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	libsodium/msvc-scripts/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	libsodium/src/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	libsodium/src/libsodium/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	libsodium/src/libsodium/include/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	libsodium/test/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	libsodium/test/default/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	secp256k1/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_P	libsodium/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	libsodium/dist-build/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	libsodium/msvc-scripts/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	libsodium/src/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	libsodium/src/libsodium/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	libsodium/src/libsodium/include/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	libsodium/test/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	libsodium/test/default/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	secp256k1/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_at	libsodium/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	libsodium/dist-build/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	libsodium/msvc-scripts/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	libsodium/src/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	libsodium/src/libsodium/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	libsodium/src/libsodium/include/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	libsodium/test/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	libsodium/test/default/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	secp256k1/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_lt	libsodium/src/libsodium/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	libsodium/test/default/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	secp256k1/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AND	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	33;"	d
ANSWER_TO_THE_ULTIMATE_QUESTION_OF_LIFE_THE_UNIVERSE_AND_EVERYTHING	ccan/ccan/list/test/helper.c	8;"	d	file:
AR	libsodium/Makefile	/^AR = ar$/;"	m
AR	libsodium/dist-build/Makefile	/^AR = ar$/;"	m
AR	libsodium/msvc-scripts/Makefile	/^AR = ar$/;"	m
AR	libsodium/src/Makefile	/^AR = ar$/;"	m
AR	libsodium/src/libsodium/Makefile	/^AR = ar$/;"	m
AR	libsodium/src/libsodium/include/Makefile	/^AR = ar$/;"	m
AR	libsodium/test/Makefile	/^AR = ar$/;"	m
AR	libsodium/test/default/Makefile	/^AR = ar$/;"	m
AR	secp256k1/Makefile	/^AR = \/usr\/bin\/ar$/;"	m
ARCH_BITS	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	38;"	d
ARCH_BITS	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	40;"	d
ARGON2_ADDRESSES_IN_BLOCK	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    ARGON2_ADDRESSES_IN_BLOCK = 128,$/;"	e	enum:argon2_ctx_constants
ARGON2_AD_PTR_MISMATCH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_AD_PTR_MISMATCH = -21,     \/* NULL ptr with non-zero length *\/$/;"	e	enum:Argon2_ErrorCodes
ARGON2_AD_TOO_LONG	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_AD_TOO_LONG = -9,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_AD_TOO_SHORT	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_AD_TOO_SHORT = -8,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_ALLOCATE_MEMORY_CBK_NULL	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_ALLOCATE_MEMORY_CBK_NULL = -24,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_BLOCK_SIZE	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    ARGON2_BLOCK_SIZE = 1024,$/;"	e	enum:argon2_ctx_constants
ARGON2_DECODING_FAIL	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_DECODING_FAIL = -32,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_DECODING_LENGTH_FAIL	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_DECODING_LENGTH_FAIL = -34,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_DEFAULT_FLAGS	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	70;"	d
ARGON2_ENCODING_FAIL	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_ENCODING_FAIL = -31,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_FLAG_CLEAR_MEMORY	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	69;"	d
ARGON2_FLAG_CLEAR_PASSWORD	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	67;"	d
ARGON2_FLAG_CLEAR_SECRET	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	68;"	d
ARGON2_FREE_MEMORY_CBK_NULL	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_FREE_MEMORY_CBK_NULL = -23,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_INCORRECT_PARAMETER	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_INCORRECT_PARAMETER = -25,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_INCORRECT_TYPE	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_INCORRECT_TYPE = -26,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_LANES_TOO_FEW	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_LANES_TOO_FEW = -16,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_LANES_TOO_MANY	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_LANES_TOO_MANY = -17,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_MAX_AD_LENGTH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	57;"	d
ARGON2_MAX_LANES	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	24;"	d
ARGON2_MAX_MEMORY	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	44;"	d
ARGON2_MAX_MEMORY_BITS	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	42;"	d
ARGON2_MAX_OUTLEN	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	35;"	d
ARGON2_MAX_PWD_LENGTH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	53;"	d
ARGON2_MAX_SALT_LENGTH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	61;"	d
ARGON2_MAX_SECRET	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	65;"	d
ARGON2_MAX_THREADS	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	28;"	d
ARGON2_MAX_TIME	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	49;"	d
ARGON2_MEMORY_ALLOCATION_ERROR	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_MEMORY_ALLOCATION_ERROR = -22,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_MEMORY_TOO_LITTLE	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_MEMORY_TOO_LITTLE = -14,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_MEMORY_TOO_MUCH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_MEMORY_TOO_MUCH = -15,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_MIN	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	40;"	d
ARGON2_MIN_AD_LENGTH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	56;"	d
ARGON2_MIN_LANES	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	23;"	d
ARGON2_MIN_MEMORY	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	38;"	d
ARGON2_MIN_OUTLEN	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	34;"	d
ARGON2_MIN_PWD_LENGTH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	52;"	d
ARGON2_MIN_SALT_LENGTH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	60;"	d
ARGON2_MIN_SECRET	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	64;"	d
ARGON2_MIN_THREADS	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	27;"	d
ARGON2_MIN_TIME	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	48;"	d
ARGON2_MISSING_ARGS	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_MISSING_ARGS = -30,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_OK	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_OK = 0,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_OUTPUT_PTR_NULL	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_OUTPUT_PTR_NULL = -1,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_OUTPUT_TOO_LONG	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_OUTPUT_TOO_LONG = -3,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_OUTPUT_TOO_SHORT	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_OUTPUT_TOO_SHORT = -2,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_OUT_PTR_MISMATCH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_OUT_PTR_MISMATCH = -27,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_OWORDS_IN_BLOCK	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    ARGON2_OWORDS_IN_BLOCK = ARGON2_BLOCK_SIZE \/ 16,$/;"	e	enum:argon2_ctx_constants
ARGON2_PREHASH_DIGEST_LENGTH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    ARGON2_PREHASH_DIGEST_LENGTH = 64,$/;"	e	enum:argon2_ctx_constants
ARGON2_PREHASH_SEED_LENGTH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    ARGON2_PREHASH_SEED_LENGTH = 72$/;"	e	enum:argon2_ctx_constants
ARGON2_PWD_PTR_MISMATCH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_PWD_PTR_MISMATCH = -18,    \/* NULL ptr with non-zero length *\/$/;"	e	enum:Argon2_ErrorCodes
ARGON2_PWD_TOO_LONG	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_PWD_TOO_LONG = -5,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_PWD_TOO_SHORT	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_PWD_TOO_SHORT = -4,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_QWORDS_IN_BLOCK	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    ARGON2_QWORDS_IN_BLOCK = ARGON2_BLOCK_SIZE \/ 8,$/;"	e	enum:argon2_ctx_constants
ARGON2_SALT_PTR_MISMATCH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_SALT_PTR_MISMATCH = -19,   \/* NULL ptr with non-zero length *\/$/;"	e	enum:Argon2_ErrorCodes
ARGON2_SALT_TOO_LONG	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_SALT_TOO_LONG = -7,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_SALT_TOO_SHORT	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_SALT_TOO_SHORT = -6,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_SECRET_PTR_MISMATCH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_SECRET_PTR_MISMATCH = -20, \/* NULL ptr with non-zero length *\/$/;"	e	enum:Argon2_ErrorCodes
ARGON2_SECRET_TOO_LONG	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_SECRET_TOO_LONG = -11,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_SECRET_TOO_SHORT	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_SECRET_TOO_SHORT = -10,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_SYNC_POINTS	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	31;"	d
ARGON2_THREADS_TOO_FEW	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_THREADS_TOO_FEW = -28,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_THREADS_TOO_MANY	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_THREADS_TOO_MANY = -29,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_THREAD_FAIL	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_THREAD_FAIL = -33,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_TIME_TOO_LARGE	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_TIME_TOO_LARGE = -13,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_TIME_TOO_SMALL	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_TIME_TOO_SMALL = -12,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_VERIFY_MISMATCH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_VERIFY_MISMATCH = -35$/;"	e	enum:Argon2_ErrorCodes
ARGON2_VERSION_NUMBER	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    ARGON2_VERSION_NUMBER = 0x13,$/;"	e	enum:argon2_ctx_constants
ARG_CHECK	secp256k1/src/secp256k1.c	21;"	d	file:
ARRAY_SIZE	ccan/ccan/array_size/array_size.h	15;"	d
ARRAY_SIZE	ccan/ccan/str/test/run.c	7;"	d	file:
ARRAY_SIZE	ccan/ccan/tal/str/test/run.c	8;"	d	file:
ARX	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	204;"	d	file:
ARX	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	52;"	d	file:
ARX	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	55;"	d	file:
AS	libsodium/Makefile	/^AS = as$/;"	m
AS	libsodium/dist-build/Makefile	/^AS = as$/;"	m
AS	libsodium/msvc-scripts/Makefile	/^AS = as$/;"	m
AS	libsodium/src/Makefile	/^AS = as$/;"	m
AS	libsodium/src/libsodium/Makefile	/^AS = as$/;"	m
AS	libsodium/src/libsodium/include/Makefile	/^AS = as$/;"	m
AS	libsodium/test/Makefile	/^AS = as$/;"	m
AS	libsodium/test/default/Makefile	/^AS = as$/;"	m
ASM_HIDE_SYMBOL	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^ASM_HIDE_SYMBOL _fe51_mul$/;"	l
ASM_HIDE_SYMBOL	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^ASM_HIDE_SYMBOL fe51_mul$/;"	l
ASM_HIDE_SYMBOL	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^ASM_HIDE_SYMBOL _fe51_nsquare$/;"	l
ASM_HIDE_SYMBOL	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^ASM_HIDE_SYMBOL fe51_nsquare$/;"	l
ASM_HIDE_SYMBOL	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^ASM_HIDE_SYMBOL _fe51_pack$/;"	l
ASM_HIDE_SYMBOL	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^ASM_HIDE_SYMBOL fe51_pack$/;"	l
ASM_HIDE_SYMBOL	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^ASM_HIDE_SYMBOL _ladder$/;"	l
ASM_HIDE_SYMBOL	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^ASM_HIDE_SYMBOL ladder$/;"	l
ASM_HIDE_SYMBOL	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^ASM_HIDE_SYMBOL _ladder_base$/;"	l
ASM_HIDE_SYMBOL	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^ASM_HIDE_SYMBOL ladder_base$/;"	l
ASORT_SCALAR	ccan/ccan/order/test/api.c	37;"	d	file:
ASORT_STRUCT_BY_SCALAR	ccan/ccan/order/test/api.c	58;"	d	file:
AUTHENTICATE__INIT	lightning.pb-c.h	183;"	d
AUTOCONF	libsodium/Makefile	/^AUTOCONF = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing autoconf$/;"	m
AUTOCONF	libsodium/dist-build/Makefile	/^AUTOCONF = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing autoconf$/;"	m
AUTOCONF	libsodium/msvc-scripts/Makefile	/^AUTOCONF = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing autoconf$/;"	m
AUTOCONF	libsodium/src/Makefile	/^AUTOCONF = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing autoconf$/;"	m
AUTOCONF	libsodium/src/libsodium/Makefile	/^AUTOCONF = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing autoconf$/;"	m
AUTOCONF	libsodium/src/libsodium/include/Makefile	/^AUTOCONF = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing autoconf$/;"	m
AUTOCONF	libsodium/test/Makefile	/^AUTOCONF = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing autoconf$/;"	m
AUTOCONF	libsodium/test/default/Makefile	/^AUTOCONF = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing autoconf$/;"	m
AUTOCONF	secp256k1/Makefile	/^AUTOCONF = ${SHELL} \/home\/wen\/work\/lightning\/secp256k1\/build-aux\/missing autoconf$/;"	m
AUTODATA	ccan/ccan/autodata/autodata.h	43;"	d
AUTODATA	ccan/ccan/autodata/autodata.h	94;"	d
AUTODATA_MAGIC	ccan/ccan/autodata/autodata.h	93;"	d
AUTODATA_TYPE	ccan/ccan/autodata/autodata.h	24;"	d
AUTODATA_TYPE	ccan/ccan/autodata/autodata.h	89;"	d
AUTODATA_VAR_	ccan/ccan/autodata/autodata.h	84;"	d
AUTODATA_VAR__	ccan/ccan/autodata/autodata.h	83;"	d
AUTOHEADER	libsodium/Makefile	/^AUTOHEADER = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing autoheader$/;"	m
AUTOHEADER	libsodium/dist-build/Makefile	/^AUTOHEADER = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing autoheader$/;"	m
AUTOHEADER	libsodium/msvc-scripts/Makefile	/^AUTOHEADER = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing autoheader$/;"	m
AUTOHEADER	libsodium/src/Makefile	/^AUTOHEADER = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing autoheader$/;"	m
AUTOHEADER	libsodium/src/libsodium/Makefile	/^AUTOHEADER = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing autoheader$/;"	m
AUTOHEADER	libsodium/src/libsodium/include/Makefile	/^AUTOHEADER = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing autoheader$/;"	m
AUTOHEADER	libsodium/test/Makefile	/^AUTOHEADER = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing autoheader$/;"	m
AUTOHEADER	libsodium/test/default/Makefile	/^AUTOHEADER = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing autoheader$/;"	m
AUTOHEADER	secp256k1/Makefile	/^AUTOHEADER = ${SHELL} \/home\/wen\/work\/lightning\/secp256k1\/build-aux\/missing autoheader$/;"	m
AUTOMAKE	libsodium/Makefile	/^AUTOMAKE = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing automake-1.15$/;"	m
AUTOMAKE	libsodium/dist-build/Makefile	/^AUTOMAKE = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing automake-1.15$/;"	m
AUTOMAKE	libsodium/msvc-scripts/Makefile	/^AUTOMAKE = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing automake-1.15$/;"	m
AUTOMAKE	libsodium/src/Makefile	/^AUTOMAKE = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing automake-1.15$/;"	m
AUTOMAKE	libsodium/src/libsodium/Makefile	/^AUTOMAKE = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing automake-1.15$/;"	m
AUTOMAKE	libsodium/src/libsodium/include/Makefile	/^AUTOMAKE = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing automake-1.15$/;"	m
AUTOMAKE	libsodium/test/Makefile	/^AUTOMAKE = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing automake-1.15$/;"	m
AUTOMAKE	libsodium/test/default/Makefile	/^AUTOMAKE = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing automake-1.15$/;"	m
AUTOMAKE	secp256k1/Makefile	/^AUTOMAKE = ${SHELL} \/home\/wen\/work\/lightning\/secp256k1\/build-aux\/missing automake-1.15$/;"	m
AWK	libsodium/Makefile	/^AWK = mawk$/;"	m
AWK	libsodium/dist-build/Makefile	/^AWK = mawk$/;"	m
AWK	libsodium/msvc-scripts/Makefile	/^AWK = mawk$/;"	m
AWK	libsodium/src/Makefile	/^AWK = mawk$/;"	m
AWK	libsodium/src/libsodium/Makefile	/^AWK = mawk$/;"	m
AWK	libsodium/src/libsodium/include/Makefile	/^AWK = mawk$/;"	m
AWK	libsodium/test/Makefile	/^AWK = mawk$/;"	m
AWK	libsodium/test/default/Makefile	/^AWK = mawk$/;"	m
AWK	secp256k1/Makefile	/^AWK = mawk$/;"	m
A_LINEX	test/test_protocol.c	22;"	d	file:
A_TEXTX	test/test_protocol.c	24;"	d	file:
Allocation	secp256k1/src/asm/field_10x26_arm.s	/^	Allocation:$/;"	l
Argon2_Context	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^typedef struct Argon2_Context {$/;"	s
Argon2_ErrorCodes	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^typedef enum Argon2_ErrorCodes {$/;"	g
Argon2_i	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^typedef enum Argon2_type { Argon2_i = 1 } argon2_type;$/;"	e	enum:Argon2_type
Argon2_instance_t	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^typedef struct Argon2_instance_t {$/;"	s
Argon2_position_t	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^typedef struct Argon2_position_t {$/;"	s
Argon2_thread_data	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^typedef struct Argon2_thread_data {$/;"	s
Argon2_type	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^typedef enum Argon2_type { Argon2_i = 1 } argon2_type;$/;"	g
AssertFailException	secp256k1/src/java/org/bitcoin/NativeSecp256k1Util.java	/^      public AssertFailException(String message) {$/;"	m	class:NativeSecp256k1Util.AssertFailException
AssertFailException	secp256k1/src/java/org/bitcoin/NativeSecp256k1Util.java	/^    public static class AssertFailException extends Exception {$/;"	c	class:NativeSecp256k1Util
Authenticate	lightning.pb-c.h	/^typedef struct _Authenticate Authenticate;$/;"	t	typeref:struct:_Authenticate
Authenticate_Closure	lightning.pb-c.h	/^typedef void (*Authenticate_Closure)$/;"	t
BADONION	wire/onion_defs.h	13;"	d
BAD_GATEWAY_502	daemon/failure.h	/^	BAD_GATEWAY_502 = 502,$/;"	e	enum:fail_error
BAD_REQUEST_400	daemon/failure.h	/^	BAD_REQUEST_400 = 400,$/;"	e	enum:fail_error
BASE58_ADDR_MAX_LEN	bitcoin/base58.h	21;"	d
BASE58_KEY_MAX_LEN	bitcoin/base58.h	25;"	d
BE16_TO_CPU	ccan/ccan/endian/endian.h	210;"	d
BE16_TO_CPU	ccan/ccan/endian/endian.h	218;"	d
BE32	secp256k1/src/hash_impl.h	272;"	d
BE32	secp256k1/src/hash_impl.h	31;"	d
BE32	secp256k1/src/hash_impl.h	33;"	d
BE32_TO_CPU	ccan/ccan/endian/endian.h	204;"	d
BE32_TO_CPU	ccan/ccan/endian/endian.h	217;"	d
BE64_TO_CPU	ccan/ccan/endian/endian.h	198;"	d
BE64_TO_CPU	ccan/ccan/endian/endian.h	216;"	d
BIN	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	283;"	d	file:
BIN	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	344;"	d	file:
BIP68_LOCKTIME_MASK	bitcoin/locktime.c	9;"	d	file:
BIP68_SECONDS_FLAG	bitcoin/locktime.c	8;"	d	file:
BIP68_SECONDS_SHIFT	bitcoin/locktime.c	10;"	d	file:
BITCOIND_CONFIG	tests/utils.py	/^BITCOIND_CONFIG = {$/;"	v
BITCOIN_CLI	daemon/bitcoind.c	23;"	d	file:
BITCOIN_HEADERS	Makefile	/^BITCOIN_HEADERS := bitcoin\/address.h		\\$/;"	m
BITCOIN_OBJS	Makefile	/^BITCOIN_OBJS := $(BITCOIN_SRC:.c=.o)$/;"	m
BITCOIN_PUBKEY__INIT	lightning.pb-c.h	141;"	d
BITCOIN_SRC	Makefile	/^BITCOIN_SRC :=					\\$/;"	m
BITCOIN_TEST_OBJS	bitcoin/Makefile	/^BITCOIN_TEST_OBJS := $(BITCOIN_TEST_SRC:.c=.o)$/;"	m
BITCOIN_TEST_PROGRAMS	bitcoin/Makefile	/^BITCOIN_TEST_PROGRAMS := $(BITCOIN_TEST_OBJS:.o=)$/;"	m
BITCOIN_TEST_SRC	bitcoin/Makefile	/^BITCOIN_TEST_SRC := $(wildcard bitcoin\/test\/run-*.c)$/;"	m
BLAKE2B_BLOCKBYTES	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	/^  BLAKE2B_BLOCKBYTES = 128,$/;"	e	enum:blake2b_constant
BLAKE2B_COMPRESS_V1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	107;"	d
BLAKE2B_DIAG_V1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	53;"	d
BLAKE2B_G1_V1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	41;"	d
BLAKE2B_G2_V1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	47;"	d
BLAKE2B_KEYBYTES	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	/^  BLAKE2B_KEYBYTES   = 64,$/;"	e	enum:blake2b_constant
BLAKE2B_LOAD_MSG_0_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	4;"	d
BLAKE2B_LOAD_MSG_0_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	10;"	d
BLAKE2B_LOAD_MSG_0_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	17;"	d
BLAKE2B_LOAD_MSG_0_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	24;"	d
BLAKE2B_LOAD_MSG_10_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	283;"	d
BLAKE2B_LOAD_MSG_10_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	290;"	d
BLAKE2B_LOAD_MSG_10_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	297;"	d
BLAKE2B_LOAD_MSG_10_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	304;"	d
BLAKE2B_LOAD_MSG_11_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	311;"	d
BLAKE2B_LOAD_MSG_11_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	318;"	d
BLAKE2B_LOAD_MSG_11_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	325;"	d
BLAKE2B_LOAD_MSG_11_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	332;"	d
BLAKE2B_LOAD_MSG_1_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	31;"	d
BLAKE2B_LOAD_MSG_1_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	38;"	d
BLAKE2B_LOAD_MSG_1_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	45;"	d
BLAKE2B_LOAD_MSG_1_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	52;"	d
BLAKE2B_LOAD_MSG_2_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	59;"	d
BLAKE2B_LOAD_MSG_2_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	66;"	d
BLAKE2B_LOAD_MSG_2_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	73;"	d
BLAKE2B_LOAD_MSG_2_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	80;"	d
BLAKE2B_LOAD_MSG_3_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	87;"	d
BLAKE2B_LOAD_MSG_3_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	94;"	d
BLAKE2B_LOAD_MSG_3_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	101;"	d
BLAKE2B_LOAD_MSG_3_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	108;"	d
BLAKE2B_LOAD_MSG_4_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	115;"	d
BLAKE2B_LOAD_MSG_4_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	122;"	d
BLAKE2B_LOAD_MSG_4_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	129;"	d
BLAKE2B_LOAD_MSG_4_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	136;"	d
BLAKE2B_LOAD_MSG_5_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	143;"	d
BLAKE2B_LOAD_MSG_5_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	150;"	d
BLAKE2B_LOAD_MSG_5_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	157;"	d
BLAKE2B_LOAD_MSG_5_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	164;"	d
BLAKE2B_LOAD_MSG_6_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	171;"	d
BLAKE2B_LOAD_MSG_6_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	178;"	d
BLAKE2B_LOAD_MSG_6_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	185;"	d
BLAKE2B_LOAD_MSG_6_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	192;"	d
BLAKE2B_LOAD_MSG_7_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	199;"	d
BLAKE2B_LOAD_MSG_7_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	206;"	d
BLAKE2B_LOAD_MSG_7_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	213;"	d
BLAKE2B_LOAD_MSG_7_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	220;"	d
BLAKE2B_LOAD_MSG_8_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	227;"	d
BLAKE2B_LOAD_MSG_8_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	234;"	d
BLAKE2B_LOAD_MSG_8_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	241;"	d
BLAKE2B_LOAD_MSG_8_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	248;"	d
BLAKE2B_LOAD_MSG_9_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	255;"	d
BLAKE2B_LOAD_MSG_9_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	262;"	d
BLAKE2B_LOAD_MSG_9_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	269;"	d
BLAKE2B_LOAD_MSG_9_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	276;"	d
BLAKE2B_OUTBYTES	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	/^  BLAKE2B_OUTBYTES   = 64,$/;"	e	enum:blake2b_constant
BLAKE2B_PERSONALBYTES	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	/^  BLAKE2B_PERSONALBYTES = 16$/;"	e	enum:blake2b_constant
BLAKE2B_ROUNDS_V1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	81;"	d
BLAKE2B_ROUND_V1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	67;"	d
BLAKE2B_SALTBYTES	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	/^  BLAKE2B_SALTBYTES  = 16,$/;"	e	enum:blake2b_constant
BLAKE2B_UNDIAG_V1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	59;"	d
BLAKE2_ROUND	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ssse3.h	104;"	d
BLAKE2_ROUND_NOMSG	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ref.h	25;"	d
BLAKE2_USE_AVX2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.c	4;"	d	file:
BLAKE2_USE_SSE41	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.c	3;"	d	file:
BLAKE2_USE_SSE41	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-sse41.c	3;"	d	file:
BLAKE2_USE_SSSE3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.c	2;"	d	file:
BLAKE2_USE_SSSE3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-sse41.c	2;"	d	file:
BLINDING_FACTOR_SIZE	daemon/sphinx.c	16;"	d	file:
BLOCK1	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	74;"	d	file:
BLOCK2	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	84;"	d	file:
BLOCKS_PER_YEAR	daemon/routing.c	17;"	d	file:
BLOCK_U64S	ccan/ccan/crypto/hmac_sha256/hmac_sha256.c	8;"	d	file:
BOLTDIR	Makefile	/^BOLTDIR := ..\/lightning-rfc\/$/;"	m
BOLTVERSION	Makefile	/^BOLTVERSION := master$/;"	m
BOLT_EXTRACT	wire/Makefile	/^BOLT_EXTRACT=$(BOLTDIR)\/tools\/extract-formats.py$/;"	m
BPI	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	49;"	d	file:
BREW	secp256k1/Makefile	/^BREW = $/;"	m
BS0	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts.h	13;"	d
BS0	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts_aes128ctr.c	/^const int128 BS0 = {{0x5555555555555555ULL, 0x5555555555555555ULL}};$/;"	v
BS1	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts.h	14;"	d
BS1	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts_aes128ctr.c	/^const int128 BS1 = {{0x3333333333333333ULL, 0x3333333333333333ULL}};$/;"	v
BS2	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts.h	15;"	d
BS2	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts_aes128ctr.c	/^const int128 BS2 = {{0x0f0f0f0f0f0f0f0fULL, 0x0f0f0f0f0f0f0f0fULL}};$/;"	v
BSWAP_16	ccan/ccan/endian/endian.h	18;"	d
BSWAP_32	ccan/ccan/endian/endian.h	33;"	d
BSWAP_64	ccan/ccan/endian/endian.h	50;"	d
BUFFER_MAX	ccan/ccan/err/test/run.c	11;"	d	file:
BUFSZ	ccan/ccan/read_write_all/test/run-read_all.c	26;"	d	file:
BUFSZ	ccan/ccan/read_write_all/test/run-write_all.c	43;"	d	file:
BUILD_ASSERT	ccan/ccan/build_assert/build_assert.h	22;"	d
BUILD_ASSERT_OR_ZERO	ccan/ccan/build_assert/build_assert.h	37;"	d
BUILD_EXEEXT	secp256k1/Makefile	/^BUILD_EXEEXT = $/;"	m
BUILD_FEATURES	gen_version.h	3;"	d
BUILD_OBJEXT	secp256k1/Makefile	/^BUILD_OBJEXT = $/;"	m
BYTES2CHARS	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	50;"	d
B_LINEX	test/test_protocol.c	23;"	d	file:
B_TEXTX	test/test_protocol.c	25;"	d	file:
BaseLightningDTests	tests/test_lightningd.py	/^class BaseLightningDTests(unittest.TestCase):$/;"	c
Bi	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^static const ge_precomp Bi[8] = {$/;"	v	file:
BitcoinD	tests/utils.py	/^class BitcoinD(TailableProc):$/;"	c
BitcoinPubkey	lightning.pb-c.h	/^typedef struct _BitcoinPubkey BitcoinPubkey;$/;"	t	typeref:struct:_BitcoinPubkey
BitcoinPubkey_Closure	lightning.pb-c.h	/^typedef void (*BitcoinPubkey_Closure)$/;"	t
CANARY_SIZE	libsodium/src/libsodium/sodium/utils.c	34;"	d	file:
CAP_HTLCS	test/test_state_coverage.c	67;"	d	file:
CC	libsodium/Makefile	/^CC = cc$/;"	m
CC	libsodium/dist-build/Makefile	/^CC = cc$/;"	m
CC	libsodium/msvc-scripts/Makefile	/^CC = cc$/;"	m
CC	libsodium/src/Makefile	/^CC = cc$/;"	m
CC	libsodium/src/libsodium/Makefile	/^CC = cc$/;"	m
CC	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	252;"	d	file:
CC	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	341;"	d	file:
CC	libsodium/src/libsodium/include/Makefile	/^CC = cc$/;"	m
CC	libsodium/test/Makefile	/^CC = cc$/;"	m
CC	libsodium/test/default/Makefile	/^CC = cc$/;"	m
CC	secp256k1/Makefile	/^CC = cc$/;"	m
CCANDIR	Makefile	/^CCANDIR := ccan$/;"	m
CCANDIR	ccan/ccan/cdump/tools/Makefile	/^CCANDIR:=..\/..\/..$/;"	m
CCANDIR	ccan/ccan/crypto/sha256/benchmarks/Makefile	/^CCANDIR := ..\/..\/..\/..\/$/;"	m
CCANDIR	ccan/ccan/crypto/shachain/tools/Makefile	/^CCANDIR=..\/..\/..\/..$/;"	m
CCANDIR	ccan/ccan/htable/tools/Makefile	/^CCANDIR=..\/..\/..$/;"	m
CCANDIR	ccan/ccan/io/benchmarks/Makefile	/^CCANDIR:=..\/..\/..$/;"	m
CCANDIR	ccan/ccan/mem/bench/Makefile	/^CCANDIR=..\/..\/..$/;"	m
CCANDIR	ccan/ccan/timer/benchmarks/Makefile	/^CCANDIR:=..\/..\/..$/;"	m
CCAN_ALIGNOF_H	ccan/ccan/alignof/alignof.h	3;"	d
CCAN_ARRAY_SIZE_H	ccan/ccan/array_size/array_size.h	3;"	d
CCAN_ASORT_H	ccan/ccan/asort/asort.h	3;"	d
CCAN_AUTODATA_H	ccan/ccan/autodata/autodata.h	3;"	d
CCAN_BREAKPOINT_H	ccan/ccan/breakpoint/breakpoint.h	3;"	d
CCAN_BUILD_ASSERT_H	ccan/ccan/build_assert/build_assert.h	3;"	d
CCAN_CAST_H	ccan/ccan/cast/cast.h	3;"	d
CCAN_CDUMP_H	ccan/ccan/cdump/cdump.h	3;"	d
CCAN_CFLAGS	ccan/config.h	8;"	d
CCAN_CHECK_TYPE_H	ccan/ccan/check_type/check_type.h	3;"	d
CCAN_COMPILER	ccan/config.h	7;"	d
CCAN_COMPILER_H	ccan/ccan/compiler/compiler.h	3;"	d
CCAN_CONFIG_H	ccan/config.h	3;"	d
CCAN_CONTAINER_OF_H	ccan/ccan/container_of/container_of.h	3;"	d
CCAN_CPPMAGIC_H	ccan/ccan/cppmagic/cppmagic.h	3;"	d
CCAN_CRYPTO_HKDF_SHA256_H	ccan/ccan/crypto/hkdf_sha256/hkdf_sha256.h	2;"	d
CCAN_CRYPTO_HMAC_SHA256_H	ccan/ccan/crypto/hmac_sha256/hmac_sha256.h	2;"	d
CCAN_CRYPTO_RIPEMD160_H	ccan/ccan/crypto/ripemd160/ripemd160.h	2;"	d
CCAN_CRYPTO_SHA256_H	ccan/ccan/crypto/sha256/sha256.h	2;"	d
CCAN_CRYPTO_SHACHAIN_H	ccan/ccan/crypto/shachain/shachain.h	3;"	d
CCAN_CRYPTO_SIPHASH24_H	ccan/ccan/crypto/siphash24/siphash24.h	3;"	d
CCAN_ENDIAN_H	ccan/ccan/endian/endian.h	3;"	d
CCAN_ERR_H	ccan/ccan/err/err.h	3;"	d
CCAN_FDPASS_H	ccan/ccan/fdpass/fdpass.h	3;"	d
CCAN_HEADERS	Makefile	/^CCAN_HEADERS :=						\\$/;"	m
CCAN_HEX_H	ccan/ccan/str/hex/hex.h	3;"	d
CCAN_HTABLE_H	ccan/ccan/htable/htable.h	3;"	d
CCAN_HTABLE_TYPE_H	ccan/ccan/htable/htable_type.h	3;"	d
CCAN_INTMAP_H	ccan/ccan/intmap/intmap.h	3;"	d
CCAN_IO_BACKEND_H	ccan/ccan/io/backend.h	3;"	d
CCAN_IO_FDPASS_H	ccan/ccan/io/fdpass/fdpass.h	3;"	d
CCAN_IO_H	ccan/ccan/io/io.h	3;"	d
CCAN_IO_PLAN_H	ccan/ccan/io/io_plan.h	3;"	d
CCAN_LIKELY_DEBUG	ccan/ccan/likely/test/run-debug.c	1;"	d	file:
CCAN_LIKELY_H	ccan/ccan/likely/likely.h	3;"	d
CCAN_LIST_DEBUG	ccan/ccan/list/test/run-CCAN_LIST_DEBUG.c	27;"	d	file:
CCAN_LIST_DEBUG	ccan/ccan/list/test/run-list_del_from-assert.c	1;"	d	file:
CCAN_LIST_DEBUG	ccan/ccan/list/test/run-with-debug.c	2;"	d	file:
CCAN_LIST_H	ccan/ccan/list/list.h	3;"	d
CCAN_MEM_H	ccan/ccan/mem/mem.h	3;"	d
CCAN_OBJS	Makefile	/^CCAN_OBJS :=					\\$/;"	m
CCAN_OBJS	ccan/ccan/cdump/tools/Makefile	/^CCAN_OBJS := ccan-tal.o ccan-tal-str.o ccan-tal-grab_file.o ccan-cdump.o ccan-take.o ccan-list.o ccan-read_write_all.o ccan-strmap.o ccan-noerr.o$/;"	m
CCAN_OBJS	ccan/ccan/crypto/shachain/tools/Makefile	/^CCAN_OBJS:=ccan-str.o ccan-err.o ccan-hex.o ccan-shachain.o ccan-sha256.o ccan-rbuf.o$/;"	m
CCAN_OBJS	ccan/ccan/htable/tools/Makefile	/^CCAN_OBJS:=ccan-tal.o ccan-tal-str.o ccan-tal-grab_file.o ccan-take.o ccan-time.o ccan-str.o ccan-noerr.o ccan-list.o$/;"	m
CCAN_OBJS	ccan/ccan/mem/bench/Makefile	/^CCAN_OBJS:=ccan-mem.o ccan-time.o$/;"	m
CCAN_OPT_H	ccan/ccan/opt/opt.h	3;"	d
CCAN_OPT_PRIVATE_H	ccan/ccan/opt/private.h	3;"	d
CCAN_OPT_TEST_UTILS_H	ccan/ccan/opt/test/utils.h	2;"	d
CCAN_ORDER_H	ccan/ccan/order/order.h	3;"	d
CCAN_OUTPUT_EXE_CFLAG	ccan/config.h	9;"	d
CCAN_PATH_H	ccan/ccan/tal/path/path.h	3;"	d
CCAN_PIPECMD_H	ccan/ccan/pipecmd/pipecmd.h	3;"	d
CCAN_PTRINT_H	ccan/ccan/ptrint/ptrint.h	3;"	d
CCAN_PTR_VALID_H	ccan/ccan/ptr_valid/ptr_valid.h	3;"	d
CCAN_SHORT_TYPES_H	ccan/ccan/short_types/short_types.h	3;"	d
CCAN_STRMAP_H	ccan/ccan/strmap/strmap.h	2;"	d
CCAN_STRUCTEQ_H	ccan/ccan/structeq/structeq.h	3;"	d
CCAN_STR_DEBUG	ccan/ccan/str/test/compile_fail-isalnum.c	1;"	d	file:
CCAN_STR_DEBUG	ccan/ccan/str/test/compile_fail-isalpha.c	1;"	d	file:
CCAN_STR_DEBUG	ccan/ccan/str/test/compile_fail-isascii.c	1;"	d	file:
CCAN_STR_DEBUG	ccan/ccan/str/test/compile_fail-isblank.c	1;"	d	file:
CCAN_STR_DEBUG	ccan/ccan/str/test/compile_fail-iscntrl.c	1;"	d	file:
CCAN_STR_DEBUG	ccan/ccan/str/test/compile_fail-isdigit.c	1;"	d	file:
CCAN_STR_DEBUG	ccan/ccan/str/test/compile_fail-islower.c	1;"	d	file:
CCAN_STR_DEBUG	ccan/ccan/str/test/compile_fail-isprint.c	1;"	d	file:
CCAN_STR_DEBUG	ccan/ccan/str/test/compile_fail-ispunct.c	1;"	d	file:
CCAN_STR_DEBUG	ccan/ccan/str/test/compile_fail-isspace.c	1;"	d	file:
CCAN_STR_DEBUG	ccan/ccan/str/test/compile_fail-isupper.c	1;"	d	file:
CCAN_STR_DEBUG	ccan/ccan/str/test/compile_fail-isxdigit.c	1;"	d	file:
CCAN_STR_DEBUG	ccan/ccan/str/test/compile_fail-strchr.c	1;"	d	file:
CCAN_STR_DEBUG	ccan/ccan/str/test/compile_fail-strrchr.c	1;"	d	file:
CCAN_STR_DEBUG	ccan/ccan/str/test/compile_fail-strstr.c	1;"	d	file:
CCAN_STR_DEBUG	ccan/ccan/str/test/debug.c	4;"	d	file:
CCAN_STR_DEBUG_H	ccan/ccan/str/str_debug.h	3;"	d
CCAN_STR_H	ccan/ccan/str/str.h	3;"	d
CCAN_STR_TAL_H	ccan/ccan/tal/str/str.h	3;"	d
CCAN_TAKE_H	ccan/ccan/take/take.h	3;"	d
CCAN_TAL_DEBUG	ccan/ccan/tal/test/run-groups-grow.c	1;"	d	file:
CCAN_TAL_DEBUG	ccan/ccan/tal/test/run-named-debug.c	1;"	d	file:
CCAN_TAL_GRAB_FILE_H	ccan/ccan/tal/grab_file/grab_file.h	3;"	d
CCAN_TAL_H	ccan/ccan/tal/tal.h	3;"	d
CCAN_TAL_NO_LABELS	ccan/ccan/tal/test/run-named-nolabels.c	1;"	d	file:
CCAN_TCON_H	ccan/ccan/tcon/tcon.h	3;"	d
CCAN_TIMER_DEBUG	ccan/ccan/timer/test/run-corrupt.c	1;"	d	file:
CCAN_TIMER_DEBUG	ccan/ccan/timer/test/run-corrupt2.c	1;"	d	file:
CCAN_TIMER_DEBUG	ccan/ccan/timer/test/run-original-corrupt.c	1;"	d	file:
CCAN_TIMER_DEBUG	ccan/ccan/timer/test/run.c	1;"	d	file:
CCAN_TIMER_H	ccan/ccan/timer/timer.h	3;"	d
CCAN_TIME_H	ccan/ccan/time/time.h	3;"	d
CCAN_TYPESAFE_CB_H	ccan/ccan/typesafe_cb/typesafe_cb.h	3;"	d
CCAS	libsodium/Makefile	/^CCAS = cc$/;"	m
CCAS	libsodium/dist-build/Makefile	/^CCAS = cc$/;"	m
CCAS	libsodium/msvc-scripts/Makefile	/^CCAS = cc$/;"	m
CCAS	libsodium/src/Makefile	/^CCAS = cc$/;"	m
CCAS	libsodium/src/libsodium/Makefile	/^CCAS = cc$/;"	m
CCAS	libsodium/src/libsodium/include/Makefile	/^CCAS = cc$/;"	m
CCAS	libsodium/test/Makefile	/^CCAS = cc$/;"	m
CCAS	libsodium/test/default/Makefile	/^CCAS = cc$/;"	m
CCAS	secp256k1/Makefile	/^CCAS = cc$/;"	m
CCASCOMPILE	secp256k1/Makefile	/^CCASCOMPILE = $(CCAS) $(AM_CCASFLAGS) $(CCASFLAGS)$/;"	m
CCASDEPMODE	libsodium/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	libsodium/dist-build/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	libsodium/msvc-scripts/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	libsodium/src/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	libsodium/src/libsodium/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	libsodium/src/libsodium/include/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	libsodium/test/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	libsodium/test/default/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	secp256k1/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASFLAGS	libsodium/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	libsodium/dist-build/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	libsodium/msvc-scripts/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	libsodium/src/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	libsodium/src/libsodium/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	libsodium/src/libsodium/include/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	libsodium/test/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	libsodium/test/default/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	secp256k1/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCDEPMODE	libsodium/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	libsodium/dist-build/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	libsodium/msvc-scripts/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	libsodium/src/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	libsodium/src/libsodium/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	libsodium/src/libsodium/include/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	libsodium/test/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	libsodium/test/default/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	secp256k1/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	libsodium/src/libsodium/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	libsodium/test/default/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	secp256k1/Makefile	/^CCLD = $(CC)$/;"	m
CC_FOR_BUILD	secp256k1/Makefile	/^CC_FOR_BUILD = gcc$/;"	m
CC_opt	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	262;"	d	file:
CC_opt	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	342;"	d	file:
CDEBUGFLAGS	Makefile	/^CDEBUGFLAGS := -g -fstack-protector$/;"	m
CDUMP_ARRAY	ccan/ccan/cdump/cdump.h	/^	CDUMP_ARRAY,$/;"	e	enum:cdump_type_kind
CDUMP_ENUM	ccan/ccan/cdump/cdump.h	/^	CDUMP_ENUM,$/;"	e	enum:cdump_type_kind
CDUMP_OBJS	Makefile	/^CDUMP_OBJS := ccan-cdump.o ccan-strmap.o$/;"	m
CDUMP_POINTER	ccan/ccan/cdump/cdump.h	/^	CDUMP_POINTER,$/;"	e	enum:cdump_type_kind
CDUMP_STRUCT	ccan/ccan/cdump/cdump.h	/^	CDUMP_STRUCT,$/;"	e	enum:cdump_type_kind
CDUMP_UNION	ccan/ccan/cdump/cdump.h	/^	CDUMP_UNION,$/;"	e	enum:cdump_type_kind
CDUMP_UNKNOWN	ccan/ccan/cdump/cdump.h	/^	CDUMP_UNKNOWN$/;"	e	enum:cdump_type_kind
CFLAGS	Makefile	/^CFLAGS := $(CWARNFLAGS) $(CDEBUGFLAGS) -I $(CCANDIR) -I secp256k1\/include\/ -I libsodium\/src\/libsodium\/include\/ -I . $(FEATURES) $(COVFLAGS) -fPIC$/;"	m
CFLAGS	ccan/ccan/cdump/tools/Makefile	/^CFLAGS := -I$(CCANDIR) -Wall$/;"	m
CFLAGS	ccan/ccan/crypto/sha256/benchmarks/Makefile	/^CFLAGS := -Wall -I$(CCANDIR) -O3 -flto -DCCAN_USE_ORIGINAL=1$/;"	m
CFLAGS	ccan/ccan/crypto/shachain/tools/Makefile	/^CFLAGS=-Wall -Werror -O3 -I$(CCANDIR) -DSHACHAIN_BITS=48$/;"	m
CFLAGS	ccan/ccan/htable/tools/Makefile	/^CFLAGS=-Wall -Werror -O3 -I$(CCANDIR)$/;"	m
CFLAGS	ccan/ccan/io/benchmarks/Makefile	/^CFLAGS:=-Wall -I$(CCANDIR) -O3 -flto$/;"	m
CFLAGS	ccan/ccan/mem/bench/Makefile	/^CFLAGS=-Wall -Werror -O3 -I$(CCANDIR)$/;"	m
CFLAGS	ccan/ccan/tal/benchmark/Makefile	/^CFLAGS=-O3 -Wall -flto -I..\/..\/..$/;"	m
CFLAGS	ccan/ccan/timer/benchmarks/Makefile	/^CFLAGS:=-Wall -I$(CCANDIR) -O3 -flto$/;"	m
CFLAGS	libsodium/Makefile	/^CFLAGS = -g -O2 -fvisibility=hidden -fPIC -fPIE -fno-strict-aliasing -fno-strict-overflow -fstack-protector -Wwrite-strings -Wdiv-by-zero$/;"	m
CFLAGS	libsodium/dist-build/Makefile	/^CFLAGS = -g -O2 -fvisibility=hidden -fPIC -fPIE -fno-strict-aliasing -fno-strict-overflow -fstack-protector -Wwrite-strings -Wdiv-by-zero$/;"	m
CFLAGS	libsodium/msvc-scripts/Makefile	/^CFLAGS = -g -O2 -fvisibility=hidden -fPIC -fPIE -fno-strict-aliasing -fno-strict-overflow -fstack-protector -Wwrite-strings -Wdiv-by-zero$/;"	m
CFLAGS	libsodium/src/Makefile	/^CFLAGS = -g -O2 -fvisibility=hidden -fPIC -fPIE -fno-strict-aliasing -fno-strict-overflow -fstack-protector -Wwrite-strings -Wdiv-by-zero$/;"	m
CFLAGS	libsodium/src/libsodium/Makefile	/^CFLAGS = -g -O2 -fvisibility=hidden -fPIC -fPIE -fno-strict-aliasing -fno-strict-overflow -fstack-protector -Wwrite-strings -Wdiv-by-zero$/;"	m
CFLAGS	libsodium/src/libsodium/include/Makefile	/^CFLAGS = -g -O2 -fvisibility=hidden -fPIC -fPIE -fno-strict-aliasing -fno-strict-overflow -fstack-protector -Wwrite-strings -Wdiv-by-zero$/;"	m
CFLAGS	libsodium/test/Makefile	/^CFLAGS = -g -O2 -fvisibility=hidden -fPIC -fPIE -fno-strict-aliasing -fno-strict-overflow -fstack-protector -Wwrite-strings -Wdiv-by-zero$/;"	m
CFLAGS	libsodium/test/default/Makefile	/^CFLAGS = -g -O2 -fvisibility=hidden -fPIC -fPIE -fno-strict-aliasing -fno-strict-overflow -fstack-protector -Wwrite-strings -Wdiv-by-zero$/;"	m
CFLAGS	secp256k1/Makefile	/^CFLAGS = -g -O2 -W -std=c89 -pedantic -Wall -Wextra -Wcast-align -Wnested-externs -Wshadow -Wstrict-prototypes -Wno-unused-function -Wno-long-long -Wno-overlength-strings -fvisibility=hidden$/;"	m
CFLAGS_AESNI	libsodium/Makefile	/^CFLAGS_AESNI = -maes$/;"	m
CFLAGS_AESNI	libsodium/dist-build/Makefile	/^CFLAGS_AESNI = -maes$/;"	m
CFLAGS_AESNI	libsodium/msvc-scripts/Makefile	/^CFLAGS_AESNI = -maes$/;"	m
CFLAGS_AESNI	libsodium/src/Makefile	/^CFLAGS_AESNI = -maes$/;"	m
CFLAGS_AESNI	libsodium/src/libsodium/Makefile	/^CFLAGS_AESNI = -maes$/;"	m
CFLAGS_AESNI	libsodium/src/libsodium/include/Makefile	/^CFLAGS_AESNI = -maes$/;"	m
CFLAGS_AESNI	libsodium/test/Makefile	/^CFLAGS_AESNI = -maes$/;"	m
CFLAGS_AESNI	libsodium/test/default/Makefile	/^CFLAGS_AESNI = -maes$/;"	m
CFLAGS_AVX	libsodium/Makefile	/^CFLAGS_AVX = -mavx2$/;"	m
CFLAGS_AVX	libsodium/dist-build/Makefile	/^CFLAGS_AVX = -mavx2$/;"	m
CFLAGS_AVX	libsodium/msvc-scripts/Makefile	/^CFLAGS_AVX = -mavx2$/;"	m
CFLAGS_AVX	libsodium/src/Makefile	/^CFLAGS_AVX = -mavx2$/;"	m
CFLAGS_AVX	libsodium/src/libsodium/Makefile	/^CFLAGS_AVX = -mavx2$/;"	m
CFLAGS_AVX	libsodium/src/libsodium/include/Makefile	/^CFLAGS_AVX = -mavx2$/;"	m
CFLAGS_AVX	libsodium/test/Makefile	/^CFLAGS_AVX = -mavx2$/;"	m
CFLAGS_AVX	libsodium/test/default/Makefile	/^CFLAGS_AVX = -mavx2$/;"	m
CFLAGS_AVX2	libsodium/Makefile	/^CFLAGS_AVX2 = $/;"	m
CFLAGS_AVX2	libsodium/dist-build/Makefile	/^CFLAGS_AVX2 = $/;"	m
CFLAGS_AVX2	libsodium/msvc-scripts/Makefile	/^CFLAGS_AVX2 = $/;"	m
CFLAGS_AVX2	libsodium/src/Makefile	/^CFLAGS_AVX2 = $/;"	m
CFLAGS_AVX2	libsodium/src/libsodium/Makefile	/^CFLAGS_AVX2 = $/;"	m
CFLAGS_AVX2	libsodium/src/libsodium/include/Makefile	/^CFLAGS_AVX2 = $/;"	m
CFLAGS_AVX2	libsodium/test/Makefile	/^CFLAGS_AVX2 = $/;"	m
CFLAGS_AVX2	libsodium/test/default/Makefile	/^CFLAGS_AVX2 = $/;"	m
CFLAGS_FOR_BUILD	secp256k1/Makefile	/^CFLAGS_FOR_BUILD = -g -O2 $(am__append_4)$/;"	m
CFLAGS_MMX	libsodium/Makefile	/^CFLAGS_MMX = -mmmx$/;"	m
CFLAGS_MMX	libsodium/dist-build/Makefile	/^CFLAGS_MMX = -mmmx$/;"	m
CFLAGS_MMX	libsodium/msvc-scripts/Makefile	/^CFLAGS_MMX = -mmmx$/;"	m
CFLAGS_MMX	libsodium/src/Makefile	/^CFLAGS_MMX = -mmmx$/;"	m
CFLAGS_MMX	libsodium/src/libsodium/Makefile	/^CFLAGS_MMX = -mmmx$/;"	m
CFLAGS_MMX	libsodium/src/libsodium/include/Makefile	/^CFLAGS_MMX = -mmmx$/;"	m
CFLAGS_MMX	libsodium/test/Makefile	/^CFLAGS_MMX = -mmmx$/;"	m
CFLAGS_MMX	libsodium/test/default/Makefile	/^CFLAGS_MMX = -mmmx$/;"	m
CFLAGS_PCLMUL	libsodium/Makefile	/^CFLAGS_PCLMUL = -mpclmul$/;"	m
CFLAGS_PCLMUL	libsodium/dist-build/Makefile	/^CFLAGS_PCLMUL = -mpclmul$/;"	m
CFLAGS_PCLMUL	libsodium/msvc-scripts/Makefile	/^CFLAGS_PCLMUL = -mpclmul$/;"	m
CFLAGS_PCLMUL	libsodium/src/Makefile	/^CFLAGS_PCLMUL = -mpclmul$/;"	m
CFLAGS_PCLMUL	libsodium/src/libsodium/Makefile	/^CFLAGS_PCLMUL = -mpclmul$/;"	m
CFLAGS_PCLMUL	libsodium/src/libsodium/include/Makefile	/^CFLAGS_PCLMUL = -mpclmul$/;"	m
CFLAGS_PCLMUL	libsodium/test/Makefile	/^CFLAGS_PCLMUL = -mpclmul$/;"	m
CFLAGS_PCLMUL	libsodium/test/default/Makefile	/^CFLAGS_PCLMUL = -mpclmul$/;"	m
CFLAGS_SSE2	libsodium/Makefile	/^CFLAGS_SSE2 = -msse2$/;"	m
CFLAGS_SSE2	libsodium/dist-build/Makefile	/^CFLAGS_SSE2 = -msse2$/;"	m
CFLAGS_SSE2	libsodium/msvc-scripts/Makefile	/^CFLAGS_SSE2 = -msse2$/;"	m
CFLAGS_SSE2	libsodium/src/Makefile	/^CFLAGS_SSE2 = -msse2$/;"	m
CFLAGS_SSE2	libsodium/src/libsodium/Makefile	/^CFLAGS_SSE2 = -msse2$/;"	m
CFLAGS_SSE2	libsodium/src/libsodium/include/Makefile	/^CFLAGS_SSE2 = -msse2$/;"	m
CFLAGS_SSE2	libsodium/test/Makefile	/^CFLAGS_SSE2 = -msse2$/;"	m
CFLAGS_SSE2	libsodium/test/default/Makefile	/^CFLAGS_SSE2 = -msse2$/;"	m
CFLAGS_SSE3	libsodium/Makefile	/^CFLAGS_SSE3 = -msse3$/;"	m
CFLAGS_SSE3	libsodium/dist-build/Makefile	/^CFLAGS_SSE3 = -msse3$/;"	m
CFLAGS_SSE3	libsodium/msvc-scripts/Makefile	/^CFLAGS_SSE3 = -msse3$/;"	m
CFLAGS_SSE3	libsodium/src/Makefile	/^CFLAGS_SSE3 = -msse3$/;"	m
CFLAGS_SSE3	libsodium/src/libsodium/Makefile	/^CFLAGS_SSE3 = -msse3$/;"	m
CFLAGS_SSE3	libsodium/src/libsodium/include/Makefile	/^CFLAGS_SSE3 = -msse3$/;"	m
CFLAGS_SSE3	libsodium/test/Makefile	/^CFLAGS_SSE3 = -msse3$/;"	m
CFLAGS_SSE3	libsodium/test/default/Makefile	/^CFLAGS_SSE3 = -msse3$/;"	m
CFLAGS_SSE41	libsodium/Makefile	/^CFLAGS_SSE41 = -msse4.1$/;"	m
CFLAGS_SSE41	libsodium/dist-build/Makefile	/^CFLAGS_SSE41 = -msse4.1$/;"	m
CFLAGS_SSE41	libsodium/msvc-scripts/Makefile	/^CFLAGS_SSE41 = -msse4.1$/;"	m
CFLAGS_SSE41	libsodium/src/Makefile	/^CFLAGS_SSE41 = -msse4.1$/;"	m
CFLAGS_SSE41	libsodium/src/libsodium/Makefile	/^CFLAGS_SSE41 = -msse4.1$/;"	m
CFLAGS_SSE41	libsodium/src/libsodium/include/Makefile	/^CFLAGS_SSE41 = -msse4.1$/;"	m
CFLAGS_SSE41	libsodium/test/Makefile	/^CFLAGS_SSE41 = -msse4.1$/;"	m
CFLAGS_SSE41	libsodium/test/default/Makefile	/^CFLAGS_SSE41 = -msse4.1$/;"	m
CFLAGS_SSSE3	libsodium/Makefile	/^CFLAGS_SSSE3 = -mssse3$/;"	m
CFLAGS_SSSE3	libsodium/dist-build/Makefile	/^CFLAGS_SSSE3 = -mssse3$/;"	m
CFLAGS_SSSE3	libsodium/msvc-scripts/Makefile	/^CFLAGS_SSSE3 = -mssse3$/;"	m
CFLAGS_SSSE3	libsodium/src/Makefile	/^CFLAGS_SSSE3 = -mssse3$/;"	m
CFLAGS_SSSE3	libsodium/src/libsodium/Makefile	/^CFLAGS_SSSE3 = -mssse3$/;"	m
CFLAGS_SSSE3	libsodium/src/libsodium/include/Makefile	/^CFLAGS_SSSE3 = -mssse3$/;"	m
CFLAGS_SSSE3	libsodium/test/Makefile	/^CFLAGS_SSSE3 = -mssse3$/;"	m
CFLAGS_SSSE3	libsodium/test/default/Makefile	/^CFLAGS_SSSE3 = -mssse3$/;"	m
CHACHA_RNDS	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	17;"	d	file:
CHANGED_FROM_GIT	Makefile	/^CHANGED_FROM_GIT = [ x"`git log $@ | head -n1`" != x"`git log $< | head -n1`" -o x"`git diff $<`" != x"" ]$/;"	m
CHAR_SIZE	ccan/ccan/opt/helpers.c	15;"	d	file:
CHECK	secp256k1/src/util.h	46;"	d
CHECK	secp256k1/src/util.h	52;"	d
CHECK1	ccan/ccan/cppmagic/test/run.c	15;"	d	file:
CHILDREN	ccan/ccan/tal/tal.c	/^	CHILDREN = 0x00c1d500,$/;"	e	enum:prop_type	file:
CLASSPATH_ENV	secp256k1/Makefile	/^CLASSPATH_ENV = CLASSPATH=$(JAVA_GUAVA)$/;"	m
CLEANFILES	secp256k1/Makefile	/^CLEANFILES = $(gen_context_BIN) src\/ecmult_static_context.h $(JAVAROOT)\/$(JAVAORG)\/*.class .stamp-java$/;"	m
CLEN	libsodium/test/default/aead_chacha20poly1305.c	12;"	d	file:
CLEN	libsodium/test/default/aead_chacha20poly1305.c	13;"	d	file:
CLEN	libsodium/test/default/aead_chacha20poly1305.c	177;"	d	file:
CLEN	libsodium/test/default/aead_chacha20poly1305.c	178;"	d	file:
CLOSE_SHUTDOWN__INIT	lightning.pb-c.h	515;"	d
CLOSE_SIGNATURE__INIT	lightning.pb-c.h	532;"	d
COLD	ccan/ccan/compiler/compiler.h	20;"	d
COLD	ccan/ccan/compiler/compiler.h	22;"	d
COMMITTED	test/test_protocol.c	67;"	d	file:
COMMON_H	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common.h	5;"	d
COMMON_LIB	secp256k1/Makefile	/^COMMON_LIB = $/;"	m
COMPILE	libsodium/src/libsodium/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	libsodium/test/default/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	libsodium/test/default/wintest.bat	/^:COMPILE$/;"	l
COMPILE	secp256k1/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILER_ASSERT	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	47;"	d	file:
CONFIG_CLEAN_FILES	libsodium/Makefile	/^CONFIG_CLEAN_FILES = libsodium.pc libsodium-uninstalled.pc \\$/;"	m
CONFIG_CLEAN_FILES	libsodium/dist-build/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	libsodium/msvc-scripts/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	libsodium/src/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	libsodium/src/libsodium/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	libsodium/src/libsodium/include/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	libsodium/test/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	libsodium/test/default/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	secp256k1/Makefile	/^CONFIG_CLEAN_FILES = libsecp256k1.pc$/;"	m
CONFIG_CLEAN_VPATH_FILES	libsodium/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	libsodium/dist-build/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	libsodium/msvc-scripts/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	libsodium/src/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	libsodium/src/libsodium/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	libsodium/src/libsodium/include/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	libsodium/test/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	libsodium/test/default/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	secp256k1/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_HEADER	secp256k1/Makefile	/^CONFIG_HEADER = $(top_builddir)\/src\/libsecp256k1-config.h$/;"	m
CONN_TIMEOUT_MS	ccan/ccan/timer/benchmarks/expected-usage.c	11;"	d	file:
CONSTS_H	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts.h	2;"	d
CONST_FUNCTION	ccan/ccan/compiler/compiler.h	74;"	d
CONST_FUNCTION	ccan/ccan/compiler/compiler.h	76;"	d
CORE_HEADERS	Makefile	/^CORE_HEADERS := irc.h				\\$/;"	m
CORE_OBJS	Makefile	/^CORE_OBJS := $(CORE_SRC:.c=.o)$/;"	m
CORE_PROTOBUF_OBJS	Makefile	/^CORE_PROTOBUF_OBJS := $(CORE_PROTOBUF_SRC:.c=.o)$/;"	m
CORE_PROTOBUF_SRC	Makefile	/^CORE_PROTOBUF_SRC :=				\\$/;"	m
CORE_SRC	Makefile	/^CORE_SRC :=					\\$/;"	m
CORE_TX_HEADERS	Makefile	/^CORE_TX_HEADERS := close_tx.h			\\$/;"	m
CORE_TX_OBJS	Makefile	/^CORE_TX_OBJS := $(CORE_TX_SRC:.c=.o)$/;"	m
CORE_TX_SRC	Makefile	/^CORE_TX_SRC :=					\\$/;"	m
COUNTER_INC2	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	181;"	d	file:
COVFLAGS	Makefile	/^COVFLAGS = --coverage$/;"	m
CPP	libsodium/Makefile	/^CPP = cc -E$/;"	m
CPP	libsodium/dist-build/Makefile	/^CPP = cc -E$/;"	m
CPP	libsodium/msvc-scripts/Makefile	/^CPP = cc -E$/;"	m
CPP	libsodium/src/Makefile	/^CPP = cc -E$/;"	m
CPP	libsodium/src/libsodium/Makefile	/^CPP = cc -E$/;"	m
CPP	libsodium/src/libsodium/include/Makefile	/^CPP = cc -E$/;"	m
CPP	libsodium/test/Makefile	/^CPP = cc -E$/;"	m
CPP	libsodium/test/default/Makefile	/^CPP = cc -E$/;"	m
CPP	secp256k1/Makefile	/^CPP = cc -E$/;"	m
CPPASCOMPILE	libsodium/src/libsodium/Makefile	/^CPPASCOMPILE = $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CPPFLAGS	libsodium/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	libsodium/dist-build/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	libsodium/msvc-scripts/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	libsodium/src/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	libsodium/src/libsodium/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	libsodium/src/libsodium/include/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	libsodium/test/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	libsodium/test/default/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	secp256k1/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS_FOR_BUILD	secp256k1/Makefile	/^CPPFLAGS_FOR_BUILD =  $(am__append_3)$/;"	m
CPPMAGIC_1ST	ccan/ccan/cppmagic/cppmagic.h	32;"	d
CPPMAGIC_2MAP	ccan/ccan/cppmagic/cppmagic.h	168;"	d
CPPMAGIC_2ND	ccan/ccan/cppmagic/cppmagic.h	40;"	d
CPPMAGIC_DEFER1	ccan/ccan/cppmagic/cppmagic.h	133;"	d
CPPMAGIC_DEFER2	ccan/ccan/cppmagic/cppmagic.h	134;"	d
CPPMAGIC_EVAL	ccan/ccan/cppmagic/cppmagic.h	128;"	d
CPPMAGIC_EVAL1	ccan/ccan/cppmagic/cppmagic.h	107;"	d
CPPMAGIC_EVAL1024	ccan/ccan/cppmagic/cppmagic.h	126;"	d
CPPMAGIC_EVAL128	ccan/ccan/cppmagic/cppmagic.h	120;"	d
CPPMAGIC_EVAL16	ccan/ccan/cppmagic/cppmagic.h	114;"	d
CPPMAGIC_EVAL2	ccan/ccan/cppmagic/cppmagic.h	108;"	d
CPPMAGIC_EVAL256	ccan/ccan/cppmagic/cppmagic.h	122;"	d
CPPMAGIC_EVAL32	ccan/ccan/cppmagic/cppmagic.h	116;"	d
CPPMAGIC_EVAL4	ccan/ccan/cppmagic/cppmagic.h	110;"	d
CPPMAGIC_EVAL512	ccan/ccan/cppmagic/cppmagic.h	124;"	d
CPPMAGIC_EVAL64	ccan/ccan/cppmagic/cppmagic.h	118;"	d
CPPMAGIC_EVAL8	ccan/ccan/cppmagic/cppmagic.h	112;"	d
CPPMAGIC_GLUE2	ccan/ccan/cppmagic/cppmagic.h	24;"	d
CPPMAGIC_IFELSE	ccan/ccan/cppmagic/cppmagic.h	98;"	d
CPPMAGIC_ISEMPTY	ccan/ccan/cppmagic/cppmagic.h	84;"	d
CPPMAGIC_ISZERO	ccan/ccan/cppmagic/cppmagic.h	51;"	d
CPPMAGIC_JOIN	ccan/ccan/cppmagic/cppmagic.h	186;"	d
CPPMAGIC_MAP	ccan/ccan/cppmagic/cppmagic.h	149;"	d
CPPMAGIC_NONEMPTY	ccan/ccan/cppmagic/cppmagic.h	72;"	d
CPPMAGIC_NONZERO	ccan/ccan/cppmagic/cppmagic.h	60;"	d
CPPMAGIC_NOTHING	ccan/ccan/cppmagic/cppmagic.h	8;"	d
CPPMAGIC_STRINGIFY	ccan/ccan/cppmagic/cppmagic.h	14;"	d
CPP_FOR_BUILD	secp256k1/Makefile	/^CPP_FOR_BUILD = gcc -E$/;"	m
CPUFeatures	libsodium/src/libsodium/sodium/runtime.c	/^} CPUFeatures;$/;"	t	typeref:struct:CPUFeatures_	file:
CPUFeatures_	libsodium/src/libsodium/sodium/runtime.c	/^typedef struct CPUFeatures_ {$/;"	s	file:
CPUID_EBX_AVX2	libsodium/src/libsodium/sodium/runtime.c	25;"	d	file:
CPUID_ECX_AESNI	libsodium/src/libsodium/sodium/runtime.c	31;"	d	file:
CPUID_ECX_AVX	libsodium/src/libsodium/sodium/runtime.c	34;"	d	file:
CPUID_ECX_OSXSAVE	libsodium/src/libsodium/sodium/runtime.c	33;"	d	file:
CPUID_ECX_PCLMUL	libsodium/src/libsodium/sodium/runtime.c	28;"	d	file:
CPUID_ECX_SSE3	libsodium/src/libsodium/sodium/runtime.c	27;"	d	file:
CPUID_ECX_SSE41	libsodium/src/libsodium/sodium/runtime.c	30;"	d	file:
CPUID_ECX_SSSE3	libsodium/src/libsodium/sodium/runtime.c	29;"	d	file:
CPUID_ECX_XSAVE	libsodium/src/libsodium/sodium/runtime.c	32;"	d	file:
CPUID_EDX_SSE2	libsodium/src/libsodium/sodium/runtime.c	36;"	d	file:
CPU_TO_BE16	ccan/ccan/endian/endian.h	192;"	d
CPU_TO_BE16	ccan/ccan/endian/endian.h	215;"	d
CPU_TO_BE32	ccan/ccan/endian/endian.h	186;"	d
CPU_TO_BE32	ccan/ccan/endian/endian.h	214;"	d
CPU_TO_BE64	ccan/ccan/endian/endian.h	180;"	d
CPU_TO_BE64	ccan/ccan/endian/endian.h	213;"	d
CPU_TO_LE16	ccan/ccan/endian/endian.h	146;"	d
CPU_TO_LE16	ccan/ccan/endian/endian.h	169;"	d
CPU_TO_LE32	ccan/ccan/endian/endian.h	140;"	d
CPU_TO_LE32	ccan/ccan/endian/endian.h	168;"	d
CPU_TO_LE64	ccan/ccan/endian/endian.h	134;"	d
CPU_TO_LE64	ccan/ccan/endian/endian.h	167;"	d
CRYPTO_ALIGN	libsodium/src/libsodium/include/sodium/export.h	38;"	d
CRYPTO_ALIGN	libsodium/src/libsodium/include/sodium/export.h	40;"	d
CRYPTO_CFLAGS	secp256k1/Makefile	/^CRYPTO_CFLAGS = $/;"	m
CRYPTO_LIBS	secp256k1/Makefile	/^CRYPTO_LIBS = $/;"	m
CSCOPE	libsodium/Makefile	/^CSCOPE = cscope$/;"	m
CSCOPE	secp256k1/Makefile	/^CSCOPE = cscope$/;"	m
CTAGS	libsodium/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	libsodium/src/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	libsodium/src/libsodium/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	libsodium/src/libsodium/include/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	libsodium/test/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	libsodium/test/default/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	secp256k1/Makefile	/^CTAGS = ctags$/;"	m
CURVE25519_REF10_H	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	2;"	d
CWARNFLAGS	Makefile	/^CWARNFLAGS := -Werror -Wall -Wundef -Wmissing-prototypes -Wmissing-declarations -Wstrict-prototypes -Wold-style-definition$/;"	m
CWFLAGS	libsodium/Makefile	/^CWFLAGS =  -Wall -Wextra -Wbad-function-cast -Wcast-align -Wcast-qual -Wfloat-equal -Wformat=2 -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-unknown-pragmas -Wnormalized=id -Wpointer-arith -Wredundant-decls -Wstrict-prototypes -Wswitch-enum$/;"	m
CWFLAGS	libsodium/dist-build/Makefile	/^CWFLAGS =  -Wall -Wextra -Wbad-function-cast -Wcast-align -Wcast-qual -Wfloat-equal -Wformat=2 -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-unknown-pragmas -Wnormalized=id -Wpointer-arith -Wredundant-decls -Wstrict-prototypes -Wswitch-enum$/;"	m
CWFLAGS	libsodium/msvc-scripts/Makefile	/^CWFLAGS =  -Wall -Wextra -Wbad-function-cast -Wcast-align -Wcast-qual -Wfloat-equal -Wformat=2 -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-unknown-pragmas -Wnormalized=id -Wpointer-arith -Wredundant-decls -Wstrict-prototypes -Wswitch-enum$/;"	m
CWFLAGS	libsodium/src/Makefile	/^CWFLAGS =  -Wall -Wextra -Wbad-function-cast -Wcast-align -Wcast-qual -Wfloat-equal -Wformat=2 -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-unknown-pragmas -Wnormalized=id -Wpointer-arith -Wredundant-decls -Wstrict-prototypes -Wswitch-enum$/;"	m
CWFLAGS	libsodium/src/libsodium/Makefile	/^CWFLAGS =  -Wall -Wextra -Wbad-function-cast -Wcast-align -Wcast-qual -Wfloat-equal -Wformat=2 -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-unknown-pragmas -Wnormalized=id -Wpointer-arith -Wredundant-decls -Wstrict-prototypes -Wswitch-enum$/;"	m
CWFLAGS	libsodium/src/libsodium/include/Makefile	/^CWFLAGS =  -Wall -Wextra -Wbad-function-cast -Wcast-align -Wcast-qual -Wfloat-equal -Wformat=2 -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-unknown-pragmas -Wnormalized=id -Wpointer-arith -Wredundant-decls -Wstrict-prototypes -Wswitch-enum$/;"	m
CWFLAGS	libsodium/test/Makefile	/^CWFLAGS =  -Wall -Wextra -Wbad-function-cast -Wcast-align -Wcast-qual -Wfloat-equal -Wformat=2 -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-unknown-pragmas -Wnormalized=id -Wpointer-arith -Wredundant-decls -Wstrict-prototypes -Wswitch-enum$/;"	m
CWFLAGS	libsodium/test/default/Makefile	/^CWFLAGS =  -Wall -Wextra -Wbad-function-cast -Wcast-align -Wcast-qual -Wfloat-equal -Wformat=2 -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-unknown-pragmas -Wnormalized=id -Wpointer-arith -Wredundant-decls -Wstrict-prototypes -Wswitch-enum$/;"	m
CYGPATH_W	libsodium/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	libsodium/dist-build/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	libsodium/msvc-scripts/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	libsodium/src/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	libsodium/src/libsodium/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	libsodium/src/libsodium/include/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	libsodium/test/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	libsodium/test/default/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	secp256k1/Makefile	/^CYGPATH_W = echo$/;"	m
Ch	ccan/ccan/crypto/sha256/sha256.c	/^static uint32_t Ch(uint32_t x, uint32_t y, uint32_t z)$/;"	f	file:
Ch	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256.c	60;"	d	file:
Ch	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512.c	60;"	d	file:
Ch	secp256k1/src/hash_impl.h	16;"	d
Ch	secp256k1/src/hash_impl.h	279;"	d
CloseShutdown	lightning.pb-c.h	/^typedef struct _CloseShutdown CloseShutdown;$/;"	t	typeref:struct:_CloseShutdown
CloseShutdown_Closure	lightning.pb-c.h	/^typedef void (*CloseShutdown_Closure)$/;"	t
CloseSignature	lightning.pb-c.h	/^typedef struct _CloseSignature CloseSignature;$/;"	t	typeref:struct:_CloseSignature
CloseSignature_Closure	lightning.pb-c.h	/^typedef void (*CloseSignature_Closure)$/;"	t
CreateProcess	libsodium/build-aux/ltmain.sh	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
CreateProcess	libsodium/libtool	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
CreateProcess	secp256k1/build-aux/ltmain.sh	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
CreateProcess	secp256k1/libtool	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
DAEMON_CLI_OBJS	daemon/Makefile	/^DAEMON_CLI_OBJS := $(DAEMON_CLI_SRC:.c=.o)$/;"	m
DAEMON_CLI_SRC	daemon/Makefile	/^DAEMON_CLI_SRC := daemon\/lightning-cli.c$/;"	m
DAEMON_GEN_HEADERS	daemon/Makefile	/^DAEMON_GEN_HEADERS :=				\\$/;"	m
DAEMON_HEADERS	daemon/Makefile	/^DAEMON_HEADERS :=				\\$/;"	m
DAEMON_JSMN_HEADERS	daemon/Makefile	/^DAEMON_JSMN_HEADERS := daemon\/jsmn\/jsmn.h$/;"	m
DAEMON_JSMN_OBJS	daemon/Makefile	/^DAEMON_JSMN_OBJS := daemon\/jsmn.o$/;"	m
DAEMON_LIB_OBJS	daemon/Makefile	/^DAEMON_LIB_OBJS := $(DAEMON_LIB_SRC:.c=.o)$/;"	m
DAEMON_LIB_SRC	daemon/Makefile	/^DAEMON_LIB_SRC :=				\\$/;"	m
DAEMON_OBJS	daemon/Makefile	/^DAEMON_OBJS := $(DAEMON_SRC:.c=.o)$/;"	m
DAEMON_SRC	daemon/Makefile	/^DAEMON_SRC :=					\\$/;"	m
DAEMON_TEST_OBJS	daemon/test/Makefile	/^DAEMON_TEST_OBJS := $(DAEMON_TEST_SRC:.c=.o)$/;"	m
DAEMON_TEST_PROGRAMS	daemon/test/Makefile	/^DAEMON_TEST_PROGRAMS := $(DAEMON_TEST_OBJS:.o=)$/;"	m
DAEMON_TEST_SRC	daemon/test/Makefile	/^DAEMON_TEST_SRC := $(wildcard daemon\/test\/run-*.c)$/;"	m
DATA	libsodium/Makefile	/^DATA = $(pkgconfig_DATA)$/;"	m
DATA	libsodium/src/libsodium/Makefile	/^DATA = $(defexec_DATA)$/;"	m
DATA	secp256k1/Makefile	/^DATA = $(pkgconfig_DATA)$/;"	m
DB_FILE	daemon/db.c	31;"	d	file:
DEBRUIJN_IDX32	ccan/ccan/ilog/ilog.c	/^static UNNEEDED const unsigned char DEBRUIJN_IDX32[32]={$/;"	v	file:
DEBUG	bitcoin/signature.c	12;"	d	file:
DEBUG	ccan/ccan/time/test/run-check.c	1;"	d	file:
DECIMAL	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	272;"	d	file:
DECIMAL	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	343;"	d	file:
DECLARE_MESSAGE_WORDS	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	96;"	d
DEFAULT_COMPILER	ccan/tools/configurator/configurator.c	42;"	d	file:
DEFAULT_COMPILER	ccan/tools/configurator/configurator.c	52;"	d	file:
DEFAULT_FLAGS	ccan/tools/configurator/configurator.c	48;"	d	file:
DEFAULT_FLAGS	ccan/tools/configurator/configurator.c	53;"	d	file:
DEFAULT_INCLUDES	libsodium/src/libsodium/Makefile	/^DEFAULT_INCLUDES = -I.$/;"	m
DEFAULT_INCLUDES	libsodium/test/default/Makefile	/^DEFAULT_INCLUDES = -I.$/;"	m
DEFAULT_INCLUDES	secp256k1/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)\/src$/;"	m
DEFAULT_OUTPUT_EXE_FLAG	ccan/tools/configurator/configurator.c	50;"	d	file:
DEFAULT_OUTPUT_EXE_FLAG	ccan/tools/configurator/configurator.c	54;"	d	file:
DEFAULT_PORT	lightningd/lightningd.h	12;"	d
DEFINES_EVERYTHING	ccan/tools/configurator/configurator.c	/^	DEFINES_EVERYTHING	= 0x8,$/;"	e	enum:test_style	file:
DEFINES_FUNC	ccan/tools/configurator/configurator.c	/^	DEFINES_FUNC		= 0x2,$/;"	e	enum:test_style	file:
DEFS	libsodium/Makefile	/^DEFS = -DPACKAGE_NAME=\\"libsodium\\" -DPACKAGE_TARNAME=\\"libsodium\\" -DPACKAGE_VERSION=\\"1.0.10\\" -DPACKAGE_STRING=\\"libsodium\\ 1.0.10\\" -DPACKAGE_BUGREPORT=\\"https:\/\/github.com\/jedisct1\/libsodium\/issues\\" -DPACKAGE_URL=\\"https:\/\/github.com\/jedisct1\/libsodium\\" -DPACKAGE=\\"libsodium\\" -DVERSION=\\"1.0.10\\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -D__EXTENSIONS__=1 -D_ALL_SOURCE=1 -D_GNU_SOURCE=1 -D_POSIX_PTHREAD_SEMANTICS=1 -D_TANDEM_SOURCE=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\\".libs\/\\" -DHAVE_MMINTRIN_H=1 -DHAVE_EMMINTRIN_H=1 -DHAVE_PMMINTRIN_H=1 -DHAVE_TMMINTRIN_H=1 -DHAVE_SMMINTRIN_H=1 -DHAVE_AVXINTRIN_H=1 -DHAVE_AVX2INTRIN_H=1 -DHAVE_WMMINTRIN_H=1 -DHAVE_SYS_MMAN_H=1 -DNATIVE_LITTLE_ENDIAN=1 -DHAVE_AMD64_ASM=1 -DHAVE_AVX_ASM=1 -DHAVE_TI_MODE=1 -DHAVE_CPUID=1 -DASM_HIDE_SYMBOL=.hidden -DHAVE_WEAK_SYMBOLS=1 -DCPU_UNALIGNED_ACCESS=1 -DHAVE_MMAP=1 -DHAVE_MLOCK=1 -DHAVE_MADVISE=1 -DHAVE_MPROTECT=1 -DHAVE_POSIX_MEMALIGN=1 -DHAVE_GETPID=1$/;"	m
DEFS	libsodium/dist-build/Makefile	/^DEFS = -DPACKAGE_NAME=\\"libsodium\\" -DPACKAGE_TARNAME=\\"libsodium\\" -DPACKAGE_VERSION=\\"1.0.10\\" -DPACKAGE_STRING=\\"libsodium\\ 1.0.10\\" -DPACKAGE_BUGREPORT=\\"https:\/\/github.com\/jedisct1\/libsodium\/issues\\" -DPACKAGE_URL=\\"https:\/\/github.com\/jedisct1\/libsodium\\" -DPACKAGE=\\"libsodium\\" -DVERSION=\\"1.0.10\\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -D__EXTENSIONS__=1 -D_ALL_SOURCE=1 -D_GNU_SOURCE=1 -D_POSIX_PTHREAD_SEMANTICS=1 -D_TANDEM_SOURCE=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\\".libs\/\\" -DHAVE_MMINTRIN_H=1 -DHAVE_EMMINTRIN_H=1 -DHAVE_PMMINTRIN_H=1 -DHAVE_TMMINTRIN_H=1 -DHAVE_SMMINTRIN_H=1 -DHAVE_AVXINTRIN_H=1 -DHAVE_AVX2INTRIN_H=1 -DHAVE_WMMINTRIN_H=1 -DHAVE_SYS_MMAN_H=1 -DNATIVE_LITTLE_ENDIAN=1 -DHAVE_AMD64_ASM=1 -DHAVE_AVX_ASM=1 -DHAVE_TI_MODE=1 -DHAVE_CPUID=1 -DASM_HIDE_SYMBOL=.hidden -DHAVE_WEAK_SYMBOLS=1 -DCPU_UNALIGNED_ACCESS=1 -DHAVE_MMAP=1 -DHAVE_MLOCK=1 -DHAVE_MADVISE=1 -DHAVE_MPROTECT=1 -DHAVE_POSIX_MEMALIGN=1 -DHAVE_GETPID=1$/;"	m
DEFS	libsodium/msvc-scripts/Makefile	/^DEFS = -DPACKAGE_NAME=\\"libsodium\\" -DPACKAGE_TARNAME=\\"libsodium\\" -DPACKAGE_VERSION=\\"1.0.10\\" -DPACKAGE_STRING=\\"libsodium\\ 1.0.10\\" -DPACKAGE_BUGREPORT=\\"https:\/\/github.com\/jedisct1\/libsodium\/issues\\" -DPACKAGE_URL=\\"https:\/\/github.com\/jedisct1\/libsodium\\" -DPACKAGE=\\"libsodium\\" -DVERSION=\\"1.0.10\\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -D__EXTENSIONS__=1 -D_ALL_SOURCE=1 -D_GNU_SOURCE=1 -D_POSIX_PTHREAD_SEMANTICS=1 -D_TANDEM_SOURCE=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\\".libs\/\\" -DHAVE_MMINTRIN_H=1 -DHAVE_EMMINTRIN_H=1 -DHAVE_PMMINTRIN_H=1 -DHAVE_TMMINTRIN_H=1 -DHAVE_SMMINTRIN_H=1 -DHAVE_AVXINTRIN_H=1 -DHAVE_AVX2INTRIN_H=1 -DHAVE_WMMINTRIN_H=1 -DHAVE_SYS_MMAN_H=1 -DNATIVE_LITTLE_ENDIAN=1 -DHAVE_AMD64_ASM=1 -DHAVE_AVX_ASM=1 -DHAVE_TI_MODE=1 -DHAVE_CPUID=1 -DASM_HIDE_SYMBOL=.hidden -DHAVE_WEAK_SYMBOLS=1 -DCPU_UNALIGNED_ACCESS=1 -DHAVE_MMAP=1 -DHAVE_MLOCK=1 -DHAVE_MADVISE=1 -DHAVE_MPROTECT=1 -DHAVE_POSIX_MEMALIGN=1 -DHAVE_GETPID=1$/;"	m
DEFS	libsodium/src/Makefile	/^DEFS = -DPACKAGE_NAME=\\"libsodium\\" -DPACKAGE_TARNAME=\\"libsodium\\" -DPACKAGE_VERSION=\\"1.0.10\\" -DPACKAGE_STRING=\\"libsodium\\ 1.0.10\\" -DPACKAGE_BUGREPORT=\\"https:\/\/github.com\/jedisct1\/libsodium\/issues\\" -DPACKAGE_URL=\\"https:\/\/github.com\/jedisct1\/libsodium\\" -DPACKAGE=\\"libsodium\\" -DVERSION=\\"1.0.10\\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -D__EXTENSIONS__=1 -D_ALL_SOURCE=1 -D_GNU_SOURCE=1 -D_POSIX_PTHREAD_SEMANTICS=1 -D_TANDEM_SOURCE=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\\".libs\/\\" -DHAVE_MMINTRIN_H=1 -DHAVE_EMMINTRIN_H=1 -DHAVE_PMMINTRIN_H=1 -DHAVE_TMMINTRIN_H=1 -DHAVE_SMMINTRIN_H=1 -DHAVE_AVXINTRIN_H=1 -DHAVE_AVX2INTRIN_H=1 -DHAVE_WMMINTRIN_H=1 -DHAVE_SYS_MMAN_H=1 -DNATIVE_LITTLE_ENDIAN=1 -DHAVE_AMD64_ASM=1 -DHAVE_AVX_ASM=1 -DHAVE_TI_MODE=1 -DHAVE_CPUID=1 -DASM_HIDE_SYMBOL=.hidden -DHAVE_WEAK_SYMBOLS=1 -DCPU_UNALIGNED_ACCESS=1 -DHAVE_MMAP=1 -DHAVE_MLOCK=1 -DHAVE_MADVISE=1 -DHAVE_MPROTECT=1 -DHAVE_POSIX_MEMALIGN=1 -DHAVE_GETPID=1$/;"	m
DEFS	libsodium/src/libsodium/Makefile	/^DEFS = -DPACKAGE_NAME=\\"libsodium\\" -DPACKAGE_TARNAME=\\"libsodium\\" -DPACKAGE_VERSION=\\"1.0.10\\" -DPACKAGE_STRING=\\"libsodium\\ 1.0.10\\" -DPACKAGE_BUGREPORT=\\"https:\/\/github.com\/jedisct1\/libsodium\/issues\\" -DPACKAGE_URL=\\"https:\/\/github.com\/jedisct1\/libsodium\\" -DPACKAGE=\\"libsodium\\" -DVERSION=\\"1.0.10\\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -D__EXTENSIONS__=1 -D_ALL_SOURCE=1 -D_GNU_SOURCE=1 -D_POSIX_PTHREAD_SEMANTICS=1 -D_TANDEM_SOURCE=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\\".libs\/\\" -DHAVE_MMINTRIN_H=1 -DHAVE_EMMINTRIN_H=1 -DHAVE_PMMINTRIN_H=1 -DHAVE_TMMINTRIN_H=1 -DHAVE_SMMINTRIN_H=1 -DHAVE_AVXINTRIN_H=1 -DHAVE_AVX2INTRIN_H=1 -DHAVE_WMMINTRIN_H=1 -DHAVE_SYS_MMAN_H=1 -DNATIVE_LITTLE_ENDIAN=1 -DHAVE_AMD64_ASM=1 -DHAVE_AVX_ASM=1 -DHAVE_TI_MODE=1 -DHAVE_CPUID=1 -DASM_HIDE_SYMBOL=.hidden -DHAVE_WEAK_SYMBOLS=1 -DCPU_UNALIGNED_ACCESS=1 -DHAVE_MMAP=1 -DHAVE_MLOCK=1 -DHAVE_MADVISE=1 -DHAVE_MPROTECT=1 -DHAVE_POSIX_MEMALIGN=1 -DHAVE_GETPID=1$/;"	m
DEFS	libsodium/src/libsodium/include/Makefile	/^DEFS = -DPACKAGE_NAME=\\"libsodium\\" -DPACKAGE_TARNAME=\\"libsodium\\" -DPACKAGE_VERSION=\\"1.0.10\\" -DPACKAGE_STRING=\\"libsodium\\ 1.0.10\\" -DPACKAGE_BUGREPORT=\\"https:\/\/github.com\/jedisct1\/libsodium\/issues\\" -DPACKAGE_URL=\\"https:\/\/github.com\/jedisct1\/libsodium\\" -DPACKAGE=\\"libsodium\\" -DVERSION=\\"1.0.10\\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -D__EXTENSIONS__=1 -D_ALL_SOURCE=1 -D_GNU_SOURCE=1 -D_POSIX_PTHREAD_SEMANTICS=1 -D_TANDEM_SOURCE=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\\".libs\/\\" -DHAVE_MMINTRIN_H=1 -DHAVE_EMMINTRIN_H=1 -DHAVE_PMMINTRIN_H=1 -DHAVE_TMMINTRIN_H=1 -DHAVE_SMMINTRIN_H=1 -DHAVE_AVXINTRIN_H=1 -DHAVE_AVX2INTRIN_H=1 -DHAVE_WMMINTRIN_H=1 -DHAVE_SYS_MMAN_H=1 -DNATIVE_LITTLE_ENDIAN=1 -DHAVE_AMD64_ASM=1 -DHAVE_AVX_ASM=1 -DHAVE_TI_MODE=1 -DHAVE_CPUID=1 -DASM_HIDE_SYMBOL=.hidden -DHAVE_WEAK_SYMBOLS=1 -DCPU_UNALIGNED_ACCESS=1 -DHAVE_MMAP=1 -DHAVE_MLOCK=1 -DHAVE_MADVISE=1 -DHAVE_MPROTECT=1 -DHAVE_POSIX_MEMALIGN=1 -DHAVE_GETPID=1$/;"	m
DEFS	libsodium/test/Makefile	/^DEFS = -DPACKAGE_NAME=\\"libsodium\\" -DPACKAGE_TARNAME=\\"libsodium\\" -DPACKAGE_VERSION=\\"1.0.10\\" -DPACKAGE_STRING=\\"libsodium\\ 1.0.10\\" -DPACKAGE_BUGREPORT=\\"https:\/\/github.com\/jedisct1\/libsodium\/issues\\" -DPACKAGE_URL=\\"https:\/\/github.com\/jedisct1\/libsodium\\" -DPACKAGE=\\"libsodium\\" -DVERSION=\\"1.0.10\\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -D__EXTENSIONS__=1 -D_ALL_SOURCE=1 -D_GNU_SOURCE=1 -D_POSIX_PTHREAD_SEMANTICS=1 -D_TANDEM_SOURCE=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\\".libs\/\\" -DHAVE_MMINTRIN_H=1 -DHAVE_EMMINTRIN_H=1 -DHAVE_PMMINTRIN_H=1 -DHAVE_TMMINTRIN_H=1 -DHAVE_SMMINTRIN_H=1 -DHAVE_AVXINTRIN_H=1 -DHAVE_AVX2INTRIN_H=1 -DHAVE_WMMINTRIN_H=1 -DHAVE_SYS_MMAN_H=1 -DNATIVE_LITTLE_ENDIAN=1 -DHAVE_AMD64_ASM=1 -DHAVE_AVX_ASM=1 -DHAVE_TI_MODE=1 -DHAVE_CPUID=1 -DASM_HIDE_SYMBOL=.hidden -DHAVE_WEAK_SYMBOLS=1 -DCPU_UNALIGNED_ACCESS=1 -DHAVE_MMAP=1 -DHAVE_MLOCK=1 -DHAVE_MADVISE=1 -DHAVE_MPROTECT=1 -DHAVE_POSIX_MEMALIGN=1 -DHAVE_GETPID=1$/;"	m
DEFS	libsodium/test/default/Makefile	/^DEFS = -DPACKAGE_NAME=\\"libsodium\\" -DPACKAGE_TARNAME=\\"libsodium\\" -DPACKAGE_VERSION=\\"1.0.10\\" -DPACKAGE_STRING=\\"libsodium\\ 1.0.10\\" -DPACKAGE_BUGREPORT=\\"https:\/\/github.com\/jedisct1\/libsodium\/issues\\" -DPACKAGE_URL=\\"https:\/\/github.com\/jedisct1\/libsodium\\" -DPACKAGE=\\"libsodium\\" -DVERSION=\\"1.0.10\\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -D__EXTENSIONS__=1 -D_ALL_SOURCE=1 -D_GNU_SOURCE=1 -D_POSIX_PTHREAD_SEMANTICS=1 -D_TANDEM_SOURCE=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\\".libs\/\\" -DHAVE_MMINTRIN_H=1 -DHAVE_EMMINTRIN_H=1 -DHAVE_PMMINTRIN_H=1 -DHAVE_TMMINTRIN_H=1 -DHAVE_SMMINTRIN_H=1 -DHAVE_AVXINTRIN_H=1 -DHAVE_AVX2INTRIN_H=1 -DHAVE_WMMINTRIN_H=1 -DHAVE_SYS_MMAN_H=1 -DNATIVE_LITTLE_ENDIAN=1 -DHAVE_AMD64_ASM=1 -DHAVE_AVX_ASM=1 -DHAVE_TI_MODE=1 -DHAVE_CPUID=1 -DASM_HIDE_SYMBOL=.hidden -DHAVE_WEAK_SYMBOLS=1 -DCPU_UNALIGNED_ACCESS=1 -DHAVE_MMAP=1 -DHAVE_MLOCK=1 -DHAVE_MADVISE=1 -DHAVE_MPROTECT=1 -DHAVE_POSIX_MEMALIGN=1 -DHAVE_GETPID=1$/;"	m
DEFS	secp256k1/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DELETE_WATCH	daemon/watch.h	/^	DELETE_WATCH = -1,$/;"	e	enum:watch_result
DEPDIR	libsodium/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	libsodium/dist-build/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	libsodium/msvc-scripts/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	libsodium/src/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	libsodium/src/libsodium/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	libsodium/src/libsodium/include/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	libsodium/test/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	libsodium/test/default/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	secp256k1/Makefile	/^DEPDIR = .deps$/;"	m
DIAGONALIZE	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-sse41.h	53;"	d
DIAGONALIZE	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-ssse3.h	53;"	d
DIAGONALIZE	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ssse3.h	70;"	d
DIR	Makefile	/^	DIR=$$(pwd)\/ccan; cd ..\/ccan && .\/tools\/create-ccan-tree -a $$DIR `cd $$DIR.old\/ccan && find * -name _info | sed s,\/_info,, | sort` $(CCAN_NEW)$/;"	m
DIR_SEP	ccan/tools/configurator/configurator.c	61;"	d	file:
DIR_SEP	ccan/tools/configurator/configurator.c	63;"	d	file:
DISTCLEANFILES	libsodium/Makefile	/^DISTCLEANFILES = $(pkgconfig_DATA)$/;"	m
DISTCLEANFILES	libsodium/test/default/Makefile	/^DISTCLEANFILES = \\$/;"	m
DISTFILES	libsodium/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	libsodium/dist-build/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	libsodium/msvc-scripts/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	libsodium/src/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	libsodium/src/libsodium/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	libsodium/src/libsodium/include/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	libsodium/test/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	libsodium/test/default/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	secp256k1/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_ARCHIVES	libsodium/Makefile	/^DIST_ARCHIVES = $(distdir).tar.gz $(distdir).tar.bz2$/;"	m
DIST_ARCHIVES	secp256k1/Makefile	/^DIST_ARCHIVES = $(distdir).tar.gz$/;"	m
DIST_COMMON	libsodium/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(top_srcdir)\/configure \\$/;"	m
DIST_COMMON	libsodium/dist-build/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(am__DIST_COMMON)$/;"	m
DIST_COMMON	libsodium/msvc-scripts/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(am__DIST_COMMON)$/;"	m
DIST_COMMON	libsodium/src/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(am__DIST_COMMON)$/;"	m
DIST_COMMON	libsodium/src/libsodium/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(noinst_HEADERS) \\$/;"	m
DIST_COMMON	libsodium/src/libsodium/include/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(am__nobase_include_HEADERS_DIST) \\$/;"	m
DIST_COMMON	libsodium/test/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(am__DIST_COMMON)$/;"	m
DIST_COMMON	libsodium/test/default/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(am__DIST_COMMON)$/;"	m
DIST_COMMON	secp256k1/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(top_srcdir)\/configure \\$/;"	m
DIST_SOURCES	libsodium/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	libsodium/dist-build/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	libsodium/msvc-scripts/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	libsodium/src/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	libsodium/src/libsodium/Makefile	/^DIST_SOURCES = $(libaesni_la_SOURCES) $(libavx2_la_SOURCES) \\$/;"	m
DIST_SOURCES	libsodium/src/libsodium/include/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	libsodium/test/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	libsodium/test/default/Makefile	/^DIST_SOURCES = aead_aes256gcm.c aead_chacha20poly1305.c auth.c auth2.c \\$/;"	m
DIST_SOURCES	secp256k1/Makefile	/^DIST_SOURCES = $(libsecp256k1_la_SOURCES) \\$/;"	m
DIST_SUBDIRS	libsodium/Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_SUBDIRS	libsodium/src/Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_SUBDIRS	libsodium/src/libsodium/Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_SUBDIRS	libsodium/test/Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_TARGETS	libsodium/Makefile	/^DIST_TARGETS = dist-bzip2 dist-gzip$/;"	m
DIST_TARGETS	secp256k1/Makefile	/^DIST_TARGETS = dist-gzip$/;"	m
DLLTOOL	libsodium/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	libsodium/dist-build/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	libsodium/msvc-scripts/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	libsodium/src/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	libsodium/src/libsodium/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	libsodium/src/libsodium/include/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	libsodium/test/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	libsodium/test/default/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	secp256k1/Makefile	/^DLLTOOL = false$/;"	m
DLL_VERSION	libsodium/Makefile	/^DLL_VERSION = 8$/;"	m
DLL_VERSION	libsodium/dist-build/Makefile	/^DLL_VERSION = 8$/;"	m
DLL_VERSION	libsodium/msvc-scripts/Makefile	/^DLL_VERSION = 8$/;"	m
DLL_VERSION	libsodium/src/Makefile	/^DLL_VERSION = 8$/;"	m
DLL_VERSION	libsodium/src/libsodium/Makefile	/^DLL_VERSION = 8$/;"	m
DLL_VERSION	libsodium/src/libsodium/include/Makefile	/^DLL_VERSION = 8$/;"	m
DLL_VERSION	libsodium/test/Makefile	/^DLL_VERSION = 8$/;"	m
DLL_VERSION	libsodium/test/default/Makefile	/^DLL_VERSION = 8$/;"	m
DQROUND_VECTORS	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	51;"	d	file:
DSYMUTIL	libsodium/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	libsodium/dist-build/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	libsodium/msvc-scripts/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	libsodium/src/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	libsodium/src/libsodium/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	libsodium/src/libsodium/include/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	libsodium/test/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	libsodium/test/default/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	secp256k1/Makefile	/^DSYMUTIL = $/;"	m
DUMPBIN	libsodium/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	libsodium/dist-build/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	libsodium/msvc-scripts/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	libsodium/src/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	libsodium/src/libsodium/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	libsodium/src/libsodium/include/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	libsodium/test/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	libsodium/test/default/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	secp256k1/Makefile	/^DUMPBIN = $/;"	m
DUST_THRESHOLD	remove_dust.h	10;"	d
Debug	libsodium/test/default/wintest.bat	/^:Debug$/;"	l
DebugDLL	libsodium/test/default/wintest.bat	/^:DebugDLL$/;"	l
ECHO_C	libsodium/Makefile	/^ECHO_C = $/;"	m
ECHO_C	libsodium/dist-build/Makefile	/^ECHO_C = $/;"	m
ECHO_C	libsodium/msvc-scripts/Makefile	/^ECHO_C = $/;"	m
ECHO_C	libsodium/src/Makefile	/^ECHO_C = $/;"	m
ECHO_C	libsodium/src/libsodium/Makefile	/^ECHO_C = $/;"	m
ECHO_C	libsodium/src/libsodium/include/Makefile	/^ECHO_C = $/;"	m
ECHO_C	libsodium/test/Makefile	/^ECHO_C = $/;"	m
ECHO_C	libsodium/test/default/Makefile	/^ECHO_C = $/;"	m
ECHO_C	secp256k1/Makefile	/^ECHO_C = $/;"	m
ECHO_N	libsodium/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	libsodium/dist-build/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	libsodium/msvc-scripts/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	libsodium/src/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	libsodium/src/libsodium/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	libsodium/src/libsodium/include/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	libsodium/test/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	libsodium/test/default/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	secp256k1/Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	libsodium/Makefile	/^ECHO_T = $/;"	m
ECHO_T	libsodium/dist-build/Makefile	/^ECHO_T = $/;"	m
ECHO_T	libsodium/msvc-scripts/Makefile	/^ECHO_T = $/;"	m
ECHO_T	libsodium/src/Makefile	/^ECHO_T = $/;"	m
ECHO_T	libsodium/src/libsodium/Makefile	/^ECHO_T = $/;"	m
ECHO_T	libsodium/src/libsodium/include/Makefile	/^ECHO_T = $/;"	m
ECHO_T	libsodium/test/Makefile	/^ECHO_T = $/;"	m
ECHO_T	libsodium/test/default/Makefile	/^ECHO_T = $/;"	m
ECHO_T	secp256k1/Makefile	/^ECHO_T = $/;"	m
ECMULT_CONST_TABLE_GET_GE	secp256k1/src/ecmult_const_impl.h	23;"	d
ECMULT_TABLE_GET_GE	secp256k1/src/ecmult_impl.h	117;"	d
ECMULT_TABLE_GET_GE_STORAGE	secp256k1/src/ecmult_impl.h	128;"	d
ECMULT_TABLE_SIZE	secp256k1/src/ecmult_impl.h	28;"	d
EGREP	libsodium/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	libsodium/dist-build/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	libsodium/msvc-scripts/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	libsodium/src/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	libsodium/src/libsodium/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	libsodium/src/libsodium/include/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	libsodium/test/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	libsodium/test/default/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	secp256k1/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
ENABLE_MODULE_ECDH	secp256k1/src/libsecp256k1-config.h	12;"	d
END	libsodium/test/default/wintest.bat	/^:END$/;"	l
ENDIAN_CAST	ccan/ccan/endian/endian.h	115;"	d
ENDIAN_CAST	ccan/ccan/endian/endian.h	118;"	d
ENDIAN_TYPE	ccan/ccan/endian/endian.h	116;"	d
ENDIAN_TYPE	ccan/ccan/endian/endian.h	119;"	d
ENOSYS	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	26;"	d	file:
ENOSYS	libsodium/src/libsodium/sodium/utils.c	27;"	d	file:
EQ	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	62;"	d	file:
ERROR_FROM_LIGHTNINGD	daemon/lightning-cli.c	19;"	d	file:
ERROR_TALKING_TO_LIGHTNINGD	daemon/lightning-cli.c	20;"	d	file:
ERROR_USAGE	daemon/lightning-cli.c	21;"	d	file:
ERROR__INIT	lightning.pb-c.h	545;"	d
ETAGS	libsodium/Makefile	/^ETAGS = etags$/;"	m
ETAGS	libsodium/src/Makefile	/^ETAGS = etags$/;"	m
ETAGS	libsodium/src/libsodium/Makefile	/^ETAGS = etags$/;"	m
ETAGS	libsodium/src/libsodium/include/Makefile	/^ETAGS = etags$/;"	m
ETAGS	libsodium/test/Makefile	/^ETAGS = etags$/;"	m
ETAGS	libsodium/test/default/Makefile	/^ETAGS = etags$/;"	m
ETAGS	secp256k1/Makefile	/^ETAGS = etags$/;"	m
EXECUTE	ccan/tools/configurator/configurator.c	/^	EXECUTE			= 0x8000$/;"	e	enum:test_style	file:
EXEEXT	libsodium/Makefile	/^EXEEXT = $/;"	m
EXEEXT	libsodium/dist-build/Makefile	/^EXEEXT = $/;"	m
EXEEXT	libsodium/msvc-scripts/Makefile	/^EXEEXT = $/;"	m
EXEEXT	libsodium/src/Makefile	/^EXEEXT = $/;"	m
EXEEXT	libsodium/src/libsodium/Makefile	/^EXEEXT = $/;"	m
EXEEXT	libsodium/src/libsodium/include/Makefile	/^EXEEXT = $/;"	m
EXEEXT	libsodium/test/Makefile	/^EXEEXT = $/;"	m
EXEEXT	libsodium/test/default/Makefile	/^EXEEXT = $/;"	m
EXEEXT	secp256k1/Makefile	/^EXEEXT = $/;"	m
EXPB0	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts.h	8;"	d
EXPB0	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts_aes128ctr.c	/^const unsigned char EXPB0[16] = {0x03, 0x03, 0x03, 0x03, 0x07, 0x07, 0x07, 0x07, 0x0b, 0x0b, 0x0b, 0x0b, 0x0f, 0x0f, 0x0f, 0x0f};$/;"	v
EXPECT	secp256k1/src/util.h	40;"	d
EXPECT	secp256k1/src/util.h	42;"	d
EXTRA_ARG	ccan/ccan/tal/tal.c	70;"	d	file:
EXTRA_DIST	libsodium/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	libsodium/dist-build/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	libsodium/msvc-scripts/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	libsodium/test/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	libsodium/test/default/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	secp256k1/Makefile	/^EXTRA_DIST = autogen.sh src\/gen_context.c src\/basic-config.h $(JAVA_FILES)$/;"	m
EXTRA_SRC	libsodium/src/libsodium/include/Makefile	/^EXTRA_SRC = $(SODIUM_EXPORT) \\$/;"	m
Enumtype	tools/generate-wire.py	/^Enumtype = namedtuple('Enumtype', ['name', 'value'])$/;"	v
Error	lightning.pb-c.h	/^typedef struct _Error Error;$/;"	t	typeref:struct:_Error
Error_Closure	lightning.pb-c.h	/^typedef void (*Error_Closure)$/;"	t
FAIL_ACCEPT_ANCHOR	test/test_state_coverage.c	/^	FAIL_ACCEPT_ANCHOR,$/;"	e	enum:failure	file:
FAIL_ACCEPT_CLOSE	test/test_state_coverage.c	/^	FAIL_ACCEPT_CLOSE,$/;"	e	enum:failure	file:
FAIL_ACCEPT_CLOSE_ACK	test/test_state_coverage.c	/^	FAIL_ACCEPT_CLOSE_ACK,$/;"	e	enum:failure	file:
FAIL_ACCEPT_CLOSE_COMPLETE	test/test_state_coverage.c	/^	FAIL_ACCEPT_CLOSE_COMPLETE,$/;"	e	enum:failure	file:
FAIL_ACCEPT_HTLC_ADD	test/test_state_coverage.c	/^	FAIL_ACCEPT_HTLC_ADD,$/;"	e	enum:failure	file:
FAIL_ACCEPT_HTLC_FAIL	test/test_state_coverage.c	/^	FAIL_ACCEPT_HTLC_FAIL,$/;"	e	enum:failure	file:
FAIL_ACCEPT_HTLC_FULFILL	test/test_state_coverage.c	/^	FAIL_ACCEPT_HTLC_FULFILL,$/;"	e	enum:failure	file:
FAIL_ACCEPT_OPEN	test/test_state_coverage.c	/^	FAIL_ACCEPT_OPEN,$/;"	e	enum:failure	file:
FAIL_ACCEPT_OPEN_COMMIT_SIG	test/test_state_coverage.c	/^	FAIL_ACCEPT_OPEN_COMMIT_SIG,$/;"	e	enum:failure	file:
FAIL_ACCEPT_OPEN_COMPLETE	test/test_state_coverage.c	/^	FAIL_ACCEPT_OPEN_COMPLETE,$/;"	e	enum:failure	file:
FAIL_ACCEPT_SIMULTANEOUS_CLOSE	test/test_state_coverage.c	/^	FAIL_ACCEPT_SIMULTANEOUS_CLOSE$/;"	e	enum:failure	file:
FAIL_ACCEPT_UPDATE_ACCEPT	test/test_state_coverage.c	/^	FAIL_ACCEPT_UPDATE_ACCEPT,$/;"	e	enum:failure	file:
FAIL_ACCEPT_UPDATE_COMPLETE	test/test_state_coverage.c	/^	FAIL_ACCEPT_UPDATE_COMPLETE,$/;"	e	enum:failure	file:
FAIL_ACCEPT_UPDATE_SIGNATURE	test/test_state_coverage.c	/^	FAIL_ACCEPT_UPDATE_SIGNATURE,$/;"	e	enum:failure	file:
FAIL_DECLINE_HTLC	test/test_state_coverage.c	/^	FAIL_DECLINE_HTLC,$/;"	e	enum:failure	file:
FAIL_INFO__INIT	lightning.pb-c.h	423;"	d
FAIL_NONE	test/test_state_coverage.c	/^	FAIL_NONE,$/;"	e	enum:failure	file:
FAIL_REASON__INIT	lightning.pb-c.h	433;"	d
FAIL_STEAL	test/test_state_coverage.c	/^	FAIL_STEAL,$/;"	e	enum:failure	file:
FEATURES	Makefile	/^FEATURES :=$/;"	m
FEECHANGE_STATE_INVALID	daemon/feechange_state.h	/^	FEECHANGE_STATE_INVALID$/;"	e	enum:feechange_state
FGREP	libsodium/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	libsodium/dist-build/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	libsodium/msvc-scripts/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	libsodium/src/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	libsodium/src/libsodium/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	libsodium/src/libsodium/include/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	libsodium/test/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	libsodium/test/default/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	secp256k1/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FIXME_IMPLEMENT	lightningd/lightningd.c	29;"	d	file:
FORBIDDEN_403	daemon/failure.h	/^	FORBIDDEN_403 = 403,$/;"	e	enum:fail_error
FUNC	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	185;"	d	file:
FUNDING__INIT	lightning.pb-c.h	163;"	d
FailInfo	lightning.pb-c.h	/^typedef struct _FailInfo FailInfo;$/;"	t	typeref:struct:_FailInfo
FailInfo_Closure	lightning.pb-c.h	/^typedef void (*FailInfo_Closure)$/;"	t
FailReason	lightning.pb-c.h	/^typedef struct _FailReason FailReason;$/;"	t	typeref:struct:_FailReason
FailReason_Closure	lightning.pb-c.h	/^typedef void (*FailReason_Closure)$/;"	t
Field	tools/generate-wire.py	/^class Field(object):$/;"	c
FieldType	tools/generate-wire.py	/^class FieldType(object):$/;"	c
Funding	lightning.pb-c.h	/^typedef struct _Funding Funding;$/;"	t	typeref:struct:_Funding
Funding_Closure	lightning.pb-c.h	/^typedef void (*Funding_Closure)$/;"	t
G	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-ref.c	53;"	d	file:
G	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-ref.c	91;"	d	file:
G	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ref.h	13;"	d
G1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-sse41.h	15;"	d
G1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-ssse3.h	15;"	d
G1	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ssse3.h	28;"	d
G2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-sse41.h	34;"	d
G2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-ssse3.h	34;"	d
G2	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ssse3.h	49;"	d
GARBAGE_VALUE	libsodium/src/libsodium/sodium/utils.c	35;"	d	file:
GATEWAY_TIMEOUT_504	daemon/failure.h	/^	GATEWAY_TIMEOUT_504 = 504,$/;"	e	enum:fail_error
GE	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	64;"	d	file:
GEN_HEADERS	Makefile	/^GEN_HEADERS := 	gen_version.h			\\$/;"	m
GONE_410	daemon/failure.h	/^	GONE_410 = 410,$/;"	e	enum:fail_error
GREP	libsodium/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	libsodium/dist-build/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	libsodium/msvc-scripts/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	libsodium/src/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	libsodium/src/libsodium/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	libsodium/src/libsodium/include/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	libsodium/test/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	libsodium/test/default/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	secp256k1/Makefile	/^GREP = \/bin\/grep$/;"	m
GT	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	63;"	d	file:
GZIP_ENV	libsodium/Makefile	/^GZIP_ENV = --best$/;"	m
GZIP_ENV	secp256k1/Makefile	/^GZIP_ENV = --best$/;"	m
H	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^    CRYPTO_ALIGN(16) unsigned char H[16];$/;"	m	struct:context	file:
HASH_BLOCK_SIZE	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	46;"	d	file:
HAVE_32BIT_OFF_T	ccan/config.h	12;"	d
HAVE_ALIGNED_MALLOC	libsodium/src/libsodium/sodium/utils.c	44;"	d	file:
HAVE_ALIGNOF	ccan/config.h	13;"	d
HAVE_AMD64_ASM_V	libsodium/Makefile	/^HAVE_AMD64_ASM_V = 1$/;"	m
HAVE_AMD64_ASM_V	libsodium/dist-build/Makefile	/^HAVE_AMD64_ASM_V = 1$/;"	m
HAVE_AMD64_ASM_V	libsodium/msvc-scripts/Makefile	/^HAVE_AMD64_ASM_V = 1$/;"	m
HAVE_AMD64_ASM_V	libsodium/src/Makefile	/^HAVE_AMD64_ASM_V = 1$/;"	m
HAVE_AMD64_ASM_V	libsodium/src/libsodium/Makefile	/^HAVE_AMD64_ASM_V = 1$/;"	m
HAVE_AMD64_ASM_V	libsodium/src/libsodium/include/Makefile	/^HAVE_AMD64_ASM_V = 1$/;"	m
HAVE_AMD64_ASM_V	libsodium/test/Makefile	/^HAVE_AMD64_ASM_V = 1$/;"	m
HAVE_AMD64_ASM_V	libsodium/test/default/Makefile	/^HAVE_AMD64_ASM_V = 1$/;"	m
HAVE_ASPRINTF	ccan/config.h	14;"	d
HAVE_ATTRIBUTE_COLD	ccan/config.h	15;"	d
HAVE_ATTRIBUTE_CONST	ccan/config.h	16;"	d
HAVE_ATTRIBUTE_MAY_ALIAS	ccan/config.h	18;"	d
HAVE_ATTRIBUTE_NORETURN	ccan/config.h	19;"	d
HAVE_ATTRIBUTE_PRINTF	ccan/config.h	20;"	d
HAVE_ATTRIBUTE_PURE	ccan/config.h	17;"	d
HAVE_ATTRIBUTE_UNUSED	ccan/config.h	21;"	d
HAVE_ATTRIBUTE_USED	ccan/config.h	22;"	d
HAVE_AVX_ASM_V	libsodium/Makefile	/^HAVE_AVX_ASM_V = 1$/;"	m
HAVE_AVX_ASM_V	libsodium/dist-build/Makefile	/^HAVE_AVX_ASM_V = 1$/;"	m
HAVE_AVX_ASM_V	libsodium/msvc-scripts/Makefile	/^HAVE_AVX_ASM_V = 1$/;"	m
HAVE_AVX_ASM_V	libsodium/src/Makefile	/^HAVE_AVX_ASM_V = 1$/;"	m
HAVE_AVX_ASM_V	libsodium/src/libsodium/Makefile	/^HAVE_AVX_ASM_V = 1$/;"	m
HAVE_AVX_ASM_V	libsodium/src/libsodium/include/Makefile	/^HAVE_AVX_ASM_V = 1$/;"	m
HAVE_AVX_ASM_V	libsodium/test/Makefile	/^HAVE_AVX_ASM_V = 1$/;"	m
HAVE_AVX_ASM_V	libsodium/test/default/Makefile	/^HAVE_AVX_ASM_V = 1$/;"	m
HAVE_BACKTRACE	ccan/config.h	23;"	d
HAVE_BIG_ENDIAN	ccan/config.h	24;"	d
HAVE_BSWAP_64	ccan/config.h	25;"	d
HAVE_BUILTIN_CHOOSE_EXPR	ccan/config.h	26;"	d
HAVE_BUILTIN_CLZ	ccan/config.h	27;"	d
HAVE_BUILTIN_CLZL	ccan/config.h	28;"	d
HAVE_BUILTIN_CLZLL	ccan/config.h	29;"	d
HAVE_BUILTIN_CONSTANT_P	ccan/config.h	33;"	d
HAVE_BUILTIN_CTZ	ccan/config.h	30;"	d
HAVE_BUILTIN_CTZL	ccan/config.h	31;"	d
HAVE_BUILTIN_CTZLL	ccan/config.h	32;"	d
HAVE_BUILTIN_EXPECT	ccan/config.h	34;"	d
HAVE_BUILTIN_EXPECT	secp256k1/src/libsecp256k1-config.h	24;"	d
HAVE_BUILTIN_FFS	ccan/config.h	35;"	d
HAVE_BUILTIN_FFSL	ccan/config.h	36;"	d
HAVE_BUILTIN_FFSLL	ccan/config.h	37;"	d
HAVE_BUILTIN_POPCOUNTL	ccan/config.h	38;"	d
HAVE_BUILTIN_TYPES_COMPATIBLE_P	ccan/config.h	39;"	d
HAVE_BYTESWAP_H	ccan/config.h	41;"	d
HAVE_CCAN	ccan/config.h	11;"	d
HAVE_CLOCK_GETTIME	ccan/config.h	42;"	d
HAVE_CLOCK_GETTIME_IN_LIBRT	ccan/config.h	43;"	d
HAVE_COMPOUND_LITERALS	ccan/config.h	44;"	d
HAVE_CPUID_V	libsodium/Makefile	/^HAVE_CPUID_V = 1$/;"	m
HAVE_CPUID_V	libsodium/dist-build/Makefile	/^HAVE_CPUID_V = 1$/;"	m
HAVE_CPUID_V	libsodium/msvc-scripts/Makefile	/^HAVE_CPUID_V = 1$/;"	m
HAVE_CPUID_V	libsodium/src/Makefile	/^HAVE_CPUID_V = 1$/;"	m
HAVE_CPUID_V	libsodium/src/libsodium/Makefile	/^HAVE_CPUID_V = 1$/;"	m
HAVE_CPUID_V	libsodium/src/libsodium/include/Makefile	/^HAVE_CPUID_V = 1$/;"	m
HAVE_CPUID_V	libsodium/test/Makefile	/^HAVE_CPUID_V = 1$/;"	m
HAVE_CPUID_V	libsodium/test/default/Makefile	/^HAVE_CPUID_V = 1$/;"	m
HAVE_DLFCN_H	secp256k1/src/libsecp256k1-config.h	27;"	d
HAVE_ERR_H	ccan/config.h	46;"	d
HAVE_FCHDIR	ccan/config.h	45;"	d
HAVE_FILE_OFFSET_BITS	ccan/config.h	47;"	d
HAVE_FLEXIBLE_ARRAY_MEMBER	ccan/config.h	49;"	d
HAVE_FOR_LOOP_DECLARATION	ccan/config.h	48;"	d
HAVE_GETPAGESIZE	ccan/config.h	50;"	d
HAVE_ICCARM_INTRINSICS	ccan/config.h	40;"	d
HAVE_INTTYPES_H	secp256k1/src/libsecp256k1-config.h	30;"	d
HAVE_ISBLANK	ccan/config.h	51;"	d
HAVE_LIBGMP	secp256k1/src/libsecp256k1-config.h	36;"	d
HAVE_LITTLE_ENDIAN	ccan/config.h	52;"	d
HAVE_MEMMEM	ccan/config.h	53;"	d
HAVE_MEMORY_H	secp256k1/src/libsecp256k1-config.h	39;"	d
HAVE_MEMRCHR	ccan/config.h	54;"	d
HAVE_MMAP	ccan/config.h	55;"	d
HAVE_MPROTECT	libsodium/src/libsodium/sodium/utils.c	47;"	d	file:
HAVE_OPENMP	ccan/config.h	68;"	d
HAVE_PAGE_PROTECTION	libsodium/src/libsodium/sodium/utils.c	50;"	d	file:
HAVE_POINTER_SAFE_MAKECONTEXT	ccan/config.h	71;"	d
HAVE_PROC_SELF_MAPS	ccan/config.h	56;"	d
HAVE_QSORT_R_PRIVATE_LAST	ccan/config.h	57;"	d
HAVE_SAFE_ARC4RANDOM	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	50;"	d	file:
HAVE_SAFE_ARC4RANDOM	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	37;"	d	file:
HAVE_SECTION_START_STOP	ccan/config.h	59;"	d
HAVE_STACK_GROWS_UPWARDS	ccan/config.h	60;"	d
HAVE_STATEMENT_EXPR	ccan/config.h	61;"	d
HAVE_STDINT_H	secp256k1/src/libsecp256k1-config.h	42;"	d
HAVE_STDLIB_H	secp256k1/src/libsecp256k1-config.h	45;"	d
HAVE_STRINGS_H	secp256k1/src/libsecp256k1-config.h	48;"	d
HAVE_STRING_H	secp256k1/src/libsecp256k1-config.h	51;"	d
HAVE_STRUCT_TIMESPEC	ccan/config.h	58;"	d
HAVE_SYS_FILIO_H	ccan/config.h	62;"	d
HAVE_SYS_STAT_H	secp256k1/src/libsecp256k1-config.h	54;"	d
HAVE_SYS_TERMIOS_H	ccan/config.h	63;"	d
HAVE_SYS_TYPES_H	secp256k1/src/libsecp256k1-config.h	57;"	d
HAVE_TI_MODE_V	libsodium/Makefile	/^HAVE_TI_MODE_V = 1$/;"	m
HAVE_TI_MODE_V	libsodium/dist-build/Makefile	/^HAVE_TI_MODE_V = 1$/;"	m
HAVE_TI_MODE_V	libsodium/msvc-scripts/Makefile	/^HAVE_TI_MODE_V = 1$/;"	m
HAVE_TI_MODE_V	libsodium/src/Makefile	/^HAVE_TI_MODE_V = 1$/;"	m
HAVE_TI_MODE_V	libsodium/src/libsodium/Makefile	/^HAVE_TI_MODE_V = 1$/;"	m
HAVE_TI_MODE_V	libsodium/src/libsodium/include/Makefile	/^HAVE_TI_MODE_V = 1$/;"	m
HAVE_TI_MODE_V	libsodium/test/Makefile	/^HAVE_TI_MODE_V = 1$/;"	m
HAVE_TI_MODE_V	libsodium/test/default/Makefile	/^HAVE_TI_MODE_V = 1$/;"	m
HAVE_TYPEOF	ccan/config.h	64;"	d
HAVE_UCONTEXT	ccan/config.h	70;"	d
HAVE_UNALIGNED_ACCESS	ccan/config.h	65;"	d
HAVE_UNISTD_H	secp256k1/src/libsecp256k1-config.h	60;"	d
HAVE_UTIME	ccan/config.h	66;"	d
HAVE_VALGRIND_MEMCHECK_H	ccan/config.h	69;"	d
HAVE_WARN_UNUSED_RESULT	ccan/config.h	67;"	d
HAVE___INT128	secp256k1/src/libsecp256k1-config.h	63;"	d
HEADERS	libsodium/src/libsodium/Makefile	/^HEADERS = $(noinst_HEADERS)$/;"	m
HEADERS	libsodium/src/libsodium/include/Makefile	/^HEADERS = $(nobase_include_HEADERS) $(nobase_nodist_include_HEADERS)$/;"	m
HEADERS	secp256k1/Makefile	/^HEADERS = $(include_HEADERS) $(noinst_HEADERS)$/;"	m
HEADER_LEN	wire/wire_io.c	15;"	d	file:
HMAC_SHA256_BLOCKSIZE	ccan/ccan/crypto/hmac_sha256/hmac_sha256.h	10;"	d
HOP_PAYLOAD_SIZE	daemon/sphinx.h	15;"	d
HTABLE_DEFINE_TYPE	ccan/ccan/htable/htable_type.h	55;"	d
HTABLE_DELETED	ccan/ccan/htable/htable.c	11;"	d	file:
HTABLE_INITIALIZER	ccan/ccan/htable/htable.h	43;"	d
HTABLE_KTYPE	ccan/ccan/htable/htable_type.h	159;"	d
HTABLE_KTYPE	ccan/ccan/htable/htable_type.h	163;"	d
HTABLE_KTYPE	ccan/ccan/htable/test/run-type-int.c	4;"	d	file:
HTLC_ADDING	daemon/htlc.h	21;"	d
HTLC_ARRSIZE	test/test_state_coverage.c	73;"	d	file:
HTLC_FLAG	daemon/htlc.h	36;"	d
HTLC_F_COMMITTED	daemon/htlc.h	27;"	d
HTLC_F_OWNER	daemon/htlc.h	31;"	d
HTLC_F_PENDING	daemon/htlc.h	25;"	d
HTLC_F_REVOKED	daemon/htlc.h	29;"	d
HTLC_F_WAS_COMMITTED	daemon/htlc.h	33;"	d
HTLC_LOCAL_F_COMMITTED	daemon/htlc.h	45;"	d
HTLC_LOCAL_F_OWNER	daemon/htlc.h	47;"	d
HTLC_LOCAL_F_PENDING	daemon/htlc.h	44;"	d
HTLC_LOCAL_F_REVOKED	daemon/htlc.h	46;"	d
HTLC_LOCAL_F_WAS_COMMITTED	daemon/htlc.h	48;"	d
HTLC_REMOTE_F_COMMITTED	daemon/htlc.h	39;"	d
HTLC_REMOTE_F_OWNER	daemon/htlc.h	41;"	d
HTLC_REMOTE_F_PENDING	daemon/htlc.h	38;"	d
HTLC_REMOTE_F_REVOKED	daemon/htlc.h	40;"	d
HTLC_REMOTE_F_WAS_COMMITTED	daemon/htlc.h	42;"	d
HTLC_REMOVING	daemon/htlc.h	22;"	d
HTLC_STATE_INVALID	daemon/htlc_state.h	/^	HTLC_STATE_INVALID$/;"	e	enum:htlc_state
I64FORMAT	secp256k1/src/util.h	94;"	d
I64FORMAT	secp256k1/src/util.h	97;"	d
I64uFORMAT	secp256k1/src/util.h	95;"	d
I64uFORMAT	secp256k1/src/util.h	98;"	d
IM_A_TEAPOT_418	daemon/failure.h	/^	IM_A_TEAPOT_418 = 418,$/;"	e	enum:fail_error
INFINITE	daemon/routing.c	299;"	d	file:
INIT__INIT	lightning.pb-c.h	204;"	d
INPUT_CLOSE_COMPLETE_TIMEOUT	daemon/state_types.h	/^	INPUT_CLOSE_COMPLETE_TIMEOUT,$/;"	e	enum:state_input
INPUT_FILE	ccan/tools/configurator/configurator.c	58;"	d	file:
INPUT_MAX	daemon/state_types.h	/^	INPUT_MAX$/;"	e	enum:state_input
INPUT_NONE	daemon/state_types.h	/^	INPUT_NONE,$/;"	e	enum:state_input
INSIDE_HEADER_BIT	wire/wire_io.c	18;"	d	file:
INSIDE_MAIN	ccan/tools/configurator/configurator.c	/^	INSIDE_MAIN		= 0x4,$/;"	e	enum:test_style	file:
INSTALL	libsodium/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	libsodium/dist-build/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	libsodium/msvc-scripts/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	libsodium/src/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	libsodium/src/libsodium/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	libsodium/src/libsodium/include/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	libsodium/test/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	libsodium/test/default/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	secp256k1/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	libsodium/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	libsodium/dist-build/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	libsodium/msvc-scripts/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	libsodium/src/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	libsodium/src/libsodium/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	libsodium/src/libsodium/include/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	libsodium/test/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	libsodium/test/default/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	secp256k1/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	libsodium/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	libsodium/dist-build/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	libsodium/msvc-scripts/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	libsodium/src/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	libsodium/src/libsodium/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	libsodium/src/libsodium/include/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	libsodium/test/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	libsodium/test/default/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	secp256k1/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	libsodium/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	libsodium/dist-build/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	libsodium/msvc-scripts/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	libsodium/src/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	libsodium/src/libsodium/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	libsodium/src/libsodium/include/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	libsodium/test/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	libsodium/test/default/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	secp256k1/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	libsodium/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	libsodium/dist-build/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	libsodium/msvc-scripts/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	libsodium/src/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	libsodium/src/libsodium/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	libsodium/src/libsodium/include/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	libsodium/test/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	libsodium/test/default/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	secp256k1/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	libsodium/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	libsodium/dist-build/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	libsodium/msvc-scripts/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	libsodium/src/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	libsodium/src/libsodium/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	libsodium/src/libsodium/include/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	libsodium/test/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	libsodium/test/default/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	secp256k1/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INT128_H	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128.h	2;"	d
INTEL_OBJS	ccan/ccan/crypto/sha256/benchmarks/Makefile	/^INTEL_OBJS := sha256_avx1.o sha256_avx2_rorx2.o sha256_avx2_rorx8.o sha256_sse4.o$/;"	m
INTERNAL_SERVER_ERROR_500	daemon/failure.h	/^	INTERNAL_SERVER_ERROR_500 = 500,$/;"	e	enum:fail_error
INVOICE_MAX_LABEL_LEN	daemon/invoice.h	18;"	d
IN_SANDY2X	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/sandy2x.S	/^#define IN_SANDY2X$/;"	d
IO_ALWAYS	ccan/ccan/io/backend.h	/^	IO_ALWAYS$/;"	e	enum:io_plan_status
IO_IN	ccan/ccan/io/io_plan.h	/^	IO_IN,$/;"	e	enum:io_direction
IO_OUT	ccan/ccan/io/io_plan.h	/^	IO_OUT$/;"	e	enum:io_direction
IO_POLLING	ccan/ccan/io/backend.h	/^	IO_POLLING,$/;"	e	enum:io_plan_status
IO_UNSET	ccan/ccan/io/backend.h	/^	IO_UNSET,$/;"	e	enum:io_plan_status
IO_WAITING	ccan/ccan/io/backend.h	/^	IO_WAITING,$/;"	e	enum:io_plan_status
IPAD	ccan/ccan/crypto/hmac_sha256/hmac_sha256.c	5;"	d	file:
ISAAC64_MASK	ccan/ccan/isaac/isaac64.c	11;"	d	file:
ISAAC64_SEED_SZ_MAX	ccan/ccan/isaac/isaac64.h	14;"	d
ISAAC64_SZ	ccan/ccan/isaac/isaac64.h	13;"	d
ISAAC64_SZ_LOG	ccan/ccan/isaac/isaac64.h	12;"	d
ISAAC_MASK	ccan/ccan/isaac/isaac.c	11;"	d	file:
ISAAC_SEED_SZ_MAX	ccan/ccan/isaac/isaac.h	19;"	d
ISAAC_SZ	ccan/ccan/isaac/isaac.h	18;"	d
ISAAC_SZ_LOG	ccan/ccan/isaac/isaac.h	17;"	d
ISODATE	libsodium/Makefile	/^ISODATE = 2017-01-20$/;"	m
ISODATE	libsodium/dist-build/Makefile	/^ISODATE = 2017-01-20$/;"	m
ISODATE	libsodium/msvc-scripts/Makefile	/^ISODATE = 2017-01-20$/;"	m
ISODATE	libsodium/src/Makefile	/^ISODATE = 2017-01-20$/;"	m
ISODATE	libsodium/src/libsodium/Makefile	/^ISODATE = 2017-01-20$/;"	m
ISODATE	libsodium/src/libsodium/include/Makefile	/^ISODATE = 2017-01-20$/;"	m
ISODATE	libsodium/test/Makefile	/^ISODATE = 2017-01-20$/;"	m
ISODATE	libsodium/test/default/Makefile	/^ISODATE = 2017-01-20$/;"	m
IS_COMPILE_CONSTANT	ccan/ccan/compiler/compiler.h	204;"	d
IS_COMPILE_CONSTANT	ccan/ccan/compiler/compiler.h	207;"	d
InBasisChange	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common.h	559;"	d
Init	lightning.pb-c.h	/^typedef struct _Init Init;$/;"	t	typeref:struct:_Init
Init_Closure	lightning.pb-c.h	/^typedef void (*Init_Closure)$/;"	t
Inv_GF16	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common.h	675;"	d
Inv_GF256	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common.h	692;"	d
IsValidSignatureEncoding	bitcoin/signature.c	/^static bool IsValidSignatureEncoding(const unsigned char sig[], size_t len)$/;"	f	file:
JAVAORG	secp256k1/Makefile	/^JAVAORG = org\/bitcoin$/;"	m
JAVAROOT	secp256k1/Makefile	/^JAVAROOT = src\/java$/;"	m
JAVA_FILES	secp256k1/Makefile	/^JAVA_FILES = \\$/;"	m
JAVA_GUAVA	secp256k1/Makefile	/^JAVA_GUAVA = $(srcdir)\/$(JAVAROOT)\/guava\/guava-18.0.jar$/;"	m
JNI_INCLUDES	secp256k1/Makefile	/^JNI_INCLUDES = $/;"	m
JNI_LIB	secp256k1/Makefile	/^JNI_LIB = $/;"	m
JSMN_ARRAY	daemon/jsmn/jsmn.h	/^	JSMN_ARRAY = 2,$/;"	e	enum:__anon56
JSMN_ARRAY	daemon/jsmn/jsmn_test.c	559;"	d	file:
JSMN_ERROR_INVAL	daemon/jsmn/jsmn.h	/^	JSMN_ERROR_INVAL = -2,$/;"	e	enum:__anon57
JSMN_ERROR_INVAL	daemon/jsmn/jsmn_test.c	562;"	d	file:
JSMN_ERROR_NOMEM	daemon/jsmn/jsmn.h	/^	JSMN_ERROR_NOMEM = -1,$/;"	e	enum:__anon57
JSMN_ERROR_NOMEM	daemon/jsmn/jsmn_test.c	561;"	d	file:
JSMN_ERROR_PART	daemon/jsmn/jsmn.h	/^	JSMN_ERROR_PART = -3$/;"	e	enum:__anon57
JSMN_ERROR_PART	daemon/jsmn/jsmn_test.c	563;"	d	file:
JSMN_OBJECT	daemon/jsmn/jsmn.h	/^	JSMN_OBJECT = 1,$/;"	e	enum:__anon56
JSMN_OBJECT	daemon/jsmn/jsmn_test.c	558;"	d	file:
JSMN_PRIMITIVE	daemon/jsmn/jsmn.h	/^	JSMN_PRIMITIVE = 0,$/;"	e	enum:__anon56
JSMN_PRIMITIVE	daemon/jsmn/jsmn_test.c	557;"	d	file:
JSMN_STRICT	daemon/jsmn/jsmn_test.c	41;"	d	file:
JSMN_STRICT	daemon/jsmn/jsmn_test.c	565;"	d	file:
JSMN_STRICT	daemon/json.h	10;"	d
JSMN_STRING	daemon/jsmn/jsmn.h	/^	JSMN_STRING = 3$/;"	e	enum:__anon56
JSMN_STRING	daemon/jsmn/jsmn_test.c	560;"	d	file:
JSON_STRING	daemon/jsmn/example/simple.c	/^const char *JSON_STRING =$/;"	v
Java_org_bitcoin_NativeSecp256k1_secp256k1_1context_1randomize	secp256k1/src/java/org_bitcoin_NativeSecp256k1.c	/^SECP256K1_API jint JNICALL Java_org_bitcoin_NativeSecp256k1_secp256k1_1context_1randomize$/;"	f
Java_org_bitcoin_NativeSecp256k1_secp256k1_1ctx_1clone	secp256k1/src/java/org_bitcoin_NativeSecp256k1.c	/^SECP256K1_API jlong JNICALL Java_org_bitcoin_NativeSecp256k1_secp256k1_1ctx_1clone$/;"	f
Java_org_bitcoin_NativeSecp256k1_secp256k1_1destroy_1context	secp256k1/src/java/org_bitcoin_NativeSecp256k1.c	/^SECP256K1_API void JNICALL Java_org_bitcoin_NativeSecp256k1_secp256k1_1destroy_1context$/;"	f
Java_org_bitcoin_NativeSecp256k1_secp256k1_1ec_1pubkey_1create	secp256k1/src/java/org_bitcoin_NativeSecp256k1.c	/^SECP256K1_API jobjectArray JNICALL Java_org_bitcoin_NativeSecp256k1_secp256k1_1ec_1pubkey_1create$/;"	f
Java_org_bitcoin_NativeSecp256k1_secp256k1_1ec_1seckey_1verify	secp256k1/src/java/org_bitcoin_NativeSecp256k1.c	/^SECP256K1_API jint JNICALL Java_org_bitcoin_NativeSecp256k1_secp256k1_1ec_1seckey_1verify$/;"	f
Java_org_bitcoin_NativeSecp256k1_secp256k1_1ecdh	secp256k1/src/java/org_bitcoin_NativeSecp256k1.c	/^SECP256K1_API jobjectArray JNICALL Java_org_bitcoin_NativeSecp256k1_secp256k1_1ecdh$/;"	f
Java_org_bitcoin_NativeSecp256k1_secp256k1_1ecdsa_1pubkey_1combine	secp256k1/src/java/org_bitcoin_NativeSecp256k1.c	/^SECP256K1_API jlong JNICALL Java_org_bitcoin_NativeSecp256k1_secp256k1_1ecdsa_1pubkey_1combine$/;"	f
Java_org_bitcoin_NativeSecp256k1_secp256k1_1ecdsa_1sign	secp256k1/src/java/org_bitcoin_NativeSecp256k1.c	/^SECP256K1_API jobjectArray JNICALL Java_org_bitcoin_NativeSecp256k1_secp256k1_1ecdsa_1sign$/;"	f
Java_org_bitcoin_NativeSecp256k1_secp256k1_1ecdsa_1verify	secp256k1/src/java/org_bitcoin_NativeSecp256k1.c	/^SECP256K1_API jint JNICALL Java_org_bitcoin_NativeSecp256k1_secp256k1_1ecdsa_1verify$/;"	f
Java_org_bitcoin_NativeSecp256k1_secp256k1_1privkey_1tweak_1add	secp256k1/src/java/org_bitcoin_NativeSecp256k1.c	/^SECP256K1_API jobjectArray JNICALL Java_org_bitcoin_NativeSecp256k1_secp256k1_1privkey_1tweak_1add$/;"	f
Java_org_bitcoin_NativeSecp256k1_secp256k1_1privkey_1tweak_1mul	secp256k1/src/java/org_bitcoin_NativeSecp256k1.c	/^SECP256K1_API jobjectArray JNICALL Java_org_bitcoin_NativeSecp256k1_secp256k1_1privkey_1tweak_1mul$/;"	f
Java_org_bitcoin_NativeSecp256k1_secp256k1_1pubkey_1tweak_1add	secp256k1/src/java/org_bitcoin_NativeSecp256k1.c	/^SECP256K1_API jobjectArray JNICALL Java_org_bitcoin_NativeSecp256k1_secp256k1_1pubkey_1tweak_1add$/;"	f
Java_org_bitcoin_NativeSecp256k1_secp256k1_1pubkey_1tweak_1mul	secp256k1/src/java/org_bitcoin_NativeSecp256k1.c	/^SECP256K1_API jobjectArray JNICALL Java_org_bitcoin_NativeSecp256k1_secp256k1_1pubkey_1tweak_1mul$/;"	f
Java_org_bitcoin_NativeSecp256k1_secp256k1_1schnorr_1sign	secp256k1/src/java/org_bitcoin_NativeSecp256k1.c	/^SECP256K1_API jobjectArray JNICALL Java_org_bitcoin_NativeSecp256k1_secp256k1_1schnorr_1sign$/;"	f
Java_org_bitcoin_Secp256k1Context_secp256k1_1init_1context	secp256k1/src/java/org_bitcoin_Secp256k1Context.c	/^SECP256K1_API jlong JNICALL Java_org_bitcoin_Secp256k1Context_secp256k1_1init_1context$/;"	f
K256	ccan/ccan/crypto/sha256/benchmarks/sha256_avx1.asm	/^K256:$/;"	l
K256	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^K256:$/;"	l
K256	ccan/ccan/crypto/sha256/benchmarks/sha256_sse4.asm	/^K256:$/;"	l
K256_SIMD	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^K256_SIMD:$/;"	l
KEEP_WATCHING	daemon/watch.h	/^	KEEP_WATCHING = -2$/;"	e	enum:watch_result
KEY_LEN	daemon/sphinx.c	19;"	d	file:
LANG	daemon/Makefile	/^LANG=C$/;"	m
LC_ALL	daemon/Makefile	/^LC_ALL=C$/;"	m
LC_CTYPE	daemon/Makefile	/^LC_CTYPE=C$/;"	m
LD	libsodium/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	libsodium/dist-build/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	libsodium/msvc-scripts/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	libsodium/src/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	libsodium/src/libsodium/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	libsodium/src/libsodium/include/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	libsodium/test/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	libsodium/test/default/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	secp256k1/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LDFLAGS	ccan/ccan/crypto/sha256/benchmarks/Makefile	/^LDFLAGS := -O3 -flto$/;"	m
LDFLAGS	ccan/ccan/io/benchmarks/Makefile	/^LDFLAGS:=-O3 -flto$/;"	m
LDFLAGS	ccan/ccan/tal/benchmark/Makefile	/^LDFLAGS=-O3 -flto$/;"	m
LDFLAGS	ccan/ccan/timer/benchmarks/Makefile	/^LDFLAGS:=-O3 -flto$/;"	m
LDFLAGS	libsodium/Makefile	/^LDFLAGS =  -pie -Wl,-z,relro -Wl,-z,now -Wl,-z,noexecstack$/;"	m
LDFLAGS	libsodium/dist-build/Makefile	/^LDFLAGS =  -pie -Wl,-z,relro -Wl,-z,now -Wl,-z,noexecstack$/;"	m
LDFLAGS	libsodium/msvc-scripts/Makefile	/^LDFLAGS =  -pie -Wl,-z,relro -Wl,-z,now -Wl,-z,noexecstack$/;"	m
LDFLAGS	libsodium/src/Makefile	/^LDFLAGS =  -pie -Wl,-z,relro -Wl,-z,now -Wl,-z,noexecstack$/;"	m
LDFLAGS	libsodium/src/libsodium/Makefile	/^LDFLAGS =  -pie -Wl,-z,relro -Wl,-z,now -Wl,-z,noexecstack$/;"	m
LDFLAGS	libsodium/src/libsodium/include/Makefile	/^LDFLAGS =  -pie -Wl,-z,relro -Wl,-z,now -Wl,-z,noexecstack$/;"	m
LDFLAGS	libsodium/test/Makefile	/^LDFLAGS =  -pie -Wl,-z,relro -Wl,-z,now -Wl,-z,noexecstack$/;"	m
LDFLAGS	libsodium/test/default/Makefile	/^LDFLAGS =  -pie -Wl,-z,relro -Wl,-z,now -Wl,-z,noexecstack$/;"	m
LDFLAGS	secp256k1/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS_FOR_BUILD	secp256k1/Makefile	/^LDFLAGS_FOR_BUILD = $/;"	m
LDLIBS	Makefile	/^LDLIBS := -lprotobuf-c -lgmp -lsqlite3 $(COVFLAGS)  -L \/usr\/lib -lpul -lboost_thread -lboost_system -lm$/;"	m
LDLIBS	ccan/ccan/io/benchmarks/Makefile	/^LDLIBS:=-lrt$/;"	m
LDLIBS	ccan/ccan/tal/benchmark/Makefile	/^LDLIBS=-lrt$/;"	m
LDLIBS	ccan/ccan/timer/benchmarks/Makefile	/^LDLIBS:=-lrt$/;"	m
LE	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	66;"	d	file:
LE16_TO_CPU	ccan/ccan/endian/endian.h	164;"	d
LE16_TO_CPU	ccan/ccan/endian/endian.h	172;"	d
LE32_TO_CPU	ccan/ccan/endian/endian.h	158;"	d
LE32_TO_CPU	ccan/ccan/endian/endian.h	171;"	d
LE64_TO_CPU	ccan/ccan/endian/endian.h	152;"	d
LE64_TO_CPU	ccan/ccan/endian/endian.h	170;"	d
LENGTH	ccan/ccan/tal/tal.c	/^	LENGTH = 0x00515300$/;"	e	enum:prop_type	file:
LETTER_WIDTH	test/test_protocol.c	30;"	d	file:
LIBBASE58_H	bitcoin/libbase58/libbase58.h	2;"	d
LIBBASE58_HEADERS	bitcoin/Makefile	/^LIBBASE58_HEADERS := bitcoin\/libbase58\/libbase58.h$/;"	m
LIBBASE58_OBJS	bitcoin/Makefile	/^LIBBASE58_OBJS := bitcoin\/libbase58.o$/;"	m
LIBBASE58_SRC	bitcoin/Makefile	/^LIBBASE58_SRC := bitcoin\/libbase58\/base58.c$/;"	m
LIBOBJS	libsodium/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	libsodium/dist-build/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	libsodium/msvc-scripts/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	libsodium/src/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	libsodium/src/libsodium/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	libsodium/src/libsodium/include/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	libsodium/test/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	libsodium/test/default/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	secp256k1/Makefile	/^LIBOBJS = $/;"	m
LIBS	libsodium/Makefile	/^LIBS = $/;"	m
LIBS	libsodium/dist-build/Makefile	/^LIBS = $/;"	m
LIBS	libsodium/msvc-scripts/Makefile	/^LIBS = $/;"	m
LIBS	libsodium/src/Makefile	/^LIBS = $/;"	m
LIBS	libsodium/src/libsodium/Makefile	/^LIBS = $/;"	m
LIBS	libsodium/src/libsodium/include/Makefile	/^LIBS = $/;"	m
LIBS	libsodium/test/Makefile	/^LIBS = $/;"	m
LIBS	libsodium/test/default/Makefile	/^LIBS = $/;"	m
LIBS	secp256k1/Makefile	/^LIBS = $/;"	m
LIBSECP256K1_CONFIG_H	secp256k1/src/libsecp256k1-config.h	6;"	d
LIBSODIUM_HEADERS	Makefile	/^LIBSODIUM_HEADERS := libsodium\/src\/libsodium\/include\/sodium.h$/;"	m
LIBTOOL	libsodium/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	libsodium/dist-build/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	libsodium/msvc-scripts/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	libsodium/src/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	libsodium/src/libsodium/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	libsodium/src/libsodium/include/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	libsodium/test/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	libsodium/test/default/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	secp256k1/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL_DEPS	libsodium/Makefile	/^LIBTOOL_DEPS = build-aux\/ltmain.sh$/;"	m
LIBTOOL_DEPS	libsodium/dist-build/Makefile	/^LIBTOOL_DEPS = build-aux\/ltmain.sh$/;"	m
LIBTOOL_DEPS	libsodium/msvc-scripts/Makefile	/^LIBTOOL_DEPS = build-aux\/ltmain.sh$/;"	m
LIBTOOL_DEPS	libsodium/src/Makefile	/^LIBTOOL_DEPS = build-aux\/ltmain.sh$/;"	m
LIBTOOL_DEPS	libsodium/src/libsodium/Makefile	/^LIBTOOL_DEPS = build-aux\/ltmain.sh$/;"	m
LIBTOOL_DEPS	libsodium/src/libsodium/include/Makefile	/^LIBTOOL_DEPS = build-aux\/ltmain.sh$/;"	m
LIBTOOL_DEPS	libsodium/test/Makefile	/^LIBTOOL_DEPS = build-aux\/ltmain.sh$/;"	m
LIBTOOL_DEPS	libsodium/test/default/Makefile	/^LIBTOOL_DEPS = build-aux\/ltmain.sh$/;"	m
LIBTOOL_EXTRA_FLAGS	libsodium/Makefile	/^LIBTOOL_EXTRA_FLAGS =  -version-info 19:0:1$/;"	m
LIBTOOL_EXTRA_FLAGS	libsodium/dist-build/Makefile	/^LIBTOOL_EXTRA_FLAGS =  -version-info 19:0:1$/;"	m
LIBTOOL_EXTRA_FLAGS	libsodium/msvc-scripts/Makefile	/^LIBTOOL_EXTRA_FLAGS =  -version-info 19:0:1$/;"	m
LIBTOOL_EXTRA_FLAGS	libsodium/src/Makefile	/^LIBTOOL_EXTRA_FLAGS =  -version-info 19:0:1$/;"	m
LIBTOOL_EXTRA_FLAGS	libsodium/src/libsodium/Makefile	/^LIBTOOL_EXTRA_FLAGS =  -version-info 19:0:1$/;"	m
LIBTOOL_EXTRA_FLAGS	libsodium/src/libsodium/include/Makefile	/^LIBTOOL_EXTRA_FLAGS =  -version-info 19:0:1$/;"	m
LIBTOOL_EXTRA_FLAGS	libsodium/test/Makefile	/^LIBTOOL_EXTRA_FLAGS =  -version-info 19:0:1$/;"	m
LIBTOOL_EXTRA_FLAGS	libsodium/test/default/Makefile	/^LIBTOOL_EXTRA_FLAGS =  -version-info 19:0:1$/;"	m
LIGHTNINGD_CONFIG	tests/utils.py	/^LIGHTNINGD_CONFIG = {$/;"	v
LIGHTNINGD_EXTERNAL_HEADERS	lightningd/Makefile	/^LIGHTNINGD_EXTERNAL_HEADERS =			\\$/;"	m
LIGHTNINGD_GOSSIP_ALLHEADERS_NOGEN	lightningd/gossip/Makefile	/^LIGHTNINGD_GOSSIP_ALLHEADERS_NOGEN := $(filter-out lightningd\/gossip\/gen_%, $(LIGHTNINGD_GOSSIP_CLIENT_HEADERS) $(LIGHTNINGD_GOSSIP_HEADERS))$/;"	m
LIGHTNINGD_GOSSIP_ALLSRC_NOGEN	lightningd/gossip/Makefile	/^LIGHTNINGD_GOSSIP_ALLSRC_NOGEN := $(filter-out lightningd\/gossip\/gen_%, $(LIGHTNINGD_GOSSIP_CLIENT_SRC) $(LIGHTNINGD_GOSSIP_SRC))$/;"	m
LIGHTNINGD_GOSSIP_CONTROL_HEADERS	lightningd/gossip/Makefile	/^LIGHTNINGD_GOSSIP_CONTROL_HEADERS := lightningd\/gossip\/gen_gossip_control_wire.h \\$/;"	m
LIGHTNINGD_GOSSIP_CONTROL_OBJS	lightningd/gossip/Makefile	/^LIGHTNINGD_GOSSIP_CONTROL_OBJS := $(LIGHTNINGD_GOSSIP_CONTROL_SRC:.c=.o)$/;"	m
LIGHTNINGD_GOSSIP_CONTROL_SRC	lightningd/gossip/Makefile	/^LIGHTNINGD_GOSSIP_CONTROL_SRC := lightningd\/gossip\/gen_gossip_control_wire.c \\$/;"	m
LIGHTNINGD_GOSSIP_HEADERS	lightningd/gossip/Makefile	/^LIGHTNINGD_GOSSIP_HEADERS := lightningd\/gossip\/gen_gossip_control_wire.h \\$/;"	m
LIGHTNINGD_GOSSIP_LEGACY_HEADERS	lightningd/gossip/Makefile	/^LIGHTNINGD_GOSSIP_LEGACY_HEADERS := daemon\/routing.h daemon\/broadcast.h \\$/;"	m
LIGHTNINGD_GOSSIP_OBJS	lightningd/gossip/Makefile	/^LIGHTNINGD_GOSSIP_OBJS := $(LIGHTNINGD_GOSSIP_SRC:.c=.o)$/;"	m
LIGHTNINGD_GOSSIP_SRC	lightningd/gossip/Makefile	/^LIGHTNINGD_GOSSIP_SRC := lightningd\/gossip\/gossip.c	\\$/;"	m
LIGHTNINGD_HANDSHAKE_CONTROL_HEADERS	lightningd/handshake/Makefile	/^LIGHTNINGD_HANDSHAKE_CONTROL_HEADERS := $(LIGHTNINGD_HANDSHAKE_HEADERS)$/;"	m
LIGHTNINGD_HANDSHAKE_CONTROL_OBJS	lightningd/handshake/Makefile	/^LIGHTNINGD_HANDSHAKE_CONTROL_OBJS := $(LIGHTNINGD_HANDSHAKE_CONTROL_SRC:.c=.o)$/;"	m
LIGHTNINGD_HANDSHAKE_CONTROL_SRC	lightningd/handshake/Makefile	/^LIGHTNINGD_HANDSHAKE_CONTROL_SRC := $(LIGHTNINGD_HANDSHAKE_HEADERS:.h=.c)$/;"	m
LIGHTNINGD_HANDSHAKE_GEN_SRC	lightningd/handshake/Makefile	/^LIGHTNINGD_HANDSHAKE_GEN_SRC := $(filter lightningd\/handshake\/gen_%, $(LIGHTNINGD_HANDSHAKE_SRC) $(LIGHTNINGD_HANDSHAKE_CONTROL_SRC))$/;"	m
LIGHTNINGD_HANDSHAKE_HEADERS	lightningd/handshake/Makefile	/^LIGHTNINGD_HANDSHAKE_HEADERS :=					\\$/;"	m
LIGHTNINGD_HANDSHAKE_OBJS	lightningd/handshake/Makefile	/^LIGHTNINGD_HANDSHAKE_OBJS := $(LIGHTNINGD_HANDSHAKE_SRC:.c=.o) $(LIGHTNINGD_HANDSHAKE_GEN_SRC:.c=.o)$/;"	m
LIGHTNINGD_HANDSHAKE_OBJS	lightningd/handshake/Makefile	/^LIGHTNINGD_HANDSHAKE_OBJS := $(LIGHTNINGD_HANDSHAKE_SRC:.c=.o)$/;"	m
LIGHTNINGD_HANDSHAKE_SRC	lightningd/handshake/Makefile	/^LIGHTNINGD_HANDSHAKE_SRC := lightningd\/handshake\/handshake.c	\\$/;"	m
LIGHTNINGD_HANDSHAKE_SRC_NOGEN	lightningd/handshake/Makefile	/^LIGHTNINGD_HANDSHAKE_SRC_NOGEN := $(filter-out lightningd\/handshake\/gen_%, $(LIGHTNINGD_HANDSHAKE_SRC))$/;"	m
LIGHTNINGD_HANDSHAKE_TEST_OBJS	lightningd/handshake/test/Makefile	/^LIGHTNINGD_HANDSHAKE_TEST_OBJS := $(LIGHTNINGD_HANDSHAKE_TEST_SRC:.c=.o)$/;"	m
LIGHTNINGD_HANDSHAKE_TEST_PROGRAMS	lightningd/handshake/test/Makefile	/^LIGHTNINGD_HANDSHAKE_TEST_PROGRAMS := $(LIGHTNINGD_HANDSHAKE_TEST_OBJS:.o=)$/;"	m
LIGHTNINGD_HANDSHAKE_TEST_SRC	lightningd/handshake/test/Makefile	/^LIGHTNINGD_HANDSHAKE_TEST_SRC := $(wildcard lightningd\/handshake\/test\/run-*.c)$/;"	m
LIGHTNINGD_HEADERS	lightningd/Makefile	/^LIGHTNINGD_HEADERS = $(LIGHTNINGD_HEADERS_NOGEN) $(LIGHTNINGD_HEADERS_GEN) $(LIGHTNINGD_EXTERNAL_HEADERS)$/;"	m
LIGHTNINGD_HEADERS_GEN	lightningd/Makefile	/^LIGHTNINGD_HEADERS_GEN =			\\$/;"	m
LIGHTNINGD_HEADERS_NOGEN	lightningd/Makefile	/^LIGHTNINGD_HEADERS_NOGEN =			\\$/;"	m
LIGHTNINGD_HSM_ALLHEADERS_NOGEN	lightningd/hsm/Makefile	/^LIGHTNINGD_HSM_ALLHEADERS_NOGEN := $(filter-out lightningd\/hsm\/gen_%, $(LIGHTNINGD_HSM_CLIENT_HEADERS) $(LIGHTNINGD_HSM_HEADERS))$/;"	m
LIGHTNINGD_HSM_ALLSRC_NOGEN	lightningd/hsm/Makefile	/^LIGHTNINGD_HSM_ALLSRC_NOGEN := $(filter-out lightningd\/hsm\/gen_%, $(LIGHTNINGD_HSM_CLIENT_SRC) $(LIGHTNINGD_HSM_SRC))$/;"	m
LIGHTNINGD_HSM_CLIENT_HEADERS	lightningd/hsm/Makefile	/^LIGHTNINGD_HSM_CLIENT_HEADERS := lightningd\/hsm\/client.h$/;"	m
LIGHTNINGD_HSM_CLIENT_OBJS	lightningd/hsm/Makefile	/^LIGHTNINGD_HSM_CLIENT_OBJS := $(LIGHTNINGD_HSM_CLIENT_SRC:.c=.o)$/;"	m
LIGHTNINGD_HSM_CLIENT_SRC	lightningd/hsm/Makefile	/^LIGHTNINGD_HSM_CLIENT_SRC := lightningd\/hsm\/client.c lightningd\/hsm\/gen_hsm_client_wire.c$/;"	m
LIGHTNINGD_HSM_CONTROL_HEADERS	lightningd/hsm/Makefile	/^LIGHTNINGD_HSM_CONTROL_HEADERS := lightningd\/hsm\/gen_hsm_control_wire.h \\$/;"	m
LIGHTNINGD_HSM_CONTROL_OBJS	lightningd/hsm/Makefile	/^LIGHTNINGD_HSM_CONTROL_OBJS := $(LIGHTNINGD_HSM_CONTROL_SRC:.c=.o)$/;"	m
LIGHTNINGD_HSM_CONTROL_SRC	lightningd/hsm/Makefile	/^LIGHTNINGD_HSM_CONTROL_SRC := lightningd\/hsm\/gen_hsm_control_wire.c \\$/;"	m
LIGHTNINGD_HSM_HEADERS	lightningd/hsm/Makefile	/^LIGHTNINGD_HSM_HEADERS := lightningd\/hsm\/gen_hsm_client_wire.h	\\$/;"	m
LIGHTNINGD_HSM_OBJS	lightningd/hsm/Makefile	/^LIGHTNINGD_HSM_OBJS := $(LIGHTNINGD_HSM_SRC:.c=.o)$/;"	m
LIGHTNINGD_HSM_SRC	lightningd/hsm/Makefile	/^LIGHTNINGD_HSM_SRC := lightningd\/hsm\/hsm.c	\\$/;"	m
LIGHTNINGD_JSMN_HEADERS	lightningd/Makefile	/^LIGHTNINGD_JSMN_HEADERS := daemon\/jsmn\/jsmn.h$/;"	m
LIGHTNINGD_JSMN_OBJS	lightningd/Makefile	/^LIGHTNINGD_JSMN_OBJS := daemon\/jsmn.o$/;"	m
LIGHTNINGD_LIB_HEADERS	lightningd/Makefile	/^LIGHTNINGD_LIB_HEADERS := $(LIGHTNINGD_LIB_SRC:.c=.h)$/;"	m
LIGHTNINGD_LIB_OBJS	lightningd/Makefile	/^LIGHTNINGD_LIB_OBJS := $(LIGHTNINGD_LIB_SRC:.c=.o)$/;"	m
LIGHTNINGD_LIB_SRC	lightningd/Makefile	/^LIGHTNINGD_LIB_SRC :=				\\$/;"	m
LIGHTNINGD_OBJS	lightningd/Makefile	/^LIGHTNINGD_OBJS := $(LIGHTNINGD_SRC:.c=.o)$/;"	m
LIGHTNINGD_OLD_HEADERS	lightningd/Makefile	/^LIGHTNINGD_OLD_HEADERS := $(LIGHTNINGD_OLD_SRC:.c=.h)$/;"	m
LIGHTNINGD_OLD_LIB_HEADERS	lightningd/Makefile	/^LIGHTNINGD_OLD_LIB_HEADERS := $(LIGHTNINGD_OLD_LIB_SRC:.c=.h)$/;"	m
LIGHTNINGD_OLD_LIB_OBJS	lightningd/Makefile	/^LIGHTNINGD_OLD_LIB_OBJS := $(LIGHTNINGD_OLD_LIB_SRC:.c=.o)$/;"	m
LIGHTNINGD_OLD_LIB_SRC	lightningd/Makefile	/^LIGHTNINGD_OLD_LIB_SRC :=			\\$/;"	m
LIGHTNINGD_OLD_OBJS	lightningd/Makefile	/^LIGHTNINGD_OLD_OBJS := $(LIGHTNINGD_OLD_SRC:.c=.o)$/;"	m
LIGHTNINGD_OLD_SRC	lightningd/Makefile	/^LIGHTNINGD_OLD_SRC :=				\\$/;"	m
LIGHTNINGD_SRC	lightningd/Makefile	/^LIGHTNINGD_SRC :=				\\$/;"	m
LIGHTNINGD_TEST_OBJS	lightningd/test/Makefile	/^LIGHTNINGD_TEST_OBJS := $(LIGHTNINGD_TEST_SRC:.c=.o)$/;"	m
LIGHTNINGD_TEST_PROGRAMS	lightningd/test/Makefile	/^LIGHTNINGD_TEST_PROGRAMS := $(LIGHTNINGD_TEST_OBJS:.o=)$/;"	m
LIGHTNINGD_TEST_SRC	lightningd/test/Makefile	/^LIGHTNINGD_TEST_SRC := $(wildcard lightningd\/test\/run-*.c)$/;"	m
LIGHTNING_BITCOIN_ADDRESS_H	bitcoin/address.h	2;"	d
LIGHTNING_BITCOIN_BASE58_H	bitcoin/base58.h	2;"	d
LIGHTNING_BITCOIN_BLOCK_H	bitcoin/block.h	2;"	d
LIGHTNING_BITCOIN_LOCKTIME_H	bitcoin/locktime.h	2;"	d
LIGHTNING_BITCOIN_PREIMAGE_H	bitcoin/preimage.h	2;"	d
LIGHTNING_BITCOIN_PRIVKEY_H	bitcoin/privkey.h	2;"	d
LIGHTNING_BITCOIN_PUBKEY_H	bitcoin/pubkey.h	2;"	d
LIGHTNING_BITCOIN_PULLPUSH_H	bitcoin/pullpush.h	2;"	d
LIGHTNING_BITCOIN_SCRIPT_H	bitcoin/script.h	2;"	d
LIGHTNING_BITCOIN_SHADOUBLE_H	bitcoin/shadouble.h	2;"	d
LIGHTNING_BITCOIN_SIGNATURE_H	bitcoin/signature.h	2;"	d
LIGHTNING_BITCOIN_TX_H	bitcoin/tx.h	2;"	d
LIGHTNING_BITCOIN_VARINT_H	bitcoin/varint.h	2;"	d
LIGHTNING_CLOSE_TX_H	close_tx.h	2;"	d
LIGHTNING_COMMIT_TX_H	daemon/commit_tx.h	2;"	d
LIGHTNING_DAEMON_BITCOIND_H	daemon/bitcoind.h	2;"	d
LIGHTNING_DAEMON_BROADCAST_H	daemon/broadcast.h	2;"	d
LIGHTNING_DAEMON_CHAINTOPOLOGY_H	daemon/chaintopology.h	2;"	d
LIGHTNING_DAEMON_CHANNEL_H	daemon/channel.h	2;"	d
LIGHTNING_DAEMON_CONFIGDIR_H	daemon/configdir.h	2;"	d
LIGHTNING_DAEMON_CRYPTOPKT_H	daemon/cryptopkt.h	2;"	d
LIGHTNING_DAEMON_DB_H	daemon/db.h	2;"	d
LIGHTNING_DAEMON_FAILURE_H	daemon/failure.h	2;"	d
LIGHTNING_DAEMON_FEECHANGE_H	daemon/feechange.h	2;"	d
LIGHTNING_DAEMON_FEECHANGE_STATE_H	daemon/feechange_state.h	2;"	d
LIGHTNING_DAEMON_HTLC_H	daemon/htlc.h	2;"	d
LIGHTNING_DAEMON_HTLC_STATE_H	daemon/htlc_state.h	2;"	d
LIGHTNING_DAEMON_INVOICE_H	daemon/invoice.h	2;"	d
LIGHTNING_DAEMON_IRC_ANNOUNCE_H	daemon/irc_announce.h	2;"	d
LIGHTNING_DAEMON_JSONRPC_H	daemon/jsonrpc.h	2;"	d
LIGHTNING_DAEMON_JSON_H	daemon/json.h	2;"	d
LIGHTNING_DAEMON_LIGHTNING_H	daemon/lightningd.h	2;"	d
LIGHTNING_DAEMON_LOG_H	daemon/log.h	2;"	d
LIGHTNING_DAEMON_NETADDR_H	daemon/netaddr.h	2;"	d
LIGHTNING_DAEMON_OPTIONS_H	daemon/options.h	2;"	d
LIGHTNING_DAEMON_OPT_TIME_H	daemon/opt_time.h	2;"	d
LIGHTNING_DAEMON_OUTPUT_TO_HTLC_H	daemon/output_to_htlc.h	2;"	d
LIGHTNING_DAEMON_P2P_ANNOUNCE_H	daemon/p2p_announce.h	2;"	d
LIGHTNING_DAEMON_PACKETS_H	daemon/packets.h	2;"	d
LIGHTNING_DAEMON_PAY_H	daemon/pay.h	2;"	d
LIGHTNING_DAEMON_PEER_H	daemon/peer.h	2;"	d
LIGHTNING_DAEMON_PSEUDORAND_H	daemon/pseudorand.h	2;"	d
LIGHTNING_DAEMON_ROUTING_H	daemon/routing.h	2;"	d
LIGHTNING_DAEMON_SECRETS_H	daemon/secrets.h	2;"	d
LIGHTNING_DAEMON_SPHINX_H	daemon/sphinx.h	2;"	d
LIGHTNING_DAEMON_STATE_H	daemon/state.h	2;"	d
LIGHTNING_DAEMON_TIMEOUT_H	daemon/timeout.h	2;"	d
LIGHTNING_DAEMON_WALLET_H	daemon/wallet.h	2;"	d
LIGHTNING_DAEMON_WATCH_H	daemon/watch.h	2;"	d
LIGHTNING_FIND_P2SH_OUT_H	find_p2sh_out.h	2;"	d
LIGHTNING_IRC_H	irc.h	2;"	d
LIGHTNING_LIGHTNINGD_CHANNEL_CONFIG_H	lightningd/channel_config.h	2;"	d
LIGHTNING_LIGHTNINGD_COMMIT_TX_H	lightningd/commit_tx.h	2;"	d
LIGHTNING_LIGHTNINGD_CRYPTOMSG_H	lightningd/cryptomsg.h	2;"	d
LIGHTNING_LIGHTNINGD_FUNDING_TX_H	lightningd/funding_tx.h	2;"	d
LIGHTNING_LIGHTNINGD_GOSSIP_CONTROL_H	lightningd/gossip_control.h	2;"	d
LIGHTNING_LIGHTNINGD_GOSSIP_GEN_GOSSIP_CONTROL_WIRE_H	lightningd/gossip/gen_gossip_control_wire.h	2;"	d
LIGHTNING_LIGHTNINGD_GOSSIP_GEN_GOSSIP_STATUS_WIRE_H	lightningd/gossip/gen_gossip_status_wire.h	2;"	d
LIGHTNING_LIGHTNINGD_HANDSHAKE_GEN_HANDSHAKE_CONTROL_WIRE_H	lightningd/handshake/gen_handshake_control_wire.h	2;"	d
LIGHTNING_LIGHTNINGD_HANDSHAKE_GEN_HANDSHAKE_STATUS_WIRE_H	lightningd/handshake/gen_handshake_status_wire.h	2;"	d
LIGHTNING_LIGHTNINGD_HSM_CONTROL_H	lightningd/hsm_control.h	2;"	d
LIGHTNING_LIGHTNINGD_HSM_GEN_HSM_CLIENT_WIRE_H	lightningd/hsm/gen_hsm_client_wire.h	2;"	d
LIGHTNING_LIGHTNINGD_HSM_GEN_HSM_CONTROL_WIRE_H	lightningd/hsm/gen_hsm_control_wire.h	2;"	d
LIGHTNING_LIGHTNINGD_HSM_GEN_HSM_STATUS_WIRE_H	lightningd/hsm/gen_hsm_status_wire.h	2;"	d
LIGHTNING_LIGHTNINGD_HSM_H	lightningd/hsm/client.h	3;"	d
LIGHTNING_LIGHTNINGD_HTLC_TX_H	lightningd/htlc_tx.h	2;"	d
LIGHTNING_LIGHTNINGD_KEY_DERIVE_H	lightningd/key_derive.h	2;"	d
LIGHTNING_LIGHTNINGD_LIGHTNINGD_H	lightningd/lightningd.h	2;"	d
LIGHTNING_LIGHTNINGD_PEER_CONTROL_H	lightningd/peer_control.h	2;"	d
LIGHTNING_LIGHTNINGD_SUBDAEMON_H	lightningd/subdaemon.h	2;"	d
LIGHTNING_NAMES_H	daemon/names.h	2;"	d
LIGHTNING_OPT_BITS_H	opt_bits.h	2;"	d
LIGHTNING_OVERFLOWS_H	overflows.h	2;"	d
LIGHTNING_PERMUTE_TX_H	permute_tx.h	2;"	d
LIGHTNING_PROTOBUF_CONVERT_H	protobuf_convert.h	2;"	d
LIGHTNING_REMOVE_DUST_H	remove_dust.h	2;"	d
LIGHTNING_STATE_TYPES_H	daemon/state_types.h	2;"	d
LIGHTNING_STATUS_H	status.h	2;"	d
LIGHTNING_TYPE_TO_STRING_H	type_to_string.h	2;"	d
LIGHTNING_UTILS_H	utils.h	2;"	d
LIGHTNING_VERSION_H	version.h	2;"	d
LIGHTNING_WIRE_GEN_ONION_WIRE_H	wire/gen_onion_wire.h	2;"	d
LIGHTNING_WIRE_GEN_PEER_WIRE_H	wire/gen_peer_wire.h	2;"	d
LIGHTNING_WIRE_ONION_DEFS_H	wire/onion_defs.h	3;"	d
LIGHTNING_WIRE_WIRE_H	wire/wire.h	2;"	d
LIGHTNING_WIRE_WIRE_IO_H	wire/wire_io.h	2;"	d
LIGHTNING_WIRE_WIRE_SYNC_H	wire/wire_sync.h	2;"	d
LINE_HEIGHT	test/test_protocol.c	27;"	d	file:
LINK	libsodium/src/libsodium/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	libsodium/test/default/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	secp256k1/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LIPO	libsodium/Makefile	/^LIPO = $/;"	m
LIPO	libsodium/dist-build/Makefile	/^LIPO = $/;"	m
LIPO	libsodium/msvc-scripts/Makefile	/^LIPO = $/;"	m
LIPO	libsodium/src/Makefile	/^LIPO = $/;"	m
LIPO	libsodium/src/libsodium/Makefile	/^LIPO = $/;"	m
LIPO	libsodium/src/libsodium/include/Makefile	/^LIPO = $/;"	m
LIPO	libsodium/test/Makefile	/^LIPO = $/;"	m
LIPO	libsodium/test/default/Makefile	/^LIPO = $/;"	m
LIPO	secp256k1/Makefile	/^LIPO = $/;"	m
LIST_HEAD	ccan/ccan/list/list.h	129;"	d
LIST_HEAD_INIT	ccan/ccan/list/list.h	114;"	d
LIST_LOC	ccan/ccan/list/list.h	93;"	d
LN_S	libsodium/Makefile	/^LN_S = ln -s$/;"	m
LN_S	libsodium/dist-build/Makefile	/^LN_S = ln -s$/;"	m
LN_S	libsodium/msvc-scripts/Makefile	/^LN_S = ln -s$/;"	m
LN_S	libsodium/src/Makefile	/^LN_S = ln -s$/;"	m
LN_S	libsodium/src/libsodium/Makefile	/^LN_S = ln -s$/;"	m
LN_S	libsodium/src/libsodium/include/Makefile	/^LN_S = ln -s$/;"	m
LN_S	libsodium/test/Makefile	/^LN_S = ln -s$/;"	m
LN_S	libsodium/test/default/Makefile	/^LN_S = ln -s$/;"	m
LN_S	secp256k1/Makefile	/^LN_S = ln -s$/;"	m
LO	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	15;"	d
LOAD	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	11;"	d
LOAD	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	30;"	d	file:
LOAD128	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	5;"	d
LOAD32_BE	libsodium/src/libsodium/include/sodium/private/common.h	101;"	d
LOAD32_LE	libsodium/src/libsodium/include/sodium/private/common.h	47;"	d
LOAD64_BE	libsodium/src/libsodium/include/sodium/private/common.h	80;"	d
LOAD64_LE	libsodium/src/libsodium/include/sodium/private/common.h	8;"	d
LOADU	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	14;"	d
LOADU	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-sse41.h	5;"	d
LOADU	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-ssse3.h	5;"	d
LOADU128	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	8;"	d
LOADU64	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	/^static inline uint64_t LOADU64(const void *p) {$/;"	f
LOAD_ALIGNED	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	31;"	d	file:
LOAD_MSG_0_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	17;"	d
LOAD_MSG_0_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	17;"	d
LOAD_MSG_0_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	18;"	d
LOAD_MSG_0_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	25;"	d
LOAD_MSG_0_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	19;"	d
LOAD_MSG_0_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	33;"	d
LOAD_MSG_0_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	20;"	d
LOAD_MSG_0_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	41;"	d
LOAD_MSG_10_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	57;"	d
LOAD_MSG_10_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	337;"	d
LOAD_MSG_10_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	58;"	d
LOAD_MSG_10_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	345;"	d
LOAD_MSG_10_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	59;"	d
LOAD_MSG_10_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	353;"	d
LOAD_MSG_10_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	60;"	d
LOAD_MSG_10_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	361;"	d
LOAD_MSG_11_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	61;"	d
LOAD_MSG_11_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	369;"	d
LOAD_MSG_11_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	62;"	d
LOAD_MSG_11_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	377;"	d
LOAD_MSG_11_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	63;"	d
LOAD_MSG_11_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	385;"	d
LOAD_MSG_11_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	64;"	d
LOAD_MSG_11_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	393;"	d
LOAD_MSG_1_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	21;"	d
LOAD_MSG_1_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	49;"	d
LOAD_MSG_1_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	22;"	d
LOAD_MSG_1_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	57;"	d
LOAD_MSG_1_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	23;"	d
LOAD_MSG_1_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	65;"	d
LOAD_MSG_1_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	24;"	d
LOAD_MSG_1_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	73;"	d
LOAD_MSG_2_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	25;"	d
LOAD_MSG_2_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	81;"	d
LOAD_MSG_2_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	26;"	d
LOAD_MSG_2_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	89;"	d
LOAD_MSG_2_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	27;"	d
LOAD_MSG_2_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	97;"	d
LOAD_MSG_2_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	28;"	d
LOAD_MSG_2_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	105;"	d
LOAD_MSG_3_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	29;"	d
LOAD_MSG_3_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	113;"	d
LOAD_MSG_3_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	30;"	d
LOAD_MSG_3_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	121;"	d
LOAD_MSG_3_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	31;"	d
LOAD_MSG_3_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	129;"	d
LOAD_MSG_3_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	32;"	d
LOAD_MSG_3_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	137;"	d
LOAD_MSG_4_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	33;"	d
LOAD_MSG_4_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	145;"	d
LOAD_MSG_4_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	34;"	d
LOAD_MSG_4_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	153;"	d
LOAD_MSG_4_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	35;"	d
LOAD_MSG_4_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	161;"	d
LOAD_MSG_4_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	36;"	d
LOAD_MSG_4_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	169;"	d
LOAD_MSG_5_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	37;"	d
LOAD_MSG_5_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	177;"	d
LOAD_MSG_5_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	38;"	d
LOAD_MSG_5_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	185;"	d
LOAD_MSG_5_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	39;"	d
LOAD_MSG_5_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	193;"	d
LOAD_MSG_5_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	40;"	d
LOAD_MSG_5_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	201;"	d
LOAD_MSG_6_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	41;"	d
LOAD_MSG_6_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	209;"	d
LOAD_MSG_6_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	42;"	d
LOAD_MSG_6_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	217;"	d
LOAD_MSG_6_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	43;"	d
LOAD_MSG_6_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	225;"	d
LOAD_MSG_6_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	44;"	d
LOAD_MSG_6_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	233;"	d
LOAD_MSG_7_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	45;"	d
LOAD_MSG_7_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	241;"	d
LOAD_MSG_7_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	46;"	d
LOAD_MSG_7_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	249;"	d
LOAD_MSG_7_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	47;"	d
LOAD_MSG_7_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	257;"	d
LOAD_MSG_7_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	48;"	d
LOAD_MSG_7_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	265;"	d
LOAD_MSG_8_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	49;"	d
LOAD_MSG_8_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	273;"	d
LOAD_MSG_8_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	50;"	d
LOAD_MSG_8_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	281;"	d
LOAD_MSG_8_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	51;"	d
LOAD_MSG_8_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	289;"	d
LOAD_MSG_8_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	52;"	d
LOAD_MSG_8_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	297;"	d
LOAD_MSG_9_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	53;"	d
LOAD_MSG_9_1	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	305;"	d
LOAD_MSG_9_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	54;"	d
LOAD_MSG_9_2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	313;"	d
LOAD_MSG_9_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	55;"	d
LOAD_MSG_9_3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	321;"	d
LOAD_MSG_9_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	56;"	d
LOAD_MSG_9_4	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	329;"	d
LOADx	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	424;"	d	file:
LOCAL	daemon/htlc.h	/^	LOCAL,$/;"	e	enum:side
LOCAL	test/test_protocol.c	78;"	d	file:
LOCAL_	test/test_protocol.c	74;"	d	file:
LOCKTIME__INIT	lightning.pb-c.h	125;"	d
LOCKTIME__LOCKTIME_BLOCKS	lightning.pb-c.h	/^  LOCKTIME__LOCKTIME_BLOCKS = 2,$/;"	e	enum:__anon40
LOCKTIME__LOCKTIME_SECONDS	lightning.pb-c.h	/^  LOCKTIME__LOCKTIME_SECONDS = 1,$/;"	e	enum:__anon40
LOCKTIME__LOCKTIME__NOT_SET	lightning.pb-c.h	/^  LOCKTIME__LOCKTIME__NOT_SET = 0,$/;"	e	enum:__anon40
LOG_BROKEN	daemon/log.h	/^	LOG_BROKEN$/;"	e	enum:log_level
LOG_COMPILE	libsodium/test/default/Makefile	/^LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)$/;"	m
LOG_COMPILE	secp256k1/Makefile	/^LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)$/;"	m
LOG_DBG	daemon/log.h	/^	LOG_DBG,$/;"	e	enum:log_level
LOG_DRIVER	libsodium/test/default/Makefile	/^LOG_DRIVER = $(SHELL) $(top_srcdir)\/build-aux\/test-driver$/;"	m
LOG_DRIVER	secp256k1/Makefile	/^LOG_DRIVER = $(SHELL) $(top_srcdir)\/build-aux\/test-driver$/;"	m
LOG_INFORM	daemon/log.h	/^	LOG_INFORM,$/;"	e	enum:log_level
LOG_IO	daemon/log.h	/^	LOG_IO,$/;"	e	enum:log_level
LOG_UNUSUAL	daemon/log.h	/^	LOG_UNUSUAL,$/;"	e	enum:log_level
LOOPACCUMDRMD128	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	736;"	d	file:
LOOPACCUMDRND128	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	717;"	d	file:
LOOPDRMD128	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	758;"	d	file:
LOOPDRND128	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	726;"	d	file:
LOOPRMD128	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	588;"	d	file:
LOOPRND128	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	577;"	d	file:
LOOPS	ccan/ccan/tal/benchmark/samba-allocs.c	252;"	d	file:
LOOPS	ccan/ccan/tal/benchmark/speed.c	32;"	d	file:
LT	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	65;"	d	file:
LTCCASCOMPILE	secp256k1/Makefile	/^LTCCASCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	libsodium/src/libsodium/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	libsodium/test/default/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	secp256k1/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCPPASCOMPILE	libsodium/src/libsodium/Makefile	/^LTCPPASCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \\$/;"	m
LTLIBOBJS	libsodium/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	libsodium/dist-build/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	libsodium/msvc-scripts/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	libsodium/src/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	libsodium/src/libsodium/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	libsodium/src/libsodium/include/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	libsodium/test/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	libsodium/test/default/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	secp256k1/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBRARIES	libsodium/src/libsodium/Makefile	/^LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)$/;"	m
LTLIBRARIES	secp256k1/Makefile	/^LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)$/;"	m
LT_OBJDIR	secp256k1/src/libsecp256k1-config.h	66;"	d
LT_SYS_LIBRARY_PATH	libsodium/Makefile	/^LT_SYS_LIBRARY_PATH = $/;"	m
LT_SYS_LIBRARY_PATH	libsodium/dist-build/Makefile	/^LT_SYS_LIBRARY_PATH = $/;"	m
LT_SYS_LIBRARY_PATH	libsodium/msvc-scripts/Makefile	/^LT_SYS_LIBRARY_PATH = $/;"	m
LT_SYS_LIBRARY_PATH	libsodium/src/Makefile	/^LT_SYS_LIBRARY_PATH = $/;"	m
LT_SYS_LIBRARY_PATH	libsodium/src/libsodium/Makefile	/^LT_SYS_LIBRARY_PATH = $/;"	m
LT_SYS_LIBRARY_PATH	libsodium/src/libsodium/include/Makefile	/^LT_SYS_LIBRARY_PATH = $/;"	m
LT_SYS_LIBRARY_PATH	libsodium/test/Makefile	/^LT_SYS_LIBRARY_PATH = $/;"	m
LT_SYS_LIBRARY_PATH	libsodium/test/default/Makefile	/^LT_SYS_LIBRARY_PATH = $/;"	m
LT_SYS_LIBRARY_PATH	secp256k1/Makefile	/^LT_SYS_LIBRARY_PATH = $/;"	m
LegacyLightningD	tests/utils.py	/^class LegacyLightningD(LightningD):$/;"	c
LegacyLightningDTests	tests/test_lightningd.py	/^class LegacyLightningDTests(BaseLightningDTests):$/;"	c
LegacyLightningRpc	contrib/pylightning/lightning/lightning.py	/^class LegacyLightningRpc(UnixDomainSocketRpc):$/;"	c
LightningD	tests/utils.py	/^class LightningD(TailableProc):$/;"	c
LightningDTests	tests/test_lightningd.py	/^class LightningDTests(BaseLightningDTests):$/;"	c
LightningNode	tests/utils.py	/^class LightningNode(object):$/;"	c
LightningRpc	contrib/pylightning/lightning/lightning.py	/^class LightningRpc(UnixDomainSocketRpc):$/;"	c
Locktime	lightning.pb-c.h	/^typedef struct _Locktime Locktime;$/;"	t	typeref:struct:_Locktime
Locktime_Closure	lightning.pb-c.h	/^typedef void (*Locktime_Closure)$/;"	t
Locktime__LocktimeCase	lightning.pb-c.h	/^} Locktime__LocktimeCase;$/;"	t	typeref:enum:__anon40
M0	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts.h	7;"	d
M0	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts_aes128ctr.c	/^const unsigned char M0[16]   = {0x0f, 0x0b, 0x07, 0x03, 0x0e, 0x0a, 0x06, 0x02, 0x0d, 0x09, 0x05, 0x01, 0x0c, 0x08, 0x04, 0x00};$/;"	v
M0SWAP	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts.h	10;"	d
M0SWAP	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts_aes128ctr.c	/^const unsigned char M0SWAP[16] = {0x0c, 0x08, 0x04, 0x00, 0x0d, 0x09, 0x05, 0x01, 0x0e, 0x0a, 0x06, 0x02, 0x0f, 0x0b, 0x07, 0x03};$/;"	v
MAINT	libsodium/Makefile	/^MAINT = #$/;"	m
MAINT	libsodium/dist-build/Makefile	/^MAINT = #$/;"	m
MAINT	libsodium/msvc-scripts/Makefile	/^MAINT = #$/;"	m
MAINT	libsodium/src/Makefile	/^MAINT = #$/;"	m
MAINT	libsodium/src/libsodium/Makefile	/^MAINT = #$/;"	m
MAINT	libsodium/src/libsodium/include/Makefile	/^MAINT = #$/;"	m
MAINT	libsodium/test/Makefile	/^MAINT = #$/;"	m
MAINT	libsodium/test/default/Makefile	/^MAINT = #$/;"	m
MAIN_BODY_BOILERPLATE	ccan/tools/configurator/configurator.c	522;"	d	file:
MAIN_END_BOILERPLATE	ccan/tools/configurator/configurator.c	523;"	d	file:
MAIN_START_BOILERPLATE	ccan/tools/configurator/configurator.c	517;"	d	file:
MAKE4	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	165;"	d	file:
MAKE8	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	171;"	d	file:
MAKEINFO	libsodium/Makefile	/^MAKEINFO = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing makeinfo$/;"	m
MAKEINFO	libsodium/dist-build/Makefile	/^MAKEINFO = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing makeinfo$/;"	m
MAKEINFO	libsodium/msvc-scripts/Makefile	/^MAKEINFO = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing makeinfo$/;"	m
MAKEINFO	libsodium/src/Makefile	/^MAKEINFO = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing makeinfo$/;"	m
MAKEINFO	libsodium/src/libsodium/Makefile	/^MAKEINFO = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing makeinfo$/;"	m
MAKEINFO	libsodium/src/libsodium/include/Makefile	/^MAKEINFO = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing makeinfo$/;"	m
MAKEINFO	libsodium/test/Makefile	/^MAKEINFO = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing makeinfo$/;"	m
MAKEINFO	libsodium/test/default/Makefile	/^MAKEINFO = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/missing makeinfo$/;"	m
MAKEINFO	secp256k1/Makefile	/^MAKEINFO = ${SHELL} \/home\/wen\/work\/lightning\/secp256k1\/build-aux\/missing makeinfo$/;"	m
MANIFEST_TOOL	libsodium/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	libsodium/dist-build/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	libsodium/msvc-scripts/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	libsodium/src/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	libsodium/src/libsodium/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	libsodium/src/libsodium/include/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	libsodium/test/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	libsodium/test/default/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	secp256k1/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANPAGES	doc/Makefile	/^MANPAGES := doc\/lightning-cli.1 \\$/;"	m
MAPPING_INPUTS	test/test_state_coverage.c	17;"	d	file:
MAP_ANON	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	33;"	d	file:
MAP_ANON	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c	31;"	d	file:
MAP_ANON	libsodium/src/libsodium/sodium/utils.c	41;"	d	file:
MAP_NOCORE	libsodium/src/libsodium/sodium/utils.c	38;"	d	file:
MAXLEN	ccan/ccan/crypto/siphash24/test/run.c	86;"	d	file:
MAXLEN	libsodium/test/default/generichash.c	5;"	d	file:
MAXLEN	libsodium/test/default/generichash2.c	8;"	d	file:
MAXLEN	libsodium/test/default/generichash3.c	8;"	d	file:
MAXLEN	libsodium/test/default/shorthash.c	5;"	d	file:
MAX_HTLCS	test/test_state_coverage.c	70;"	d	file:
MAX_INPUT_LEN	libsodium/examples/utils.h	14;"	d
MAX_ORD	ccan/ccan/timer/test/run-add.c	7;"	d	file:
MAX_OUTQ	test/test_state_coverage.c	83;"	d	file:
MAX_PKT_LEN	daemon/cryptopkt.c	24;"	d	file:
MAX_TEST	ccan/ccan/mem/bench/speed.c	8;"	d	file:
MAX_THRESH	ccan/ccan/asort/asort.c	51;"	d	file:
MAY_NOT_COMPILE	ccan/tools/configurator/configurator.c	/^	MAY_NOT_COMPILE		= 0x10,$/;"	e	enum:test_style	file:
MEMLIMIT	libsodium/test/default/pwhash.c	7;"	d	file:
MEMLIMIT	libsodium/test/default/pwhash_scrypt.c	7;"	d	file:
MEMSWAP_TMP_SIZE	ccan/ccan/mem/mem.c	69;"	d	file:
MESSAGE	libsodium/test/default/aead_chacha20poly1305.c	186;"	d	file:
MESSAGE	libsodium/test/default/aead_chacha20poly1305.c	187;"	d	file:
METHOD_NOT_ALLOWED_405	daemon/failure.h	/^	METHOD_NOT_ALLOWED_405 = 405,$/;"	e	enum:fail_error
MIN_DESC_WIDTH	ccan/ccan/opt/usage.c	18;"	d	file:
MIN_TOTAL_WIDTH	ccan/ccan/opt/usage.c	19;"	d	file:
MKDIR_P	libsodium/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	libsodium/dist-build/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	libsodium/msvc-scripts/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	libsodium/src/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	libsodium/src/libsodium/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	libsodium/src/libsodium/include/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	libsodium/test/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	libsodium/test/default/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	secp256k1/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MLEN	libsodium/test/default/aead_chacha20poly1305.c	173;"	d	file:
MLEN	libsodium/test/default/aead_chacha20poly1305.c	174;"	d	file:
MLEN	libsodium/test/default/aead_chacha20poly1305.c	8;"	d	file:
MLEN	libsodium/test/default/aead_chacha20poly1305.c	9;"	d	file:
MUL	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	11;"	d
Maj	ccan/ccan/crypto/sha256/sha256.c	/^static uint32_t Maj(uint32_t x, uint32_t y, uint32_t z)$/;"	f	file:
Maj	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256.c	61;"	d	file:
Maj	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512.c	61;"	d	file:
Maj	secp256k1/src/hash_impl.h	17;"	d
Maj	secp256k1/src/hash_impl.h	278;"	d
Message	tools/generate-wire.py	/^class Message(object):$/;"	c
Mul_GF16	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common.h	628;"	d
Mul_GF16_2	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common.h	644;"	d
Mul_GF4	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common.h	591;"	d
Mul_GF4_2	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common.h	611;"	d
Mul_GF4_N	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common.h	601;"	d
N1	libsodium/test/default/pwhash_scrypt_ll.c	/^static uint64_t N1 = 16U;$/;"	v	file:
N2	libsodium/test/default/pwhash_scrypt_ll.c	/^static uint64_t N2 = 1024U;$/;"	v	file:
N3	libsodium/test/default/pwhash_scrypt_ll.c	/^static uint64_t N3 = 16384U;$/;"	v	file:
NAME	Makefile	/^NAME=Bitcoin Savings & Trust Daily Interest II$/;"	m
NAME	ccan/ccan/tal/tal.c	/^	NAME = 0x00111100,$/;"	e	enum:prop_type	file:
NEEDED	ccan/ccan/compiler/compiler.h	131;"	d
NEEDED	ccan/ccan/compiler/compiler.h	134;"	d
NEEDED	ccan/ccan/compiler/compiler.h	160;"	d
NESTED_PKT__INIT	lightning.pb-c.h	559;"	d
NM	libsodium/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	libsodium/dist-build/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	libsodium/msvc-scripts/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	libsodium/src/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	libsodium/src/libsodium/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	libsodium/src/libsodium/include/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	libsodium/test/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	libsodium/test/default/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	secp256k1/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NMEDIT	libsodium/Makefile	/^NMEDIT = $/;"	m
NMEDIT	libsodium/dist-build/Makefile	/^NMEDIT = $/;"	m
NMEDIT	libsodium/msvc-scripts/Makefile	/^NMEDIT = $/;"	m
NMEDIT	libsodium/src/Makefile	/^NMEDIT = $/;"	m
NMEDIT	libsodium/src/libsodium/Makefile	/^NMEDIT = $/;"	m
NMEDIT	libsodium/src/libsodium/include/Makefile	/^NMEDIT = $/;"	m
NMEDIT	libsodium/test/Makefile	/^NMEDIT = $/;"	m
NMEDIT	libsodium/test/default/Makefile	/^NMEDIT = $/;"	m
NMEDIT	secp256k1/Makefile	/^NMEDIT = $/;"	m
NODE	wire/onion_defs.h	15;"	d
NOERR_H	ccan/ccan/noerr/noerr.h	3;"	d
NONEXISTENT	test/test_protocol.c	/^	NONEXISTENT = 0,$/;"	e	enum:htlc_state	file:
NORETURN	ccan/ccan/compiler/compiler.h	40;"	d
NORETURN	ccan/ccan/compiler/compiler.h	42;"	d
NORMAL_INSTALL	libsodium/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	libsodium/dist-build/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	libsodium/msvc-scripts/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	libsodium/src/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	libsodium/src/libsodium/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	libsodium/src/libsodium/include/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	libsodium/test/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	libsodium/test/default/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	secp256k1/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	libsodium/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	libsodium/dist-build/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	libsodium/msvc-scripts/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	libsodium/src/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	libsodium/src/libsodium/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	libsodium/src/libsodium/include/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	libsodium/test/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	libsodium/test/default/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	secp256k1/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NOTIFIER	ccan/ccan/tal/tal.c	/^	NOTIFIER = 0x00071f00,$/;"	e	enum:prop_type	file:
NOTIFY_EXTRA_ARG	ccan/ccan/tal/tal.c	17;"	d	file:
NOTIFY_IS_DESTRUCTOR	ccan/ccan/tal/tal.c	16;"	d	file:
NOT_FOUND_404	daemon/failure.h	/^	NOT_FOUND_404 = 404,$/;"	e	enum:fail_error
NOT_IMPLEMENTED_501	daemon/failure.h	/^	NOT_IMPLEMENTED_501 = 501,$/;"	e	enum:fail_error
NO_ERROR	daemon/lightning-cli.c	18;"	d	file:
NTRIALS	ccan/ccan/ilog/test/run-out-of-line.c	20;"	d	file:
NTRIALS	ccan/ccan/ilog/test/run.c	20;"	d	file:
NUM	ccan/ccan/intmap/test/run-order-smallsize.c	8;"	d	file:
NUM	ccan/ccan/intmap/test/run-order.c	5;"	d	file:
NUM	ccan/ccan/io/benchmarks/run-loop.c	10;"	d	file:
NUM	ccan/ccan/io/test/run-10-many.c	9;"	d	file:
NUM	ccan/ccan/strmap/test/run-order.c	6;"	d	file:
NUM	ccan/ccan/strmap/test/run-prefix.c	7;"	d	file:
NUM	ccan/ccan/tal/test/run-iter.c	5;"	d	file:
NUM_ALLOCS	ccan/ccan/tal/test/run-groups-grow.c	20;"	d	file:
NUM_ALLOCS	ccan/ccan/tal/test/run-test-backend.c	32;"	d	file:
NUM_BITS	ccan/ccan/htable/test/run-type-int.c	12;"	d	file:
NUM_BITS	ccan/ccan/htable/test/run-type.c	7;"	d	file:
NUM_BITS	ccan/ccan/htable/test/run.c	7;"	d	file:
NUM_CHILDREN	ccan/ccan/io/benchmarks/run-different-speed.c	19;"	d	file:
NUM_CHILDREN	ccan/ccan/io/benchmarks/run-length-prefix.c	19;"	d	file:
NUM_CONNS	ccan/ccan/io/benchmarks/run-different-speed.c	18;"	d	file:
NUM_CONNS	ccan/ccan/io/benchmarks/run-length-prefix.c	18;"	d	file:
NUM_ITERS	ccan/ccan/io/benchmarks/run-loop.c	11;"	d	file:
NUM_ITERS	ccan/ccan/io/test/run-10-many.c	10;"	d	file:
NUM_LIMBS	secp256k1/src/num_gmp.h	12;"	d
NUM_MAX_HOPS	daemon/sphinx.h	14;"	d
NUM_SIDES	daemon/htlc.h	/^	NUM_SIDES$/;"	e	enum:side
NUM_STREAM_BYTES	daemon/sphinx.c	18;"	d	file:
NUM_SUBSTRINGS	ccan/ccan/str/test/run.c	12;"	d	file:
NUM_TESTS	ccan/ccan/crypto/shachain/test/run-8bit.c	10;"	d	file:
NUM_TESTS	ccan/ccan/crypto/shachain/test/run-badhash.c	6;"	d	file:
NUM_TESTS	ccan/ccan/crypto/shachain/test/run.c	6;"	d	file:
NUM_VALS	ccan/ccan/htable/test/run-copy.c	7;"	d	file:
NUM_VALS	ccan/ccan/htable/test/run-size.c	7;"	d	file:
NUM_VALS	ccan/ccan/htable/test/run-type-int.c	13;"	d	file:
NUM_VALS	ccan/ccan/htable/test/run-type.c	8;"	d	file:
NUM_VALS	ccan/ccan/htable/test/run.c	8;"	d	file:
NVDECLx	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	138;"	d	file:
NVx	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	141;"	d	file:
NativeSecp256k1	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^public class NativeSecp256k1 {$/;"	c
NativeSecp256k1Test	secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^public class NativeSecp256k1Test {$/;"	c
NativeSecp256k1Util	secp256k1/src/java/org/bitcoin/NativeSecp256k1Util.java	/^public class NativeSecp256k1Util{$/;"	c
NestedPkt	lightning.pb-c.h	/^typedef struct _NestedPkt NestedPkt;$/;"	t	typeref:struct:_NestedPkt
NestedPkt_Closure	lightning.pb-c.h	/^typedef void (*NestedPkt_Closure)$/;"	t
NodeFactory	tests/test_lightningd.py	/^class NodeFactory(object):$/;"	c
Note	secp256k1/src/asm/field_10x26_arm.s	/^	Note: do not read from a[] after here, it may overlap with r[]$/;"	d
Note	secp256k1/src/asm/field_10x26_arm.s	/^	Note: do not write to r[] here, it may overlap with a[]$/;"	d
OBJDUMP	libsodium/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	libsodium/dist-build/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	libsodium/msvc-scripts/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	libsodium/src/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	libsodium/src/libsodium/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	libsodium/src/libsodium/include/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	libsodium/test/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	libsodium/test/default/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	secp256k1/Makefile	/^OBJDUMP = objdump$/;"	m
OBJEXT	libsodium/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	libsodium/dist-build/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	libsodium/msvc-scripts/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	libsodium/src/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	libsodium/src/libsodium/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	libsodium/src/libsodium/include/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	libsodium/test/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	libsodium/test/default/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	secp256k1/Makefile	/^OBJEXT = o$/;"	m
OBJS	ccan/ccan/io/benchmarks/Makefile	/^OBJS:=time.o poll.o io.o err.o timer.o list.o$/;"	m
OBJS	ccan/ccan/timer/benchmarks/Makefile	/^OBJS:=time.o timer.o list.o opt_opt.o opt_parse.o opt_usage.o opt_helpers.o expected-usage.o$/;"	m
ONE	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	29;"	d	file:
ONION_END	daemon/sphinx.h	/^	ONION_END = 0,$/;"	e	enum:route_next_case
ONION_FORWARD	daemon/sphinx.h	/^	ONION_FORWARD = 1,$/;"	e	enum:route_next_case
OPAD	ccan/ccan/crypto/hmac_sha256/hmac_sha256.c	6;"	d	file:
OPEN_ANCHOR__INIT	lightning.pb-c.h	270;"	d
OPEN_CHANNEL__ANCHOR_OFFER__WILL_CREATE_ANCHOR	lightning.pb-c.h	/^  OPEN_CHANNEL__ANCHOR_OFFER__WILL_CREATE_ANCHOR = 1,$/;"	e	enum:_OpenChannel__AnchorOffer
OPEN_CHANNEL__ANCHOR_OFFER__WONT_CREATE_ANCHOR	lightning.pb-c.h	/^  OPEN_CHANNEL__ANCHOR_OFFER__WONT_CREATE_ANCHOR = 2$/;"	e	enum:_OpenChannel__AnchorOffer
OPEN_CHANNEL__INIT	lightning.pb-c.h	246;"	d
OPEN_COMMIT_SIG__INIT	lightning.pb-c.h	283;"	d
OPEN_COMPLETE__INIT	lightning.pb-c.h	302;"	d
OPSLIMIT	libsodium/test/default/pwhash.c	6;"	d	file:
OPSLIMIT	libsodium/test/default/pwhash_scrypt.c	6;"	d	file:
OPT_CB_ARG	ccan/ccan/opt/opt.h	514;"	d
OPT_CB_NOARG	ccan/ccan/opt/opt.h	505;"	d
OPT_EARLY	ccan/ccan/opt/opt.h	/^	OPT_EARLY = 8,		\/* Parse this from opt_early_parse() only. *\/$/;"	e	enum:opt_type
OPT_EARLY_WITHOUT_ARG	ccan/ccan/opt/opt.h	94;"	d
OPT_EARLY_WITH_ARG	ccan/ccan/opt/opt.h	111;"	d
OPT_END	ccan/ccan/opt/opt.h	/^	OPT_END = 16,		\/* End of the table. *\/$/;"	e	enum:opt_type
OPT_ENDTABLE	ccan/ccan/opt/opt.h	119;"	d
OPT_HASARG	ccan/ccan/opt/opt.h	/^	OPT_HASARG = 2,		\/* -f arg|--foo=arg|--foo arg *\/$/;"	e	enum:opt_type
OPT_NOARG	ccan/ccan/opt/opt.h	/^	OPT_NOARG = 1,		\/* -f|--foo *\/$/;"	e	enum:opt_type
OPT_SHOW_LEN	ccan/ccan/opt/opt.h	400;"	d
OPT_SUBTABLE	ccan/ccan/opt/opt.h	/^	OPT_SUBTABLE = 4,	\/* Actually, longopt points to a subtable... *\/$/;"	e	enum:opt_type
OPT_SUBTABLE	ccan/ccan/opt/opt.h	76;"	d
OPT_WITHOUT_ARG	ccan/ccan/opt/opt.h	33;"	d
OPT_WITH_ARG	ccan/ccan/opt/opt.h	68;"	d
OP_0	bitcoin/script.c	15;"	d	file:
OP_1SUB	bitcoin/script.c	33;"	d	file:
OP_2DROP	bitcoin/script.c	25;"	d	file:
OP_ADD	bitcoin/script.c	34;"	d	file:
OP_CHECKLOCKTIMEVERIFY	bitcoin/script.c	39;"	d	file:
OP_CHECKMULTISIG	bitcoin/script.c	36;"	d	file:
OP_CHECKSEQUENCEVERIFY	bitcoin/script.c	38;"	d	file:
OP_CHECKSIG	bitcoin/script.c	35;"	d	file:
OP_DEPTH	bitcoin/script.c	26;"	d	file:
OP_DROP	bitcoin/script.c	27;"	d	file:
OP_DUP	bitcoin/script.c	28;"	d	file:
OP_ELSE	bitcoin/script.c	23;"	d	file:
OP_ENDIF	bitcoin/script.c	24;"	d	file:
OP_EQUAL	bitcoin/script.c	30;"	d	file:
OP_EQUALVERIFY	bitcoin/script.c	31;"	d	file:
OP_HASH160	bitcoin/script.c	37;"	d	file:
OP_IF	bitcoin/script.c	21;"	d	file:
OP_NOP	bitcoin/script.c	20;"	d	file:
OP_NOTIF	bitcoin/script.c	22;"	d	file:
OP_PUSHBYTES	bitcoin/script.c	16;"	d	file:
OP_PUSHDATA1	bitcoin/script.c	17;"	d	file:
OP_PUSHDATA2	bitcoin/script.c	18;"	d	file:
OP_PUSHDATA4	bitcoin/script.c	19;"	d	file:
OP_SIZE	bitcoin/script.c	32;"	d	file:
OP_SWAP	bitcoin/script.c	29;"	d	file:
OR	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	34;"	d
OTHER_SIDE	test/test_protocol.c	77;"	d	file:
OTOOL	libsodium/Makefile	/^OTOOL = $/;"	m
OTOOL	libsodium/dist-build/Makefile	/^OTOOL = $/;"	m
OTOOL	libsodium/msvc-scripts/Makefile	/^OTOOL = $/;"	m
OTOOL	libsodium/src/Makefile	/^OTOOL = $/;"	m
OTOOL	libsodium/src/libsodium/Makefile	/^OTOOL = $/;"	m
OTOOL	libsodium/src/libsodium/include/Makefile	/^OTOOL = $/;"	m
OTOOL	libsodium/test/Makefile	/^OTOOL = $/;"	m
OTOOL	libsodium/test/default/Makefile	/^OTOOL = $/;"	m
OTOOL	secp256k1/Makefile	/^OTOOL = $/;"	m
OTOOL64	libsodium/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	libsodium/dist-build/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	libsodium/msvc-scripts/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	libsodium/src/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	libsodium/src/libsodium/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	libsodium/src/libsodium/include/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	libsodium/test/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	libsodium/test/default/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	secp256k1/Makefile	/^OTOOL64 = $/;"	m
OURS	test/test_protocol.c	71;"	d	file:
OUTPUT_FILE	ccan/tools/configurator/configurator.c	57;"	d	file:
OUTSIDE_MAIN	ccan/tools/configurator/configurator.c	/^	OUTSIDE_MAIN		= 0x1,$/;"	e	enum:test_style	file:
OUT_LEN	libsodium/test/default/pwhash.c	5;"	d	file:
OUT_LEN	libsodium/test/default/pwhash_scrypt.c	5;"	d	file:
OWNER	test/test_protocol.c	69;"	d	file:
OpenAnchor	lightning.pb-c.h	/^typedef struct _OpenAnchor OpenAnchor;$/;"	t	typeref:struct:_OpenAnchor
OpenAnchor_Closure	lightning.pb-c.h	/^typedef void (*OpenAnchor_Closure)$/;"	t
OpenChannel	lightning.pb-c.h	/^typedef struct _OpenChannel OpenChannel;$/;"	t	typeref:struct:_OpenChannel
OpenChannel_Closure	lightning.pb-c.h	/^typedef void (*OpenChannel_Closure)$/;"	t
OpenChannel__AnchorOffer	lightning.pb-c.h	/^} OpenChannel__AnchorOffer;$/;"	t	typeref:enum:_OpenChannel__AnchorOffer
OpenCommitSig	lightning.pb-c.h	/^typedef struct _OpenCommitSig OpenCommitSig;$/;"	t	typeref:struct:_OpenCommitSig
OpenCommitSig_Closure	lightning.pb-c.h	/^typedef void (*OpenCommitSig_Closure)$/;"	t
OpenComplete	lightning.pb-c.h	/^typedef struct _OpenComplete OpenComplete;$/;"	t	typeref:struct:_OpenComplete
OpenComplete_Closure	lightning.pb-c.h	/^typedef void (*OpenComplete_Closure)$/;"	t
OutBasisChange	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common.h	576;"	d
PACKAGE	libsodium/Makefile	/^PACKAGE = libsodium$/;"	m
PACKAGE	libsodium/dist-build/Makefile	/^PACKAGE = libsodium$/;"	m
PACKAGE	libsodium/msvc-scripts/Makefile	/^PACKAGE = libsodium$/;"	m
PACKAGE	libsodium/src/Makefile	/^PACKAGE = libsodium$/;"	m
PACKAGE	libsodium/src/libsodium/Makefile	/^PACKAGE = libsodium$/;"	m
PACKAGE	libsodium/src/libsodium/include/Makefile	/^PACKAGE = libsodium$/;"	m
PACKAGE	libsodium/test/Makefile	/^PACKAGE = libsodium$/;"	m
PACKAGE	libsodium/test/default/Makefile	/^PACKAGE = libsodium$/;"	m
PACKAGE	secp256k1/Makefile	/^PACKAGE = libsecp256k1$/;"	m
PACKAGE	secp256k1/src/libsecp256k1-config.h	69;"	d
PACKAGE_BUGREPORT	libsodium/Makefile	/^PACKAGE_BUGREPORT = https:\/\/github.com\/jedisct1\/libsodium\/issues$/;"	m
PACKAGE_BUGREPORT	libsodium/dist-build/Makefile	/^PACKAGE_BUGREPORT = https:\/\/github.com\/jedisct1\/libsodium\/issues$/;"	m
PACKAGE_BUGREPORT	libsodium/msvc-scripts/Makefile	/^PACKAGE_BUGREPORT = https:\/\/github.com\/jedisct1\/libsodium\/issues$/;"	m
PACKAGE_BUGREPORT	libsodium/src/Makefile	/^PACKAGE_BUGREPORT = https:\/\/github.com\/jedisct1\/libsodium\/issues$/;"	m
PACKAGE_BUGREPORT	libsodium/src/libsodium/Makefile	/^PACKAGE_BUGREPORT = https:\/\/github.com\/jedisct1\/libsodium\/issues$/;"	m
PACKAGE_BUGREPORT	libsodium/src/libsodium/include/Makefile	/^PACKAGE_BUGREPORT = https:\/\/github.com\/jedisct1\/libsodium\/issues$/;"	m
PACKAGE_BUGREPORT	libsodium/test/Makefile	/^PACKAGE_BUGREPORT = https:\/\/github.com\/jedisct1\/libsodium\/issues$/;"	m
PACKAGE_BUGREPORT	libsodium/test/default/Makefile	/^PACKAGE_BUGREPORT = https:\/\/github.com\/jedisct1\/libsodium\/issues$/;"	m
PACKAGE_BUGREPORT	secp256k1/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	secp256k1/src/libsecp256k1-config.h	72;"	d
PACKAGE_NAME	libsodium/Makefile	/^PACKAGE_NAME = libsodium$/;"	m
PACKAGE_NAME	libsodium/dist-build/Makefile	/^PACKAGE_NAME = libsodium$/;"	m
PACKAGE_NAME	libsodium/msvc-scripts/Makefile	/^PACKAGE_NAME = libsodium$/;"	m
PACKAGE_NAME	libsodium/src/Makefile	/^PACKAGE_NAME = libsodium$/;"	m
PACKAGE_NAME	libsodium/src/libsodium/Makefile	/^PACKAGE_NAME = libsodium$/;"	m
PACKAGE_NAME	libsodium/src/libsodium/include/Makefile	/^PACKAGE_NAME = libsodium$/;"	m
PACKAGE_NAME	libsodium/test/Makefile	/^PACKAGE_NAME = libsodium$/;"	m
PACKAGE_NAME	libsodium/test/default/Makefile	/^PACKAGE_NAME = libsodium$/;"	m
PACKAGE_NAME	secp256k1/Makefile	/^PACKAGE_NAME = libsecp256k1$/;"	m
PACKAGE_NAME	secp256k1/src/libsecp256k1-config.h	75;"	d
PACKAGE_STRING	libsodium/Makefile	/^PACKAGE_STRING = libsodium 1.0.10$/;"	m
PACKAGE_STRING	libsodium/dist-build/Makefile	/^PACKAGE_STRING = libsodium 1.0.10$/;"	m
PACKAGE_STRING	libsodium/msvc-scripts/Makefile	/^PACKAGE_STRING = libsodium 1.0.10$/;"	m
PACKAGE_STRING	libsodium/src/Makefile	/^PACKAGE_STRING = libsodium 1.0.10$/;"	m
PACKAGE_STRING	libsodium/src/libsodium/Makefile	/^PACKAGE_STRING = libsodium 1.0.10$/;"	m
PACKAGE_STRING	libsodium/src/libsodium/include/Makefile	/^PACKAGE_STRING = libsodium 1.0.10$/;"	m
PACKAGE_STRING	libsodium/test/Makefile	/^PACKAGE_STRING = libsodium 1.0.10$/;"	m
PACKAGE_STRING	libsodium/test/default/Makefile	/^PACKAGE_STRING = libsodium 1.0.10$/;"	m
PACKAGE_STRING	secp256k1/Makefile	/^PACKAGE_STRING = libsecp256k1 0.1$/;"	m
PACKAGE_STRING	secp256k1/src/libsecp256k1-config.h	78;"	d
PACKAGE_TARNAME	libsodium/Makefile	/^PACKAGE_TARNAME = libsodium$/;"	m
PACKAGE_TARNAME	libsodium/dist-build/Makefile	/^PACKAGE_TARNAME = libsodium$/;"	m
PACKAGE_TARNAME	libsodium/msvc-scripts/Makefile	/^PACKAGE_TARNAME = libsodium$/;"	m
PACKAGE_TARNAME	libsodium/src/Makefile	/^PACKAGE_TARNAME = libsodium$/;"	m
PACKAGE_TARNAME	libsodium/src/libsodium/Makefile	/^PACKAGE_TARNAME = libsodium$/;"	m
PACKAGE_TARNAME	libsodium/src/libsodium/include/Makefile	/^PACKAGE_TARNAME = libsodium$/;"	m
PACKAGE_TARNAME	libsodium/test/Makefile	/^PACKAGE_TARNAME = libsodium$/;"	m
PACKAGE_TARNAME	libsodium/test/default/Makefile	/^PACKAGE_TARNAME = libsodium$/;"	m
PACKAGE_TARNAME	secp256k1/Makefile	/^PACKAGE_TARNAME = libsecp256k1$/;"	m
PACKAGE_TARNAME	secp256k1/src/libsecp256k1-config.h	81;"	d
PACKAGE_URL	libsodium/Makefile	/^PACKAGE_URL = https:\/\/github.com\/jedisct1\/libsodium$/;"	m
PACKAGE_URL	libsodium/dist-build/Makefile	/^PACKAGE_URL = https:\/\/github.com\/jedisct1\/libsodium$/;"	m
PACKAGE_URL	libsodium/msvc-scripts/Makefile	/^PACKAGE_URL = https:\/\/github.com\/jedisct1\/libsodium$/;"	m
PACKAGE_URL	libsodium/src/Makefile	/^PACKAGE_URL = https:\/\/github.com\/jedisct1\/libsodium$/;"	m
PACKAGE_URL	libsodium/src/libsodium/Makefile	/^PACKAGE_URL = https:\/\/github.com\/jedisct1\/libsodium$/;"	m
PACKAGE_URL	libsodium/src/libsodium/include/Makefile	/^PACKAGE_URL = https:\/\/github.com\/jedisct1\/libsodium$/;"	m
PACKAGE_URL	libsodium/test/Makefile	/^PACKAGE_URL = https:\/\/github.com\/jedisct1\/libsodium$/;"	m
PACKAGE_URL	libsodium/test/default/Makefile	/^PACKAGE_URL = https:\/\/github.com\/jedisct1\/libsodium$/;"	m
PACKAGE_URL	secp256k1/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	secp256k1/src/libsecp256k1-config.h	84;"	d
PACKAGE_VERSION	libsodium/Makefile	/^PACKAGE_VERSION = 1.0.10$/;"	m
PACKAGE_VERSION	libsodium/dist-build/Makefile	/^PACKAGE_VERSION = 1.0.10$/;"	m
PACKAGE_VERSION	libsodium/msvc-scripts/Makefile	/^PACKAGE_VERSION = 1.0.10$/;"	m
PACKAGE_VERSION	libsodium/src/Makefile	/^PACKAGE_VERSION = 1.0.10$/;"	m
PACKAGE_VERSION	libsodium/src/libsodium/Makefile	/^PACKAGE_VERSION = 1.0.10$/;"	m
PACKAGE_VERSION	libsodium/src/libsodium/include/Makefile	/^PACKAGE_VERSION = 1.0.10$/;"	m
PACKAGE_VERSION	libsodium/test/Makefile	/^PACKAGE_VERSION = 1.0.10$/;"	m
PACKAGE_VERSION	libsodium/test/default/Makefile	/^PACKAGE_VERSION = 1.0.10$/;"	m
PACKAGE_VERSION	secp256k1/Makefile	/^PACKAGE_VERSION = 0.1$/;"	m
PACKAGE_VERSION	secp256k1/src/libsecp256k1-config.h	87;"	d
PAD	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256.c	/^static unsigned char PAD[64] = {$/;"	v	file:
PAD	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512.c	/^static unsigned char PAD[128] = {$/;"	v	file:
PATH_SEP	ccan/ccan/tal/path/path.c	16;"	d	file:
PATH_SEPARATOR	libsodium/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	libsodium/dist-build/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	libsodium/msvc-scripts/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	libsodium/src/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	libsodium/src/libsodium/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	libsodium/src/libsodium/include/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	libsodium/test/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	libsodium/test/default/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	secp256k1/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEP_STR	ccan/ccan/tal/path/path.c	15;"	d	file:
PAYMENT_REQUIRED_402	daemon/failure.h	/^	PAYMENT_REQUIRED_402 = 402,$/;"	e	enum:fail_error
PBKDF2_SHA256	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c	/^PBKDF2_SHA256(const uint8_t * passwd, size_t passwdlen, const uint8_t * salt,$/;"	f
PENDING	test/test_protocol.c	66;"	d	file:
PERM	wire/onion_defs.h	14;"	d
PER_CONN_TIME	ccan/ccan/timer/benchmarks/expected-usage.c	10;"	d	file:
PER_LEVEL	ccan/ccan/timer/timer.c	9;"	d	file:
PETTYCOIN_DNS_H	daemon/dns.h	2;"	d
PKG_CONFIG	secp256k1/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG_LIBDIR	secp256k1/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_PATH	secp256k1/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKT_CLOSE_SHUTDOWN	daemon/state_types.h	/^	PKT_CLOSE_SHUTDOWN = PKT__PKT_CLOSE_SHUTDOWN,$/;"	e	enum:state_input
PKT_ERROR	daemon/state_types.h	/^	PKT_ERROR = PKT__PKT_ERROR,$/;"	e	enum:state_input
PKT_OPEN	daemon/state_types.h	/^	PKT_OPEN = PKT__PKT_OPEN,$/;"	e	enum:state_input
PKT_OPEN_ANCHOR	daemon/state_types.h	/^	PKT_OPEN_ANCHOR = PKT__PKT_OPEN_ANCHOR,$/;"	e	enum:state_input
PKT_OPEN_COMMIT_SIG	daemon/state_types.h	/^	PKT_OPEN_COMMIT_SIG = PKT__PKT_OPEN_COMMIT_SIG,$/;"	e	enum:state_input
PKT_OPEN_COMPLETE	daemon/state_types.h	/^	PKT_OPEN_COMPLETE = PKT__PKT_OPEN_COMPLETE,$/;"	e	enum:state_input
PKT_UPDATE_ADD_HTLC	daemon/state_types.h	/^	PKT_UPDATE_ADD_HTLC = PKT__PKT_UPDATE_ADD_HTLC,$/;"	e	enum:state_input
PKT_UPDATE_COMMIT	daemon/state_types.h	/^	PKT_UPDATE_COMMIT = PKT__PKT_UPDATE_COMMIT,$/;"	e	enum:state_input
PKT_UPDATE_FAIL_HTLC	daemon/state_types.h	/^	PKT_UPDATE_FAIL_HTLC = PKT__PKT_UPDATE_FAIL_HTLC,$/;"	e	enum:state_input
PKT_UPDATE_FULFILL_HTLC	daemon/state_types.h	/^	PKT_UPDATE_FULFILL_HTLC = PKT__PKT_UPDATE_FULFILL_HTLC,$/;"	e	enum:state_input
PKT_UPDATE_REVOCATION	daemon/state_types.h	/^	PKT_UPDATE_REVOCATION = PKT__PKT_UPDATE_REVOCATION,$/;"	e	enum:state_input
PKT__INIT	lightning.pb-c.h	628;"	d
PKT__PKT_AUTH	lightning.pb-c.h	/^  PKT__PKT_AUTH = 50,$/;"	e	enum:__anon44
PKT__PKT_CLOSE_SHUTDOWN	lightning.pb-c.h	/^  PKT__PKT_CLOSE_SHUTDOWN = 30,$/;"	e	enum:__anon44
PKT__PKT_CLOSE_SIGNATURE	lightning.pb-c.h	/^  PKT__PKT_CLOSE_SIGNATURE = 31,$/;"	e	enum:__anon44
PKT__PKT_ERROR	lightning.pb-c.h	/^  PKT__PKT_ERROR = 40,$/;"	e	enum:__anon44
PKT__PKT_INIT	lightning.pb-c.h	/^  PKT__PKT_INIT = 51,$/;"	e	enum:__anon44
PKT__PKT_NESTED	lightning.pb-c.h	/^  PKT__PKT_NESTED = 128,$/;"	e	enum:__anon44
PKT__PKT_OPEN	lightning.pb-c.h	/^  PKT__PKT_OPEN = 20,$/;"	e	enum:__anon44
PKT__PKT_OPEN_ANCHOR	lightning.pb-c.h	/^  PKT__PKT_OPEN_ANCHOR = 21,$/;"	e	enum:__anon44
PKT__PKT_OPEN_COMMIT_SIG	lightning.pb-c.h	/^  PKT__PKT_OPEN_COMMIT_SIG = 22,$/;"	e	enum:__anon44
PKT__PKT_OPEN_COMPLETE	lightning.pb-c.h	/^  PKT__PKT_OPEN_COMPLETE = 23,$/;"	e	enum:__anon44
PKT__PKT_UPDATE_ADD_HTLC	lightning.pb-c.h	/^  PKT__PKT_UPDATE_ADD_HTLC = 2,$/;"	e	enum:__anon44
PKT__PKT_UPDATE_COMMIT	lightning.pb-c.h	/^  PKT__PKT_UPDATE_COMMIT = 6,$/;"	e	enum:__anon44
PKT__PKT_UPDATE_FAIL_HTLC	lightning.pb-c.h	/^  PKT__PKT_UPDATE_FAIL_HTLC = 4,$/;"	e	enum:__anon44
PKT__PKT_UPDATE_FEE	lightning.pb-c.h	/^  PKT__PKT_UPDATE_FEE = 5,$/;"	e	enum:__anon44
PKT__PKT_UPDATE_FULFILL_HTLC	lightning.pb-c.h	/^  PKT__PKT_UPDATE_FULFILL_HTLC = 3,$/;"	e	enum:__anon44
PKT__PKT_UPDATE_REVOCATION	lightning.pb-c.h	/^  PKT__PKT_UPDATE_REVOCATION = 7,$/;"	e	enum:__anon44
PKT__PKT__NOT_SET	lightning.pb-c.h	/^  PKT__PKT__NOT_SET = 0,$/;"	e	enum:__anon44
PLUS	libsodium/src/libsodium/crypto_core/hchacha20/core_hchacha20.h	18;"	d
PLUS	libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c	38;"	d	file:
PLUSONE	libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c	39;"	d	file:
POLY1305_NOINLINE	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	10;"	d
POLY1305_NOINLINE	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	6;"	d
POLY1305_NOINLINE	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	8;"	d
POLY1305_NOINLINE	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	18;"	d
POLY1305_NOINLINE	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	20;"	d
POLY1305_NOINLINE	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	22;"	d
POLY1305_NOINLINE	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	25;"	d	file:
POLY1305_NOINLINE	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	27;"	d	file:
POLY1305_NOINLINE	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	29;"	d	file:
POP	ccan/ccan/asort/asort.c	67;"	d	file:
PORT	ccan/ccan/io/test/run-01-start-finish.c	9;"	d	file:
PORT	ccan/ccan/io/test/run-02-read.c	9;"	d	file:
PORT	ccan/ccan/io/test/run-03-readpartial.c	9;"	d	file:
PORT	ccan/ccan/io/test/run-04-writepartial.c	9;"	d	file:
PORT	ccan/ccan/io/test/run-05-write.c	9;"	d	file:
PORT	ccan/ccan/io/test/run-06-idle.c	12;"	d	file:
PORT	ccan/ccan/io/test/run-07-break.c	9;"	d	file:
PORT	ccan/ccan/io/test/run-09-connect.c	9;"	d	file:
PORT	ccan/ccan/io/test/run-12-bidir.c	9;"	d	file:
PORT	ccan/ccan/io/test/run-14-duplex-both-read.c	11;"	d	file:
PORT	ccan/ccan/io/test/run-15-timeout.c	11;"	d	file:
PORT	ccan/ccan/io/test/run-16-duplex-test.c	11;"	d	file:
PORT	ccan/ccan/io/test/run-17-homemade-io.c	9;"	d	file:
PORT	ccan/ccan/io/test/run-18-errno.c	9;"	d	file:
PORT	ccan/ccan/io/test/run-19-always.c	9;"	d	file:
PORT	ccan/ccan/io/test/run-20-io_time_override.c	9;"	d	file:
PORT	ccan/ccan/io/test/run-21-io_close_taken_fd.c	9;"	d	file:
PORT	ccan/ccan/io/test/run-22-POLLHUP-on-listening-socket.c	9;"	d	file:
PORT	secp256k1/Makefile	/^PORT = $/;"	m
POST_INSTALL	libsodium/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	libsodium/dist-build/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	libsodium/msvc-scripts/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	libsodium/src/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	libsodium/src/libsodium/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	libsodium/src/libsodium/include/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	libsodium/test/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	libsodium/test/default/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	secp256k1/Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	libsodium/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	libsodium/dist-build/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	libsodium/msvc-scripts/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	libsodium/src/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	libsodium/src/libsodium/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	libsodium/src/libsodium/include/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	libsodium/test/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	libsodium/test/default/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	secp256k1/Makefile	/^POST_UNINSTALL = :$/;"	m
PREIMAGE__INIT	lightning.pb-c.h	88;"	d
PRE_BOILERPLATE	ccan/tools/configurator/configurator.c	516;"	d	file:
PRE_INSTALL	libsodium/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	libsodium/dist-build/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	libsodium/msvc-scripts/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	libsodium/src/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	libsodium/src/libsodium/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	libsodium/src/libsodium/include/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	libsodium/test/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	libsodium/test/default/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	secp256k1/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	libsodium/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	libsodium/dist-build/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	libsodium/msvc-scripts/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	libsodium/src/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	libsodium/src/libsodium/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	libsodium/src/libsodium/include/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	libsodium/test/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	libsodium/test/default/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	secp256k1/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRINTF_FMT	ccan/ccan/compiler/compiler.h	58;"	d
PRINTF_FMT	ccan/ccan/compiler/compiler.h	61;"	d
PRIuSQLITE64	daemon/db.c	34;"	d	file:
PROGRAMS	Makefile	/^PROGRAMS := $(TEST_PROGRAMS)$/;"	m
PROGRAMS	secp256k1/Makefile	/^PROGRAMS = $(noinst_PROGRAMS)$/;"	m
PROTOBUF_C__NO_DEPRECATED	lightning.pb-c.c	6;"	d	file:
PROTOBUF_C_lightning_2eproto__INCLUDED	lightning.pb-c.h	5;"	d
PROTOCC	Makefile	/^PROTOCC:=protoc-c$/;"	m
PSHUFFLE_BYTE_FLIP_MASK	ccan/ccan/crypto/sha256/benchmarks/sha256_avx1.asm	/^PSHUFFLE_BYTE_FLIP_MASK: ddq 0x0c0d0e0f08090a0b0405060700010203$/;"	l
PSHUFFLE_BYTE_FLIP_MASK	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^PSHUFFLE_BYTE_FLIP_MASK:$/;"	l
PSHUFFLE_BYTE_FLIP_MASK	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^PSHUFFLE_BYTE_FLIP_MASK: ddq 0x0c0d0e0f08090a0b0405060700010203$/;"	l
PSHUFFLE_BYTE_FLIP_MASK	ccan/ccan/crypto/sha256/benchmarks/sha256_sse4.asm	/^PSHUFFLE_BYTE_FLIP_MASK: ddq 0x0c0d0e0f08090a0b0405060700010203$/;"	l
PTR_VALID_ALIGNOF	ccan/ccan/ptr_valid/ptr_valid.h	224;"	d
PTR_VALID_ALIGNOF	ccan/ccan/ptr_valid/ptr_valid.h	227;"	d
PUBKEY_DER_LEN	bitcoin/pubkey.h	10;"	d
PULSAR_INTERFACE_H	daemon/pulsar_interface.h	2;"	d
PURE_FUNCTION	ccan/ccan/compiler/compiler.h	87;"	d
PURE_FUNCTION	ccan/ccan/compiler/compiler.h	89;"	d
PUSH	ccan/ccan/asort/asort.c	66;"	d	file:
PYTHONPATH	Makefile	/^	PYTHONPATH=contrib\/pylightning python3 tests\/test_lightningd.py$/;"	m
Pkt	lightning.pb-c.h	/^typedef struct _Pkt Pkt;$/;"	t	typeref:struct:_Pkt
Pkt_Closure	lightning.pb-c.h	/^typedef void (*Pkt_Closure)$/;"	t
Pkt__PktCase	lightning.pb-c.h	/^} Pkt__PktCase;$/;"	t	typeref:enum:__anon44
Preimage	lightning.pb-c.h	/^typedef struct _Preimage Preimage;$/;"	t	typeref:struct:_Preimage
Preimage_Closure	lightning.pb-c.h	/^typedef void (*Preimage_Closure)$/;"	t
QSORT_SCALAR	ccan/ccan/order/test/api.c	16;"	d	file:
QUARTERROUND	libsodium/src/libsodium/crypto_core/hchacha20/core_hchacha20.h	20;"	d
QUARTERROUND	libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c	41;"	d	file:
R	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^    uint32_t R[5];           \/*  20 bytes  *\/$/;"	m	struct:poly1305_state_internal_t	file:
R	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c	112;"	d	file:
R	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c	138;"	d	file:
R11	ccan/ccan/crypto/ripemd160/ripemd160.c	/^static void inline R11(uint32_t *a, uint32_t b, uint32_t *c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f1(b, *c, d), x, 0, r); }$/;"	f	file:
R12	ccan/ccan/crypto/ripemd160/ripemd160.c	/^static void inline R12(uint32_t *a, uint32_t b, uint32_t *c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f5(b, *c, d), x, 0x50A28BE6ul, r); }$/;"	f	file:
R2	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^    uint32_t R2[5];          \/*  20 bytes  *\/$/;"	m	struct:poly1305_state_internal_t	file:
R21	ccan/ccan/crypto/ripemd160/ripemd160.c	/^static void inline R21(uint32_t *a, uint32_t b, uint32_t *c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f2(b, *c, d), x, 0x5A827999ul, r); }$/;"	f	file:
R22	ccan/ccan/crypto/ripemd160/ripemd160.c	/^static void inline R22(uint32_t *a, uint32_t b, uint32_t *c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f4(b, *c, d), x, 0x5C4DD124ul, r); }$/;"	f	file:
R31	ccan/ccan/crypto/ripemd160/ripemd160.c	/^static void inline R31(uint32_t *a, uint32_t b, uint32_t *c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f3(b, *c, d), x, 0x6ED9EBA1ul, r); }$/;"	f	file:
R32	ccan/ccan/crypto/ripemd160/ripemd160.c	/^static void inline R32(uint32_t *a, uint32_t b, uint32_t *c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f3(b, *c, d), x, 0x6D703EF3ul, r); }$/;"	f	file:
R4	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^    uint32_t R4[5];          \/*  20 bytes  *\/$/;"	m	struct:poly1305_state_internal_t	file:
R41	ccan/ccan/crypto/ripemd160/ripemd160.c	/^static void inline R41(uint32_t *a, uint32_t b, uint32_t *c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f4(b, *c, d), x, 0x8F1BBCDCul, r); }$/;"	f	file:
R42	ccan/ccan/crypto/ripemd160/ripemd160.c	/^static void inline R42(uint32_t *a, uint32_t b, uint32_t *c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f2(b, *c, d), x, 0x7A6D76E9ul, r); }$/;"	f	file:
R51	ccan/ccan/crypto/ripemd160/ripemd160.c	/^static void inline R51(uint32_t *a, uint32_t b, uint32_t *c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f5(b, *c, d), x, 0xA953FD4Eul, r); }$/;"	f	file:
R52	ccan/ccan/crypto/ripemd160/ripemd160.c	/^static void inline R52(uint32_t *a, uint32_t b, uint32_t *c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f1(b, *c, d), x, 0, r); }$/;"	f	file:
RANLIB	libsodium/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	libsodium/dist-build/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	libsodium/msvc-scripts/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	libsodium/src/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	libsodium/src/libsodium/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	libsodium/src/libsodium/include/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	libsodium/test/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	libsodium/test/default/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	secp256k1/Makefile	/^RANLIB = \/usr\/bin\/ranlib$/;"	m
RCVD_ADD_ACK_COMMIT	daemon/htlc_state.h	/^	RCVD_ADD_ACK_COMMIT,$/;"	e	enum:htlc_state
RCVD_ADD_ACK_REVOCATION	daemon/htlc_state.h	/^	RCVD_ADD_ACK_REVOCATION,$/;"	e	enum:htlc_state
RCVD_ADD_COMMIT	daemon/htlc_state.h	/^	RCVD_ADD_COMMIT,$/;"	e	enum:htlc_state
RCVD_ADD_HTLC	daemon/htlc_state.h	/^	RCVD_ADD_HTLC,$/;"	e	enum:htlc_state
RCVD_ADD_REVOCATION	daemon/htlc_state.h	/^	RCVD_ADD_REVOCATION,$/;"	e	enum:htlc_state
RCVD_FEECHANGE	daemon/feechange_state.h	/^	RCVD_FEECHANGE,$/;"	e	enum:feechange_state
RCVD_FEECHANGE_ACK_COMMIT	daemon/feechange_state.h	/^	RCVD_FEECHANGE_ACK_COMMIT,$/;"	e	enum:feechange_state
RCVD_FEECHANGE_ACK_REVOCATION	daemon/feechange_state.h	/^	RCVD_FEECHANGE_ACK_REVOCATION,$/;"	e	enum:feechange_state
RCVD_FEECHANGE_COMMIT	daemon/feechange_state.h	/^	RCVD_FEECHANGE_COMMIT,$/;"	e	enum:feechange_state
RCVD_FEECHANGE_REVOCATION	daemon/feechange_state.h	/^	RCVD_FEECHANGE_REVOCATION,$/;"	e	enum:feechange_state
RCVD_REMOVE_ACK_COMMIT	daemon/htlc_state.h	/^	RCVD_REMOVE_ACK_COMMIT,$/;"	e	enum:htlc_state
RCVD_REMOVE_ACK_REVOCATION	daemon/htlc_state.h	/^	RCVD_REMOVE_ACK_REVOCATION,$/;"	e	enum:htlc_state
RCVD_REMOVE_COMMIT	daemon/htlc_state.h	/^	RCVD_REMOVE_COMMIT,$/;"	e	enum:htlc_state
RCVD_REMOVE_HTLC	daemon/htlc_state.h	/^	RCVD_REMOVE_HTLC,$/;"	e	enum:htlc_state
RCVD_REMOVE_REVOCATION	daemon/htlc_state.h	/^	RCVD_REMOVE_REVOCATION,$/;"	e	enum:htlc_state
RECHECK_LOGS	libsodium/test/default/Makefile	/^RECHECK_LOGS = $(TEST_LOGS)$/;"	m
RECHECK_LOGS	secp256k1/Makefile	/^RECHECK_LOGS = $(TEST_LOGS)$/;"	m
RECURSIVE_CLEAN_TARGETS	libsodium/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	libsodium/src/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	libsodium/src/libsodium/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	libsodium/test/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_TARGETS	libsodium/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	libsodium/src/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	libsodium/src/libsodium/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	libsodium/test/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECV_ADD_ACK_COMMIT	test/test_protocol.c	/^	RECV_ADD_ACK_COMMIT = RECV_ADD_REVOCATION + LOCAL(COMMITTED),$/;"	e	enum:htlc_state	file:
RECV_ADD_ACK_REVOCATION	test/test_protocol.c	/^	RECV_ADD_ACK_REVOCATION = SENT_ADD_ACK_COMMIT + REMOTE(REVOKED),$/;"	e	enum:htlc_state	file:
RECV_ADD_COMMIT	test/test_protocol.c	/^	RECV_ADD_COMMIT = RECV_ADD_HTLC - LOCAL(PENDING) + LOCAL(COMMITTED),$/;"	e	enum:htlc_state	file:
RECV_ADD_HTLC	test/test_protocol.c	/^	RECV_ADD_HTLC = ADDING + THEIRS + LOCAL(PENDING),$/;"	e	enum:htlc_state	file:
RECV_ADD_REVOCATION	test/test_protocol.c	/^	RECV_ADD_REVOCATION = SENT_ADD_COMMIT + REMOTE(REVOKED),$/;"	e	enum:htlc_state	file:
RECV_REMOVE_ACK_COMMIT	test/test_protocol.c	/^	RECV_REMOVE_ACK_COMMIT = RECV_REMOVE_REVOCATION - LOCAL(COMMITTED),$/;"	e	enum:htlc_state	file:
RECV_REMOVE_ACK_REVOCATION	test/test_protocol.c	/^	RECV_REMOVE_ACK_REVOCATION = SENT_REMOVE_ACK_COMMIT - REMOVING + REMOTE(REVOKED),$/;"	e	enum:htlc_state	file:
RECV_REMOVE_COMMIT	test/test_protocol.c	/^	RECV_REMOVE_COMMIT = RECV_REMOVE_HTLC - LOCAL(PENDING) - LOCAL(COMMITTED),$/;"	e	enum:htlc_state	file:
RECV_REMOVE_HTLC	test/test_protocol.c	/^	RECV_REMOVE_HTLC = REMOVING + OURS + LOCAL(PENDING)$/;"	e	enum:htlc_state	file:
RECV_REMOVE_REVOCATION	test/test_protocol.c	/^	RECV_REMOVE_REVOCATION = SENT_REMOVE_COMMIT + REMOTE(REVOKED),$/;"	e	enum:htlc_state	file:
REDMASK51	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S	/^REDMASK51:   .quad 0x0007FFFFFFFFFFFF$/;"	l
REDMASK51	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	17;"	d
REDUCE4	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	331;"	d	file:
RED_DECL	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	320;"	d	file:
RED_MUL_HIGH	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	323;"	d	file:
RED_MUL_LOW	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	322;"	d	file:
RED_MUL_MID	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	324;"	d	file:
RED_SHUFFLE	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	321;"	d	file:
REGISTER_TYPE_TO_HEXSTR	type_to_string.h	47;"	d
REGISTER_TYPE_TO_STRING	type_to_string.h	36;"	d
REMOTE	daemon/htlc.h	/^	REMOTE,$/;"	e	enum:side
REMOTE	test/test_protocol.c	79;"	d	file:
REMOTE_	test/test_protocol.c	75;"	d	file:
REMOVING	test/test_protocol.c	64;"	d	file:
REPLY_SIZE	ccan/ccan/io/benchmarks/run-different-speed.c	17;"	d	file:
REQUEST_MAX	ccan/ccan/io/benchmarks/run-length-prefix.c	17;"	d	file:
REQUEST_SIZE	ccan/ccan/io/benchmarks/run-different-speed.c	16;"	d	file:
REQUEST_TIMEOUT_408	daemon/failure.h	/^	REQUEST_TIMEOUT_408 = 408,$/;"	e	enum:fail_error
REQ_FD	lightningd/handshake/handshake.c	29;"	d	file:
REVOKED	test/test_protocol.c	68;"	d	file:
REVV_BE	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	46;"	d	file:
RIPEMD160_INIT	ccan/ccan/crypto/ripemd160/ripemd160.h	100;"	d
RIPEMD160_INIT	ccan/ccan/crypto/ripemd160/ripemd160.h	107;"	d
RND	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256.c	69;"	d	file:
RND	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512.c	69;"	d	file:
RNDr	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256.c	75;"	d	file:
RNDr	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512.c	75;"	d	file:
ROT16	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	38;"	d
ROT24	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	37;"	d
ROT32	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	36;"	d
ROT63	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	39;"	d
ROTATE	libsodium/src/libsodium/crypto_core/hchacha20/core_hchacha20.h	16;"	d
ROTATE	libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c	36;"	d	file:
ROTATE16	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	23;"	d
ROTATE24	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	26;"	d
ROTATE_ARGS	ccan/ccan/crypto/sha256/benchmarks/sha256_avx1.asm	/^ROTATE_ARGS$/;"	l
ROTATE_ARGS	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^ROTATE_ARGS$/;"	l
ROTATE_ARGS	ccan/ccan/crypto/sha256/benchmarks/sha256_sse4.asm	/^ROTATE_ARGS$/;"	l
ROTB	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts.h	6;"	d
ROTB	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts_aes128ctr.c	/^const unsigned char ROTB[16] = {0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08};$/;"	v
ROTL	ccan/ccan/crypto/siphash24/siphash24.c	15;"	d	file:
ROTL	libsodium/src/libsodium/crypto_shorthash/siphash24/ref/shorthash_siphash24.c	8;"	d	file:
ROTL32	libsodium/src/libsodium/crypto_core/hchacha20/core_hchacha20.h	14;"	d
ROTL32	libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c	33;"	d	file:
ROTR	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256.c	63;"	d	file:
ROTR	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512.c	63;"	d	file:
ROTV1	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	33;"	d	file:
ROTV2	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	34;"	d	file:
ROTV3	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	35;"	d	file:
ROTW12	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	38;"	d	file:
ROTW16	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	42;"	d	file:
ROTW7	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	36;"	d	file:
ROTW8	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	40;"	d	file:
ROUND	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-ref.c	64;"	d	file:
ROUND	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-ref.c	92;"	d	file:
ROUND	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-sse41.h	85;"	d
ROUND	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-ssse3.h	85;"	d
ROUNDS	libsodium/src/libsodium/crypto_core/hsalsa20/ref2/core_hsalsa20.c	13;"	d	file:
ROUNDS	libsodium/src/libsodium/crypto_core/salsa20/ref/core_salsa20.c	13;"	d	file:
ROUNDS	libsodium/src/libsodium/crypto_core/salsa2012/ref/core_salsa2012.c	13;"	d	file:
ROUNDS	libsodium/src/libsodium/crypto_core/salsa208/ref/core_salsa208.c	13;"	d	file:
ROUTE_STEP__INIT	lightning.pb-c.h	335;"	d
ROUTE_STEP__NEXT_BITCOIN	lightning.pb-c.h	/^  ROUTE_STEP__NEXT_BITCOIN = 2,$/;"	e	enum:__anon42
ROUTE_STEP__NEXT_END	lightning.pb-c.h	/^  ROUTE_STEP__NEXT_END = 1,$/;"	e	enum:__anon42
ROUTE_STEP__NEXT__NOT_SET	lightning.pb-c.h	/^  ROUTE_STEP__NEXT__NOT_SET = 0,$/;"	e	enum:__anon42
ROUTE__INIT	lightning.pb-c.h	346;"	d
ROUTING_INFO_SIZE	daemon/sphinx.h	17;"	d
ROUTING_MAX_HOPS	daemon/routing.h	9;"	d
ROUTING__INIT	lightning.pb-c.h	356;"	d
Release	libsodium/test/default/wintest.bat	/^:Release$/;"	l
ReleaseDLL	libsodium/test/default/wintest.bat	/^:ReleaseDLL$/;"	l
Round	ccan/ccan/crypto/ripemd160/ripemd160.c	/^static void inline Round(uint32_t *a, uint32_t b UNUSED, uint32_t *c, uint32_t d UNUSED, uint32_t e, uint32_t f, uint32_t x, uint32_t k, int r)$/;"	f	file:
Round	ccan/ccan/crypto/sha256/sha256.c	/^static void Round(uint32_t a, uint32_t b, uint32_t c, uint32_t *d, uint32_t e, uint32_t f, uint32_t g, uint32_t *h, uint32_t k, uint32_t w)$/;"	f	file:
Round	secp256k1/src/hash_impl.h	23;"	d
Round	secp256k1/src/hash_impl.h	273;"	d
Route	lightning.pb-c.h	/^typedef struct _Route Route;$/;"	t	typeref:struct:_Route
RouteStep	lightning.pb-c.h	/^typedef struct _RouteStep RouteStep;$/;"	t	typeref:struct:_RouteStep
RouteStep_Closure	lightning.pb-c.h	/^typedef void (*RouteStep_Closure)$/;"	t
RouteStep__NextCase	lightning.pb-c.h	/^} RouteStep__NextCase;$/;"	t	typeref:enum:__anon42
Route_Closure	lightning.pb-c.h	/^typedef void (*Route_Closure)$/;"	t
Routing	lightning.pb-c.h	/^typedef struct _Routing Routing;$/;"	t	typeref:struct:_Routing
Routing_Closure	lightning.pb-c.h	/^typedef void (*Routing_Closure)$/;"	t
RtlGenRandom	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	33;"	d	file:
RtlGenRandom	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	28;"	d	file:
S	ccan/ccan/mem/test/api.c	48;"	d	file:
S0	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256.c	64;"	d	file:
S0	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512.c	64;"	d	file:
S1	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256.c	65;"	d	file:
S1	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512.c	65;"	d	file:
SAFECODE_HOME	libsodium/Makefile	/^SAFECODE_HOME = $/;"	m
SAFECODE_HOME	libsodium/dist-build/Makefile	/^SAFECODE_HOME = $/;"	m
SAFECODE_HOME	libsodium/msvc-scripts/Makefile	/^SAFECODE_HOME = $/;"	m
SAFECODE_HOME	libsodium/src/Makefile	/^SAFECODE_HOME = $/;"	m
SAFECODE_HOME	libsodium/src/libsodium/Makefile	/^SAFECODE_HOME = $/;"	m
SAFECODE_HOME	libsodium/src/libsodium/include/Makefile	/^SAFECODE_HOME = $/;"	m
SAFECODE_HOME	libsodium/test/Makefile	/^SAFECODE_HOME = $/;"	m
SAFECODE_HOME	libsodium/test/default/Makefile	/^SAFECODE_HOME = $/;"	m
SALSA20_2ROUNDS	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	205;"	d	file:
SALSA20_2ROUNDS	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	63;"	d	file:
SALSA20_8_XOR	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	206;"	d	file:
SALSA20_8_XOR	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	89;"	d	file:
SALSA20_RANDOM_BLOCK_SIZE	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	45;"	d	file:
SB	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	394;"	d	file:
SB	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	443;"	d	file:
SC	secp256k1/src/ecmult_static_context.h	1159;"	d
SC	secp256k1/src/ecmult_static_context.h	4;"	d
SCALAR_ORDER	ccan/ccan/order/order.c	5;"	d	file:
SECONDS_POINT	bitcoin/locktime.c	6;"	d	file:
SECP256K1_API	secp256k1/include/secp256k1.h	125;"	d
SECP256K1_API	secp256k1/include/secp256k1.h	127;"	d
SECP256K1_API	secp256k1/include/secp256k1.h	130;"	d
SECP256K1_API	secp256k1/include/secp256k1.h	132;"	d
SECP256K1_ARG_NONNULL	secp256k1/include/secp256k1.h	145;"	d
SECP256K1_ARG_NONNULL	secp256k1/include/secp256k1.h	147;"	d
SECP256K1_CONTEXT_NONE	secp256k1/include/secp256k1.h	162;"	d
SECP256K1_CONTEXT_SIGN	secp256k1/include/secp256k1.h	161;"	d
SECP256K1_CONTEXT_VERIFY	secp256k1/include/secp256k1.h	160;"	d
SECP256K1_EC_COMPRESSED	secp256k1/include/secp256k1.h	165;"	d
SECP256K1_EC_PARSE_TEST_NINVALID	secp256k1/src/tests.c	2771;"	d	file:
SECP256K1_EC_PARSE_TEST_NVALID	secp256k1/src/tests.c	2653;"	d	file:
SECP256K1_EC_PARSE_TEST_NXVALID	secp256k1/src/tests.c	2740;"	d	file:
SECP256K1_EC_UNCOMPRESSED	secp256k1/include/secp256k1.h	166;"	d
SECP256K1_FE_CONST	secp256k1/src/field_10x26.h	36;"	d
SECP256K1_FE_CONST	secp256k1/src/field_10x26.h	38;"	d
SECP256K1_FE_CONST	secp256k1/src/field_5x52.h	31;"	d
SECP256K1_FE_CONST	secp256k1/src/field_5x52.h	33;"	d
SECP256K1_FE_CONST_INNER	secp256k1/src/field_10x26.h	22;"	d
SECP256K1_FE_CONST_INNER	secp256k1/src/field_5x52.h	22;"	d
SECP256K1_FE_STORAGE_CONST	secp256k1/src/field_10x26.h	45;"	d
SECP256K1_FE_STORAGE_CONST	secp256k1/src/field_5x52.h	40;"	d
SECP256K1_FE_STORAGE_CONST_GET	secp256k1/src/field_10x26.h	46;"	d
SECP256K1_FLAGS_BIT_COMPRESSION	secp256k1/include/secp256k1.h	157;"	d
SECP256K1_FLAGS_BIT_CONTEXT_SIGN	secp256k1/include/secp256k1.h	156;"	d
SECP256K1_FLAGS_BIT_CONTEXT_VERIFY	secp256k1/include/secp256k1.h	155;"	d
SECP256K1_FLAGS_TYPE_COMPRESSION	secp256k1/include/secp256k1.h	153;"	d
SECP256K1_FLAGS_TYPE_CONTEXT	secp256k1/include/secp256k1.h	152;"	d
SECP256K1_FLAGS_TYPE_MASK	secp256k1/include/secp256k1.h	151;"	d
SECP256K1_GEJ_CONST	secp256k1/src/group.h	31;"	d
SECP256K1_GEJ_CONST_INFINITY	secp256k1/src/group.h	32;"	d
SECP256K1_GE_CONST	secp256k1/src/group.h	20;"	d
SECP256K1_GE_CONST_INFINITY	secp256k1/src/group.h	21;"	d
SECP256K1_GE_STORAGE_CONST	secp256k1/src/group.h	39;"	d
SECP256K1_GE_STORAGE_CONST_GET	secp256k1/src/group.h	41;"	d
SECP256K1_GNUC_EXT	secp256k1/src/util.h	103;"	d
SECP256K1_GNUC_EXT	secp256k1/src/util.h	105;"	d
SECP256K1_GNUC_PREREQ	secp256k1/include/secp256k1.h	103;"	d
SECP256K1_GNUC_PREREQ	secp256k1/include/secp256k1.h	106;"	d
SECP256K1_INLINE	secp256k1/include/secp256k1.h	112;"	d
SECP256K1_INLINE	secp256k1/include/secp256k1.h	114;"	d
SECP256K1_INLINE	secp256k1/include/secp256k1.h	116;"	d
SECP256K1_INLINE	secp256k1/include/secp256k1.h	119;"	d
SECP256K1_MODULE_SCHNORR_MAIN	secp256k1/src/modules/schnorr/main_impl.h	8;"	d
SECP256K1_MODULE_SCHNORR_TESTS	secp256k1/src/modules/schnorr/tests_impl.h	8;"	d
SECP256K1_N_0	secp256k1/src/scalar_4x64_impl.h	11;"	d
SECP256K1_N_0	secp256k1/src/scalar_8x32_impl.h	11;"	d
SECP256K1_N_1	secp256k1/src/scalar_4x64_impl.h	12;"	d
SECP256K1_N_1	secp256k1/src/scalar_8x32_impl.h	12;"	d
SECP256K1_N_2	secp256k1/src/scalar_4x64_impl.h	13;"	d
SECP256K1_N_2	secp256k1/src/scalar_8x32_impl.h	13;"	d
SECP256K1_N_3	secp256k1/src/scalar_4x64_impl.h	14;"	d
SECP256K1_N_3	secp256k1/src/scalar_8x32_impl.h	14;"	d
SECP256K1_N_4	secp256k1/src/scalar_8x32_impl.h	15;"	d
SECP256K1_N_5	secp256k1/src/scalar_8x32_impl.h	16;"	d
SECP256K1_N_6	secp256k1/src/scalar_8x32_impl.h	17;"	d
SECP256K1_N_7	secp256k1/src/scalar_8x32_impl.h	18;"	d
SECP256K1_N_C_0	secp256k1/src/scalar_4x64_impl.h	17;"	d
SECP256K1_N_C_0	secp256k1/src/scalar_8x32_impl.h	21;"	d
SECP256K1_N_C_1	secp256k1/src/scalar_4x64_impl.h	18;"	d
SECP256K1_N_C_1	secp256k1/src/scalar_8x32_impl.h	22;"	d
SECP256K1_N_C_2	secp256k1/src/scalar_4x64_impl.h	19;"	d
SECP256K1_N_C_2	secp256k1/src/scalar_8x32_impl.h	23;"	d
SECP256K1_N_C_3	secp256k1/src/scalar_8x32_impl.h	24;"	d
SECP256K1_N_C_4	secp256k1/src/scalar_8x32_impl.h	25;"	d
SECP256K1_N_H_0	secp256k1/src/scalar_4x64_impl.h	22;"	d
SECP256K1_N_H_0	secp256k1/src/scalar_8x32_impl.h	28;"	d
SECP256K1_N_H_1	secp256k1/src/scalar_4x64_impl.h	23;"	d
SECP256K1_N_H_1	secp256k1/src/scalar_8x32_impl.h	29;"	d
SECP256K1_N_H_2	secp256k1/src/scalar_4x64_impl.h	24;"	d
SECP256K1_N_H_2	secp256k1/src/scalar_8x32_impl.h	30;"	d
SECP256K1_N_H_3	secp256k1/src/scalar_4x64_impl.h	25;"	d
SECP256K1_N_H_3	secp256k1/src/scalar_8x32_impl.h	31;"	d
SECP256K1_N_H_4	secp256k1/src/scalar_8x32_impl.h	32;"	d
SECP256K1_N_H_5	secp256k1/src/scalar_8x32_impl.h	33;"	d
SECP256K1_N_H_6	secp256k1/src/scalar_8x32_impl.h	34;"	d
SECP256K1_N_H_7	secp256k1/src/scalar_8x32_impl.h	35;"	d
SECP256K1_RESTRICT	secp256k1/src/util.h	78;"	d
SECP256K1_RESTRICT	secp256k1/src/util.h	82;"	d
SECP256K1_RESTRICT	secp256k1/src/util.h	84;"	d
SECP256K1_RESTRICT	secp256k1/src/util.h	86;"	d
SECP256K1_RESTRICT	secp256k1/src/util.h	89;"	d
SECP256K1_SCALAR_CONST	secp256k1/src/scalar_4x64.h	17;"	d
SECP256K1_SCALAR_CONST	secp256k1/src/scalar_8x32.h	17;"	d
SECP256K1_WARN_UNUSED_RESULT	secp256k1/include/secp256k1.h	140;"	d
SECP256K1_WARN_UNUSED_RESULT	secp256k1/include/secp256k1.h	142;"	d
SECP_INCLUDES	secp256k1/Makefile	/^SECP_INCLUDES =  $/;"	m
SECP_LIBS	secp256k1/Makefile	/^SECP_LIBS =   -lgmp$/;"	m
SECP_TEST_INCLUDES	secp256k1/Makefile	/^SECP_TEST_INCLUDES = $/;"	m
SECP_TEST_LIBS	secp256k1/Makefile	/^SECP_TEST_LIBS = $/;"	m
SECURITY_PARAMETER	daemon/sphinx.h	13;"	d
SED	libsodium/Makefile	/^SED = \/bin\/sed$/;"	m
SED	libsodium/dist-build/Makefile	/^SED = \/bin\/sed$/;"	m
SED	libsodium/msvc-scripts/Makefile	/^SED = \/bin\/sed$/;"	m
SED	libsodium/src/Makefile	/^SED = \/bin\/sed$/;"	m
SED	libsodium/src/libsodium/Makefile	/^SED = \/bin\/sed$/;"	m
SED	libsodium/src/libsodium/include/Makefile	/^SED = \/bin\/sed$/;"	m
SED	libsodium/test/Makefile	/^SED = \/bin\/sed$/;"	m
SED	libsodium/test/default/Makefile	/^SED = \/bin\/sed$/;"	m
SED	secp256k1/Makefile	/^SED = \/bin\/sed$/;"	m
SEGREGATED_WITNESS_FLAG	bitcoin/tx.c	14;"	d	file:
SENT_ADD_ACK_COMMIT	daemon/htlc_state.h	/^	SENT_ADD_ACK_COMMIT,$/;"	e	enum:htlc_state
SENT_ADD_ACK_COMMIT	test/test_protocol.c	/^	SENT_ADD_ACK_COMMIT = SENT_ADD_REVOCATION + REMOTE(COMMITTED),$/;"	e	enum:htlc_state	file:
SENT_ADD_ACK_REVOCATION	daemon/htlc_state.h	/^	SENT_ADD_ACK_REVOCATION,$/;"	e	enum:htlc_state
SENT_ADD_ACK_REVOCATION	test/test_protocol.c	/^	SENT_ADD_ACK_REVOCATION = RECV_ADD_ACK_COMMIT + LOCAL(REVOKED) - ADDING,$/;"	e	enum:htlc_state	file:
SENT_ADD_COMMIT	daemon/htlc_state.h	/^	SENT_ADD_COMMIT,$/;"	e	enum:htlc_state
SENT_ADD_COMMIT	test/test_protocol.c	/^	SENT_ADD_COMMIT = SENT_ADD_HTLC - REMOTE(PENDING) + REMOTE(COMMITTED),$/;"	e	enum:htlc_state	file:
SENT_ADD_HTLC	daemon/htlc_state.h	/^	SENT_ADD_HTLC,$/;"	e	enum:htlc_state
SENT_ADD_HTLC	test/test_protocol.c	/^	SENT_ADD_HTLC = ADDING + OURS + REMOTE(PENDING),$/;"	e	enum:htlc_state	file:
SENT_ADD_REVOCATION	daemon/htlc_state.h	/^	SENT_ADD_REVOCATION,$/;"	e	enum:htlc_state
SENT_ADD_REVOCATION	test/test_protocol.c	/^	SENT_ADD_REVOCATION = RECV_ADD_COMMIT + LOCAL(REVOKED),$/;"	e	enum:htlc_state	file:
SENT_FEECHANGE	daemon/feechange_state.h	/^	SENT_FEECHANGE,$/;"	e	enum:feechange_state
SENT_FEECHANGE_ACK_COMMIT	daemon/feechange_state.h	/^	SENT_FEECHANGE_ACK_COMMIT,$/;"	e	enum:feechange_state
SENT_FEECHANGE_ACK_REVOCATION	daemon/feechange_state.h	/^	SENT_FEECHANGE_ACK_REVOCATION,$/;"	e	enum:feechange_state
SENT_FEECHANGE_COMMIT	daemon/feechange_state.h	/^	SENT_FEECHANGE_COMMIT,$/;"	e	enum:feechange_state
SENT_FEECHANGE_REVOCATION	daemon/feechange_state.h	/^	SENT_FEECHANGE_REVOCATION,$/;"	e	enum:feechange_state
SENT_REMOVE_ACK_COMMIT	daemon/htlc_state.h	/^	SENT_REMOVE_ACK_COMMIT,$/;"	e	enum:htlc_state
SENT_REMOVE_ACK_COMMIT	test/test_protocol.c	/^	SENT_REMOVE_ACK_COMMIT = SENT_REMOVE_REVOCATION - REMOTE(COMMITTED),$/;"	e	enum:htlc_state	file:
SENT_REMOVE_ACK_REVOCATION	daemon/htlc_state.h	/^	SENT_REMOVE_ACK_REVOCATION,$/;"	e	enum:htlc_state
SENT_REMOVE_ACK_REVOCATION	test/test_protocol.c	/^	SENT_REMOVE_ACK_REVOCATION = RECV_REMOVE_ACK_COMMIT + LOCAL(REVOKED) - REMOVING$/;"	e	enum:htlc_state	file:
SENT_REMOVE_COMMIT	daemon/htlc_state.h	/^	SENT_REMOVE_COMMIT,$/;"	e	enum:htlc_state
SENT_REMOVE_COMMIT	test/test_protocol.c	/^	SENT_REMOVE_COMMIT = SENT_REMOVE_HTLC - REMOTE(PENDING) - REMOTE(COMMITTED),$/;"	e	enum:htlc_state	file:
SENT_REMOVE_HTLC	daemon/htlc_state.h	/^	SENT_REMOVE_HTLC,$/;"	e	enum:htlc_state
SENT_REMOVE_HTLC	test/test_protocol.c	/^	SENT_REMOVE_HTLC = REMOVING + THEIRS + REMOTE(PENDING)$/;"	e	enum:htlc_state	file:
SENT_REMOVE_REVOCATION	daemon/htlc_state.h	/^	SENT_REMOVE_REVOCATION,$/;"	e	enum:htlc_state
SENT_REMOVE_REVOCATION	test/test_protocol.c	/^	SENT_REMOVE_REVOCATION = RECV_REMOVE_COMMIT + LOCAL(REVOKED),$/;"	e	enum:htlc_state	file:
SERVICE_UNAVAILABLE_503	daemon/failure.h	/^	SERVICE_UNAVAILABLE_503 = 503,$/;"	e	enum:fail_error
SETTING_SIZE	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	13;"	d	file:
SET_MAKE	libsodium/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	libsodium/dist-build/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	libsodium/msvc-scripts/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	libsodium/src/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	libsodium/src/libsodium/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	libsodium/src/libsodium/include/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	libsodium/test/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	libsodium/test/default/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	secp256k1/Makefile	/^SET_MAKE = $/;"	m
SHA256_HASH__INIT	lightning.pb-c.h	75;"	d
SHA256_INIT	ccan/ccan/crypto/sha256/sha256.h	105;"	d
SHA256_INIT	ccan/ccan/crypto/sha256/sha256.h	98;"	d
SHA256_Pad	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256.c	/^SHA256_Pad(crypto_hash_sha256_state *state)$/;"	f	file:
SHA256_Transform	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256.c	/^SHA256_Transform(uint32_t *state, const unsigned char block[64])$/;"	f	file:
SHA512_Pad	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512.c	/^SHA512_Pad(crypto_hash_sha512_state *state)$/;"	f	file:
SHA512_Transform	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512.c	/^SHA512_Transform(uint64_t *state, const unsigned char block[128])$/;"	f	file:
SHACHAIN_BITS	ccan/ccan/crypto/shachain/shachain.h	15;"	d
SHACHAIN_SIZE	daemon/db.c	70;"	d	file:
SHARED_SECRET_SIZE	daemon/sphinx.c	17;"	d	file:
SHA_FMT	bitcoin/signature.c	16;"	d	file:
SHA_VALS	bitcoin/signature.c	22;"	d	file:
SHELL	libsodium/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	libsodium/dist-build/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	libsodium/msvc-scripts/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	libsodium/src/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	libsodium/src/libsodium/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	libsodium/src/libsodium/include/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	libsodium/test/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	libsodium/test/default/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	secp256k1/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHR	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256.c	62;"	d	file:
SHR	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512.c	62;"	d	file:
SHR	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	14;"	d
SIDE	test/test_protocol.c	76;"	d	file:
SIGHASH_ALL	bitcoin/signature.h	/^    SIGHASH_ALL = 1,$/;"	e	enum:sighash_type
SIGHASH_ANYONECANPAY	bitcoin/signature.h	/^    SIGHASH_ANYONECANPAY = 0x80$/;"	e	enum:sighash_type
SIGHASH_NONE	bitcoin/signature.h	/^    SIGHASH_NONE = 2,$/;"	e	enum:sighash_type
SIGHASH_SINGLE	bitcoin/signature.h	/^    SIGHASH_SINGLE = 3,$/;"	e	enum:sighash_type
SIGNATURE__INIT	lightning.pb-c.h	105;"	d
SINTMAP	ccan/ccan/intmap/intmap.h	60;"	d
SINTMAP_OFF	ccan/ccan/intmap/intmap.h	320;"	d
SINTMAP_OFFSET	ccan/ccan/intmap/intmap.h	319;"	d
SINTMAP_UNOFF	ccan/ccan/intmap/intmap.h	321;"	d
SIPHASH24_INIT	ccan/ccan/crypto/siphash24/siphash24.h	98;"	d
SIPROUND	ccan/ccan/crypto/siphash24/siphash24.c	17;"	d	file:
SIPROUND	libsodium/src/libsodium/crypto_shorthash/siphash24/ref/shorthash_siphash24.c	10;"	d	file:
SODIUM_C99	libsodium/src/libsodium/include/sodium/utils.h	15;"	d
SODIUM_C99	libsodium/src/libsodium/include/sodium/utils.h	17;"	d
SODIUM_EXPORT	libsodium/src/libsodium/include/Makefile	/^SODIUM_EXPORT = sodium.h sodium\/core.h sodium\/crypto_aead_aes256gcm.h \\$/;"	m
SODIUM_EXPORT	libsodium/src/libsodium/include/sodium/export.h	13;"	d
SODIUM_EXPORT	libsodium/src/libsodium/include/sodium/export.h	17;"	d
SODIUM_EXPORT	libsodium/src/libsodium/include/sodium/export.h	19;"	d
SODIUM_EXPORT	libsodium/src/libsodium/include/sodium/export.h	24;"	d
SODIUM_EXPORT	libsodium/src/libsodium/include/sodium/export.h	26;"	d
SODIUM_EXPORT	libsodium/src/libsodium/include/sodium/export.h	29;"	d
SODIUM_EXPORT	libsodium/src/libsodium/include/sodium/export.h	31;"	d
SODIUM_LIBRARY_VERSION	libsodium/Makefile	/^SODIUM_LIBRARY_VERSION = 19:0:1$/;"	m
SODIUM_LIBRARY_VERSION	libsodium/dist-build/Makefile	/^SODIUM_LIBRARY_VERSION = 19:0:1$/;"	m
SODIUM_LIBRARY_VERSION	libsodium/msvc-scripts/Makefile	/^SODIUM_LIBRARY_VERSION = 19:0:1$/;"	m
SODIUM_LIBRARY_VERSION	libsodium/src/Makefile	/^SODIUM_LIBRARY_VERSION = 19:0:1$/;"	m
SODIUM_LIBRARY_VERSION	libsodium/src/libsodium/Makefile	/^SODIUM_LIBRARY_VERSION = 19:0:1$/;"	m
SODIUM_LIBRARY_VERSION	libsodium/src/libsodium/include/Makefile	/^SODIUM_LIBRARY_VERSION = 19:0:1$/;"	m
SODIUM_LIBRARY_VERSION	libsodium/test/Makefile	/^SODIUM_LIBRARY_VERSION = 19:0:1$/;"	m
SODIUM_LIBRARY_VERSION	libsodium/test/default/Makefile	/^SODIUM_LIBRARY_VERSION = 19:0:1$/;"	m
SODIUM_LIBRARY_VERSION_MAJOR	libsodium/Makefile	/^SODIUM_LIBRARY_VERSION_MAJOR = 9$/;"	m
SODIUM_LIBRARY_VERSION_MAJOR	libsodium/builds/msvc/version.h	9;"	d
SODIUM_LIBRARY_VERSION_MAJOR	libsodium/dist-build/Makefile	/^SODIUM_LIBRARY_VERSION_MAJOR = 9$/;"	m
SODIUM_LIBRARY_VERSION_MAJOR	libsodium/msvc-scripts/Makefile	/^SODIUM_LIBRARY_VERSION_MAJOR = 9$/;"	m
SODIUM_LIBRARY_VERSION_MAJOR	libsodium/src/Makefile	/^SODIUM_LIBRARY_VERSION_MAJOR = 9$/;"	m
SODIUM_LIBRARY_VERSION_MAJOR	libsodium/src/libsodium/Makefile	/^SODIUM_LIBRARY_VERSION_MAJOR = 9$/;"	m
SODIUM_LIBRARY_VERSION_MAJOR	libsodium/src/libsodium/include/Makefile	/^SODIUM_LIBRARY_VERSION_MAJOR = 9$/;"	m
SODIUM_LIBRARY_VERSION_MAJOR	libsodium/src/libsodium/include/sodium/version.h	9;"	d
SODIUM_LIBRARY_VERSION_MAJOR	libsodium/test/Makefile	/^SODIUM_LIBRARY_VERSION_MAJOR = 9$/;"	m
SODIUM_LIBRARY_VERSION_MAJOR	libsodium/test/default/Makefile	/^SODIUM_LIBRARY_VERSION_MAJOR = 9$/;"	m
SODIUM_LIBRARY_VERSION_MINOR	libsodium/Makefile	/^SODIUM_LIBRARY_VERSION_MINOR = 2$/;"	m
SODIUM_LIBRARY_VERSION_MINOR	libsodium/builds/msvc/version.h	10;"	d
SODIUM_LIBRARY_VERSION_MINOR	libsodium/dist-build/Makefile	/^SODIUM_LIBRARY_VERSION_MINOR = 2$/;"	m
SODIUM_LIBRARY_VERSION_MINOR	libsodium/msvc-scripts/Makefile	/^SODIUM_LIBRARY_VERSION_MINOR = 2$/;"	m
SODIUM_LIBRARY_VERSION_MINOR	libsodium/src/Makefile	/^SODIUM_LIBRARY_VERSION_MINOR = 2$/;"	m
SODIUM_LIBRARY_VERSION_MINOR	libsodium/src/libsodium/Makefile	/^SODIUM_LIBRARY_VERSION_MINOR = 2$/;"	m
SODIUM_LIBRARY_VERSION_MINOR	libsodium/src/libsodium/include/Makefile	/^SODIUM_LIBRARY_VERSION_MINOR = 2$/;"	m
SODIUM_LIBRARY_VERSION_MINOR	libsodium/src/libsodium/include/sodium/version.h	10;"	d
SODIUM_LIBRARY_VERSION_MINOR	libsodium/test/Makefile	/^SODIUM_LIBRARY_VERSION_MINOR = 2$/;"	m
SODIUM_LIBRARY_VERSION_MINOR	libsodium/test/default/Makefile	/^SODIUM_LIBRARY_VERSION_MINOR = 2$/;"	m
SODIUM_VERSION_STRING	libsodium/builds/msvc/version.h	7;"	d
SODIUM_VERSION_STRING	libsodium/src/libsodium/include/sodium/version.h	7;"	d
SOURCES	libsodium/Makefile	/^SOURCES =$/;"	m
SOURCES	libsodium/dist-build/Makefile	/^SOURCES =$/;"	m
SOURCES	libsodium/msvc-scripts/Makefile	/^SOURCES =$/;"	m
SOURCES	libsodium/src/Makefile	/^SOURCES =$/;"	m
SOURCES	libsodium/src/libsodium/Makefile	/^SOURCES = $(libaesni_la_SOURCES) $(libavx2_la_SOURCES) \\$/;"	m
SOURCES	libsodium/src/libsodium/include/Makefile	/^SOURCES =$/;"	m
SOURCES	libsodium/test/Makefile	/^SOURCES =$/;"	m
SOURCES	libsodium/test/default/Makefile	/^SOURCES = aead_aes256gcm.c aead_chacha20poly1305.c auth.c auth2.c \\$/;"	m
SOURCES	secp256k1/Makefile	/^SOURCES = $(libsecp256k1_la_SOURCES) $(libsecp256k1_common_la_SOURCES) \\$/;"	m
SQL_BLOB	daemon/db.c	56;"	d	file:
SQL_BOOL	daemon/db.c	55;"	d	file:
SQL_FAIL	daemon/db.c	75;"	d	file:
SQL_INVLABEL	daemon/db.c	67;"	d	file:
SQL_PRIVKEY	daemon/db.c	59;"	d	file:
SQL_PUBKEY	daemon/db.c	58;"	d	file:
SQL_R	daemon/db.c	64;"	d	file:
SQL_RHASH	daemon/db.c	62;"	d	file:
SQL_ROUTING	daemon/db.c	74;"	d	file:
SQL_SHA256	daemon/db.c	63;"	d	file:
SQL_SHACHAIN	daemon/db.c	71;"	d	file:
SQL_SIGNATURE	daemon/db.c	60;"	d	file:
SQL_STATENAME	daemon/db.c	66;"	d	file:
SQL_TXID	daemon/db.c	61;"	d	file:
SQL_U32	daemon/db.c	54;"	d	file:
SQL_U64	daemon/db.c	53;"	d	file:
SR	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts.h	11;"	d
SR	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts_aes128ctr.c	/^const unsigned char SR[16] = {0x01, 0x02, 0x03, 0x00, 0x06, 0x07, 0x04, 0x05, 0x0b, 0x08, 0x09, 0x0a, 0x0c, 0x0d, 0x0e, 0x0f};$/;"	v
SRM0	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts.h	12;"	d
SRM0	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts_aes128ctr.c	/^const unsigned char SRM0[16] = {0x0f, 0x0a, 0x05, 0x00, 0x0e, 0x09, 0x04, 0x03, 0x0d, 0x08, 0x07, 0x02, 0x0c, 0x0b, 0x06, 0x01};$/;"	v
SS	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	376;"	d	file:
SS	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	441;"	d	file:
SSIZE_MAX	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	54;"	d	file:
SSIZE_MAX	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	41;"	d	file:
STACK_NOT_EMPTY	ccan/ccan/asort/asort.c	68;"	d	file:
STACK_SIZE	ccan/ccan/asort/asort.c	65;"	d	file:
STACK_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx1.asm	/^STACK_SIZE	equ _XMM_SAVE + _XMM_SAVE_SIZE$/;"	d
STACK_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^STACK_SIZE	equ _RSP      + _RSP_SIZE$/;"	d
STACK_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^STACK_SIZE	equ _RSP       + _RSP_SIZE$/;"	d
STACK_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_sse4.asm	/^STACK_SIZE	equ _XMM_SAVE + _XMM_SAVE_SIZE$/;"	d
STATEVEC	ccan/ccan/isaac/test/run.c	/^static const uint32_t STATEVEC[ISAAC_SZ<<1]={$/;"	v	file:
STATEVEC64	ccan/ccan/isaac/test/run64.c	/^static const uint64_t STATEVEC64[ISAAC64_SZ<<1]={$/;"	v	file:
STATE_CLOSED	daemon/state_types.h	/^	STATE_CLOSED,$/;"	e	enum:state
STATE_CLOSE_ONCHAIN_CHEATED	daemon/state_types.h	/^	STATE_CLOSE_ONCHAIN_CHEATED,$/;"	e	enum:state
STATE_CLOSE_ONCHAIN_MUTUAL	daemon/state_types.h	/^	STATE_CLOSE_ONCHAIN_MUTUAL,$/;"	e	enum:state
STATE_CLOSE_ONCHAIN_OUR_UNILATERAL	daemon/state_types.h	/^	STATE_CLOSE_ONCHAIN_OUR_UNILATERAL,$/;"	e	enum:state
STATE_CLOSE_ONCHAIN_THEIR_UNILATERAL	daemon/state_types.h	/^	STATE_CLOSE_ONCHAIN_THEIR_UNILATERAL,$/;"	e	enum:state
STATE_ERR_ANCHOR_TIMEOUT	daemon/state_types.h	/^	STATE_ERR_ANCHOR_TIMEOUT,$/;"	e	enum:state
STATE_ERR_BREAKDOWN	daemon/state_types.h	/^	STATE_ERR_BREAKDOWN,$/;"	e	enum:state
STATE_ERR_INFORMATION_LEAK	daemon/state_types.h	/^	STATE_ERR_INFORMATION_LEAK,$/;"	e	enum:state
STATE_ERR_INTERNAL	daemon/state_types.h	/^	STATE_ERR_INTERNAL,$/;"	e	enum:state
STATE_INIT	daemon/state_types.h	/^	STATE_INIT,$/;"	e	enum:state
STATE_MAX	daemon/state_types.h	/^	STATE_MAX$/;"	e	enum:state
STATE_MUTUAL_CLOSING	daemon/state_types.h	/^	STATE_MUTUAL_CLOSING,$/;"	e	enum:state
STATE_NORMAL	daemon/state_types.h	/^	STATE_NORMAL,$/;"	e	enum:state
STATE_NORMAL_COMMITTING	daemon/state_types.h	/^	STATE_NORMAL_COMMITTING,$/;"	e	enum:state
STATE_OPEN_WAIT_ANCHORDEPTH	daemon/state_types.h	/^	STATE_OPEN_WAIT_ANCHORDEPTH,$/;"	e	enum:state
STATE_OPEN_WAIT_ANCHORDEPTH_AND_THEIRCOMPLETE	daemon/state_types.h	/^	STATE_OPEN_WAIT_ANCHORDEPTH_AND_THEIRCOMPLETE,$/;"	e	enum:state
STATE_OPEN_WAIT_FOR_ANCHORPKT	daemon/state_types.h	/^	STATE_OPEN_WAIT_FOR_ANCHORPKT,$/;"	e	enum:state
STATE_OPEN_WAIT_FOR_COMMIT_SIGPKT	daemon/state_types.h	/^	STATE_OPEN_WAIT_FOR_COMMIT_SIGPKT,$/;"	e	enum:state
STATE_OPEN_WAIT_FOR_OPENPKT	daemon/state_types.h	/^	STATE_OPEN_WAIT_FOR_OPENPKT,$/;"	e	enum:state
STATE_OPEN_WAIT_THEIRCOMPLETE	daemon/state_types.h	/^	STATE_OPEN_WAIT_THEIRCOMPLETE,$/;"	e	enum:state
STATE_SHUTDOWN	daemon/state_types.h	/^	STATE_SHUTDOWN,$/;"	e	enum:state
STATE_SHUTDOWN_COMMITTING	daemon/state_types.h	/^	STATE_SHUTDOWN_COMMITTING,$/;"	e	enum:state
STATIC_ILOG0	ccan/ccan/ilog/ilog.h	139;"	d
STATIC_ILOG1	ccan/ccan/ilog/ilog.h	140;"	d
STATIC_ILOG2	ccan/ccan/ilog/ilog.h	141;"	d
STATIC_ILOG3	ccan/ccan/ilog/ilog.h	142;"	d
STATIC_ILOG4	ccan/ccan/ilog/ilog.h	144;"	d
STATIC_ILOG5	ccan/ccan/ilog/ilog.h	146;"	d
STATIC_ILOG6	ccan/ccan/ilog/ilog.h	148;"	d
STATIC_ILOG_32	ccan/ccan/ilog/ilog.h	86;"	d
STATIC_ILOG_64	ccan/ccan/ilog/ilog.h	97;"	d
STATUS_COMPLETE	lightningd/subdaemon.h	/^	STATUS_COMPLETE$/;"	e	enum:subdaemon_status
STATUS_FAIL	status.h	18;"	d
STATUS_FD	lightningd/handshake/handshake.c	28;"	d	file:
STATUS_NEED_FD	lightningd/subdaemon.h	/^	STATUS_NEED_FD,$/;"	e	enum:subdaemon_status
STATUS_TRACE	status.h	15;"	d
STDC_HEADERS	secp256k1/src/libsecp256k1-config.h	90;"	d
STEP_HEIGHT	test/test_protocol.c	29;"	d	file:
STORE	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	12;"	d
STORE	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	32;"	d	file:
STORE128	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	6;"	d
STORE32_BE	libsodium/src/libsodium/include/sodium/private/common.h	136;"	d
STORE32_LE	libsodium/src/libsodium/include/sodium/private/common.h	64;"	d
STORE64_BE	libsodium/src/libsodium/include/sodium/private/common.h	118;"	d
STORE64_LE	libsodium/src/libsodium/include/sodium/private/common.h	29;"	d
STOREU	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	15;"	d
STOREU	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-sse41.h	6;"	d
STOREU	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-ssse3.h	6;"	d
STOREU128	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	9;"	d
STOREx	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	161;"	d	file:
STRIP	libsodium/Makefile	/^STRIP = strip$/;"	m
STRIP	libsodium/dist-build/Makefile	/^STRIP = strip$/;"	m
STRIP	libsodium/msvc-scripts/Makefile	/^STRIP = strip$/;"	m
STRIP	libsodium/src/Makefile	/^STRIP = strip$/;"	m
STRIP	libsodium/src/libsodium/Makefile	/^STRIP = strip$/;"	m
STRIP	libsodium/src/libsodium/include/Makefile	/^STRIP = strip$/;"	m
STRIP	libsodium/test/Makefile	/^STRIP = strip$/;"	m
STRIP	libsodium/test/default/Makefile	/^STRIP = strip$/;"	m
STRIP	secp256k1/Makefile	/^STRIP = \/usr\/bin\/strip$/;"	m
STRMAP	ccan/ccan/strmap/strmap.h	35;"	d
STR_EMPTY_OK	ccan/ccan/tal/str/str.h	/^	STR_EMPTY_OK,$/;"	e	enum:strsplit
STR_HASHBYTES	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	14;"	d	file:
STR_MAX_CHARS	ccan/ccan/str/str.h	90;"	d
STR_MAX_CHARS_TCHECK_	ccan/ccan/str/str.h	96;"	d
STR_MAX_CHARS_TCHECK_	ccan/ccan/str/str.h	99;"	d
STR_NO_EMPTY	ccan/ccan/tal/str/str.h	/^	STR_NO_EMPTY$/;"	e	enum:strsplit
STR_NO_TRAIL	ccan/ccan/tal/str/str.h	/^	STR_NO_TRAIL$/;"	e	enum:strjoin
STR_TRAIL	ccan/ccan/tal/str/str.h	/^	STR_TRAIL,$/;"	e	enum:strjoin
SUB	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	30;"	d
SUBDIRS	libsodium/Makefile	/^SUBDIRS = \\$/;"	m
SUBDIRS	libsodium/src/Makefile	/^SUBDIRS = \\$/;"	m
SUBDIRS	libsodium/src/libsodium/Makefile	/^SUBDIRS = \\$/;"	m
SUBDIRS	libsodium/test/Makefile	/^SUBDIRS = \\$/;"	m
SUPERVERBOSE	lightningd/commit_tx.c	10;"	d	file:
SUPERVERBOSE	lightningd/funding_tx.c	8;"	d	file:
SUPERVERBOSE	lightningd/test/run-commit_tx.c	6;"	d	file:
SUPERVERBOSE	lightningd/test/run-funding_tx.c	9;"	d	file:
SUPERVERBOSE	lightningd/test/run-key_derive.c	1;"	d	file:
SWAP	ccan/ccan/asort/asort.c	36;"	d	file:
SWAP32	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts.h	9;"	d
SWAP32	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts_aes128ctr.c	/^const unsigned char SWAP32[16] = {0x03, 0x02, 0x01, 0x00, 0x07, 0x06, 0x05, 0x04, 0x0b, 0x0a, 0x09, 0x08, 0x0f, 0x0e, 0x0d, 0x0c};$/;"	v
SWAPSIZE	ccan/ccan/mem/test/api.c	8;"	d	file:
SX	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	387;"	d	file:
SX	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	442;"	d	file:
Salsa20Random	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^} Salsa20Random;$/;"	t	typeref:struct:Salsa20Random_	file:
Salsa20Random_	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^typedef struct Salsa20Random_ {$/;"	s	file:
Secp256k1Context	secp256k1/src/java/org/bitcoin/Secp256k1Context.java	/^public class Secp256k1Context {$/;"	c
Sha256Hash	lightning.pb-c.h	/^typedef struct _Sha256Hash Sha256Hash;$/;"	t	typeref:struct:_Sha256Hash
Sha256Hash_Closure	lightning.pb-c.h	/^typedef void (*Sha256Hash_Closure)$/;"	t
Sigma0	ccan/ccan/crypto/sha256/sha256.c	/^static uint32_t Sigma0(uint32_t x)$/;"	f	file:
Sigma0	secp256k1/src/hash_impl.h	18;"	d
Sigma0	secp256k1/src/hash_impl.h	277;"	d
Sigma1	ccan/ccan/crypto/sha256/sha256.c	/^static uint32_t Sigma1(uint32_t x)$/;"	f	file:
Sigma1	secp256k1/src/hash_impl.h	19;"	d
Sigma1	secp256k1/src/hash_impl.h	276;"	d
Signature	lightning.pb-c.h	/^typedef struct _Signature Signature;$/;"	t	typeref:struct:_Signature
Signature_Closure	lightning.pb-c.h	/^typedef void (*Signature_Closure)$/;"	t
SysRandom	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^} SysRandom;$/;"	t	typeref:struct:SysRandom_	file:
SysRandom_	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^typedef struct SysRandom_ {$/;"	s	file:
T	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe T;$/;"	m	struct:__anon69
T	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe T;$/;"	m	struct:__anon70
T2d	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe T2d;$/;"	m	struct:__anon72
TABLE	daemon/db.c	77;"	d	file:
TAL_IS_LITERAL	ccan/ccan/tal/tal.h	464;"	d
TAL_IS_LITERAL	ccan/ccan/tal/tal.h	466;"	d
TAL_LABEL	ccan/ccan/tal/tal.h	452;"	d
TAL_LABEL	ccan/ccan/tal/tal.h	455;"	d
TAL_LABEL	ccan/ccan/tal/tal.h	458;"	d
TAL_NOTIFY_ADD_CHILD	ccan/ccan/tal/tal.h	/^	TAL_NOTIFY_ADD_CHILD = 32,$/;"	e	enum:tal_notify_type
TAL_NOTIFY_ADD_NOTIFIER	ccan/ccan/tal/tal.h	/^	TAL_NOTIFY_ADD_NOTIFIER = 128,$/;"	e	enum:tal_notify_type
TAL_NOTIFY_DEL_CHILD	ccan/ccan/tal/tal.h	/^	TAL_NOTIFY_DEL_CHILD = 64,$/;"	e	enum:tal_notify_type
TAL_NOTIFY_DEL_NOTIFIER	ccan/ccan/tal/tal.h	/^	TAL_NOTIFY_DEL_NOTIFIER = 256$/;"	e	enum:tal_notify_type
TAL_NOTIFY_FREE	ccan/ccan/tal/tal.h	/^	TAL_NOTIFY_FREE = 1,$/;"	e	enum:tal_notify_type
TAL_NOTIFY_MOVE	ccan/ccan/tal/tal.h	/^	TAL_NOTIFY_MOVE = 4,$/;"	e	enum:tal_notify_type
TAL_NOTIFY_RENAME	ccan/ccan/tal/tal.h	/^	TAL_NOTIFY_RENAME = 16,$/;"	e	enum:tal_notify_type
TAL_NOTIFY_RESIZE	ccan/ccan/tal/tal.h	/^	TAL_NOTIFY_RESIZE = 8,$/;"	e	enum:tal_notify_type
TAL_NOTIFY_STEAL	ccan/ccan/tal/tal.h	/^	TAL_NOTIFY_STEAL = 2,$/;"	e	enum:tal_notify_type
TARGETS	libsodium/examples/Makefile	/^TARGETS = \\$/;"	m
TCON	ccan/ccan/tcon/tcon.h	42;"	d
TCON	ccan/ccan/tcon/tcon.h	44;"	d
TCON_CONTAINER	ccan/ccan/tcon/tcon.h	230;"	d
TCON_CONTAINER	ccan/ccan/tcon/tcon.h	235;"	d
TCON_VALUE	ccan/ccan/tcon/tcon.h	181;"	d
TCON_WRAP	ccan/ccan/tcon/tcon.h	82;"	d
TCON_WRAP_INIT	ccan/ccan/tcon/tcon.h	101;"	d
TEMPDECLx	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	146;"	d	file:
TEMPx	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	149;"	d	file:
TEST2MAP	ccan/ccan/cppmagic/test/run.c	26;"	d	file:
TESTING	lightningd/handshake/test/run-handshake.c	51;"	d	file:
TESTMAP1	ccan/ccan/cppmagic/test/run.c	21;"	d	file:
TESTMAP2	ccan/ccan/cppmagic/test/run.c	23;"	d	file:
TESTMAP3	ccan/ccan/cppmagic/test/run.c	24;"	d	file:
TESTRECURSE	ccan/ccan/cppmagic/test/run.c	18;"	d	file:
TESTS	libsodium/test/default/Makefile	/^TESTS = $(am__EXEEXT_2)$/;"	m
TESTS_LDADD	libsodium/test/default/Makefile	/^TESTS_LDADD = \\$/;"	m
TESTS_TARGETS	libsodium/test/default/Makefile	/^TESTS_TARGETS = aead_aes256gcm aead_chacha20poly1305 auth auth2 auth3 \\$/;"	m
TEST_DIR	tests/test_lightningd.py	/^TEST_DIR = tempfile.mkdtemp(prefix='lightning-')$/;"	v
TEST_EXTENSIONS	libsodium/test/default/Makefile	/^TEST_EXTENSIONS =  .test$/;"	m
TEST_EXTENSIONS	secp256k1/Makefile	/^TEST_EXTENSIONS =  .test$/;"	m
TEST_FAILURE	secp256k1/src/util.h	28;"	d
TEST_FAILURE	secp256k1/src/util.h	33;"	d
TEST_LDFLAGS	libsodium/Makefile	/^TEST_LDFLAGS = $/;"	m
TEST_LDFLAGS	libsodium/dist-build/Makefile	/^TEST_LDFLAGS = $/;"	m
TEST_LDFLAGS	libsodium/msvc-scripts/Makefile	/^TEST_LDFLAGS = $/;"	m
TEST_LDFLAGS	libsodium/src/Makefile	/^TEST_LDFLAGS = $/;"	m
TEST_LDFLAGS	libsodium/src/libsodium/Makefile	/^TEST_LDFLAGS = $/;"	m
TEST_LDFLAGS	libsodium/src/libsodium/include/Makefile	/^TEST_LDFLAGS = $/;"	m
TEST_LDFLAGS	libsodium/test/Makefile	/^TEST_LDFLAGS = $/;"	m
TEST_LDFLAGS	libsodium/test/default/Makefile	/^TEST_LDFLAGS = $/;"	m
TEST_LOGS	libsodium/test/default/Makefile	/^TEST_LOGS = $(am__test_logs2:.test.log=.log)$/;"	m
TEST_LOGS	secp256k1/Makefile	/^TEST_LOGS = $(am__test_logs2:.test.log=.log)$/;"	m
TEST_LOG_COMPILE	libsodium/test/default/Makefile	/^TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \\$/;"	m
TEST_LOG_COMPILE	secp256k1/Makefile	/^TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \\$/;"	m
TEST_LOG_DRIVER	libsodium/test/default/Makefile	/^TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)\/build-aux\/test-driver$/;"	m
TEST_LOG_DRIVER	secp256k1/Makefile	/^TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)\/build-aux\/test-driver$/;"	m
TEST_NAME	libsodium/test/default/aead_aes256gcm.c	2;"	d	file:
TEST_NAME	libsodium/test/default/aead_chacha20poly1305.c	2;"	d	file:
TEST_NAME	libsodium/test/default/auth.c	2;"	d	file:
TEST_NAME	libsodium/test/default/auth2.c	3;"	d	file:
TEST_NAME	libsodium/test/default/auth3.c	3;"	d	file:
TEST_NAME	libsodium/test/default/auth5.c	2;"	d	file:
TEST_NAME	libsodium/test/default/auth6.c	2;"	d	file:
TEST_NAME	libsodium/test/default/auth7.c	2;"	d	file:
TEST_NAME	libsodium/test/default/box.c	2;"	d	file:
TEST_NAME	libsodium/test/default/box2.c	2;"	d	file:
TEST_NAME	libsodium/test/default/box7.c	2;"	d	file:
TEST_NAME	libsodium/test/default/box8.c	2;"	d	file:
TEST_NAME	libsodium/test/default/box_easy.c	2;"	d	file:
TEST_NAME	libsodium/test/default/box_easy2.c	2;"	d	file:
TEST_NAME	libsodium/test/default/box_seal.c	2;"	d	file:
TEST_NAME	libsodium/test/default/box_seed.c	2;"	d	file:
TEST_NAME	libsodium/test/default/chacha20.c	2;"	d	file:
TEST_NAME	libsodium/test/default/core1.c	2;"	d	file:
TEST_NAME	libsodium/test/default/core2.c	2;"	d	file:
TEST_NAME	libsodium/test/default/core3.c	2;"	d	file:
TEST_NAME	libsodium/test/default/core4.c	2;"	d	file:
TEST_NAME	libsodium/test/default/core5.c	2;"	d	file:
TEST_NAME	libsodium/test/default/core6.c	2;"	d	file:
TEST_NAME	libsodium/test/default/ed25519_convert.c	2;"	d	file:
TEST_NAME	libsodium/test/default/generichash.c	2;"	d	file:
TEST_NAME	libsodium/test/default/generichash2.c	2;"	d	file:
TEST_NAME	libsodium/test/default/generichash3.c	2;"	d	file:
TEST_NAME	libsodium/test/default/hash.c	2;"	d	file:
TEST_NAME	libsodium/test/default/hash3.c	2;"	d	file:
TEST_NAME	libsodium/test/default/onetimeauth.c	2;"	d	file:
TEST_NAME	libsodium/test/default/onetimeauth2.c	2;"	d	file:
TEST_NAME	libsodium/test/default/onetimeauth7.c	2;"	d	file:
TEST_NAME	libsodium/test/default/pwhash.c	2;"	d	file:
TEST_NAME	libsodium/test/default/pwhash_scrypt.c	2;"	d	file:
TEST_NAME	libsodium/test/default/pwhash_scrypt_ll.c	2;"	d	file:
TEST_NAME	libsodium/test/default/randombytes.c	2;"	d	file:
TEST_NAME	libsodium/test/default/scalarmult.c	2;"	d	file:
TEST_NAME	libsodium/test/default/scalarmult2.c	2;"	d	file:
TEST_NAME	libsodium/test/default/scalarmult5.c	2;"	d	file:
TEST_NAME	libsodium/test/default/scalarmult6.c	2;"	d	file:
TEST_NAME	libsodium/test/default/scalarmult7.c	2;"	d	file:
TEST_NAME	libsodium/test/default/secretbox.c	2;"	d	file:
TEST_NAME	libsodium/test/default/secretbox2.c	2;"	d	file:
TEST_NAME	libsodium/test/default/secretbox7.c	2;"	d	file:
TEST_NAME	libsodium/test/default/secretbox8.c	2;"	d	file:
TEST_NAME	libsodium/test/default/secretbox_easy.c	2;"	d	file:
TEST_NAME	libsodium/test/default/secretbox_easy2.c	2;"	d	file:
TEST_NAME	libsodium/test/default/shorthash.c	2;"	d	file:
TEST_NAME	libsodium/test/default/sign.c	2;"	d	file:
TEST_NAME	libsodium/test/default/sodium_core.c	2;"	d	file:
TEST_NAME	libsodium/test/default/sodium_utils.c	1;"	d	file:
TEST_NAME	libsodium/test/default/sodium_utils2.c	8;"	d	file:
TEST_NAME	libsodium/test/default/sodium_utils3.c	8;"	d	file:
TEST_NAME	libsodium/test/default/sodium_version.c	2;"	d	file:
TEST_NAME	libsodium/test/default/stream.c	2;"	d	file:
TEST_NAME	libsodium/test/default/stream2.c	2;"	d	file:
TEST_NAME	libsodium/test/default/stream3.c	2;"	d	file:
TEST_NAME	libsodium/test/default/stream4.c	2;"	d	file:
TEST_NAME	libsodium/test/default/verify1.c	2;"	d	file:
TEST_NAME_OUT	libsodium/test/default/cmptest.h	23;"	d
TEST_NAME_RES	libsodium/test/default/cmptest.h	22;"	d
TEST_PROGRAMS	Makefile	/^TEST_PROGRAMS :=				\\$/;"	m
TEST_SCALAR	ccan/ccan/order/test/api.c	95;"	d	file:
TEST_SIZE	ccan/ccan/asort/test/run.c	46;"	d	file:
TEST_SRCDIR	libsodium/test/default/cmptest.h	15;"	d
TEST_SRCDIR	libsodium/test/default/cmptest.h	16;"	d
TEST_SRCDIR	libsodium/test/default/cmptest.h	19;"	d
TEST_STATE_COVERAGE	test/test_state_coverage.c	922;"	d	file:
TEST_SUITE_LOG	libsodium/test/default/Makefile	/^TEST_SUITE_LOG = test-suite.log$/;"	m
TEST_SUITE_LOG	secp256k1/Makefile	/^TEST_SUITE_LOG = test-suite.log$/;"	m
TEXT_HEIGHT	test/test_protocol.c	28;"	d	file:
TEXT_STYLE	test/test_protocol.c	32;"	d	file:
THEIRS	test/test_protocol.c	72;"	d	file:
TIMEABS_CHECK	ccan/ccan/time/time.h	23;"	d
TIMEABS_CHECK	ccan/ccan/time/time.h	30;"	d
TIMEMONO_CHECK	ccan/ccan/time/time.h	25;"	d
TIMEMONO_CHECK	ccan/ccan/time/time.h	31;"	d
TIMEREL_CHECK	ccan/ccan/time/time.h	21;"	d
TIMEREL_CHECK	ccan/ccan/time/time.h	29;"	d
TIMER_GRANULARITY	ccan/ccan/timer/timer.h	10;"	d
TIMER_LEVEL_BITS	ccan/ccan/timer/timer.h	15;"	d
TIME_CHECK	ccan/ccan/time/time.h	19;"	d
TIME_CHECK	ccan/ccan/time/time.h	28;"	d
TIME_FROM_MSEC	daemon/options.c	44;"	d	file:
TIME_FROM_SEC	daemon/options.c	43;"	d	file:
TIME_HAVE_MONOTONIC	ccan/ccan/time/time.h	73;"	d
TIME_HAVE_MONOTONIC	ccan/ccan/time/time.h	75;"	d
TMP	Makefile	/^	set -e; TMP=`mktemp`; for f in test\/commits\/*.script; do if ! $(VALGRIND) test\/test_protocol < $$f > $$TMP; then echo "test\/test_protocol < $$f FAILED" >&2; exit 1; fi; diff -u $$TMP $$f.expected; done; rm $$TMP$/;"	m
TOKEN_EQ	daemon/jsmn/jsmn_test.c	28;"	d	file:
TOKEN_PRINT	daemon/jsmn/jsmn_test.c	37;"	d	file:
TOKEN_STRING	daemon/jsmn/jsmn_test.c	33;"	d	file:
TOTAL_HOP_PAYLOAD_SIZE	daemon/sphinx.h	16;"	d
TOTAL_PACKET_SIZE	daemon/sphinx.h	18;"	d
TRY	libsodium/src/libsodium/crypto_pwhash/argon2/blake2b-long.c	26;"	d	file:
TRY	libsodium/src/libsodium/crypto_pwhash/argon2/blake2b-long.c	79;"	d	file:
TYPES_H	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/types.h	2;"	d
TailableProc	tests/utils.py	/^class TailableProc(object):$/;"	c
TestData	libsodium/test/default/sign.c	/^} TestData;$/;"	t	typeref:struct:TestData_	file:
TestData_	libsodium/test/default/sign.c	/^typedef struct TestData_ {$/;"	s	file:
Transform	ccan/ccan/crypto/ripemd160/ripemd160.c	/^static void Transform(uint32_t *s, const uint32_t *chunk)$/;"	f	file:
Transform	ccan/ccan/crypto/sha256/sha256.c	/^static void Transform(uint32_t *s, const uint32_t *chunk)$/;"	f	file:
U32C	libsodium/src/libsodium/crypto_core/hchacha20/core_hchacha20.h	9;"	d
U32C	libsodium/src/libsodium/crypto_core/hsalsa20/ref2/core_hsalsa20.c	14;"	d	file:
U32C	libsodium/src/libsodium/crypto_core/salsa20/ref/core_salsa20.c	14;"	d	file:
U32C	libsodium/src/libsodium/crypto_core/salsa2012/ref/core_salsa2012.c	14;"	d	file:
U32C	libsodium/src/libsodium/crypto_core/salsa208/ref/core_salsa208.c	14;"	d	file:
U32C	libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c	28;"	d	file:
U32V	libsodium/src/libsodium/crypto_core/hchacha20/core_hchacha20.h	12;"	d
U32V	libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c	31;"	d	file:
U32_STR_MAXSIZE	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	347;"	d	file:
U8C	libsodium/src/libsodium/crypto_core/hchacha20/core_hchacha20.h	8;"	d
U8C	libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c	27;"	d	file:
U8V	libsodium/src/libsodium/crypto_core/hchacha20/core_hchacha20.h	11;"	d
U8V	libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c	30;"	d	file:
UINTMAP	ccan/ccan/intmap/intmap.h	42;"	d
UNAUTHORIZED_401	daemon/failure.h	/^	UNAUTHORIZED_401 = 401,$/;"	e	enum:fail_error
UNDIAGONALIZE	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-sse41.h	68;"	d
UNDIAGONALIZE	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-ssse3.h	68;"	d
UNDIAGONALIZE	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ssse3.h	87;"	d
UNNEEDED	ccan/ccan/compiler/compiler.h	112;"	d
UNNEEDED	ccan/ccan/compiler/compiler.h	157;"	d
UNUSED	ccan/ccan/compiler/compiler.h	153;"	d
UNUSED	ccan/ccan/compiler/compiler.h	163;"	d
UPDATE	wire/onion_defs.h	16;"	d
UPDATE_ADD_HTLC__INIT	lightning.pb-c.h	388;"	d
UPDATE_COMMIT__INIT	lightning.pb-c.h	479;"	d
UPDATE_FAIL_HTLC__INIT	lightning.pb-c.h	450;"	d
UPDATE_FEE__INIT	lightning.pb-c.h	463;"	d
UPDATE_FULFILL_HTLC__INIT	lightning.pb-c.h	408;"	d
UPDATE_REVOCATION__INIT	lightning.pb-c.h	499;"	d
USE_ASM_X86_64	secp256k1/src/basic-config.h	12;"	d
USE_ASM_X86_64	secp256k1/src/libsecp256k1-config.h	93;"	d
USE_BASIC_CONFIG	secp256k1/src/gen_context.c	7;"	d	file:
USE_ECMULT_STATIC_PRECOMPUTATION	secp256k1/src/libsecp256k1-config.h	96;"	d
USE_ENDOMORPHISM	secp256k1/src/basic-config.h	13;"	d
USE_FIELD_10X26	secp256k1/src/basic-config.h	14;"	d
USE_FIELD_10X26	secp256k1/src/basic-config.h	28;"	d
USE_FIELD_5X52	secp256k1/src/basic-config.h	15;"	d
USE_FIELD_5X52	secp256k1/src/libsecp256k1-config.h	109;"	d
USE_FIELD_INV_BUILTIN	secp256k1/src/basic-config.h	16;"	d
USE_FIELD_INV_BUILTIN	secp256k1/src/basic-config.h	26;"	d
USE_FIELD_INV_NUM	secp256k1/src/basic-config.h	17;"	d
USE_FIELD_INV_NUM	secp256k1/src/libsecp256k1-config.h	115;"	d
USE_FUNC_BOILERPLATE	ccan/tools/configurator/configurator.c	521;"	d	file:
USE_NUM_GMP	secp256k1/src/basic-config.h	18;"	d
USE_NUM_GMP	secp256k1/src/libsecp256k1-config.h	118;"	d
USE_NUM_NONE	secp256k1/src/basic-config.h	19;"	d
USE_NUM_NONE	secp256k1/src/basic-config.h	25;"	d
USE_SCALAR_4X64	secp256k1/src/basic-config.h	20;"	d
USE_SCALAR_4X64	secp256k1/src/libsecp256k1-config.h	124;"	d
USE_SCALAR_8X32	secp256k1/src/basic-config.h	21;"	d
USE_SCALAR_8X32	secp256k1/src/basic-config.h	29;"	d
USE_SCALAR_INV_BUILTIN	secp256k1/src/basic-config.h	22;"	d
USE_SCALAR_INV_BUILTIN	secp256k1/src/basic-config.h	27;"	d
USE_SCALAR_INV_NUM	secp256k1/src/basic-config.h	23;"	d
USE_SCALAR_INV_NUM	secp256k1/src/libsecp256k1-config.h	133;"	d
UTILS_H	libsodium/examples/utils.h	5;"	d
UnixDomainSocketRpc	contrib/pylightning/lightning/lightning.py	/^class UnixDomainSocketRpc(object):$/;"	c
UpdateAddHtlc	lightning.pb-c.h	/^typedef struct _UpdateAddHtlc UpdateAddHtlc;$/;"	t	typeref:struct:_UpdateAddHtlc
UpdateAddHtlc_Closure	lightning.pb-c.h	/^typedef void (*UpdateAddHtlc_Closure)$/;"	t
UpdateCommit	lightning.pb-c.h	/^typedef struct _UpdateCommit UpdateCommit;$/;"	t	typeref:struct:_UpdateCommit
UpdateCommit_Closure	lightning.pb-c.h	/^typedef void (*UpdateCommit_Closure)$/;"	t
UpdateFailHtlc	lightning.pb-c.h	/^typedef struct _UpdateFailHtlc UpdateFailHtlc;$/;"	t	typeref:struct:_UpdateFailHtlc
UpdateFailHtlc_Closure	lightning.pb-c.h	/^typedef void (*UpdateFailHtlc_Closure)$/;"	t
UpdateFee	lightning.pb-c.h	/^typedef struct _UpdateFee UpdateFee;$/;"	t	typeref:struct:_UpdateFee
UpdateFee_Closure	lightning.pb-c.h	/^typedef void (*UpdateFee_Closure)$/;"	t
UpdateFulfillHtlc	lightning.pb-c.h	/^typedef struct _UpdateFulfillHtlc UpdateFulfillHtlc;$/;"	t	typeref:struct:_UpdateFulfillHtlc
UpdateFulfillHtlc_Closure	lightning.pb-c.h	/^typedef void (*UpdateFulfillHtlc_Closure)$/;"	t
UpdateRevocation	lightning.pb-c.h	/^typedef struct _UpdateRevocation UpdateRevocation;$/;"	t	typeref:struct:_UpdateRevocation
UpdateRevocation_Closure	lightning.pb-c.h	/^typedef void (*UpdateRevocation_Closure)$/;"	t
VALGRIND	Makefile	/^VALGRIND=valgrind -q --error-exitcode=7$/;"	m
VALGRIND	libsodium/Makefile	/^VALGRIND = $/;"	m
VALGRIND	libsodium/dist-build/Makefile	/^VALGRIND = $/;"	m
VALGRIND	libsodium/msvc-scripts/Makefile	/^VALGRIND = $/;"	m
VALGRIND	libsodium/src/Makefile	/^VALGRIND = $/;"	m
VALGRIND	libsodium/src/libsodium/Makefile	/^VALGRIND = $/;"	m
VALGRIND	libsodium/src/libsodium/include/Makefile	/^VALGRIND = $/;"	m
VALGRIND	libsodium/test/Makefile	/^VALGRIND = $/;"	m
VALGRIND	libsodium/test/default/Makefile	/^VALGRIND = $/;"	m
VALGRIND	tests/test_lightningd.py	/^VALGRIND = os.getenv("NOVALGRIND", None) == None$/;"	v
VALGRIND_ENABLED	libsodium/Makefile	/^VALGRIND_ENABLED = no$/;"	m
VALGRIND_ENABLED	libsodium/dist-build/Makefile	/^VALGRIND_ENABLED = no$/;"	m
VALGRIND_ENABLED	libsodium/msvc-scripts/Makefile	/^VALGRIND_ENABLED = no$/;"	m
VALGRIND_ENABLED	libsodium/src/Makefile	/^VALGRIND_ENABLED = no$/;"	m
VALGRIND_ENABLED	libsodium/src/libsodium/Makefile	/^VALGRIND_ENABLED = no$/;"	m
VALGRIND_ENABLED	libsodium/src/libsodium/include/Makefile	/^VALGRIND_ENABLED = no$/;"	m
VALGRIND_ENABLED	libsodium/test/Makefile	/^VALGRIND_ENABLED = no$/;"	m
VALGRIND_ENABLED	libsodium/test/default/Makefile	/^VALGRIND_ENABLED = no$/;"	m
VALGRIND_HAVE_TOOL_drd	libsodium/Makefile	/^VALGRIND_HAVE_TOOL_drd = $/;"	m
VALGRIND_HAVE_TOOL_drd	libsodium/dist-build/Makefile	/^VALGRIND_HAVE_TOOL_drd = $/;"	m
VALGRIND_HAVE_TOOL_drd	libsodium/msvc-scripts/Makefile	/^VALGRIND_HAVE_TOOL_drd = $/;"	m
VALGRIND_HAVE_TOOL_drd	libsodium/src/Makefile	/^VALGRIND_HAVE_TOOL_drd = $/;"	m
VALGRIND_HAVE_TOOL_drd	libsodium/src/libsodium/Makefile	/^VALGRIND_HAVE_TOOL_drd = $/;"	m
VALGRIND_HAVE_TOOL_drd	libsodium/src/libsodium/include/Makefile	/^VALGRIND_HAVE_TOOL_drd = $/;"	m
VALGRIND_HAVE_TOOL_drd	libsodium/test/Makefile	/^VALGRIND_HAVE_TOOL_drd = $/;"	m
VALGRIND_HAVE_TOOL_drd	libsodium/test/default/Makefile	/^VALGRIND_HAVE_TOOL_drd = $/;"	m
VALGRIND_HAVE_TOOL_exp_sgcheck	libsodium/Makefile	/^VALGRIND_HAVE_TOOL_exp_sgcheck = $/;"	m
VALGRIND_HAVE_TOOL_exp_sgcheck	libsodium/dist-build/Makefile	/^VALGRIND_HAVE_TOOL_exp_sgcheck = $/;"	m
VALGRIND_HAVE_TOOL_exp_sgcheck	libsodium/msvc-scripts/Makefile	/^VALGRIND_HAVE_TOOL_exp_sgcheck = $/;"	m
VALGRIND_HAVE_TOOL_exp_sgcheck	libsodium/src/Makefile	/^VALGRIND_HAVE_TOOL_exp_sgcheck = $/;"	m
VALGRIND_HAVE_TOOL_exp_sgcheck	libsodium/src/libsodium/Makefile	/^VALGRIND_HAVE_TOOL_exp_sgcheck = $/;"	m
VALGRIND_HAVE_TOOL_exp_sgcheck	libsodium/src/libsodium/include/Makefile	/^VALGRIND_HAVE_TOOL_exp_sgcheck = $/;"	m
VALGRIND_HAVE_TOOL_exp_sgcheck	libsodium/test/Makefile	/^VALGRIND_HAVE_TOOL_exp_sgcheck = $/;"	m
VALGRIND_HAVE_TOOL_exp_sgcheck	libsodium/test/default/Makefile	/^VALGRIND_HAVE_TOOL_exp_sgcheck = $/;"	m
VALGRIND_HAVE_TOOL_helgrind	libsodium/Makefile	/^VALGRIND_HAVE_TOOL_helgrind = $/;"	m
VALGRIND_HAVE_TOOL_helgrind	libsodium/dist-build/Makefile	/^VALGRIND_HAVE_TOOL_helgrind = $/;"	m
VALGRIND_HAVE_TOOL_helgrind	libsodium/msvc-scripts/Makefile	/^VALGRIND_HAVE_TOOL_helgrind = $/;"	m
VALGRIND_HAVE_TOOL_helgrind	libsodium/src/Makefile	/^VALGRIND_HAVE_TOOL_helgrind = $/;"	m
VALGRIND_HAVE_TOOL_helgrind	libsodium/src/libsodium/Makefile	/^VALGRIND_HAVE_TOOL_helgrind = $/;"	m
VALGRIND_HAVE_TOOL_helgrind	libsodium/src/libsodium/include/Makefile	/^VALGRIND_HAVE_TOOL_helgrind = $/;"	m
VALGRIND_HAVE_TOOL_helgrind	libsodium/test/Makefile	/^VALGRIND_HAVE_TOOL_helgrind = $/;"	m
VALGRIND_HAVE_TOOL_helgrind	libsodium/test/default/Makefile	/^VALGRIND_HAVE_TOOL_helgrind = $/;"	m
VALGRIND_HAVE_TOOL_memcheck	libsodium/Makefile	/^VALGRIND_HAVE_TOOL_memcheck = $/;"	m
VALGRIND_HAVE_TOOL_memcheck	libsodium/dist-build/Makefile	/^VALGRIND_HAVE_TOOL_memcheck = $/;"	m
VALGRIND_HAVE_TOOL_memcheck	libsodium/msvc-scripts/Makefile	/^VALGRIND_HAVE_TOOL_memcheck = $/;"	m
VALGRIND_HAVE_TOOL_memcheck	libsodium/src/Makefile	/^VALGRIND_HAVE_TOOL_memcheck = $/;"	m
VALGRIND_HAVE_TOOL_memcheck	libsodium/src/libsodium/Makefile	/^VALGRIND_HAVE_TOOL_memcheck = $/;"	m
VALGRIND_HAVE_TOOL_memcheck	libsodium/src/libsodium/include/Makefile	/^VALGRIND_HAVE_TOOL_memcheck = $/;"	m
VALGRIND_HAVE_TOOL_memcheck	libsodium/test/Makefile	/^VALGRIND_HAVE_TOOL_memcheck = $/;"	m
VALGRIND_HAVE_TOOL_memcheck	libsodium/test/default/Makefile	/^VALGRIND_HAVE_TOOL_memcheck = $/;"	m
VALGRIND_TEST_ARGS	Makefile	/^VALGRIND_TEST_ARGS = --track-origins=yes --leak-check=full --show-reachable=yes$/;"	m
VARIANT	daemon/test/Makefile	/^	VARIANT=$* daemon\/test\/scripts\/setup.sh$/;"	m
VARIANT	daemon/test/Makefile	/^	VARIANT=$* daemon\/test\/scripts\/shutdown.sh 2>\/dev\/null || true$/;"	m
VARIANT	daemon/test/Makefile	/^	VARIANT=0 daemon\/test\/scripts\/shutdown.sh$/;"	m
VARIANT	daemon/test/Makefile	/^	VARIANT=1 daemon\/test\/scripts\/shutdown.sh$/;"	m
VARIANT	daemon/test/Makefile	/^	VARIANT=2 daemon\/test\/scripts\/shutdown.sh$/;"	m
VARIANT	lightningd/test/Makefile	/^	VARIANT=$* daemon\/test\/scripts\/setup.sh$/;"	m
VARIANT	lightningd/test/Makefile	/^	VARIANT=$* daemon\/test\/scripts\/shutdown.sh 2>\/dev\/null || true$/;"	m
VARIANT	lightningd/test/Makefile	/^	VARIANT=0 daemon\/test\/scripts\/shutdown.sh$/;"	m
VARIANT	lightningd/test/Makefile	/^	VARIANT=1 daemon\/test\/scripts\/shutdown.sh$/;"	m
VARIANT	lightningd/test/Makefile	/^	VARIANT=2 daemon\/test\/scripts\/shutdown.sh$/;"	m
VARINT_MAX_LEN	bitcoin/varint.h	10;"	d
VBPI	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	25;"	d	file:
VBPI	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	27;"	d	file:
VERIFY_BITS	secp256k1/src/field_10x26_impl.h	441;"	d
VERIFY_BITS	secp256k1/src/field_10x26_impl.h	443;"	d
VERIFY_BITS	secp256k1/src/field_5x52_int128_impl.h	13;"	d
VERIFY_BITS	secp256k1/src/field_5x52_int128_impl.h	15;"	d
VERIFY_CHECK	secp256k1/src/util.h	61;"	d
VERIFY_CHECK	secp256k1/src/util.h	64;"	d
VERIFY_SETUP	secp256k1/src/util.h	62;"	d
VERIFY_SETUP	secp256k1/src/util.h	65;"	d
VERSION	gen_version.h	1;"	d
VERSION	libsodium/Makefile	/^VERSION = 1.0.10$/;"	m
VERSION	libsodium/dist-build/Makefile	/^VERSION = 1.0.10$/;"	m
VERSION	libsodium/msvc-scripts/Makefile	/^VERSION = 1.0.10$/;"	m
VERSION	libsodium/src/Makefile	/^VERSION = 1.0.10$/;"	m
VERSION	libsodium/src/libsodium/Makefile	/^VERSION = 1.0.10$/;"	m
VERSION	libsodium/src/libsodium/include/Makefile	/^VERSION = 1.0.10$/;"	m
VERSION	libsodium/test/Makefile	/^VERSION = 1.0.10$/;"	m
VERSION	libsodium/test/default/Makefile	/^VERSION = 1.0.10$/;"	m
VERSION	secp256k1/Makefile	/^VERSION = 0.1$/;"	m
VERSION	secp256k1/src/libsecp256k1-config.h	136;"	d
VERSION_NAME	gen_version.h	2;"	d
VERSION_NOT_SUPPORTED_505	daemon/failure.h	/^	VERSION_NOT_SUPPORTED_505 = 505$/;"	e	enum:fail_error
VG_CHECK	secp256k1/src/tests.c	34;"	d	file:
VG_CHECK	secp256k1/src/tests.c	37;"	d	file:
VG_UNDEF	secp256k1/src/tests.c	33;"	d	file:
VG_UNDEF	secp256k1/src/tests.c	36;"	d	file:
WARN_UNUSED_RESULT	ccan/ccan/compiler/compiler.h	226;"	d
WARN_UNUSED_RESULT	ccan/ccan/compiler/compiler.h	228;"	d
WINAPI_DESKTOP	libsodium/src/libsodium/sodium/utils.c	31;"	d	file:
WINDOW_A	secp256k1/src/ecmult_impl.h	15;"	d
WINDOW_G	secp256k1/src/ecmult_impl.h	21;"	d
WINDOW_G	secp256k1/src/ecmult_impl.h	24;"	d
WIRE_ACCEPT_CHANNEL	wire/gen_peer_wire.h	/^	WIRE_ACCEPT_CHANNEL = 33,$/;"	e	enum:wire_type
WIRE_AMOUNT_BELOW_MINIMUM	wire/gen_onion_wire.h	/^	WIRE_AMOUNT_BELOW_MINIMUM = UPDATE|11,$/;"	e	enum:onion_type
WIRE_ANNOUNCEMENT_SIGNATURES	wire/gen_peer_wire.h	/^	WIRE_ANNOUNCEMENT_SIGNATURES = 259,$/;"	e	enum:wire_type
WIRE_BAD_COMMAND	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_BAD_COMMAND = 0x8000,$/;"	e	enum:handshake_status_wire_type
WIRE_BAD_FDPASS	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_BAD_FDPASS = 0x8001,$/;"	e	enum:handshake_status_wire_type
WIRE_CHANNEL_ANNOUNCEMENT	wire/gen_peer_wire.h	/^	WIRE_CHANNEL_ANNOUNCEMENT = 256,$/;"	e	enum:wire_type
WIRE_CHANNEL_UPDATE	wire/gen_peer_wire.h	/^	WIRE_CHANNEL_UPDATE = 258,$/;"	e	enum:wire_type
WIRE_CLOSING_SIGNED	wire/gen_peer_wire.h	/^	WIRE_CLOSING_SIGNED = 39,$/;"	e	enum:wire_type
WIRE_COMMIT_SIG	wire/gen_peer_wire.h	/^	WIRE_COMMIT_SIG = 132,$/;"	e	enum:wire_type
WIRE_ERROR	wire/gen_peer_wire.h	/^	WIRE_ERROR = 17,$/;"	e	enum:wire_type
WIRE_EXPIRY_TOO_SOON	wire/gen_onion_wire.h	/^	WIRE_EXPIRY_TOO_SOON = UPDATE|14,$/;"	e	enum:onion_type
WIRE_FEE_INSUFFICIENT	wire/gen_onion_wire.h	/^	WIRE_FEE_INSUFFICIENT = UPDATE|12,$/;"	e	enum:onion_type
WIRE_FINAL_EXPIRY_TOO_SOON	wire/gen_onion_wire.h	/^	WIRE_FINAL_EXPIRY_TOO_SOON = 17,$/;"	e	enum:onion_type
WIRE_FUNDING_CREATED	wire/gen_peer_wire.h	/^	WIRE_FUNDING_CREATED = 34,$/;"	e	enum:wire_type
WIRE_FUNDING_LOCKED	wire/gen_peer_wire.h	/^	WIRE_FUNDING_LOCKED = 36,$/;"	e	enum:wire_type
WIRE_FUNDING_SIGNED	wire/gen_peer_wire.h	/^	WIRE_FUNDING_SIGNED = 35,$/;"	e	enum:wire_type
WIRE_GEN	Makefile	/^WIRE_GEN := tools\/generate-wire.py$/;"	m
WIRE_GEN_HEADERS	wire/Makefile	/^WIRE_GEN_HEADERS := wire\/gen_peer_wire.h wire\/gen_onion_wire.h$/;"	m
WIRE_GEN_ONION_SRC	wire/Makefile	/^WIRE_GEN_ONION_SRC := wire\/gen_onion_wire.c$/;"	m
WIRE_GEN_SRC	wire/Makefile	/^WIRE_GEN_SRC := wire\/gen_peer_wire.c$/;"	m
WIRE_GOSSIPCTL_NEW_PEER	lightningd/gossip/gen_gossip_control_wire.h	/^	WIRE_GOSSIPCTL_NEW_PEER = 1,$/;"	e	enum:gossip_control_wire_type
WIRE_GOSSIPCTL_RELEASE_PEER	lightningd/gossip/gen_gossip_control_wire.h	/^	WIRE_GOSSIPCTL_RELEASE_PEER = 2,$/;"	e	enum:gossip_control_wire_type
WIRE_GOSSIPCTL_RELEASE_PEER_RESPONSE	lightningd/gossip/gen_gossip_control_wire.h	/^	WIRE_GOSSIPCTL_RELEASE_PEER_RESPONSE = 102,$/;"	e	enum:gossip_control_wire_type
WIRE_GOSSIPSTATUS_BAD_NEW_PEER_REQUEST	lightningd/gossip/gen_gossip_status_wire.h	/^	WIRE_GOSSIPSTATUS_BAD_NEW_PEER_REQUEST = 0x8001,$/;"	e	enum:gossip_status_wire_type
WIRE_GOSSIPSTATUS_BAD_RELEASE_REQUEST	lightningd/gossip/gen_gossip_status_wire.h	/^	WIRE_GOSSIPSTATUS_BAD_RELEASE_REQUEST = 0x8002,$/;"	e	enum:gossip_status_wire_type
WIRE_GOSSIPSTATUS_BAD_REQUEST	lightningd/gossip/gen_gossip_status_wire.h	/^	WIRE_GOSSIPSTATUS_BAD_REQUEST = 0x8003,$/;"	e	enum:gossip_status_wire_type
WIRE_GOSSIPSTATUS_FDPASS_FAILED	lightningd/gossip/gen_gossip_status_wire.h	/^	WIRE_GOSSIPSTATUS_FDPASS_FAILED = 0x8004,$/;"	e	enum:gossip_status_wire_type
WIRE_GOSSIPSTATUS_INIT_FAILED	lightningd/gossip/gen_gossip_status_wire.h	/^	WIRE_GOSSIPSTATUS_INIT_FAILED = 0x8000,$/;"	e	enum:gossip_status_wire_type
WIRE_GOSSIPSTATUS_PEER_BAD_MSG	lightningd/gossip/gen_gossip_status_wire.h	/^	WIRE_GOSSIPSTATUS_PEER_BAD_MSG = 100,$/;"	e	enum:gossip_status_wire_type
WIRE_GOSSIPSTATUS_PEER_NONGOSSIP	lightningd/gossip/gen_gossip_status_wire.h	/^	WIRE_GOSSIPSTATUS_PEER_NONGOSSIP = 3,$/;"	e	enum:gossip_status_wire_type
WIRE_GOSSIPSTATUS_PEER_READY	lightningd/gossip/gen_gossip_status_wire.h	/^	WIRE_GOSSIPSTATUS_PEER_READY = 2,$/;"	e	enum:gossip_status_wire_type
WIRE_HANDSHAKE_EXIT_REQ	lightningd/handshake/gen_handshake_control_wire.h	/^	WIRE_HANDSHAKE_EXIT_REQ = 4,$/;"	e	enum:handshake_control_wire_type
WIRE_HANDSHAKE_INITIATOR_REQ	lightningd/handshake/gen_handshake_control_wire.h	/^	WIRE_HANDSHAKE_INITIATOR_REQ = 2,$/;"	e	enum:handshake_control_wire_type
WIRE_HANDSHAKE_INITIATOR_RESP	lightningd/handshake/gen_handshake_control_wire.h	/^	WIRE_HANDSHAKE_INITIATOR_RESP = 3,$/;"	e	enum:handshake_control_wire_type
WIRE_HANDSHAKE_RESPONDER_REQ	lightningd/handshake/gen_handshake_control_wire.h	/^	WIRE_HANDSHAKE_RESPONDER_REQ = 0,$/;"	e	enum:handshake_control_wire_type
WIRE_HANDSHAKE_RESPONDER_RESP	lightningd/handshake/gen_handshake_control_wire.h	/^	WIRE_HANDSHAKE_RESPONDER_RESP = 1,$/;"	e	enum:handshake_control_wire_type
WIRE_HEADERS	wire/Makefile	/^WIRE_HEADERS := wire\/wire.h			\\$/;"	m
WIRE_HSMCTL_HSMFD_ECDH	lightningd/hsm/gen_hsm_control_wire.h	/^	WIRE_HSMCTL_HSMFD_ECDH = 3,$/;"	e	enum:hsm_control_wire_type
WIRE_HSMCTL_HSMFD_ECDH_RESPONSE	lightningd/hsm/gen_hsm_control_wire.h	/^	WIRE_HSMCTL_HSMFD_ECDH_RESPONSE = 103,$/;"	e	enum:hsm_control_wire_type
WIRE_HSMCTL_INIT_LOAD	lightningd/hsm/gen_hsm_control_wire.h	/^	WIRE_HSMCTL_INIT_LOAD = 2,$/;"	e	enum:hsm_control_wire_type
WIRE_HSMCTL_INIT_NEW	lightningd/hsm/gen_hsm_control_wire.h	/^	WIRE_HSMCTL_INIT_NEW = 1,$/;"	e	enum:hsm_control_wire_type
WIRE_HSMCTL_INIT_RESPONSE	lightningd/hsm/gen_hsm_control_wire.h	/^	WIRE_HSMCTL_INIT_RESPONSE = 100,$/;"	e	enum:hsm_control_wire_type
WIRE_HSMCTL_SHUTDOWN	lightningd/hsm/gen_hsm_control_wire.h	/^	WIRE_HSMCTL_SHUTDOWN = 4,$/;"	e	enum:hsm_control_wire_type
WIRE_HSMSTATUS_BAD_REQUEST	lightningd/hsm/gen_hsm_status_wire.h	/^	WIRE_HSMSTATUS_BAD_REQUEST = 0x8002,$/;"	e	enum:hsm_status_wire_type
WIRE_HSMSTATUS_CLIENT_BAD_REQUEST	lightningd/hsm/gen_hsm_status_wire.h	/^	WIRE_HSMSTATUS_CLIENT_BAD_REQUEST = 1,$/;"	e	enum:hsm_status_wire_type
WIRE_HSMSTATUS_FD_FAILED	lightningd/hsm/gen_hsm_status_wire.h	/^	WIRE_HSMSTATUS_FD_FAILED = 0x8003,$/;"	e	enum:hsm_status_wire_type
WIRE_HSMSTATUS_INIT_FAILED	lightningd/hsm/gen_hsm_status_wire.h	/^	WIRE_HSMSTATUS_INIT_FAILED = 0x8000,$/;"	e	enum:hsm_status_wire_type
WIRE_HSMSTATUS_WRITEMSG_FAILED	lightningd/hsm/gen_hsm_status_wire.h	/^	WIRE_HSMSTATUS_WRITEMSG_FAILED = 0x8001,$/;"	e	enum:hsm_status_wire_type
WIRE_HSM_ECDH_REQ	lightningd/hsm/gen_hsm_client_wire.h	/^	WIRE_HSM_ECDH_REQ = 1,$/;"	e	enum:hsm_client_wire_type
WIRE_HSM_ECDH_RESP	lightningd/hsm/gen_hsm_client_wire.h	/^	WIRE_HSM_ECDH_RESP = 100,$/;"	e	enum:hsm_client_wire_type
WIRE_INCORRECT_CLTV_EXPIRY	wire/gen_onion_wire.h	/^	WIRE_INCORRECT_CLTV_EXPIRY = UPDATE|13,$/;"	e	enum:onion_type
WIRE_INCORRECT_PAYMENT_AMOUNT	wire/gen_onion_wire.h	/^	WIRE_INCORRECT_PAYMENT_AMOUNT = PERM|16,$/;"	e	enum:onion_type
WIRE_INIT	wire/gen_peer_wire.h	/^	WIRE_INIT = 16,$/;"	e	enum:wire_type
WIRE_INITR_ACT1_BAD_ECDH_FOR_SS	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_INITR_ACT1_BAD_ECDH_FOR_SS = 0x8011,$/;"	e	enum:handshake_status_wire_type
WIRE_INITR_ACT1_WRITE_FAILED	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_INITR_ACT1_WRITE_FAILED = 0x8012,$/;"	e	enum:handshake_status_wire_type
WIRE_INITR_ACT2_BAD_ECDH_FOR_SS	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_INITR_ACT2_BAD_ECDH_FOR_SS = 0x8016,$/;"	e	enum:handshake_status_wire_type
WIRE_INITR_ACT2_BAD_PUBKEY	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_INITR_ACT2_BAD_PUBKEY = 0x8015,$/;"	e	enum:handshake_status_wire_type
WIRE_INITR_ACT2_BAD_TAG	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_INITR_ACT2_BAD_TAG = 0x8017,$/;"	e	enum:handshake_status_wire_type
WIRE_INITR_ACT2_BAD_VERSION	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_INITR_ACT2_BAD_VERSION = 0x8014,$/;"	e	enum:handshake_status_wire_type
WIRE_INITR_ACT2_READ_FAILED	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_INITR_ACT2_READ_FAILED = 0x8013,$/;"	e	enum:handshake_status_wire_type
WIRE_INITR_ACT3_BAD_HSM_ECDH	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_INITR_ACT3_BAD_HSM_ECDH = 0x8018,$/;"	e	enum:handshake_status_wire_type
WIRE_INITR_ACT3_WRITE_FAILED	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_INITR_ACT3_WRITE_FAILED = 0x8019,$/;"	e	enum:handshake_status_wire_type
WIRE_INITR_ACT_ONE	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_INITR_ACT_ONE = 1,$/;"	e	enum:handshake_status_wire_type
WIRE_INITR_ACT_THREE	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_INITR_ACT_THREE = 3,$/;"	e	enum:handshake_status_wire_type
WIRE_INITR_ACT_TWO	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_INITR_ACT_TWO = 2,$/;"	e	enum:handshake_status_wire_type
WIRE_INVALID_ONION_HMAC	wire/gen_onion_wire.h	/^	WIRE_INVALID_ONION_HMAC = BADONION|PERM|5,$/;"	e	enum:onion_type
WIRE_INVALID_ONION_KEY	wire/gen_onion_wire.h	/^	WIRE_INVALID_ONION_KEY = BADONION|PERM|6,$/;"	e	enum:onion_type
WIRE_INVALID_ONION_VERSION	wire/gen_onion_wire.h	/^	WIRE_INVALID_ONION_VERSION = BADONION|PERM|4,$/;"	e	enum:onion_type
WIRE_INVALID_REALM	wire/gen_onion_wire.h	/^	WIRE_INVALID_REALM = PERM|1,$/;"	e	enum:onion_type
WIRE_NODE_ANNOUNCEMENT	wire/gen_peer_wire.h	/^	WIRE_NODE_ANNOUNCEMENT = 257,$/;"	e	enum:wire_type
WIRE_OBJS	wire/Makefile	/^WIRE_OBJS := $(WIRE_SRC:.c=.o) $(WIRE_GEN_SRC:.c=.o)$/;"	m
WIRE_ONION_OBJS	wire/Makefile	/^WIRE_ONION_OBJS := $(WIRE_GEN_ONION_SRC:.c=.o)$/;"	m
WIRE_OPEN_CHANNEL	wire/gen_peer_wire.h	/^	WIRE_OPEN_CHANNEL = 32,$/;"	e	enum:wire_type
WIRE_PERMANENT_CHANNEL_FAILURE	wire/gen_onion_wire.h	/^	WIRE_PERMANENT_CHANNEL_FAILURE = PERM|8,$/;"	e	enum:onion_type
WIRE_PERMANENT_NODE_FAILURE	wire/gen_onion_wire.h	/^	WIRE_PERMANENT_NODE_FAILURE = PERM|NODE|2,$/;"	e	enum:onion_type
WIRE_REQUIRED_CHANNEL_FEATURE_MISSING	wire/gen_onion_wire.h	/^	WIRE_REQUIRED_CHANNEL_FEATURE_MISSING = PERM|9,$/;"	e	enum:onion_type
WIRE_REQUIRED_NODE_FEATURE_MISSING	wire/gen_onion_wire.h	/^	WIRE_REQUIRED_NODE_FEATURE_MISSING = PERM|NODE|3,$/;"	e	enum:onion_type
WIRE_RESPR_ACT1_BAD_HSM_ECDH	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_RESPR_ACT1_BAD_HSM_ECDH = 0x801D,$/;"	e	enum:handshake_status_wire_type
WIRE_RESPR_ACT1_BAD_PUBKEY	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_RESPR_ACT1_BAD_PUBKEY = 0x801C,$/;"	e	enum:handshake_status_wire_type
WIRE_RESPR_ACT1_BAD_TAG	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_RESPR_ACT1_BAD_TAG = 0x801E,$/;"	e	enum:handshake_status_wire_type
WIRE_RESPR_ACT1_BAD_VERSION	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_RESPR_ACT1_BAD_VERSION = 0x801B,$/;"	e	enum:handshake_status_wire_type
WIRE_RESPR_ACT1_READ_FAILED	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_RESPR_ACT1_READ_FAILED = 0x801A,$/;"	e	enum:handshake_status_wire_type
WIRE_RESPR_ACT2_BAD_ECDH_FOR_SS	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_RESPR_ACT2_BAD_ECDH_FOR_SS = 0x801F,$/;"	e	enum:handshake_status_wire_type
WIRE_RESPR_ACT2_WRITE_FAILED	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_RESPR_ACT2_WRITE_FAILED = 0x8020,$/;"	e	enum:handshake_status_wire_type
WIRE_RESPR_ACT3_BAD_CIPHERTEXT	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_RESPR_ACT3_BAD_CIPHERTEXT = 0x8023,$/;"	e	enum:handshake_status_wire_type
WIRE_RESPR_ACT3_BAD_ECDH_FOR_SS	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_RESPR_ACT3_BAD_ECDH_FOR_SS = 0x8025,$/;"	e	enum:handshake_status_wire_type
WIRE_RESPR_ACT3_BAD_PUBKEY	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_RESPR_ACT3_BAD_PUBKEY = 0x8024,$/;"	e	enum:handshake_status_wire_type
WIRE_RESPR_ACT3_BAD_TAG	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_RESPR_ACT3_BAD_TAG = 0x8026,$/;"	e	enum:handshake_status_wire_type
WIRE_RESPR_ACT3_BAD_VERSION	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_RESPR_ACT3_BAD_VERSION = 0x8022,$/;"	e	enum:handshake_status_wire_type
WIRE_RESPR_ACT3_READ_FAILED	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_RESPR_ACT3_READ_FAILED = 0x8021,$/;"	e	enum:handshake_status_wire_type
WIRE_RESPR_ACT_ONE	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_RESPR_ACT_ONE = 4,$/;"	e	enum:handshake_status_wire_type
WIRE_RESPR_ACT_THREE	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_RESPR_ACT_THREE = 6,$/;"	e	enum:handshake_status_wire_type
WIRE_RESPR_ACT_TWO	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_RESPR_ACT_TWO = 5,$/;"	e	enum:handshake_status_wire_type
WIRE_REVOKE_AND_ACK	wire/gen_peer_wire.h	/^	WIRE_REVOKE_AND_ACK = 133,$/;"	e	enum:wire_type
WIRE_SHUTDOWN	wire/gen_peer_wire.h	/^	WIRE_SHUTDOWN = 38,$/;"	e	enum:wire_type
WIRE_SRC	wire/Makefile	/^WIRE_SRC := wire\/wire_sync.c			\\$/;"	m
WIRE_SUCCESS	lightningd/handshake/gen_handshake_status_wire.h	/^	WIRE_SUCCESS = 0,$/;"	e	enum:handshake_status_wire_type
WIRE_TEMPORARY_CHANNEL_FAILURE	wire/gen_onion_wire.h	/^	WIRE_TEMPORARY_CHANNEL_FAILURE = 7,$/;"	e	enum:onion_type
WIRE_TEMPORARY_NODE_FAILURE	wire/gen_onion_wire.h	/^	WIRE_TEMPORARY_NODE_FAILURE = NODE|2,$/;"	e	enum:onion_type
WIRE_TEST_OBJS	wire/test/Makefile	/^WIRE_TEST_OBJS := $(WIRE_TEST_SRC:.c=.o)$/;"	m
WIRE_TEST_PROGRAMS	wire/test/Makefile	/^WIRE_TEST_PROGRAMS := $(WIRE_TEST_OBJS:.o=)$/;"	m
WIRE_TEST_SRC	wire/test/Makefile	/^WIRE_TEST_SRC := $(wildcard wire\/test\/run-*.c)$/;"	m
WIRE_UNKNOWN_NEXT_PEER	wire/gen_onion_wire.h	/^	WIRE_UNKNOWN_NEXT_PEER = PERM|10,$/;"	e	enum:onion_type
WIRE_UNKNOWN_PAYMENT_HASH	wire/gen_onion_wire.h	/^	WIRE_UNKNOWN_PAYMENT_HASH = PERM|15,$/;"	e	enum:onion_type
WIRE_UPDATE_ADD_HTLC	wire/gen_peer_wire.h	/^	WIRE_UPDATE_ADD_HTLC = 128,$/;"	e	enum:wire_type
WIRE_UPDATE_FAIL_HTLC	wire/gen_peer_wire.h	/^	WIRE_UPDATE_FAIL_HTLC = 131,$/;"	e	enum:wire_type
WIRE_UPDATE_FAIL_MALFORMED_HTLC	wire/gen_peer_wire.h	/^	WIRE_UPDATE_FAIL_MALFORMED_HTLC = 135,$/;"	e	enum:wire_type
WIRE_UPDATE_FEE	wire/gen_peer_wire.h	/^	WIRE_UPDATE_FEE = 134,$/;"	e	enum:wire_type
WIRE_UPDATE_FULFILL_HTLC	wire/gen_peer_wire.h	/^	WIRE_UPDATE_FULFILL_HTLC = 130,$/;"	e	enum:wire_type
WNAF_BITS	secp256k1/src/ecmult_const_impl.h	16;"	d
WNAF_BITS	secp256k1/src/ecmult_const_impl.h	18;"	d
WNAF_SIZE	secp256k1/src/ecmult_const_impl.h	20;"	d
WORDS_BIGENDIAN	secp256k1/src/libsecp256k1-config.h	142;"	d
WRITE_XOR	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	83;"	d	file:
X	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe X;$/;"	m	struct:__anon68
X	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe X;$/;"	m	struct:__anon69
X	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe X;$/;"	m	struct:__anon70
XCR0_AVX	libsodium/src/libsodium/sodium/runtime.c	39;"	d	file:
XCR0_SSE	libsodium/src/libsodium/sodium/runtime.c	38;"	d	file:
XOR	libsodium/src/libsodium/crypto_core/hchacha20/core_hchacha20.h	17;"	d
XOR	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	32;"	d
XOR	libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c	37;"	d	file:
XOR4	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	149;"	d	file:
XOR4	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	207;"	d	file:
XOR4_2	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	155;"	d	file:
XOR4_2	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	208;"	d	file:
XORx	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	420;"	d	file:
Y	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe Y;$/;"	m	struct:__anon68
Y	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe Y;$/;"	m	struct:__anon69
Y	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe Y;$/;"	m	struct:__anon70
YminusX	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe YminusX;$/;"	m	struct:__anon72
YplusX	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe YplusX;$/;"	m	struct:__anon72
Z	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe Z;$/;"	m	struct:__anon68
Z	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe Z;$/;"	m	struct:__anon69
Z	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe Z;$/;"	m	struct:__anon70
Z	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe Z;$/;"	m	struct:__anon72
_ALIGN_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx1.asm	/^_ALIGN_SIZE	equ 8$/;"	d
_ALIGN_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_sse4.asm	/^_ALIGN_SIZE	equ 8$/;"	d
_Authenticate	lightning.pb-c.h	/^struct  _Authenticate$/;"	s
_BitcoinPubkey	lightning.pb-c.h	/^struct  _BitcoinPubkey$/;"	s
_CCAN_READ_WRITE_H	ccan/ccan/read_write_all/read_write_all.h	3;"	d
_CPPMAGIC_2MAP	ccan/ccan/cppmagic/cppmagic.h	163;"	d
_CPPMAGIC_2MAP_	ccan/ccan/cppmagic/cppmagic.h	162;"	d
_CPPMAGIC_EOA	ccan/ccan/cppmagic/cppmagic.h	71;"	d
_CPPMAGIC_GLUE2	ccan/ccan/cppmagic/cppmagic.h	23;"	d
_CPPMAGIC_IFELSE	ccan/ccan/cppmagic/cppmagic.h	97;"	d
_CPPMAGIC_IF_0	ccan/ccan/cppmagic/cppmagic.h	93;"	d
_CPPMAGIC_IF_0_ELSE	ccan/ccan/cppmagic/cppmagic.h	95;"	d
_CPPMAGIC_IF_1	ccan/ccan/cppmagic/cppmagic.h	94;"	d
_CPPMAGIC_IF_1_ELSE	ccan/ccan/cppmagic/cppmagic.h	96;"	d
_CPPMAGIC_ISPROBE	ccan/ccan/cppmagic/cppmagic.h	48;"	d
_CPPMAGIC_ISZERO_0	ccan/ccan/cppmagic/cppmagic.h	50;"	d
_CPPMAGIC_JOIN	ccan/ccan/cppmagic/cppmagic.h	181;"	d
_CPPMAGIC_JOIN_	ccan/ccan/cppmagic/cppmagic.h	180;"	d
_CPPMAGIC_MAP	ccan/ccan/cppmagic/cppmagic.h	144;"	d
_CPPMAGIC_MAP_	ccan/ccan/cppmagic/cppmagic.h	143;"	d
_CPPMAGIC_PROBE	ccan/ccan/cppmagic/cppmagic.h	49;"	d
_CPPMAGIC_STRINGIFY	ccan/ccan/cppmagic/cppmagic.h	13;"	d
_CTX	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^_CTX		equ _INP      + _INP_SIZE$/;"	d
_CTX	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^_CTX		equ _RND       + _RND_SIZE$/;"	d
_CTX_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^_CTX_SIZE	equ 8$/;"	d
_CTX_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^_CTX_SIZE	equ 8$/;"	d
_CloseShutdown	lightning.pb-c.h	/^struct  _CloseShutdown$/;"	s
_CloseSignature	lightning.pb-c.h	/^struct  _CloseSignature$/;"	s
_DECL_ONAME	ccan/ccan/order/order.h	37;"	d
_DECL_ONAME	ccan/ccan/order/order.h	66;"	d
_DECL_ONAME_BIDIR	ccan/ccan/order/order.h	42;"	d
_DECL_ONAME_BIDIR	ccan/ccan/order/order.h	67;"	d
_EXTRA_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^_EXTRA_SIZE	equ 32$/;"	d
_Error	lightning.pb-c.h	/^struct  _Error$/;"	s
_FANCY_CMP_H	ccan/ccan/order/test/fancy_cmp.h	2;"	d
_FailInfo	lightning.pb-c.h	/^struct  _FailInfo$/;"	s
_FailReason	lightning.pb-c.h	/^struct  _FailReason$/;"	s
_Funding	lightning.pb-c.h	/^struct  _Funding$/;"	s
_GNU_SOURCE	ccan/config.h	5;"	d
_IDX_LIMIT	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^_IDX_LIMIT	equ _CTX       + _CTX_SIZE$/;"	d
_IDX_LIMIT_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^_IDX_LIMIT_SIZE	equ 8$/;"	d
_INP	ccan/ccan/crypto/sha256/benchmarks/sha256_avx1.asm	/^_INP		equ _INP_END  + _INP_END_SIZE$/;"	d
_INP	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^_INP		equ _INP_END  + _INP_END_SIZE$/;"	d
_INP	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^_INP		equ _INP_END   + _INP_END_SIZE$/;"	d
_INP	ccan/ccan/crypto/sha256/benchmarks/sha256_sse4.asm	/^_INP		equ _INP_END  + _INP_END_SIZE$/;"	d
_INP_END	ccan/ccan/crypto/sha256/benchmarks/sha256_avx1.asm	/^_INP_END	equ 0$/;"	d
_INP_END	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^_INP_END	equ _XMM_SAVE + _XMM_SAVE_SIZE$/;"	d
_INP_END	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^_INP_END	equ _XMM_SAVE  + _XMM_SAVE_SIZE$/;"	d
_INP_END	ccan/ccan/crypto/sha256/benchmarks/sha256_sse4.asm	/^_INP_END	equ 0$/;"	d
_INP_END_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx1.asm	/^_INP_END_SIZE	equ 8$/;"	d
_INP_END_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^_INP_END_SIZE	equ 8$/;"	d
_INP_END_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^_INP_END_SIZE	equ 8$/;"	d
_INP_END_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_sse4.asm	/^_INP_END_SIZE	equ 8$/;"	d
_INP_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx1.asm	/^_INP_SIZE	equ 8$/;"	d
_INP_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^_INP_SIZE	equ 8$/;"	d
_INP_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^_INP_SIZE	equ 8$/;"	d
_INP_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_sse4.asm	/^_INP_SIZE	equ 8$/;"	d
_Included_org_bitcoin_NativeSecp256k1	secp256k1/src/java/org_bitcoin_NativeSecp256k1.h	7;"	d
_Included_org_bitcoin_Secp256k1Context	secp256k1/src/java/org_bitcoin_Secp256k1Context.h	7;"	d
_Init	lightning.pb-c.h	/^struct  _Init$/;"	s
_KTMSG	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^_KTMSG		equ              _EXTRA_SIZE$/;"	d
_KTMSG_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^_KTMSG_SIZE	equ 16*32	; Second 3\/4 of KTMSG overlaps TMSG$/;"	d
_Locktime	lightning.pb-c.h	/^struct  _Locktime$/;"	s
_NestedPkt	lightning.pb-c.h	/^struct  _NestedPkt$/;"	s
_OpenAnchor	lightning.pb-c.h	/^struct  _OpenAnchor$/;"	s
_OpenChannel	lightning.pb-c.h	/^struct  _OpenChannel$/;"	s
_OpenChannel__AnchorOffer	lightning.pb-c.h	/^typedef enum _OpenChannel__AnchorOffer {$/;"	g
_OpenCommitSig	lightning.pb-c.h	/^struct  _OpenCommitSig$/;"	s
_OpenComplete	lightning.pb-c.h	/^struct  _OpenComplete$/;"	s
_POSIX_C_SOURCE	ccan/tools/configurator/configurator.c	27;"	d	file:
_Pkt	lightning.pb-c.h	/^struct  _Pkt$/;"	s
_Preimage	lightning.pb-c.h	/^struct  _Preimage$/;"	s
_RND	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^_RND		equ _INP       + _INP_SIZE$/;"	d
_RND_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^_RND_SIZE	equ 8$/;"	d
_RSP	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^_RSP		equ _CTX      + _CTX_SIZE$/;"	d
_RSP	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^_RSP		equ _IDX_LIMIT + _IDX_LIMIT_SIZE$/;"	d
_RSP_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^_RSP_SIZE	equ 8$/;"	d
_RSP_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^_RSP_SIZE	equ 8$/;"	d
_Route	lightning.pb-c.h	/^struct  _Route$/;"	s
_RouteStep	lightning.pb-c.h	/^struct  _RouteStep$/;"	s
_Routing	lightning.pb-c.h	/^struct  _Routing$/;"	s
_SECP256K1_	secp256k1/include/secp256k1.h	2;"	d
_SECP256K1_BASIC_CONFIG_	secp256k1/src/basic-config.h	8;"	d
_SECP256K1_BENCH_H_	secp256k1/src/bench.h	8;"	d
_SECP256K1_CONTRIB_BER_PRIVATEKEY_H_	secp256k1/contrib/lax_der_privatekey_parsing.h	29;"	d
_SECP256K1_CONTRIB_LAX_DER_PARSING_H_	secp256k1/contrib/lax_der_parsing.h	52;"	d
_SECP256K1_ECDH_	secp256k1/include/secp256k1_ecdh.h	2;"	d
_SECP256K1_ECDSA_	secp256k1/src/ecdsa.h	8;"	d
_SECP256K1_ECDSA_IMPL_H_	secp256k1/src/ecdsa_impl.h	9;"	d
_SECP256K1_ECKEY_	secp256k1/src/eckey.h	8;"	d
_SECP256K1_ECKEY_IMPL_H_	secp256k1/src/eckey_impl.h	8;"	d
_SECP256K1_ECMULT_	secp256k1/src/ecmult.h	8;"	d
_SECP256K1_ECMULT_CONST_	secp256k1/src/ecmult_const.h	8;"	d
_SECP256K1_ECMULT_CONST_IMPL_	secp256k1/src/ecmult_const_impl.h	8;"	d
_SECP256K1_ECMULT_GEN_	secp256k1/src/ecmult_gen.h	8;"	d
_SECP256K1_ECMULT_GEN_IMPL_H_	secp256k1/src/ecmult_gen_impl.h	8;"	d
_SECP256K1_ECMULT_IMPL_H_	secp256k1/src/ecmult_impl.h	8;"	d
_SECP256K1_ECMULT_STATIC_CONTEXT_	secp256k1/src/ecmult_static_context.h	2;"	d
_SECP256K1_FIELD_	secp256k1/src/field.h	8;"	d
_SECP256K1_FIELD_IMPL_H_	secp256k1/src/field_impl.h	8;"	d
_SECP256K1_FIELD_INNER5X52_IMPL_H_	secp256k1/src/field_5x52_asm_impl.h	15;"	d
_SECP256K1_FIELD_INNER5X52_IMPL_H_	secp256k1/src/field_5x52_int128_impl.h	8;"	d
_SECP256K1_FIELD_REPR_	secp256k1/src/field_10x26.h	8;"	d
_SECP256K1_FIELD_REPR_	secp256k1/src/field_5x52.h	8;"	d
_SECP256K1_FIELD_REPR_IMPL_H_	secp256k1/src/field_10x26_impl.h	8;"	d
_SECP256K1_FIELD_REPR_IMPL_H_	secp256k1/src/field_5x52_impl.h	8;"	d
_SECP256K1_GROUP_	secp256k1/src/group.h	8;"	d
_SECP256K1_GROUP_IMPL_H_	secp256k1/src/group_impl.h	8;"	d
_SECP256K1_HASH_	secp256k1/src/hash.h	8;"	d
_SECP256K1_HASH_IMPL_H_	secp256k1/src/hash_impl.h	8;"	d
_SECP256K1_MODULE_ECDH_MAIN_	secp256k1/src/modules/ecdh/main_impl.h	8;"	d
_SECP256K1_MODULE_ECDH_TESTS_	secp256k1/src/modules/ecdh/tests_impl.h	8;"	d
_SECP256K1_MODULE_RECOVERY_MAIN_	secp256k1/src/modules/recovery/main_impl.h	8;"	d
_SECP256K1_MODULE_RECOVERY_TESTS_	secp256k1/src/modules/recovery/tests_impl.h	8;"	d
_SECP256K1_MODULE_SCHNORR_H_	secp256k1/src/modules/schnorr/schnorr.h	8;"	d
_SECP256K1_NUM_	secp256k1/src/num.h	8;"	d
_SECP256K1_NUM_IMPL_H_	secp256k1/src/num_impl.h	8;"	d
_SECP256K1_NUM_REPR_	secp256k1/src/num_gmp.h	8;"	d
_SECP256K1_NUM_REPR_IMPL_H_	secp256k1/src/num_gmp_impl.h	8;"	d
_SECP256K1_RECOVERY_	secp256k1/include/secp256k1_recovery.h	2;"	d
_SECP256K1_SCALAR_	secp256k1/src/scalar.h	8;"	d
_SECP256K1_SCALAR_IMPL_H_	secp256k1/src/scalar_impl.h	8;"	d
_SECP256K1_SCALAR_REPR_	secp256k1/src/scalar_4x64.h	8;"	d
_SECP256K1_SCALAR_REPR_	secp256k1/src/scalar_8x32.h	8;"	d
_SECP256K1_SCALAR_REPR_IMPL_H_	secp256k1/src/scalar_4x64_impl.h	8;"	d
_SECP256K1_SCALAR_REPR_IMPL_H_	secp256k1/src/scalar_8x32_impl.h	8;"	d
_SECP256K1_SCHNORR_	secp256k1/include/secp256k1_schnorr.h	2;"	d
_SECP256K1_SCHNORR_IMPL_H_	secp256k1/src/modules/schnorr/schnorr_impl.h	8;"	d
_SECP256K1_TESTRAND_H_	secp256k1/src/testrand.h	8;"	d
_SECP256K1_TESTRAND_IMPL_H_	secp256k1/src/testrand_impl.h	8;"	d
_SECP256K1_UTIL_H_	secp256k1/src/util.h	8;"	d
_SHUF_00BA	ccan/ccan/crypto/sha256/benchmarks/sha256_avx1.asm	/^_SHUF_00BA:              ddq 0xFFFFFFFFFFFFFFFF0b0a090803020100$/;"	l
_SHUF_00BA	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^_SHUF_00BA:$/;"	l
_SHUF_00BA	ccan/ccan/crypto/sha256/benchmarks/sha256_sse4.asm	/^_SHUF_00BA:              ddq 0xFFFFFFFFFFFFFFFF0b0a090803020100$/;"	l
_SHUF_DC00	ccan/ccan/crypto/sha256/benchmarks/sha256_avx1.asm	/^_SHUF_DC00:              ddq 0x0b0a090803020100FFFFFFFFFFFFFFFF$/;"	l
_SHUF_DC00	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^_SHUF_DC00:$/;"	l
_SHUF_DC00	ccan/ccan/crypto/sha256/benchmarks/sha256_sse4.asm	/^_SHUF_DC00:              ddq 0x0b0a090803020100FFFFFFFFFFFFFFFF$/;"	l
_Sha256Hash	lightning.pb-c.h	/^struct  _Sha256Hash$/;"	s
_Signature	lightning.pb-c.h	/^struct  _Signature$/;"	s
_TESTRECURSE	ccan/ccan/cppmagic/test/run.c	19;"	d	file:
_TMSG	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^_TMSG		equ _KTMSG     + _KTMSG_SIZE$/;"	d
_TMSG_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^_TMSG_SIZE	equ 64*32$/;"	d
_UpdateAddHtlc	lightning.pb-c.h	/^struct  _UpdateAddHtlc$/;"	s
_UpdateCommit	lightning.pb-c.h	/^struct  _UpdateCommit$/;"	s
_UpdateFailHtlc	lightning.pb-c.h	/^struct  _UpdateFailHtlc$/;"	s
_UpdateFee	lightning.pb-c.h	/^struct  _UpdateFee$/;"	s
_UpdateFulfillHtlc	lightning.pb-c.h	/^struct  _UpdateFulfillHtlc$/;"	s
_UpdateRevocation	lightning.pb-c.h	/^struct  _UpdateRevocation$/;"	s
_XFER	ccan/ccan/crypto/sha256/benchmarks/sha256_avx1.asm	/^_XFER		equ _INP      + _INP_SIZE$/;"	d
_XFER	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^_XFER		equ 0$/;"	d
_XFER	ccan/ccan/crypto/sha256/benchmarks/sha256_sse4.asm	/^_XFER		equ _INP      + _INP_SIZE$/;"	d
_XFER_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx1.asm	/^_XFER_SIZE	equ 8$/;"	d
_XFER_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^_XFER_SIZE	equ 2*64*4	; 2 blocks, 64 rounds, 4 bytes\/round$/;"	d
_XFER_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_sse4.asm	/^_XFER_SIZE	equ 8$/;"	d
_XMM_SAVE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx1.asm	/^_XMM_SAVE	equ _XFER     + _XFER_SIZE + _ALIGN_SIZE$/;"	d
_XMM_SAVE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^_XMM_SAVE	equ _XFER     + _XFER_SIZE$/;"	d
_XMM_SAVE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^_XMM_SAVE	equ _TMSG      + _TMSG_SIZE$/;"	d
_XMM_SAVE	ccan/ccan/crypto/sha256/benchmarks/sha256_sse4.asm	/^_XMM_SAVE	equ _XFER     + _XFER_SIZE + _ALIGN_SIZE$/;"	d
_XMM_SAVE_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx1.asm	/^_XMM_SAVE_SIZE	equ 0$/;"	d
_XMM_SAVE_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx1.asm	/^_XMM_SAVE_SIZE	equ 8*16$/;"	d
_XMM_SAVE_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^_XMM_SAVE_SIZE	equ 0$/;"	d
_XMM_SAVE_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^_XMM_SAVE_SIZE	equ 8*16$/;"	d
_XMM_SAVE_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^_XMM_SAVE_SIZE	equ 0$/;"	d
_XMM_SAVE_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^_XMM_SAVE_SIZE	equ 7*16$/;"	d
_XMM_SAVE_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_sse4.asm	/^_XMM_SAVE_SIZE	equ 0$/;"	d
_XMM_SAVE_SIZE	ccan/ccan/crypto/sha256/benchmarks/sha256_sse4.asm	/^_XMM_SAVE_SIZE	equ 7*16$/;"	d
__CMPTEST_H__	libsodium/test/default/cmptest.h	3;"	d
__JSMN_H_	daemon/jsmn/jsmn.h	2;"	d
__JSMN_H_	daemon/jsmn/jsmn_test.c	564;"	d	file:
__SODIUM_VERSION_H__	libsodium/builds/msvc/version.h	3;"	d
__STDC_WANT_LIB_EXT1__	libsodium/src/libsodium/sodium/utils.c	2;"	d	file:
__attribute__	libsodium/src/libsodium/include/sodium/export.h	7;"	d
__attribute__	libsodium/src/libsodium/include/sodium/export.h	9;"	d
__init__	contrib/pylightning/lightning/lightning.py	/^    def __init__(self, socket_path, executor=None):$/;"	m	class:UnixDomainSocketRpc
__init__	tests/test_lightningd.py	/^    def __init__(self, func, executor):$/;"	m	class:NodeFactory
__init__	tests/utils.py	/^    def __init__(self):$/;"	m	class:TailableProc
__init__	tests/utils.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:LegacyLightningD
__init__	tests/utils.py	/^    def __init__(self, bitcoin_dir="\/tmp\/bitcoind-test", rpcport=18332):$/;"	m	class:BitcoinD
__init__	tests/utils.py	/^    def __init__(self, daemon, rpc, btc, executor):$/;"	m	class:LightningNode
__init__	tests/utils.py	/^    def __init__(self, lightning_dir, bitcoin_dir, port=9735):$/;"	m	class:LightningD
__init__	tools/generate-wire.py	/^    def __init__(self,message,name,size,comments,typename=None):$/;"	m	class:Field
__init__	tools/generate-wire.py	/^    def __init__(self,name):$/;"	m	class:FieldType
__init__	tools/generate-wire.py	/^    def __init__(self,name,enum,comments):$/;"	m	class:Message
_alloc_aligned	libsodium/src/libsodium/sodium/utils.c	/^_alloc_aligned(const size_t size)$/;"	f	file:
_array_size_chk	ccan/ccan/array_size/array_size.h	20;"	d
_array_size_chk	ccan/ccan/array_size/array_size.h	24;"	d
_asort	ccan/ccan/asort/asort.c	/^_asort (void *const pbase, size_t total_elems, size_t size,$/;"	f
_asort	ccan/ccan/asort/asort.h	26;"	d
_bswap64	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^_bswap64(const uint64_t x)$/;"	f	file:
_bswap64	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	31;"	d	file:
_bswap64	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	33;"	d	file:
_call	contrib/pylightning/lightning/lightning.py	/^    def _call(self, method, args):$/;"	m	class:UnixDomainSocketRpc
_callback	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb-int.c	/^void _callback(void (*fn)(void *arg), void *arg)$/;"	f
_callback_onearg	ccan/ccan/typesafe_cb/test/run.c	/^static void _callback_onearg(void (*fn)(void *arg), void *arg)$/;"	f	file:
_callback_postargs	ccan/ccan/typesafe_cb/test/run.c	/^static void _callback_postargs(void (*fn)(void *arg, int a, int b), void *arg)$/;"	f	file:
_callback_preargs	ccan/ccan/typesafe_cb/test/run.c	/^static void _callback_preargs(void (*fn)(int a, int b, void *arg), void *arg)$/;"	f	file:
_check_is_entry	ccan/ccan/opt/opt.h	/^static inline int _check_is_entry(struct opt_table *e UNUSED) { return 0; }$/;"	f
_cpu_features	libsodium/src/libsodium/sodium/runtime.c	/^static CPUFeatures _cpu_features;$/;"	v	file:
_cpuid	libsodium/src/libsodium/sodium/runtime.c	/^_cpuid(unsigned int cpu_info[4U], const unsigned int cpu_info_type)$/;"	f	file:
_crypto_box_seal_nonce	libsodium/src/libsodium/crypto_box/crypto_box_seal.c	/^_crypto_box_seal_nonce(unsigned char *nonce,$/;"	f	file:
_crypto_generichash_blake2b_pick_best_implementation	libsodium/src/libsodium/crypto_generichash/blake2/ref/generichash_blake2b.c	/^_crypto_generichash_blake2b_pick_best_implementation(void)$/;"	f
_crypto_onetimeauth_poly1305_pick_best_implementation	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c	/^_crypto_onetimeauth_poly1305_pick_best_implementation(void)$/;"	f
_crypto_pwhash_argon2i_pick_best_implementation	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^_crypto_pwhash_argon2i_pick_best_implementation(void)$/;"	f
_crypto_scalarmult_curve25519_pick_best_implementation	libsodium/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.c	/^_crypto_scalarmult_curve25519_pick_best_implementation(void)$/;"	f
_crypto_stream_chacha20_pick_best_implementation	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c	/^_crypto_stream_chacha20_pick_best_implementation(void)$/;"	f
_crypto_stream_salsa20	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^_crypto_stream_salsa20:$/;"	l
_crypto_stream_salsa20_xor_ic	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^_crypto_stream_salsa20_xor_ic:$/;"	l
_fakealign_mm_loadl_epi64	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^_fakealign_mm_loadl_epi64(const void *m)$/;"	f	file:
_fe51	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_namespace.h	5;"	d
_fe51_mul	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^_fe51_mul:$/;"	l
_fe51_mul	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_namespace.h	9;"	d
_fe51_nsquare	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_namespace.h	11;"	d
_fe51_nsquare	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^_fe51_nsquare:$/;"	l
_fe51_pack	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_namespace.h	7;"	d
_fe51_pack	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^_fe51_pack:$/;"	l
_free_aligned	libsodium/src/libsodium/sodium/utils.c	/^_free_aligned(unsigned char * const ptr, const size_t size)$/;"	f	file:
_ftime	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	40;"	d	file:
_guess_type	tools/generate-wire.py	/^    def _guess_type(message, fieldname, base_size):$/;"	m	class:Field
_ilog_H	ccan/ccan/ilog/ilog.h	3;"	d
_isaac64_H	ccan/ccan/isaac/isaac64.h	3;"	d
_isaac_H	ccan/ccan/isaac/isaac.h	3;"	d
_ladder	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^_ladder:$/;"	l
_ladder	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_namespace.h	5;"	d
_ladder_base	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^_ladder_base:$/;"	l
_ladder_base	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base_namespace.h	5;"	d
_likely_trace	ccan/ccan/likely/likely.c	/^long _likely_trace(bool cond, bool expect,$/;"	f
_mm256_zeroall	libsodium/configure	/^ _mm256_zeroall();$/;"	f
_mm_loadl_epi64	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	68;"	d	file:
_mm_roti_epi64	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-sse41.h	8;"	d
_mm_roti_epi64	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-ssse3.h	8;"	d
_mm_roti_epi64	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ssse3.h	10;"	d
_mprotect_noaccess	libsodium/src/libsodium/sodium/utils.c	/^_mprotect_noaccess(void *ptr, size_t size)$/;"	f	file:
_mprotect_readonly	libsodium/src/libsodium/sodium/utils.c	/^_mprotect_readonly(void *ptr, size_t size)$/;"	f	file:
_mprotect_readwrite	libsodium/src/libsodium/sodium/utils.c	/^_mprotect_readwrite(void *ptr, size_t size)$/;"	f	file:
_opt_register	ccan/ccan/opt/opt.c	/^void _opt_register(const char *names, enum opt_type type,$/;"	f
_out_of_bounds	libsodium/src/libsodium/sodium/utils.c	/^_out_of_bounds(void)$/;"	f	file:
_pad0	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^static const unsigned char _pad0[16] = { 0 };$/;"	v	file:
_page_round	libsodium/src/libsodium/sodium/utils.c	/^_page_round(const size_t size)$/;"	f	file:
_randombytes_linux_getrandom	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^_randombytes_linux_getrandom(void * const buf, const size_t size)$/;"	f	file:
_randombytes_linux_getrandom	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^_randombytes_linux_getrandom(void * const buf, const size_t size)$/;"	f	file:
_readobj	contrib/pylightning/lightning/lightning.py	/^    def _readobj(self, sock):$/;"	m	class:UnixDomainSocketRpc
_register_callback	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb.c	/^static void _register_callback(void (*cb)(void *arg), void *arg)$/;"	f	file:
_register_callback	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb_postargs.c	/^static void _register_callback(void (*cb)(void *arg, int x), void *arg)$/;"	f	file:
_register_callback	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb_preargs.c	/^static void _register_callback(void (*cb)(int x, void *arg), void *arg)$/;"	f	file:
_register_callback	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb-NULL.c	/^static void _register_callback(void (*cb)(const void *arg), const void *arg)$/;"	f	file:
_register_callback	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb-undefined.c	/^static void _register_callback(void (*cb)(void *arg), void *arg)$/;"	f	file:
_register_callback	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb-vars.c	/^static void _register_callback(void (*cb)(void *arg), void *arg)$/;"	f	file:
_register_callback_post	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb-undefined.c	/^static void _register_callback_post(void (*cb)(void *arg, int x), void *arg)$/;"	f	file:
_register_callback_post	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb-vars.c	/^static void _register_callback_post(void (*cb)(void *arg, int x), void *arg)$/;"	f	file:
_register_callback_pre	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb-undefined.c	/^static void _register_callback_pre(void (*cb)(int x, void *arg), void *arg)$/;"	f	file:
_register_callback_pre	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb-vars.c	/^static void _register_callback_pre(void (*cb)(int x, void *arg), void *arg)$/;"	f	file:
_set_some_value	ccan/ccan/typesafe_cb/test/compile_fail-cast_if_type-promotable.c	/^static void _set_some_value(void *val)$/;"	f	file:
_set_some_value	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb_cast.c	/^void _set_some_value(void *val)$/;"	f
_set_some_value	ccan/ccan/typesafe_cb/test/run.c	/^static void _set_some_value(void *val)$/;"	f	file:
_sodium_alloc_init	libsodium/src/libsodium/sodium/utils.c	/^_sodium_alloc_init(void)$/;"	f
_sodium_dummy_symbol_to_prevent_compare_lto	libsodium/src/libsodium/sodium/utils.c	/^_sodium_dummy_symbol_to_prevent_compare_lto(const unsigned char *b1,$/;"	f
_sodium_dummy_symbol_to_prevent_memcmp_lto	libsodium/src/libsodium/sodium/utils.c	/^_sodium_dummy_symbol_to_prevent_memcmp_lto(const unsigned char *b1,$/;"	f
_sodium_dummy_symbol_to_prevent_memzero_lto	libsodium/src/libsodium/sodium/utils.c	/^_sodium_dummy_symbol_to_prevent_memzero_lto(void * const pnt, const size_t len)$/;"	f
_sodium_malloc	libsodium/src/libsodium/sodium/utils.c	/^_sodium_malloc(const size_t size)$/;"	f	file:
_sodium_mprotect	libsodium/src/libsodium/sodium/utils.c	/^_sodium_mprotect(void *ptr, int (*cb)(void *ptr, size_t size))$/;"	f	file:
_sodium_runtime_arm_cpu_features	libsodium/src/libsodium/sodium/runtime.c	/^_sodium_runtime_arm_cpu_features(CPUFeatures * const cpu_features)$/;"	f	file:
_sodium_runtime_get_cpu_features	libsodium/src/libsodium/sodium/runtime.c	/^_sodium_runtime_get_cpu_features(void)$/;"	f
_sodium_runtime_intel_cpu_features	libsodium/src/libsodium/sodium/runtime.c	/^_sodium_runtime_intel_cpu_features(CPUFeatures * const cpu_features)$/;"	f	file:
_timeb	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	41;"	d	file:
_total_order	ccan/ccan/order/order.h	/^struct _total_order {$/;"	s
_total_order_cb	ccan/ccan/order/order.h	/^typedef int (*_total_order_cb)(const void *, const void *, void *);$/;"	t
_typesize	tools/generate-wire.py	/^    def _typesize(typename):$/;"	m	class:FieldType
_unprotected_ptr_from_user_ptr	libsodium/src/libsodium/sodium/utils.c	/^_unprotected_ptr_from_user_ptr(void * const ptr)$/;"	f	file:
_writeobj	contrib/pylightning/lightning/lightning.py	/^    def _writeobj(self, sock, obj):$/;"	m	class:UnixDomainSocketRpc
a	ccan/ccan/array_size/test/compile_fail-function-param.c	/^	unsigned int a, b;$/;"	m	struct:foo	file:
a	ccan/ccan/array_size/test/run.c	/^	unsigned int a, b;$/;"	m	struct:foo	file:
a	ccan/ccan/container_of/test/compile_fail-bad-type.c	/^	int a;$/;"	m	struct:foo	file:
a	ccan/ccan/container_of/test/compile_fail-types.c	/^	int a;$/;"	m	struct:foo	file:
a	ccan/ccan/container_of/test/compile_fail-var-types.c	/^	int a;$/;"	m	struct:foo	file:
a	ccan/ccan/container_of/test/run.c	/^	int a;$/;"	m	struct:foo	file:
a	ccan/ccan/isaac/isaac.h	/^  uint32_t a;$/;"	m	struct:isaac_ctx
a	ccan/ccan/isaac/isaac64.h	/^  uint64_t a;$/;"	m	struct:isaac64_ctx
a	libsodium/test/default/auth.c	/^static unsigned char a[crypto_auth_BYTES];$/;"	v	file:
a	libsodium/test/default/auth2.c	/^static unsigned char a[32];$/;"	v	file:
a	libsodium/test/default/auth3.c	/^static unsigned char a[32]$/;"	v	file:
a	libsodium/test/default/auth5.c	/^static unsigned char a[32];$/;"	v	file:
a	libsodium/test/default/auth6.c	/^static unsigned char a[64];$/;"	v	file:
a	libsodium/test/default/auth7.c	/^static unsigned char a[64];$/;"	v	file:
a	libsodium/test/default/onetimeauth.c	/^static unsigned char a[16];$/;"	v	file:
a	libsodium/test/default/onetimeauth2.c	/^static unsigned char a[16]$/;"	v	file:
a	libsodium/test/default/onetimeauth7.c	/^static unsigned char a[16];$/;"	v	file:
a	lightning.pb-c.h	/^  uint64_t a;$/;"	m	struct:_Preimage
a	lightning.pb-c.h	/^  uint64_t a;$/;"	m	struct:_Sha256Hash
a	test/test_state_coverage.c	/^	} a, b;$/;"	m	struct:situation	typeref:union:situation::__anon39	file:
a2	libsodium/test/default/auth.c	/^static unsigned char a2[crypto_auth_hmacsha512_BYTES];$/;"	v	file:
abort	ccan/ccan/list/test/run-CCAN_LIST_DEBUG.c	11;"	d	file:
abort	ccan/ccan/list/test/run-check-corrupt.c	10;"	d	file:
abort	ccan/ccan/time/test/run-check.c	/^void abort(void)$/;"	f
aborted	ccan/ccan/list/test/run-CCAN_LIST_DEBUG.c	/^static jmp_buf aborted;$/;"	v	file:
aborted	ccan/ccan/list/test/run-check-corrupt.c	/^static jmp_buf aborted;$/;"	v	file:
abs_blocks_to_locktime	bitcoin/locktime.c	/^static bool abs_blocks_to_locktime(u32 blocks, u32 *locktime)$/;"	f	file:
abs_builddir	libsodium/Makefile	/^abs_builddir = \/home\/wen\/work\/lightning\/libsodium$/;"	m
abs_builddir	libsodium/dist-build/Makefile	/^abs_builddir = \/home\/wen\/work\/lightning\/libsodium\/dist-build$/;"	m
abs_builddir	libsodium/msvc-scripts/Makefile	/^abs_builddir = \/home\/wen\/work\/lightning\/libsodium\/msvc-scripts$/;"	m
abs_builddir	libsodium/src/Makefile	/^abs_builddir = \/home\/wen\/work\/lightning\/libsodium\/src$/;"	m
abs_builddir	libsodium/src/libsodium/Makefile	/^abs_builddir = \/home\/wen\/work\/lightning\/libsodium\/src\/libsodium$/;"	m
abs_builddir	libsodium/src/libsodium/include/Makefile	/^abs_builddir = \/home\/wen\/work\/lightning\/libsodium\/src\/libsodium\/include$/;"	m
abs_builddir	libsodium/test/Makefile	/^abs_builddir = \/home\/wen\/work\/lightning\/libsodium\/test$/;"	m
abs_builddir	libsodium/test/default/Makefile	/^abs_builddir = \/home\/wen\/work\/lightning\/libsodium\/test\/default$/;"	m
abs_builddir	secp256k1/Makefile	/^abs_builddir = \/home\/wen\/work\/lightning\/secp256k1$/;"	m
abs_is_seconds	bitcoin/locktime.c	/^static bool abs_is_seconds(u32 locktime)$/;"	f	file:
abs_locktime	bitcoin/locktime.h	/^struct abs_locktime {$/;"	s
abs_locktime	type_to_string.h	/^	const struct abs_locktime *abs_locktime;$/;"	m	union:printable_types	typeref:struct:printable_types::abs_locktime
abs_locktime_is_seconds	bitcoin/locktime.c	/^bool abs_locktime_is_seconds(const struct abs_locktime *abs)$/;"	f
abs_locktime_to_blocks	bitcoin/locktime.c	/^u32 abs_locktime_to_blocks(const struct abs_locktime *abs)$/;"	f
abs_locktime_to_proto	protobuf_convert.c	/^Locktime *abs_locktime_to_proto(const tal_t *ctx,$/;"	f
abs_locktime_to_seconds	bitcoin/locktime.c	/^u32 abs_locktime_to_seconds(const struct abs_locktime *abs)$/;"	f
abs_seconds_to_locktime	bitcoin/locktime.c	/^static bool abs_seconds_to_locktime(u32 seconds, u32 *locktime)$/;"	f	file:
abs_srcdir	libsodium/Makefile	/^abs_srcdir = \/home\/wen\/work\/lightning\/libsodium$/;"	m
abs_srcdir	libsodium/dist-build/Makefile	/^abs_srcdir = \/home\/wen\/work\/lightning\/libsodium\/dist-build$/;"	m
abs_srcdir	libsodium/msvc-scripts/Makefile	/^abs_srcdir = \/home\/wen\/work\/lightning\/libsodium\/msvc-scripts$/;"	m
abs_srcdir	libsodium/src/Makefile	/^abs_srcdir = \/home\/wen\/work\/lightning\/libsodium\/src$/;"	m
abs_srcdir	libsodium/src/libsodium/Makefile	/^abs_srcdir = \/home\/wen\/work\/lightning\/libsodium\/src\/libsodium$/;"	m
abs_srcdir	libsodium/src/libsodium/include/Makefile	/^abs_srcdir = \/home\/wen\/work\/lightning\/libsodium\/src\/libsodium\/include$/;"	m
abs_srcdir	libsodium/test/Makefile	/^abs_srcdir = \/home\/wen\/work\/lightning\/libsodium\/test$/;"	m
abs_srcdir	libsodium/test/default/Makefile	/^abs_srcdir = \/home\/wen\/work\/lightning\/libsodium\/test\/default$/;"	m
abs_srcdir	secp256k1/Makefile	/^abs_srcdir = \/home\/wen\/work\/lightning\/secp256k1$/;"	m
abs_top_builddir	libsodium/Makefile	/^abs_top_builddir = \/home\/wen\/work\/lightning\/libsodium$/;"	m
abs_top_builddir	libsodium/dist-build/Makefile	/^abs_top_builddir = \/home\/wen\/work\/lightning\/libsodium$/;"	m
abs_top_builddir	libsodium/msvc-scripts/Makefile	/^abs_top_builddir = \/home\/wen\/work\/lightning\/libsodium$/;"	m
abs_top_builddir	libsodium/src/Makefile	/^abs_top_builddir = \/home\/wen\/work\/lightning\/libsodium$/;"	m
abs_top_builddir	libsodium/src/libsodium/Makefile	/^abs_top_builddir = \/home\/wen\/work\/lightning\/libsodium$/;"	m
abs_top_builddir	libsodium/src/libsodium/include/Makefile	/^abs_top_builddir = \/home\/wen\/work\/lightning\/libsodium$/;"	m
abs_top_builddir	libsodium/test/Makefile	/^abs_top_builddir = \/home\/wen\/work\/lightning\/libsodium$/;"	m
abs_top_builddir	libsodium/test/default/Makefile	/^abs_top_builddir = \/home\/wen\/work\/lightning\/libsodium$/;"	m
abs_top_builddir	secp256k1/Makefile	/^abs_top_builddir = \/home\/wen\/work\/lightning\/secp256k1$/;"	m
abs_top_srcdir	libsodium/Makefile	/^abs_top_srcdir = \/home\/wen\/work\/lightning\/libsodium$/;"	m
abs_top_srcdir	libsodium/dist-build/Makefile	/^abs_top_srcdir = \/home\/wen\/work\/lightning\/libsodium$/;"	m
abs_top_srcdir	libsodium/msvc-scripts/Makefile	/^abs_top_srcdir = \/home\/wen\/work\/lightning\/libsodium$/;"	m
abs_top_srcdir	libsodium/src/Makefile	/^abs_top_srcdir = \/home\/wen\/work\/lightning\/libsodium$/;"	m
abs_top_srcdir	libsodium/src/libsodium/Makefile	/^abs_top_srcdir = \/home\/wen\/work\/lightning\/libsodium$/;"	m
abs_top_srcdir	libsodium/src/libsodium/include/Makefile	/^abs_top_srcdir = \/home\/wen\/work\/lightning\/libsodium$/;"	m
abs_top_srcdir	libsodium/test/Makefile	/^abs_top_srcdir = \/home\/wen\/work\/lightning\/libsodium$/;"	m
abs_top_srcdir	libsodium/test/default/Makefile	/^abs_top_srcdir = \/home\/wen\/work\/lightning\/libsodium$/;"	m
abs_top_srcdir	secp256k1/Makefile	/^abs_top_srcdir = \/home\/wen\/work\/lightning\/secp256k1$/;"	m
ac_ct_AR	libsodium/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	libsodium/dist-build/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	libsodium/msvc-scripts/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	libsodium/src/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	libsodium/src/libsodium/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	libsodium/src/libsodium/include/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	libsodium/test/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	libsodium/test/default/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	secp256k1/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_CC	libsodium/Makefile	/^ac_ct_CC = cc$/;"	m
ac_ct_CC	libsodium/dist-build/Makefile	/^ac_ct_CC = cc$/;"	m
ac_ct_CC	libsodium/msvc-scripts/Makefile	/^ac_ct_CC = cc$/;"	m
ac_ct_CC	libsodium/src/Makefile	/^ac_ct_CC = cc$/;"	m
ac_ct_CC	libsodium/src/libsodium/Makefile	/^ac_ct_CC = cc$/;"	m
ac_ct_CC	libsodium/src/libsodium/include/Makefile	/^ac_ct_CC = cc$/;"	m
ac_ct_CC	libsodium/test/Makefile	/^ac_ct_CC = cc$/;"	m
ac_ct_CC	libsodium/test/default/Makefile	/^ac_ct_CC = cc$/;"	m
ac_ct_CC	secp256k1/Makefile	/^ac_ct_CC = cc$/;"	m
ac_ct_CC_FOR_BUILD	secp256k1/Makefile	/^ac_ct_CC_FOR_BUILD = gcc$/;"	m
ac_ct_DUMPBIN	libsodium/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	libsodium/dist-build/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	libsodium/msvc-scripts/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	libsodium/src/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	libsodium/src/libsodium/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	libsodium/src/libsodium/include/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	libsodium/test/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	libsodium/test/default/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	secp256k1/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_fn_c_check_func	libsodium/configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_func	secp256k1/configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	libsodium/configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_compile	secp256k1/configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	libsodium/configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_header_mongrel	secp256k1/configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_type	secp256k1/configure	/^ac_fn_c_check_type ()$/;"	f
ac_fn_c_try_compile	libsodium/configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_compile	secp256k1/configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	libsodium/configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_cpp	secp256k1/configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	libsodium/configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_link	secp256k1/configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	libsodium/configure	/^ac_fn_c_try_run ()$/;"	f
ac_fn_c_try_run	secp256k1/configure	/^ac_fn_c_try_run ()$/;"	f
accept_channel_eq	wire/test/run-peer-wire.c	/^static bool accept_channel_eq(const struct msg_accept_channel *a,$/;"	f	file:
accept_conn	ccan/ccan/io/poll.c	/^static void accept_conn(struct io_listener *l)$/;"	f	file:
accept_pkt_anchor	daemon/packets.c	/^Pkt *accept_pkt_anchor(struct peer *peer, const Pkt *pkt)$/;"	f
accept_pkt_anchor	test/test_state_coverage.c	/^Pkt *accept_pkt_anchor(const tal_t *ctx, struct peer *peer, const Pkt *pkt)$/;"	f
accept_pkt_close	test/test_state_coverage.c	/^Pkt *accept_pkt_close(const tal_t *ctx, struct peer *peer, const Pkt *pkt)$/;"	f
accept_pkt_close_ack	test/test_state_coverage.c	/^Pkt *accept_pkt_close_ack(const tal_t *ctx,$/;"	f
accept_pkt_close_complete	test/test_state_coverage.c	/^Pkt *accept_pkt_close_complete(const tal_t *ctx,$/;"	f
accept_pkt_close_shutdown	daemon/packets.c	/^Pkt *accept_pkt_close_shutdown(struct peer *peer, const Pkt *pkt)$/;"	f
accept_pkt_commit	daemon/packets.c	/^Pkt *accept_pkt_commit(struct peer *peer, const Pkt *pkt,$/;"	f
accept_pkt_htlc_add	daemon/packets.c	/^Pkt *accept_pkt_htlc_add(struct peer *peer, const Pkt *pkt, struct htlc **h)$/;"	f
accept_pkt_htlc_add	test/test_state_coverage.c	/^Pkt *accept_pkt_htlc_add(const tal_t *ctx,$/;"	f
accept_pkt_htlc_fail	daemon/packets.c	/^Pkt *accept_pkt_htlc_fail(struct peer *peer, const Pkt *pkt, struct htlc **h,$/;"	f
accept_pkt_htlc_fail	test/test_state_coverage.c	/^Pkt *accept_pkt_htlc_fail(const tal_t *ctx,$/;"	f
accept_pkt_htlc_fulfill	daemon/packets.c	/^Pkt *accept_pkt_htlc_fulfill(struct peer *peer, const Pkt *pkt, struct htlc **h,$/;"	f
accept_pkt_htlc_fulfill	test/test_state_coverage.c	/^Pkt *accept_pkt_htlc_fulfill(const tal_t *ctx,$/;"	f
accept_pkt_open	daemon/packets.c	/^Pkt *accept_pkt_open(struct peer *peer, const Pkt *pkt,$/;"	f
accept_pkt_open	test/test_state_coverage.c	/^Pkt *accept_pkt_open(const tal_t *ctx,$/;"	f
accept_pkt_open_commit_sig	daemon/packets.c	/^Pkt *accept_pkt_open_commit_sig(struct peer *peer, const Pkt *pkt,$/;"	f
accept_pkt_open_commit_sig	test/test_state_coverage.c	/^Pkt *accept_pkt_open_commit_sig(const tal_t *ctx,$/;"	f
accept_pkt_open_complete	daemon/packets.c	/^Pkt *accept_pkt_open_complete(struct peer *peer, const Pkt *pkt)$/;"	f
accept_pkt_open_complete	test/test_state_coverage.c	/^Pkt *accept_pkt_open_complete(const tal_t *ctx,$/;"	f
accept_pkt_revocation	daemon/packets.c	/^Pkt *accept_pkt_revocation(struct peer *peer, const Pkt *pkt)$/;"	f
accept_pkt_simultaneous_close	test/test_state_coverage.c	/^Pkt *accept_pkt_simultaneous_close(const tal_t *ctx,$/;"	f
accept_pkt_update_accept	test/test_state_coverage.c	/^Pkt *accept_pkt_update_accept(const tal_t *ctx,$/;"	f
accept_pkt_update_complete	test/test_state_coverage.c	/^Pkt *accept_pkt_update_complete(const tal_t *ctx,$/;"	f
accept_pkt_update_fee	daemon/packets.c	/^Pkt *accept_pkt_update_fee(struct peer *peer, const Pkt *pkt, u64 *feerate)$/;"	f
accept_pkt_update_signature	test/test_state_coverage.c	/^Pkt *accept_pkt_update_signature(const tal_t *ctx,$/;"	f
ack	lightning.pb-c.h	/^  uint64_t ack;$/;"	m	struct:_Init
act_one	lightningd/handshake/handshake.c	/^struct act_one {$/;"	s	file:
act_one_initiator	lightningd/handshake/handshake.c	/^static void act_one_initiator(struct handshake *h, int fd,$/;"	f	file:
act_one_responder	lightningd/handshake/handshake.c	/^static void act_one_responder(struct handshake *h, int fd, struct pubkey *re)$/;"	f	file:
act_three	lightningd/handshake/handshake.c	/^struct act_three {$/;"	s	file:
act_three_initiator	lightningd/handshake/handshake.c	/^static void act_three_initiator(struct handshake *h, int fd,$/;"	f	file:
act_three_responder	lightningd/handshake/handshake.c	/^static void act_three_responder(struct handshake *h, int fd,$/;"	f	file:
act_two	lightningd/handshake/handshake.c	/^struct act_two {$/;"	s	file:
act_two_initiator	lightningd/handshake/handshake.c	/^static void act_two_initiator(struct handshake *h, int fd, struct pubkey *re)$/;"	f	file:
act_two_responder	lightningd/handshake/handshake.c	/^static void act_two_responder(struct handshake *h, int fd,$/;"	f	file:
activate_event	test/test_state_coverage.c	/^static void activate_event(struct peer *peer, enum state_input i)$/;"	f	file:
active	daemon/routing.h	/^	bool active;$/;"	m	struct:node_connection
ad	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint8_t *ad;    \/* associated data array *\/$/;"	m	struct:Argon2_Context
ad_hex	libsodium/test/default/aead_aes256gcm.c	/^    const char *ad_hex;$/;"	m	struct:__anon62	file:
adc	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^adc %rdx,%r11$/;"	l
adc	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^adc %rdx,%r13$/;"	l
adc	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^adc %rdx,%r15$/;"	l
adc	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^adc %rdx,%r9$/;"	l
adc	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^adc %rdx,%rbp$/;"	l
adc	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^adc %rdx,%r10$/;"	l
adc	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^adc %rdx,%r12$/;"	l
adc	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^adc %rdx,%r14$/;"	l
adc	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^adc %rdx,%rbp$/;"	l
adc	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^adc %rdx,%rbx$/;"	l
add	bitcoin/script.c	/^static void add(u8 **scriptp, const void *mem, size_t len)$/;"	f	file:
add	ccan/ccan/crypto/ripemd160/ripemd160.c	/^static void add(struct ripemd160_ctx *ctx, const void *p, size_t len)$/;"	f	file:
add	ccan/ccan/crypto/sha256/benchmarks/sha256_avx1.asm	/^	add	d, h		; d = d + h + S1 + CH + k + w$/;"	d
add	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^	add	d, h		; d = k + w + h + d                     ; --$/;"	d
add	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^	add	d, y2		; d = k + w + h + d + S1 + CH = d + t1  ; --$/;"	d
add	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^	add	d, h		; d = k + w + h + d                            ; --$/;"	d
add	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^	add	d, z2		; d = k + w + h + d + S1 + CH = d + t1         ; --$/;"	d
add	ccan/ccan/crypto/sha256/benchmarks/sha256_sse4.asm	/^	add	d, h		; d = d + h + S1 + CH + k + w$/;"	d
add	ccan/ccan/crypto/sha256/sha256.c	/^static void add(struct sha256_ctx *ctx, const void *p, size_t len)$/;"	f	file:
add	ccan/ccan/crypto/siphash24/siphash24.c	/^static void add(struct siphash24_ctx *ctx, const void *p, size_t len)$/;"	f	file:
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add  %r10,%rdx$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add  %r11,%r12$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add  %r12,%rdx$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add  %r13,%r14$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add  %r14,%rdx$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add  %r15,%rbx$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add  %r9,%r10$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add  %rax,%r10$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add  %rax,%r12$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add  %rax,%r14$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add  %rax,%r8$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add  %rax,%rbx$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add  %rbx,%rdx$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add  %rdx,%r8$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add $96,%r11$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add %r11,%rsp$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %r10,%r11$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %r11,%r9$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %r12,%r13$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %r13,%r9$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %r14,%r15$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %r15,%r9$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %r8,%r8$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %rax,%r11$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %rax,%r13$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %rax,%r15$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %rax,%r9$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %rax,%rcx$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %rbx,%rcx$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %rcx,%r9$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %rcx,%rcx$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add $64,%r11$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add %r11,%rsp$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^add  %r12,%r8$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^add  %r12,%r9$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^add  %r12,%rcx$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^add  %r12,%rdx$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^add  %r12,%rsi$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^add $32,%r11$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^add %r11,%rsp$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^add  $4,%rsi$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^add  $760,%rsi$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^add $1856,%r11$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^add %r11,%rsp$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^add  $4,%rsi$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^add  $760,%rsi$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^add $1568,%r11$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^add %r11,%rsp$/;"	l
add	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^add  $1,%rcx$/;"	l
add	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^add  $1,%rdx$/;"	l
add	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^add  $256,%rdi$/;"	l
add	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^add  $256,%rsi$/;"	l
add	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^add  $64,%rdi$/;"	l
add	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^add  $64,%rsi$/;"	l
add	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^add $512,%r11$/;"	l
add	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^add %r11,%rsp$/;"	l
addField	tools/generate-wire.py	/^    def addField(self,field):$/;"	m	class:Message
add_64bits	ccan/ccan/crypto/siphash24/siphash24.c	/^static void add_64bits(uint64_t v[4], uint64_t in)$/;"	f	file:
add_channel_direction	daemon/routing.c	/^bool add_channel_direction(struct routing_state *rstate,$/;"	f
add_child	ccan/ccan/tal/benchmark/samba-allocs.c	/^static void add_child(struct node *parent, struct node *child)$/;"	f	file:
add_child	ccan/ccan/tal/tal.c	/^static bool add_child(struct tal_hdr *parent, struct tal_hdr *child)$/;"	f	file:
add_child_property	ccan/ccan/tal/tal.c	/^static struct children *add_child_property(struct tal_hdr *parent,$/;"	f	file:
add_conn	ccan/ccan/io/poll.c	/^bool add_conn(struct io_conn *c)$/;"	f
add_connection	daemon/routing.c	/^struct node_connection *add_connection(struct routing_state *rstate,$/;"	f
add_desc	ccan/ccan/opt/usage.c	/^static char *add_desc(char *base, size_t *len, size_t *max,$/;"	f	file:
add_dot	test/test_state_coverage.c	/^static void add_dot(struct edge_hash *hash,$/;"	f	file:
add_entry	daemon/log.c	/^static void add_entry(struct log *log, struct log_entry *l)$/;"	f	file:
add_event	test/test_state_coverage.c	/^static void add_event(struct peer *peer, enum state_input input)$/;"	f	file:
add_event_	test/test_state_coverage.c	/^static bool add_event_(struct peer *peer, enum state_input input)$/;"	f	file:
add_fd	ccan/ccan/io/poll.c	/^static bool add_fd(struct fd *fd, short events)$/;"	f	file:
add_htlc	test/test_state_coverage.c	/^static void add_htlc(struct htlc *to_us, unsigned int *num_to_us,$/;"	f	file:
add_indent	ccan/ccan/opt/usage.c	/^static char *add_indent(char *base, size_t *len, size_t *max, size_t indent)$/;"	f	file:
add_l	libsodium/test/default/sign.c	/^static void add_l(unsigned char * const S)$/;"	f	file:
add_level	ccan/ccan/timer/timer.c	/^static void add_level(struct timers *timers, unsigned int level)$/;"	f	file:
add_listener	ccan/ccan/io/poll.c	/^bool add_listener(struct io_listener *l)$/;"	f
add_map	ccan/ccan/ptr_valid/ptr_valid.c	/^static struct ptr_valid_map *add_map(struct ptr_valid_map *map,$/;"	f	file:
add_name_property	ccan/ccan/tal/tal.c	/^static struct name *add_name_property(struct tal_hdr *t, const char *name)$/;"	f	file:
add_node	daemon/routing.c	/^struct node *add_node($/;"	f
add_notifier_property	ccan/ccan/tal/tal.c	/^static struct notifier *add_notifier_property(struct tal_hdr *t,$/;"	f	file:
add_number	bitcoin/script.c	/^static void add_number(u8 **script, u32 num)$/;"	f	file:
add_op	bitcoin/script.c	/^static void add_op(u8 **scriptp, u8 op)$/;"	f	file:
add_opt	ccan/ccan/opt/opt.c	/^static void add_opt(const struct opt_table *entry)$/;"	f	file:
add_output	daemon/commit_tx.c	/^static bool add_output(struct bitcoin_tx *tx, u8 *script, u64 amount,$/;"	f	file:
add_overflows_size_t	overflows.h	/^static inline bool add_overflows_size_t(uint64_t a, uint64_t b)$/;"	f
add_overflows_u64	overflows.h	/^static inline bool add_overflows_u64(uint64_t a, uint64_t b)$/;"	f
add_peer_address	daemon/peer.c	/^static bool add_peer_address(struct lightningd_state *dstate,$/;"	f	file:
add_push_bytes	bitcoin/script.c	/^static void add_push_bytes(u8 **scriptp, const void *mem, size_t len)$/;"	f	file:
add_push_key	bitcoin/script.c	/^static void add_push_key(u8 **scriptp, const struct pubkey *key)$/;"	f	file:
add_push_sig	bitcoin/script.c	/^static void add_push_sig(u8 **scriptp, const secp256k1_ecdsa_signature *sig)$/;"	f	file:
add_rval	test/test_state_coverage.c	/^static void add_rval(struct peer *peer, unsigned int id)$/;"	f	file:
add_sent	test/test_protocol.c	/^static void add_sent(struct sent **sent, int y, const char *msg)$/;"	f	file:
add_skipped	daemon/jsonrpc.c	/^static void add_skipped(struct log_info *info)$/;"	f	file:
add_str	ccan/ccan/opt/usage.c	/^static char *add_str(char *base, size_t *len, size_t *max, const char *str)$/;"	f	file:
add_str_len	ccan/ccan/opt/usage.c	/^static char *add_str_len(char *base, size_t *len, size_t *max,$/;"	f	file:
add_token	ccan/ccan/cdump/cdump.c	/^static void add_token(struct token **toks, const char *p, size_t len)$/;"	f	file:
add_trace	ccan/ccan/likely/likely.c	/^static struct trace *add_trace(const struct trace *t)$/;"	f	file:
add_tx_to_block	daemon/chaintopology.c	/^static void add_tx_to_block(struct block *b, const struct sha256_double *txid, const u32 txnum)$/;"	f	file:
add_uint32_big	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128.h	53;"	d
add_uint32_big	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128_aes128ctr.c	/^void add_uint32_big(int128 *r, uint32 x)$/;"	f
add_vals	ccan/ccan/htable/test/run-type-int.c	/^static void add_vals(struct htable_obj *ht,$/;"	f	file:
add_vals	ccan/ccan/htable/test/run-type.c	/^static void add_vals(struct htable_obj *ht,$/;"	f	file:
add_vals	ccan/ccan/htable/test/run.c	/^static void add_vals(struct htable *ht,$/;"	f	file:
adding	test/test_state_coverage.c	/^	bool adding; \/* otherwise, removing. *\/$/;"	m	struct:htlc_progress	file:
addmul	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^addmul(unsigned char *c, const unsigned char *a, unsigned int xlen, const unsigned char *b)$/;"	f	file:
addr	bitcoin/address.h	/^	struct ripemd160 addr;$/;"	m	struct:bitcoin_address	typeref:struct:bitcoin_address::ripemd160
addr	daemon/peer.h	/^	struct netaddr addr;$/;"	m	struct:peer_address	typeref:struct:peer_address::netaddr
addr	wire/wire.h	/^	u8 addr[16];$/;"	m	struct:ipv6
addresses	daemon/dns.c	/^	struct netaddr *addresses;$/;"	m	struct:dns_async	typeref:struct:dns_async::netaddr	file:
addresses	daemon/lightningd.h	/^	struct list_head addresses;$/;"	m	struct:lightningd_state	typeref:struct:lightningd_state::list_head
addresses	wire/test/run-peer-wire.c	/^	u8 *addresses;$/;"	m	struct:msg_node_announcement	file:
addrlen	daemon/netaddr.h	/^	socklen_t addrlen;$/;"	m	struct:netaddr
adjust_cstate_fee_side	daemon/peer.c	/^static void adjust_cstate_fee_side(struct channel_state *cstate,$/;"	f	file:
adjust_cstate_side	daemon/peer.c	/^static bool adjust_cstate_side(struct channel_state *cstate,$/;"	f	file:
adjust_cstates	daemon/peer.c	/^static bool adjust_cstates(struct peer *peer, struct htlc *h,$/;"	f	file:
adjust_cstates_fee	daemon/peer.c	/^static void adjust_cstates_fee(struct peer *peer, const struct feechange *f,$/;"	f	file:
adjust_fee	daemon/channel.c	/^void adjust_fee(struct channel_state *cstate, uint64_t fee_rate)$/;"	f
adjust_size	ccan/ccan/tal/tal.c	/^static bool adjust_size(size_t *size, size_t count)$/;"	f	file:
adlen	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint32_t adlen; \/* associated data length *\/$/;"	m	struct:Argon2_Context
aead_aes256gcm_DEPENDENCIES	libsodium/test/default/Makefile	/^aead_aes256gcm_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
aead_aes256gcm_LDADD	libsodium/test/default/Makefile	/^aead_aes256gcm_LDADD = $(TESTS_LDADD)$/;"	m
aead_aes256gcm_OBJECTS	libsodium/test/default/Makefile	/^aead_aes256gcm_OBJECTS = aead_aes256gcm.$(OBJEXT)$/;"	m
aead_aes256gcm_SOURCE	libsodium/test/default/Makefile	/^aead_aes256gcm_SOURCE = cmptest.h aead_aes256gcm.c$/;"	m
aead_aes256gcm_SOURCES	libsodium/test/default/Makefile	/^aead_aes256gcm_SOURCES = aead_aes256gcm.c$/;"	m
aead_chacha20poly1305_DEPENDENCIES	libsodium/test/default/Makefile	/^aead_chacha20poly1305_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
aead_chacha20poly1305_LDADD	libsodium/test/default/Makefile	/^aead_chacha20poly1305_LDADD = $(TESTS_LDADD)$/;"	m
aead_chacha20poly1305_OBJECTS	libsodium/test/default/Makefile	/^aead_chacha20poly1305_OBJECTS = aead_chacha20poly1305.$(OBJEXT)$/;"	m
aead_chacha20poly1305_SOURCE	libsodium/test/default/Makefile	/^aead_chacha20poly1305_SOURCE = cmptest.h aead_chacha20poly1305.c$/;"	m
aead_chacha20poly1305_SOURCES	libsodium/test/default/Makefile	/^aead_chacha20poly1305_SOURCES = aead_chacha20poly1305.c$/;"	m
aesni_addmul8full	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	458;"	d	file:
aesni_decrypt8full	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	475;"	d	file:
aesni_encrypt1	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^aesni_encrypt1(unsigned char *out, __m128i nv, const __m128i *rkeys)$/;"	f	file:
aesni_encrypt8full	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	428;"	d	file:
aesni_key256_expand	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^aesni_key256_expand(const unsigned char *key, __m128 *rkeys)$/;"	f	file:
aesround	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common.h	534;"	d
after	test/test_state_coverage.c	/^	const struct peer *before, *after;$/;"	m	struct:trail	typeref:struct:trail::	file:
after_16M_by_64	ccan/ccan/crypto/sha256/test/run-33-bit-test.c	/^static const struct sha256_ctx after_16M_by_64 = {$/;"	v	typeref:struct:sha256_ctx	file:
after_load	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^after_load:$/;"	l
aix_post_process_depfile	libsodium/build-aux/depcomp	/^aix_post_process_depfile ()$/;"	f
aix_post_process_depfile	secp256k1/build-aux/depcomp	/^aix_post_process_depfile ()$/;"	f
alias	daemon/routing.h	/^	u8 *alias;$/;"	m	struct:node
alias	wire/test/run-peer-wire.c	/^	u8 alias[32];$/;"	m	struct:msg_node_announcement	file:
alicepk	libsodium/test/default/box2.c	/^static unsigned char alicepk[32]$/;"	v	file:
alicepk	libsodium/test/default/box7.c	/^static unsigned char alicepk[crypto_box_PUBLICKEYBYTES];$/;"	v	file:
alicepk	libsodium/test/default/box8.c	/^static unsigned char alicepk[crypto_box_PUBLICKEYBYTES];$/;"	v	file:
alicepk_	libsodium/test/default/scalarmult6.c	/^static unsigned char alicepk_[crypto_scalarmult_SCALARBYTES]$/;"	v	file:
alicesk	libsodium/test/default/box.c	/^static const unsigned char alicesk[32]$/;"	v	file:
alicesk	libsodium/test/default/box7.c	/^static unsigned char alicesk[crypto_box_SECRETKEYBYTES];$/;"	v	file:
alicesk	libsodium/test/default/box8.c	/^static unsigned char alicesk[crypto_box_SECRETKEYBYTES];$/;"	v	file:
alicesk	libsodium/test/default/box_easy.c	/^static unsigned char alicesk[32]$/;"	v	file:
alicesk	libsodium/test/default/scalarmult.c	/^static const unsigned char alicesk[crypto_scalarmult_BYTES]$/;"	v	file:
alicesk	libsodium/test/default/scalarmult5.c	/^static unsigned char alicesk[32]$/;"	v	file:
aligned	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	/^    void * base, * aligned;$/;"	m	struct:__anon64
alignment_ok	ccan/ccan/crypto/ripemd160/ripemd160.c	/^static bool alignment_ok(const void *p UNUSED, size_t n UNUSED)$/;"	f	file:
alignment_ok	ccan/ccan/crypto/sha256/sha256.c	/^static bool alignment_ok(const void *p UNUSED, size_t n UNUSED)$/;"	f	file:
alignment_ok	ccan/ccan/crypto/siphash24/siphash24.c	/^static bool alignment_ok(const void *p, size_t n)$/;"	f	file:
all_ok	daemon/test/scripts/helpers.sh	/^all_ok()$/;"	f
alloc	ccan/ccan/opt/private.h	/^	void *(*alloc)(size_t size);$/;"	m	struct:opt_alloc
alloc_account	ccan/ccan/tal/test/run-groups-grow.c	/^static void *alloc_account(size_t len)$/;"	f	file:
alloc_count	ccan/ccan/opt/test/run-set_alloc.c	/^static unsigned int alloc_count, realloc_count, free_count;$/;"	v	file:
alloc_count	ccan/ccan/tal/test/run-allocfail.c	/^static int alloc_count, when_to_fail, err_count;$/;"	v	file:
alloc_region	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c	/^alloc_region(escrypt_region_t * region, size_t size)$/;"	f
allocate	ccan/ccan/tal/tal.c	/^static void *allocate(size_t size)$/;"	f	file:
allocate_memory	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^static int allocate_memory(block_region **region, uint32_t m_cost) {$/;"	f	file:
allocated	ccan/ccan/opt/test/utils.c	/^static bool allocated = false;$/;"	v	file:
allocfail	ccan/ccan/take/take.c	/^static size_t allocfail;$/;"	v	file:
allocfailfn	ccan/ccan/take/take.c	/^static void (*allocfailfn)(const void *p);$/;"	v	file:
allocfn	ccan/ccan/opt/test/run-set_alloc.c	/^static void *allocfn(size_t size)$/;"	f	file:
allocfn	ccan/ccan/tal/tal.c	/^static void *(*allocfn)(size_t size) = malloc;$/;"	v	file:
always	ccan/ccan/io/backend.h	/^	struct list_node always;$/;"	m	struct:io_conn	typeref:struct:io_conn::list_node
am__CONFIG_DISTCLEAN_FILES	libsodium/Makefile	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__CONFIG_DISTCLEAN_FILES	secp256k1/Makefile	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__DEPENDENCIES_2	secp256k1/Makefile	/^am__DEPENDENCIES_2 =$/;"	m
am__DIST_COMMON	libsodium/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in \\$/;"	m
am__DIST_COMMON	libsodium/dist-build/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in$/;"	m
am__DIST_COMMON	libsodium/msvc-scripts/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in$/;"	m
am__DIST_COMMON	libsodium/src/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in$/;"	m
am__DIST_COMMON	libsodium/src/libsodium/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in \\$/;"	m
am__DIST_COMMON	libsodium/src/libsodium/include/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in$/;"	m
am__DIST_COMMON	libsodium/test/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in$/;"	m
am__DIST_COMMON	libsodium/test/default/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in \\$/;"	m
am__DIST_COMMON	secp256k1/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/libsecp256k1.pc.in \\$/;"	m
am__EXEEXT_1	libsodium/test/default/Makefile	/^am__EXEEXT_1 =  \\$/;"	m
am__EXEEXT_2	libsodium/test/default/Makefile	/^am__EXEEXT_2 = aead_aes256gcm$(EXEEXT) aead_chacha20poly1305$(EXEEXT) \\$/;"	m
am__aclocal_m4_deps	libsodium/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_check_compile_flag.m4 \\$/;"	m
am__aclocal_m4_deps	libsodium/dist-build/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_check_compile_flag.m4 \\$/;"	m
am__aclocal_m4_deps	libsodium/msvc-scripts/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_check_compile_flag.m4 \\$/;"	m
am__aclocal_m4_deps	libsodium/src/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_check_compile_flag.m4 \\$/;"	m
am__aclocal_m4_deps	libsodium/src/libsodium/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_check_compile_flag.m4 \\$/;"	m
am__aclocal_m4_deps	libsodium/src/libsodium/include/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_check_compile_flag.m4 \\$/;"	m
am__aclocal_m4_deps	libsodium/test/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_check_compile_flag.m4 \\$/;"	m
am__aclocal_m4_deps	libsodium/test/default/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_check_compile_flag.m4 \\$/;"	m
am__aclocal_m4_deps	secp256k1/Makefile	/^am__aclocal_m4_deps =  \\$/;"	m
am__append_1	libsodium/src/libsodium/Makefile	/^am__append_1 = \\$/;"	m
am__append_1	libsodium/test/default/Makefile	/^am__append_1 = \\$/;"	m
am__append_3	libsodium/src/libsodium/Makefile	/^am__append_3 = \\$/;"	m
am__append_3	secp256k1/Makefile	/^am__append_3 = -I$(top_srcdir)$/;"	m
am__append_4	libsodium/src/libsodium/Makefile	/^am__append_4 = \\$/;"	m
am__append_4	secp256k1/Makefile	/^am__append_4 = -Wall -Wextra -Wno-unused-function$/;"	m
am__append_5	secp256k1/Makefile	/^am__append_5 = include\/secp256k1_ecdh.h$/;"	m
am__append_6	libsodium/src/libsodium/Makefile	/^am__append_6 = \\$/;"	m
am__append_6	secp256k1/Makefile	/^am__append_6 = src\/modules\/ecdh\/main_impl.h \\$/;"	m
am__append_7	libsodium/src/libsodium/Makefile	/^am__append_7 = \\$/;"	m
am__append_9	libsodium/src/libsodium/Makefile	/^am__append_9 = \\$/;"	m
am__base_list	libsodium/Makefile	/^am__base_list = \\$/;"	m
am__base_list	libsodium/src/libsodium/Makefile	/^am__base_list = \\$/;"	m
am__base_list	libsodium/src/libsodium/include/Makefile	/^am__base_list = \\$/;"	m
am__base_list	libsodium/test/default/Makefile	/^am__base_list = \\$/;"	m
am__base_list	secp256k1/Makefile	/^am__base_list = \\$/;"	m
am__bench_ecdh_SOURCES_DIST	secp256k1/Makefile	/^am__bench_ecdh_SOURCES_DIST = src\/bench_ecdh.c$/;"	m
am__bench_internal_SOURCES_DIST	secp256k1/Makefile	/^am__bench_internal_SOURCES_DIST = src\/bench_internal.c$/;"	m
am__bench_recover_SOURCES_DIST	secp256k1/Makefile	/^am__bench_recover_SOURCES_DIST = src\/bench_recover.c$/;"	m
am__bench_schnorr_verify_SOURCES_DIST	secp256k1/Makefile	/^am__bench_schnorr_verify_SOURCES_DIST = src\/bench_schnorr_verify.c$/;"	m
am__bench_sign_SOURCES_DIST	secp256k1/Makefile	/^am__bench_sign_SOURCES_DIST = src\/bench_sign.c$/;"	m
am__bench_verify_SOURCES_DIST	secp256k1/Makefile	/^am__bench_verify_SOURCES_DIST = src\/bench_verify.c$/;"	m
am__can_run_installinfo	libsodium/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	libsodium/dist-build/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	libsodium/msvc-scripts/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	libsodium/src/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	libsodium/src/libsodium/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	libsodium/src/libsodium/include/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	libsodium/test/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	libsodium/test/default/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	secp256k1/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__cd	libsodium/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	libsodium/dist-build/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	libsodium/msvc-scripts/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	libsodium/src/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	libsodium/src/libsodium/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	libsodium/src/libsodium/include/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	libsodium/test/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	libsodium/test/default/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	secp256k1/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__check_pre	libsodium/test/default/Makefile	/^am__check_pre = \\$/;"	m
am__check_pre	secp256k1/Makefile	/^am__check_pre = \\$/;"	m
am__common_driver_flags	libsodium/test/default/Makefile	/^am__common_driver_flags = \\$/;"	m
am__common_driver_flags	secp256k1/Makefile	/^am__common_driver_flags = \\$/;"	m
am__configure_deps	libsodium/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	libsodium/dist-build/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	libsodium/msvc-scripts/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	libsodium/src/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	libsodium/src/libsodium/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	libsodium/src/libsodium/include/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	libsodium/test/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	libsodium/test/default/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	secp256k1/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__copy_in_global_log_rx	libsodium/test/default/Makefile	/^am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*$/;"	m
am__copy_in_global_log_rx	secp256k1/Makefile	/^am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*$/;"	m
am__create_global_log	libsodium/test/default/Makefile	/^am__create_global_log = $(AWK) ' \\$/;"	m
am__create_global_log	secp256k1/Makefile	/^am__create_global_log = $(AWK) ' \\$/;"	m
am__define_uniq_tagged_files	libsodium/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	libsodium/src/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	libsodium/src/libsodium/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	libsodium/src/libsodium/include/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	libsodium/test/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	libsodium/test/default/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	secp256k1/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__depfiles_maybe	libsodium/src/libsodium/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	libsodium/test/default/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	secp256k1/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__dirstamp	libsodium/src/libsodium/Makefile	/^am__dirstamp = $(am__leading_dot)dirstamp$/;"	m
am__dirstamp	secp256k1/Makefile	/^am__dirstamp = $(am__leading_dot)dirstamp$/;"	m
am__distuninstallcheck_listfiles	libsodium/Makefile	/^am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\$/;"	m
am__distuninstallcheck_listfiles	secp256k1/Makefile	/^am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\$/;"	m
am__global_test_result_rx	libsodium/test/default/Makefile	/^am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*$/;"	m
am__global_test_result_rx	secp256k1/Makefile	/^am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*$/;"	m
am__include	libsodium/Makefile	/^am__include = include$/;"	m
am__include	libsodium/dist-build/Makefile	/^am__include = include$/;"	m
am__include	libsodium/msvc-scripts/Makefile	/^am__include = include$/;"	m
am__include	libsodium/src/Makefile	/^am__include = include$/;"	m
am__include	libsodium/src/libsodium/Makefile	/^am__include = include$/;"	m
am__include	libsodium/src/libsodium/include/Makefile	/^am__include = include$/;"	m
am__include	libsodium/test/Makefile	/^am__include = include$/;"	m
am__include	libsodium/test/default/Makefile	/^am__include = include$/;"	m
am__include	secp256k1/Makefile	/^am__include = include$/;"	m
am__include_HEADERS_DIST	secp256k1/Makefile	/^am__include_HEADERS_DIST = include\/secp256k1.h \\$/;"	m
am__install_max	libsodium/Makefile	/^am__install_max = 40$/;"	m
am__install_max	libsodium/src/libsodium/Makefile	/^am__install_max = 40$/;"	m
am__install_max	libsodium/src/libsodium/include/Makefile	/^am__install_max = 40$/;"	m
am__install_max	libsodium/test/default/Makefile	/^am__install_max = 40$/;"	m
am__install_max	secp256k1/Makefile	/^am__install_max = 40$/;"	m
am__installdirs	libsodium/Makefile	/^am__installdirs = "$(DESTDIR)$(pkgconfigdir)"$/;"	m
am__installdirs	libsodium/src/libsodium/Makefile	/^am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(defexecdir)"$/;"	m
am__installdirs	libsodium/src/libsodium/include/Makefile	/^am__installdirs = "$(DESTDIR)$(includedir)" "$(DESTDIR)$(includedir)"$/;"	m
am__installdirs	secp256k1/Makefile	/^am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" \\$/;"	m
am__is_gnu_make	libsodium/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__is_gnu_make	libsodium/dist-build/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__is_gnu_make	libsodium/msvc-scripts/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__is_gnu_make	libsodium/src/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__is_gnu_make	libsodium/src/libsodium/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__is_gnu_make	libsodium/src/libsodium/include/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__is_gnu_make	libsodium/test/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__is_gnu_make	libsodium/test/default/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__is_gnu_make	secp256k1/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__leading_dot	libsodium/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	libsodium/dist-build/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	libsodium/msvc-scripts/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	libsodium/src/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	libsodium/src/libsodium/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	libsodium/src/libsodium/include/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	libsodium/test/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	libsodium/test/default/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	secp256k1/Makefile	/^am__leading_dot = .$/;"	m
am__libsecp256k1_common_la_SOURCES_DIST	secp256k1/Makefile	/^am__libsecp256k1_common_la_SOURCES_DIST = src\/asm\/field_10x26_arm.s$/;"	m
am__libsodium_la_SOURCES_DIST	libsodium/src/libsodium/Makefile	/^am__libsodium_la_SOURCES_DIST =  \\$/;"	m
am__list_recheck_tests	libsodium/test/default/Makefile	/^am__list_recheck_tests = $(AWK) '{ \\$/;"	m
am__list_recheck_tests	secp256k1/Makefile	/^am__list_recheck_tests = $(AWK) '{ \\$/;"	m
am__make_dryrun	libsodium/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	libsodium/dist-build/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	libsodium/msvc-scripts/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	libsodium/src/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	libsodium/src/libsodium/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	libsodium/src/libsodium/include/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	libsodium/test/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	libsodium/test/default/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	secp256k1/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	libsodium/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	libsodium/dist-build/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	libsodium/msvc-scripts/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	libsodium/src/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	libsodium/src/libsodium/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	libsodium/src/libsodium/include/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	libsodium/test/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	libsodium/test/default/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	secp256k1/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_running_with_option	libsodium/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	libsodium/dist-build/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	libsodium/msvc-scripts/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	libsodium/src/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	libsodium/src/libsodium/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	libsodium/src/libsodium/include/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	libsodium/test/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	libsodium/test/default/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	secp256k1/Makefile	/^am__make_running_with_option = \\$/;"	m
am__mv	libsodium/src/libsodium/Makefile	/^am__mv = mv -f$/;"	m
am__mv	libsodium/test/default/Makefile	/^am__mv = mv -f$/;"	m
am__mv	secp256k1/Makefile	/^am__mv = mv -f$/;"	m
am__nobase_include_HEADERS_DIST	libsodium/src/libsodium/include/Makefile	/^am__nobase_include_HEADERS_DIST = sodium.h sodium\/core.h \\$/;"	m
am__nobase_list	libsodium/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	libsodium/src/libsodium/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	libsodium/src/libsodium/include/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	libsodium/test/default/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	secp256k1/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_strip	libsodium/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	libsodium/src/libsodium/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	libsodium/src/libsodium/include/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	libsodium/test/default/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	secp256k1/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip_setup	libsodium/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	libsodium/src/libsodium/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	libsodium/src/libsodium/include/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	libsodium/test/default/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	secp256k1/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__noinst_HEADERS_DIST	secp256k1/Makefile	/^am__noinst_HEADERS_DIST = src\/scalar.h src\/scalar_4x64.h \\$/;"	m
am__objects_1	libsodium/src/libsodium/Makefile	/^am__objects_1 = randombytes\/salsa20\/libsodium_la-randombytes_salsa20_random.lo$/;"	m
am__objects_3	libsodium/src/libsodium/Makefile	/^am__objects_3 = randombytes\/sysrandom\/libsodium_la-randombytes_sysrandom.lo$/;"	m
am__objects_4	libsodium/src/libsodium/Makefile	/^am__objects_4 = crypto_scalarmult\/curve25519\/donna_c64\/libsodium_la-curve25519_donna_c64.lo$/;"	m
am__objects_6	libsodium/src/libsodium/Makefile	/^am__objects_6 = crypto_scalarmult\/curve25519\/sandy2x\/libsodium_la-curve25519_sandy2x.lo \\$/;"	m
am__objects_7	libsodium/src/libsodium/Makefile	/^am__objects_7 = crypto_stream\/salsa20\/amd64_xmm6\/libsodium_la-stream_salsa20_amd64_xmm6.lo$/;"	m
am__objects_9	libsodium/src/libsodium/Makefile	/^am__objects_9 = crypto_core\/hchacha20\/libsodium_la-core_hchacha20.lo \\$/;"	m
am__post_remove_distdir	libsodium/Makefile	/^am__post_remove_distdir = $(am__remove_distdir)$/;"	m
am__post_remove_distdir	secp256k1/Makefile	/^am__post_remove_distdir = $(am__remove_distdir)$/;"	m
am__quote	libsodium/Makefile	/^am__quote = $/;"	m
am__quote	libsodium/dist-build/Makefile	/^am__quote = $/;"	m
am__quote	libsodium/msvc-scripts/Makefile	/^am__quote = $/;"	m
am__quote	libsodium/src/Makefile	/^am__quote = $/;"	m
am__quote	libsodium/src/libsodium/Makefile	/^am__quote = $/;"	m
am__quote	libsodium/src/libsodium/include/Makefile	/^am__quote = $/;"	m
am__quote	libsodium/test/Makefile	/^am__quote = $/;"	m
am__quote	libsodium/test/default/Makefile	/^am__quote = $/;"	m
am__quote	secp256k1/Makefile	/^am__quote = $/;"	m
am__recheck_rx	libsodium/test/default/Makefile	/^am__recheck_rx = ^[ 	]*:recheck:[ 	]*$/;"	m
am__recheck_rx	secp256k1/Makefile	/^am__recheck_rx = ^[ 	]*:recheck:[ 	]*$/;"	m
am__recursive_targets	libsodium/Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	libsodium/src/Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	libsodium/src/libsodium/Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	libsodium/test/Makefile	/^am__recursive_targets = \\$/;"	m
am__relativize	libsodium/Makefile	/^am__relativize = \\$/;"	m
am__relativize	libsodium/src/Makefile	/^am__relativize = \\$/;"	m
am__relativize	libsodium/src/libsodium/Makefile	/^am__relativize = \\$/;"	m
am__relativize	libsodium/test/Makefile	/^am__relativize = \\$/;"	m
am__remove_distdir	libsodium/Makefile	/^am__remove_distdir = \\$/;"	m
am__remove_distdir	secp256k1/Makefile	/^am__remove_distdir = \\$/;"	m
am__rst_title	libsodium/test/default/Makefile	/^am__rst_title = { sed 's\/.*\/   &   \/;h;s\/.\/=\/g;p;x;s\/ *$$\/\/;p;g' && echo; }$/;"	m
am__rst_title	secp256k1/Makefile	/^am__rst_title = { sed 's\/.*\/   &   \/;h;s\/.\/=\/g;p;x;s\/ *$$\/\/;p;g' && echo; }$/;"	m
am__set_TESTS_bases	libsodium/test/default/Makefile	/^am__set_TESTS_bases = \\$/;"	m
am__set_TESTS_bases	secp256k1/Makefile	/^am__set_TESTS_bases = \\$/;"	m
am__set_b	libsodium/test/default/Makefile	/^am__set_b = \\$/;"	m
am__set_b	secp256k1/Makefile	/^am__set_b = \\$/;"	m
am__sh_e_setup	libsodium/test/default/Makefile	/^am__sh_e_setup = case $$- in *e*) set +e;; esac$/;"	m
am__sh_e_setup	secp256k1/Makefile	/^am__sh_e_setup = case $$- in *e*) set +e;; esac$/;"	m
am__strip_dir	libsodium/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	libsodium/src/libsodium/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	libsodium/src/libsodium/include/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	libsodium/test/default/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	secp256k1/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__tagged_files	libsodium/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	libsodium/dist-build/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	libsodium/msvc-scripts/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	libsodium/src/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	libsodium/src/libsodium/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	libsodium/src/libsodium/include/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	libsodium/test/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	libsodium/test/default/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	secp256k1/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tar	libsodium/Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__tar	libsodium/dist-build/Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__tar	libsodium/msvc-scripts/Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__tar	libsodium/src/Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__tar	libsodium/src/libsodium/Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__tar	libsodium/src/libsodium/include/Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__tar	libsodium/test/Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__tar	libsodium/test/default/Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__tar	secp256k1/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__test_logs1	libsodium/test/default/Makefile	/^am__test_logs1 = $(TESTS:=.log)$/;"	m
am__test_logs1	secp256k1/Makefile	/^am__test_logs1 = $(TESTS:=.log)$/;"	m
am__test_logs2	libsodium/test/default/Makefile	/^am__test_logs2 = $(am__test_logs1:.log=.log)$/;"	m
am__test_logs2	secp256k1/Makefile	/^am__test_logs2 = $(am__test_logs1:.log=.log)$/;"	m
am__tests_SOURCES_DIST	secp256k1/Makefile	/^am__tests_SOURCES_DIST = src\/tests.c$/;"	m
am__tty_colors	libsodium/test/default/Makefile	/^am__tty_colors = { \\$/;"	m
am__tty_colors	secp256k1/Makefile	/^am__tty_colors = { \\$/;"	m
am__tty_colors_dummy	libsodium/test/default/Makefile	/^am__tty_colors_dummy = \\$/;"	m
am__tty_colors_dummy	secp256k1/Makefile	/^am__tty_colors_dummy = \\$/;"	m
am__uninstall_files_from_dir	libsodium/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	libsodium/src/libsodium/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	libsodium/src/libsodium/include/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	libsodium/test/default/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	secp256k1/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uniquify_input	libsodium/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	libsodium/src/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	libsodium/src/libsodium/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	libsodium/src/libsodium/include/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	libsodium/test/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	libsodium/test/default/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	secp256k1/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__untar	libsodium/Makefile	/^am__untar = tar -xf -$/;"	m
am__untar	libsodium/dist-build/Makefile	/^am__untar = tar -xf -$/;"	m
am__untar	libsodium/msvc-scripts/Makefile	/^am__untar = tar -xf -$/;"	m
am__untar	libsodium/src/Makefile	/^am__untar = tar -xf -$/;"	m
am__untar	libsodium/src/libsodium/Makefile	/^am__untar = tar -xf -$/;"	m
am__untar	libsodium/src/libsodium/include/Makefile	/^am__untar = tar -xf -$/;"	m
am__untar	libsodium/test/Makefile	/^am__untar = tar -xf -$/;"	m
am__untar	libsodium/test/default/Makefile	/^am__untar = tar -xf -$/;"	m
am__untar	secp256k1/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__v_CCAS_	secp256k1/Makefile	/^am__v_CCAS_ = $(am__v_CCAS_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCAS_0	secp256k1/Makefile	/^am__v_CCAS_0 = @echo "  CCAS    " $@;$/;"	m
am__v_CCAS_1	secp256k1/Makefile	/^am__v_CCAS_1 = $/;"	m
am__v_CCLD_	libsodium/src/libsodium/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	libsodium/test/default/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	secp256k1/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_0	libsodium/src/libsodium/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	libsodium/test/default/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	secp256k1/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_1	libsodium/src/libsodium/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	libsodium/test/default/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	secp256k1/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CC_	libsodium/src/libsodium/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	libsodium/test/default/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	secp256k1/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_0	libsodium/src/libsodium/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	libsodium/test/default/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	secp256k1/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_1	libsodium/src/libsodium/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	libsodium/test/default/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	secp256k1/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CPPAS_	libsodium/src/libsodium/Makefile	/^am__v_CPPAS_ = $(am__v_CPPAS_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CPPAS_0	libsodium/src/libsodium/Makefile	/^am__v_CPPAS_0 = @echo "  CPPAS   " $@;$/;"	m
am__v_CPPAS_1	libsodium/src/libsodium/Makefile	/^am__v_CPPAS_1 = $/;"	m
am__v_GEN_	libsodium/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	libsodium/dist-build/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	libsodium/msvc-scripts/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	libsodium/src/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	libsodium/src/libsodium/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	libsodium/src/libsodium/include/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	libsodium/test/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	libsodium/test/default/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	secp256k1/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_0	libsodium/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	libsodium/dist-build/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	libsodium/msvc-scripts/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	libsodium/src/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	libsodium/src/libsodium/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	libsodium/src/libsodium/include/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	libsodium/test/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	libsodium/test/default/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	secp256k1/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_1	libsodium/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	libsodium/dist-build/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	libsodium/msvc-scripts/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	libsodium/src/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	libsodium/src/libsodium/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	libsodium/src/libsodium/include/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	libsodium/test/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	libsodium/test/default/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	secp256k1/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_P_	libsodium/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	libsodium/dist-build/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	libsodium/msvc-scripts/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	libsodium/src/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	libsodium/src/libsodium/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	libsodium/src/libsodium/include/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	libsodium/test/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	libsodium/test/default/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	secp256k1/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_0	libsodium/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	libsodium/dist-build/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	libsodium/msvc-scripts/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	libsodium/src/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	libsodium/src/libsodium/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	libsodium/src/libsodium/include/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	libsodium/test/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	libsodium/test/default/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	secp256k1/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_1	libsodium/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	libsodium/dist-build/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	libsodium/msvc-scripts/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	libsodium/src/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	libsodium/src/libsodium/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	libsodium/src/libsodium/include/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	libsodium/test/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	libsodium/test/default/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	secp256k1/Makefile	/^am__v_P_1 = :$/;"	m
am__v_at_	libsodium/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	libsodium/dist-build/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	libsodium/msvc-scripts/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	libsodium/src/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	libsodium/src/libsodium/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	libsodium/src/libsodium/include/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	libsodium/test/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	libsodium/test/default/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	secp256k1/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_0	libsodium/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	libsodium/dist-build/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	libsodium/msvc-scripts/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	libsodium/src/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	libsodium/src/libsodium/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	libsodium/src/libsodium/include/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	libsodium/test/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	libsodium/test/default/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	secp256k1/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_1	libsodium/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	libsodium/dist-build/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	libsodium/msvc-scripts/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	libsodium/src/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	libsodium/src/libsodium/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	libsodium/src/libsodium/include/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	libsodium/test/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	libsodium/test/default/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	secp256k1/Makefile	/^am__v_at_1 = $/;"	m
am__v_lt_	libsodium/src/libsodium/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	libsodium/test/default/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	secp256k1/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_0	libsodium/src/libsodium/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	libsodium/test/default/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	secp256k1/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_1	libsodium/src/libsodium/Makefile	/^am__v_lt_1 = $/;"	m
am__v_lt_1	libsodium/test/default/Makefile	/^am__v_lt_1 = $/;"	m
am__v_lt_1	secp256k1/Makefile	/^am__v_lt_1 = $/;"	m
am__vpath_adj	libsodium/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	libsodium/src/libsodium/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	libsodium/src/libsodium/include/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	libsodium/test/default/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	secp256k1/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj_setup	libsodium/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	libsodium/src/libsodium/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	libsodium/src/libsodium/include/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	libsodium/test/default/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	secp256k1/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am_libaesni_la_OBJECTS	libsodium/src/libsodium/Makefile	/^am_libaesni_la_OBJECTS = crypto_aead\/aes256gcm\/aesni\/libaesni_la-aead_aes256gcm_aesni.lo$/;"	m
am_libavx2_la_OBJECTS	libsodium/src/libsodium/Makefile	/^am_libavx2_la_OBJECTS = crypto_generichash\/blake2\/ref\/libavx2_la-blake2b-compress-avx2.lo$/;"	m
am_libsecp256k1_jni_la_OBJECTS	secp256k1/Makefile	/^am_libsecp256k1_jni_la_OBJECTS =  \\$/;"	m
am_libsecp256k1_la_OBJECTS	secp256k1/Makefile	/^am_libsecp256k1_la_OBJECTS = src\/libsecp256k1_la-secp256k1.lo$/;"	m
am_libsodium_la_OBJECTS	libsodium/src/libsodium/Makefile	/^am_libsodium_la_OBJECTS = crypto_aead\/chacha20poly1305\/sodium\/libsodium_la-aead_chacha20poly1305.lo \\$/;"	m
am_libsse2_la_OBJECTS	libsodium/src/libsodium/Makefile	/^am_libsse2_la_OBJECTS = crypto_pwhash\/scryptsalsa208sha256\/sse\/libsse2_la-pwhash_scryptsalsa208sha256_sse.lo \\$/;"	m
am_libsse41_la_OBJECTS	libsodium/src/libsodium/Makefile	/^am_libsse41_la_OBJECTS = crypto_generichash\/blake2\/ref\/libsse41_la-blake2b-compress-sse41.lo$/;"	m
am_libssse3_la_OBJECTS	libsodium/src/libsodium/Makefile	/^am_libssse3_la_OBJECTS = crypto_generichash\/blake2\/ref\/libssse3_la-blake2b-compress-ssse3.lo \\$/;"	m
amount	bitcoin/tx.h	/^	u64 *amount;$/;"	m	struct:bitcoin_tx_input
amount	bitcoin/tx.h	/^	u64 amount;$/;"	m	struct:bitcoin_tx_output
amount	daemon/sphinx.h	/^	u64 amount;$/;"	m	struct:hoppayload
amount	lightning.pb-c.h	/^  uint32_t amount;$/;"	m	struct:_RouteStep
amount	lightning.pb-c.h	/^  uint64_t amount;$/;"	m	struct:_OpenAnchor
amount_msat	lightning.pb-c.h	/^  uint64_t amount_msat;$/;"	m	struct:_UpdateAddHtlc
amount_msat	wire/test/run-peer-wire.c	/^    u64 amount_msat;$/;"	m	struct:msg_update_add_htlc	file:
anch	lightning.pb-c.h	/^  OpenChannel__AnchorOffer anch;$/;"	m	struct:_OpenChannel
anchor	daemon/channel.h	/^	uint64_t anchor;$/;"	m	struct:channel_state
anchor	daemon/peer.h	/^	} anchor;$/;"	m	struct:peer	typeref:struct:peer::__anon47
anchor	test/test_state_coverage.c	/^	bool anchor;$/;"	m	struct:peer	file:
anchor_broadcast	test/test_state_coverage.c	/^	bool anchor_broadcast;$/;"	m	struct:peer	file:
anchor_confirms	daemon/lightningd.h	/^	u32 anchor_confirms;$/;"	m	struct:config
anchor_confirms_max	daemon/lightningd.h	/^	u32 anchor_confirms_max;$/;"	m	struct:config
anchor_depthchange	daemon/peer.c	/^static enum watch_result anchor_depthchange(struct peer *peer,$/;"	f	file:
anchor_input	daemon/peer.h	/^struct anchor_input {$/;"	s
anchor_onchain_wait	daemon/lightningd.h	/^	u32 anchor_onchain_wait;$/;"	m	struct:config
anchor_spent	daemon/peer.c	/^static enum watch_result anchor_spent(struct peer *peer,$/;"	f	file:
anchor_spent	test/test_state_coverage.c	/^	bool anchor_spent;$/;"	m	struct:peer	file:
anchor_too_large	daemon/channel.c	/^bool anchor_too_large(uint64_t anchor_satoshis)$/;"	f
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^and  %rsi,%r10$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^and  %rsi,%r12$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^and  %rsi,%r14$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^and  %rsi,%r8$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^and  %rsi,%r9$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^and  %rsi,%rax$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^and  %rsi,%rbx$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^and  %rsi,%rcx$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^and $31,%r11$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^and  %rdx,%r10$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^and  %rdx,%r11$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^and  %rdx,%r13$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^and  %rdx,%r15$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^and  %rdx,%r8$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^and  %rdx,%r9$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^and  %rdx,%rax$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^and  %rdx,%rcx$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^and $31,%r11$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^and  $0xC0,%ecx$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^and  $0xF0,%ecx$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^and  $0xF8,%eax$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^and  $0xFE,%ecx$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^and  $0xFF,%eax$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^and  $0xFF,%edx$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^and  %r12,%r10$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^and  %r12,%rax$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^and  %rax,%r8$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^and  %rax,%r9$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^and  %rax,%rcx$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^and  %rax,%rdx$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^and  %rax,%rsi$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^and $31,%r11$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^and  $1,%r10d$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^and  $1,%r11d$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^and  $1,%r12d$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^and  $1,%r13d$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^and $31,%r11$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^and  $1,%r10d$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^and  $1,%r11d$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^and  $1,%r12d$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^and  $1,%r13d$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^and $31,%r11$/;"	l
and	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^and $31,%r11$/;"	l
and2	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128.h	23;"	d
and2	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128_aes128ctr.c	/^void and2(int128 *r, const int128 *x)$/;"	f
announce	daemon/irc_announce.c	/^static void announce(struct ircstate *state)$/;"	f	file:
announce	daemon/lightningd.h	/^	struct oneshot *announce;$/;"	m	struct:lightningd_state	typeref:struct:lightningd_state::oneshot
announce	daemon/p2p_announce.c	/^static void announce(struct lightningd_state *dstate)$/;"	f	file:
announce_channel	daemon/irc_announce.c	/^static bool announce_channel(const tal_t *ctx, struct ircstate *state, struct peer *p)$/;"	f	file:
announce_channel	daemon/p2p_announce.c	/^void announce_channel(struct lightningd_state *dstate, struct peer *peer)$/;"	f
announce_node	daemon/irc_announce.c	/^static void announce_node(const tal_t *ctx, struct ircstate *state)$/;"	f	file:
announcement_bitcoin_signature	wire/test/run-peer-wire.c	/^	secp256k1_ecdsa_signature announcement_bitcoin_signature;$/;"	m	struct:msg_announcement_signatures	file:
announcement_node_signature	wire/test/run-peer-wire.c	/^	secp256k1_ecdsa_signature announcement_node_signature;$/;"	m	struct:msg_announcement_signatures	file:
announcement_signatures_eq	wire/test/run-peer-wire.c	/^static bool announcement_signatures_eq(const struct msg_announcement_signatures *a,$/;"	f	file:
answer	ccan/tools/configurator/configurator.c	/^	bool answer;$/;"	m	struct:test	file:
any	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb_cast-multi.c	/^struct any {$/;"	s	file:
any	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb_cast.c	/^struct any {$/;"	s	file:
any_deadline_past	daemon/peer.c	/^static bool any_deadline_past(struct peer *peer)$/;"	f	file:
append_text	test/test_protocol.c	/^static bool append_text(char **svg, bool is_a, int *y, const char *text,$/;"	f	file:
apply_htlc	daemon/db.c	/^static void apply_htlc(struct channel_state *cstate, const struct htlc *htlc,$/;"	f	file:
approx_max_feerate	daemon/channel.c	/^uint64_t approx_max_feerate(const struct channel_state *cstate,$/;"	f
arg	ccan/ccan/io/backend.h	/^	struct io_plan_arg arg;$/;"	m	struct:io_plan	typeref:struct:io_plan::io_plan_arg
arg	ccan/ccan/io/backend.h	/^	void *arg;$/;"	m	struct:io_listener
arg	ccan/ccan/opt/opt.h	/^		void *arg;$/;"	m	union:opt_table::__anon5
arg	ccan/ccan/tal/tal.c	/^	void *arg;$/;"	m	struct:notifier_extra_arg	file:
arg	ccan/ccan/typesafe_cb/test/run.c	/^	const void *arg;$/;"	m	struct:callback_onearg	file:
arg	ccan/ccan/typesafe_cb/test/run.c	/^	const void *arg;$/;"	m	struct:callback_postargs	file:
arg	ccan/ccan/typesafe_cb/test/run.c	/^	const void *arg;$/;"	m	struct:callback_preargs	file:
arg	daemon/cryptopkt.c	/^	void *arg;$/;"	m	struct:key_negotiate	file:
arg	daemon/dns.c	/^	void *arg;$/;"	m	struct:dns_async	file:
arg	daemon/timeout.c	/^	void *arg;$/;"	m	struct:oneshot	file:
arg_bad	ccan/ccan/opt/helpers.c	/^static char *arg_bad(const char *fmt, const char *arg)$/;"	f	file:
arg_log_level	daemon/log.c	/^static char *arg_log_level(const char *arg, struct log *log)$/;"	f	file:
arg_log_prefix	daemon/log.c	/^static char *arg_log_prefix(const char *arg, struct log *log)$/;"	f	file:
arg_log_to_file	daemon/log.c	/^static char *arg_log_to_file(const char *arg, struct log *log)$/;"	f	file:
argon2_H	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	12;"	d
argon2_context	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^} argon2_context;$/;"	t	typeref:struct:Argon2_Context
argon2_core_H	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	15;"	d
argon2_ctx	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.c	/^int argon2_ctx(argon2_context *context, argon2_type type) {$/;"	f
argon2_ctx_constants	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^enum argon2_ctx_constants {$/;"	g
argon2_encoding_H	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.h	2;"	d
argon2_error_codes	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^} argon2_error_codes;$/;"	t	typeref:enum:Argon2_ErrorCodes
argon2_hash	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.c	/^int argon2_hash(const uint32_t t_cost, const uint32_t m_cost,$/;"	f
argon2_impl_H	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-impl.h	15;"	d
argon2_instance_t	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^} argon2_instance_t;$/;"	t	typeref:struct:Argon2_instance_t
argon2_pick_best_implementation	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^int argon2_pick_best_implementation(void)$/;"	f
argon2_position_t	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^} argon2_position_t;$/;"	t	typeref:struct:Argon2_position_t
argon2_thread_data	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^} argon2_thread_data;$/;"	t	typeref:struct:Argon2_thread_data
argon2_type	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^typedef enum Argon2_type { Argon2_i = 1 } argon2_type;$/;"	t	typeref:enum:Argon2_type
argon2_verify	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.c	/^int argon2_verify(const char *encoded, const void *pwd, const size_t pwdlen,$/;"	f
argon2i_hash_encoded	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.c	/^int argon2i_hash_encoded(const uint32_t t_cost, const uint32_t m_cost,$/;"	f
argon2i_hash_raw	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.c	/^int argon2i_hash_raw(const uint32_t t_cost, const uint32_t m_cost,$/;"	f
argon2i_verify	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.c	/^int argon2i_verify(const char *encoded, const void *pwd, const size_t pwdlen) {$/;"	f
args	daemon/bitcoind.c	/^	char **args;$/;"	m	struct:bitcoin_cli	file:
arr	ccan/ccan/cdump/cdump.h	/^		struct cdump_array arr;$/;"	m	union:cdump_type::__anon6	typeref:struct:cdump_type::__anon6::cdump_array
arr	ccan/ccan/crypto/ripemd160/test/run-types.c	/^static unsigned char arr[] = {$/;"	v	file:
arr	ccan/ccan/crypto/sha256/test/run-types.c	/^static unsigned char arr[] = {$/;"	v	file:
array1	ccan/ccan/array_size/test/run.c	/^static char array1[1];$/;"	v	file:
array1_size	ccan/ccan/array_size/test/run.c	/^static int array1_size = ARRAY_SIZE(array1);$/;"	v	file:
array2	ccan/ccan/array_size/test/run.c	/^static int array2[2];$/;"	v	file:
array2_size	ccan/ccan/array_size/test/run.c	/^static int array2_size = ARRAY_SIZE(array2);$/;"	v	file:
array3	ccan/ccan/array_size/test/run.c	/^static unsigned long array3[3][5];$/;"	v	file:
array3_size	ccan/ccan/array_size/test/run.c	/^static int array3_size = ARRAY_SIZE(array3);$/;"	v	file:
array4	ccan/ccan/array_size/test/run.c	/^static struct foo array4[4];$/;"	v	typeref:struct:foo	file:
array4_size	ccan/ccan/array_size/test/run.c	/^static int array4_size = ARRAY_SIZE(array4);$/;"	v	file:
as_fn_append	libsodium/config.status	/^  as_fn_append ()$/;"	f
as_fn_append	libsodium/configure	/^  as_fn_append ()$/;"	f
as_fn_append	secp256k1/config.status	/^  as_fn_append ()$/;"	f
as_fn_append	secp256k1/configure	/^  as_fn_append ()$/;"	f
as_fn_arith	libsodium/config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	libsodium/configure	/^  as_fn_arith ()$/;"	f
as_fn_arith	secp256k1/config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	secp256k1/configure	/^  as_fn_arith ()$/;"	f
as_fn_error	libsodium/config.status	/^as_fn_error ()$/;"	f
as_fn_error	libsodium/configure	/^as_fn_error ()$/;"	f
as_fn_error	secp256k1/config.status	/^as_fn_error ()$/;"	f
as_fn_error	secp256k1/configure	/^as_fn_error ()$/;"	f
as_fn_executable_p	libsodium/config.status	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	libsodium/configure	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	secp256k1/config.status	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	secp256k1/configure	/^as_fn_executable_p ()$/;"	f
as_fn_exit	libsodium/config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	libsodium/configure	/^as_fn_exit ()$/;"	f
as_fn_exit	secp256k1/config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	secp256k1/configure	/^as_fn_exit ()$/;"	f
as_fn_failure	libsodium/configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_failure	secp256k1/configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	libsodium/config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	libsodium/configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	secp256k1/config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	secp256k1/configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	libsodium/configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_failure	secp256k1/configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	libsodium/configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_ret_success	secp256k1/configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	libsodium/config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	libsodium/configure	/^as_fn_set_status ()$/;"	f
as_fn_set_status	secp256k1/config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	secp256k1/configure	/^as_fn_set_status ()$/;"	f
as_fn_success	libsodium/configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_success	secp256k1/configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	libsodium/config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	libsodium/configure	/^as_fn_unset ()$/;"	f
as_fn_unset	secp256k1/config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	secp256k1/configure	/^as_fn_unset ()$/;"	f
asort	ccan/ccan/asort/asort.h	21;"	d
assertEquals	secp256k1/src/java/org/bitcoin/NativeSecp256k1Util.java	/^    public static void assertEquals( String val, String val2, String message ) throws AssertFailException{$/;"	m	class:NativeSecp256k1Util
assertEquals	secp256k1/src/java/org/bitcoin/NativeSecp256k1Util.java	/^    public static void assertEquals( boolean val, boolean val2, String message ) throws AssertFailException{$/;"	m	class:NativeSecp256k1Util
assertEquals	secp256k1/src/java/org/bitcoin/NativeSecp256k1Util.java	/^    public static void assertEquals( int val, int val2, String message ) throws AssertFailException{$/;"	m	class:NativeSecp256k1Util
assign_big_endian	secp256k1/src/tests.c	/^static void assign_big_endian(unsigned char *ptr, size_t ptrlen, uint32_t val) {$/;"	f	file:
auth	libsodium/examples/auth.c	/^auth(void)$/;"	f	file:
auth	lightning.pb-c.h	/^    Authenticate *auth;$/;"	m	union:_Pkt::__anon45
auth2_DEPENDENCIES	libsodium/test/default/Makefile	/^auth2_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
auth2_LDADD	libsodium/test/default/Makefile	/^auth2_LDADD = $(TESTS_LDADD)$/;"	m
auth2_OBJECTS	libsodium/test/default/Makefile	/^auth2_OBJECTS = auth2.$(OBJEXT)$/;"	m
auth2_SOURCE	libsodium/test/default/Makefile	/^auth2_SOURCE = cmptest.h auth2.c$/;"	m
auth2_SOURCES	libsodium/test/default/Makefile	/^auth2_SOURCES = auth2.c$/;"	m
auth3_DEPENDENCIES	libsodium/test/default/Makefile	/^auth3_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
auth3_LDADD	libsodium/test/default/Makefile	/^auth3_LDADD = $(TESTS_LDADD)$/;"	m
auth3_OBJECTS	libsodium/test/default/Makefile	/^auth3_OBJECTS = auth3.$(OBJEXT)$/;"	m
auth3_SOURCE	libsodium/test/default/Makefile	/^auth3_SOURCE = cmptest.h auth3.c$/;"	m
auth3_SOURCES	libsodium/test/default/Makefile	/^auth3_SOURCES = auth3.c$/;"	m
auth5_DEPENDENCIES	libsodium/test/default/Makefile	/^auth5_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
auth5_LDADD	libsodium/test/default/Makefile	/^auth5_LDADD = $(TESTS_LDADD)$/;"	m
auth5_OBJECTS	libsodium/test/default/Makefile	/^auth5_OBJECTS = auth5.$(OBJEXT)$/;"	m
auth5_SOURCE	libsodium/test/default/Makefile	/^auth5_SOURCE = cmptest.h auth5.c quirks.h$/;"	m
auth5_SOURCES	libsodium/test/default/Makefile	/^auth5_SOURCES = auth5.c$/;"	m
auth6_DEPENDENCIES	libsodium/test/default/Makefile	/^auth6_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
auth6_LDADD	libsodium/test/default/Makefile	/^auth6_LDADD = $(TESTS_LDADD)$/;"	m
auth6_OBJECTS	libsodium/test/default/Makefile	/^auth6_OBJECTS = auth6.$(OBJEXT)$/;"	m
auth6_SOURCE	libsodium/test/default/Makefile	/^auth6_SOURCE = cmptest.h auth6.c quirks.h$/;"	m
auth6_SOURCES	libsodium/test/default/Makefile	/^auth6_SOURCES = auth6.c$/;"	m
auth7_DEPENDENCIES	libsodium/test/default/Makefile	/^auth7_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
auth7_LDADD	libsodium/test/default/Makefile	/^auth7_LDADD = $(TESTS_LDADD)$/;"	m
auth7_OBJECTS	libsodium/test/default/Makefile	/^auth7_OBJECTS = auth7.$(OBJEXT)$/;"	m
auth7_SOURCE	libsodium/test/default/Makefile	/^auth7_SOURCE = cmptest.h auth7.c quirks.h$/;"	m
auth7_SOURCES	libsodium/test/default/Makefile	/^auth7_SOURCES = auth7.c$/;"	m
auth_DEPENDENCIES	libsodium/test/default/Makefile	/^auth_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
auth_LDADD	libsodium/test/default/Makefile	/^auth_LDADD = $(TESTS_LDADD)$/;"	m
auth_OBJECTS	libsodium/test/default/Makefile	/^auth_OBJECTS = auth.$(OBJEXT)$/;"	m
auth_SOURCE	libsodium/test/default/Makefile	/^auth_SOURCE = cmptest.h auth.c$/;"	m
auth_SOURCES	libsodium/test/default/Makefile	/^auth_SOURCES = auth.c$/;"	m
auth_tag	daemon/cryptopkt.c	/^	u8 auth_tag[crypto_aead_chacha20poly1305_ABYTES];$/;"	m	struct:crypto_pkt	file:
authenticate__descriptor	lightning.pb-c.c	/^const ProtobufCMessageDescriptor authenticate__descriptor =$/;"	v
authenticate__field_descriptors	lightning.pb-c.c	/^static const ProtobufCFieldDescriptor authenticate__field_descriptors[2] =$/;"	v	file:
authenticate__field_indices_by_name	lightning.pb-c.c	/^static const unsigned authenticate__field_indices_by_name[] = {$/;"	v	file:
authenticate__free_unpacked	lightning.pb-c.c	/^void   authenticate__free_unpacked$/;"	f
authenticate__get_packed_size	lightning.pb-c.c	/^size_t authenticate__get_packed_size$/;"	f
authenticate__init	lightning.pb-c.c	/^void   authenticate__init$/;"	f
authenticate__number_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange authenticate__number_ranges[1 + 1] =$/;"	v	file:
authenticate__pack	lightning.pb-c.c	/^size_t authenticate__pack$/;"	f
authenticate__pack_to_buffer	lightning.pb-c.c	/^size_t authenticate__pack_to_buffer$/;"	f
authenticate__unpack	lightning.pb-c.c	/^       authenticate__unpack$/;"	f
authenticate_pkt	daemon/cryptopkt.c	/^static Pkt *authenticate_pkt(const tal_t *ctx,$/;"	f	file:
author	contrib/pylightning/setup.py	/^      author='Christian Decker',$/;"	v
author_email	contrib/pylightning/setup.py	/^      author_email='decker.christian@gmail.com',$/;"	v
autodata_free	ccan/ccan/autodata/autodata.c	/^void autodata_free(void *table UNNEEDED)$/;"	f
autodata_free	ccan/ccan/autodata/autodata.c	/^void autodata_free(void *table)$/;"	f
autodata_get	ccan/ccan/autodata/autodata.h	102;"	d
autodata_get	ccan/ccan/autodata/autodata.h	70;"	d
autodata_get_section	ccan/ccan/autodata/autodata.c	/^void *autodata_get_section(void *start, void *stop, size_t *nump)$/;"	f
autodata_make_table	ccan/ccan/autodata/autodata.c	/^void *autodata_make_table(const void *example, const char *name, size_t *nump)$/;"	f
b	ccan/ccan/array_size/test/compile_fail-function-param.c	/^	unsigned int a, b;$/;"	m	struct:foo	file:
b	ccan/ccan/array_size/test/run.c	/^	unsigned int a, b;$/;"	m	struct:foo	file:
b	ccan/ccan/container_of/test/compile_fail-bad-type.c	/^	char b;$/;"	m	struct:foo	file:
b	ccan/ccan/container_of/test/compile_fail-types.c	/^	char b;$/;"	m	struct:foo	file:
b	ccan/ccan/container_of/test/compile_fail-var-types.c	/^	char b;$/;"	m	struct:foo	file:
b	ccan/ccan/container_of/test/run.c	/^	char b;$/;"	m	struct:foo	file:
b	ccan/ccan/isaac/isaac.h	/^  uint32_t b;$/;"	m	struct:isaac_ctx
b	ccan/ccan/isaac/isaac64.h	/^  uint64_t b;$/;"	m	struct:isaac64_ctx
b	lightning.pb-c.h	/^  uint64_t b;$/;"	m	struct:_Preimage
b	lightning.pb-c.h	/^  uint64_t b;$/;"	m	struct:_Sha256Hash
b	test/test_state_coverage.c	/^	} a, b;$/;"	m	struct:situation	typeref:union:situation::__anon39	file:
b58_sha256_impl	bitcoin/libbase58/base58.c	/^bool (*b58_sha256_impl)(void *, const void *, size_t) = NULL;$/;"	v
b58check	bitcoin/libbase58/base58.c	/^int b58check(const void *bin, size_t binsz, const char *base58str, size_t b58sz)$/;"	f
b58check_enc	bitcoin/libbase58/base58.c	/^bool b58check_enc(char *b58c, size_t *b58c_sz, uint8_t ver, const void *data, size_t datasz)$/;"	f
b58digits_map	bitcoin/libbase58/base58.c	/^static const int8_t b58digits_map[] = {$/;"	v	file:
b58digits_ordered	bitcoin/libbase58/base58.c	/^static const char b58digits_ordered[] = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";$/;"	v	file:
b58enc	bitcoin/libbase58/base58.c	/^bool b58enc(char *b58, size_t *b58sz, const void *data, size_t binsz)$/;"	f
b58tobin	bitcoin/libbase58/base58.c	/^bool b58tobin(void *bin, size_t *binszp, const char *b58, size_t b58sz)$/;"	f
b64_byte_to_char	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	/^static int b64_byte_to_char(unsigned x) {$/;"	f	file:
b64_char_to_byte	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	/^static unsigned b64_char_to_byte(int c) {$/;"	f	file:
backend_info	ccan/ccan/io/backend.h	/^	size_t backend_info;$/;"	m	struct:fd
backend_new_always	ccan/ccan/io/poll.c	/^void backend_new_always(struct io_conn *conn)$/;"	f
backend_new_plan	ccan/ccan/io/poll.c	/^void backend_new_plan(struct io_conn *conn)$/;"	f
backend_wake	ccan/ccan/io/poll.c	/^void backend_wake(const void *wait)$/;"	f
balance_after_force	daemon/channel.c	/^bool balance_after_force(struct channel_state *cstate)$/;"	f
bar	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb_cast-multi.c	/^struct bar {$/;"	s	file:
bar	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb_cast.c	/^struct bar {$/;"	s	file:
base	ccan/ccan/tcon/test/compile_fail-container1.c	/^	struct info_base base;$/;"	m	struct:info_tcon	typeref:struct:info_tcon::info_base	file:
base	ccan/ccan/tcon/test/compile_fail-container2.c	/^	struct info_base base;$/;"	m	struct:info_tcon	typeref:struct:info_tcon::info_base	file:
base	ccan/ccan/tcon/test/compile_fail-container3.c	/^	struct info_base base;$/;"	m	struct:info_tcon	typeref:struct:info_tcon::info_base	file:
base	ccan/ccan/tcon/test/compile_fail-container4.c	/^	struct info_base base;$/;"	m	struct:info_tcon	typeref:struct:info_tcon::info_base	file:
base	ccan/ccan/tcon/test/compile_ok-container.c	/^	struct info_base base;$/;"	m	struct:info_tcon	typeref:struct:info_tcon::info_base	file:
base	ccan/ccan/tcon/test/run-container.c	/^	struct info_base base;$/;"	m	struct:info_tcon	typeref:struct:info_tcon::info_base	file:
base	ccan/ccan/timer/timer.h	/^	uint64_t base;$/;"	m	struct:timers
base	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^static const ge_precomp base[32][8] = {$/;"	v	file:
base	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    void  *base;$/;"	m	struct:block_region_
base	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	/^    void * base, * aligned;$/;"	m	struct:__anon64
base	lightning.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_Authenticate
base	lightning.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_BitcoinPubkey
base	lightning.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_CloseShutdown
base	lightning.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_CloseSignature
base	lightning.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_Error
base	lightning.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_FailInfo
base	lightning.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_FailReason
base	lightning.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_Funding
base	lightning.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_Init
base	lightning.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_Locktime
base	lightning.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_NestedPkt
base	lightning.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_OpenAnchor
base	lightning.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_OpenChannel
base	lightning.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_OpenCommitSig
base	lightning.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_OpenComplete
base	lightning.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_Pkt
base	lightning.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_Preimage
base	lightning.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_Route
base	lightning.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_RouteStep
base	lightning.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_Routing
base	lightning.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_Sha256Hash
base	lightning.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_Signature
base	lightning.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_UpdateAddHtlc
base	lightning.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_UpdateCommit
base	lightning.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_UpdateFailHtlc
base	lightning.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_UpdateFee
base	lightning.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_UpdateFulfillHtlc
base	lightning.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_UpdateRevocation
base_fee	daemon/routing.h	/^	u32 base_fee;$/;"	m	struct:node_connection
base_log	daemon/lightningd.h	/^	struct log *base_log;$/;"	m	struct:lightningd_state	typeref:struct:lightningd_state::log
base_log	daemon/routing.h	/^	struct log *base_log;$/;"	m	struct:routing_state	typeref:struct:routing_state::log
basepoint	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^static const unsigned char basepoint[32] = {9};$/;"	v	file:
baz	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb_cast-multi.c	/^struct baz {$/;"	s	file:
baz	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb_cast.c	/^struct baz {$/;"	s	file:
bcli_args	daemon/bitcoind.c	/^static char *bcli_args(struct bitcoin_cli *bcli)$/;"	f	file:
bcli_finished	daemon/bitcoind.c	/^static void bcli_finished(struct io_conn *conn, struct bitcoin_cli *bcli)$/;"	f	file:
be16	ccan/ccan/endian/endian.h	/^typedef beint16_t be16;$/;"	t
be16	ccan/ccan/short_types/short_types.h	/^typedef beint16_t be16;$/;"	t
be16_to_cpu	ccan/ccan/endian/endian.h	/^static inline uint16_t be16_to_cpu(beint16_t be_val)$/;"	f
be32	ccan/ccan/endian/endian.h	/^typedef beint32_t be32;$/;"	t
be32	ccan/ccan/short_types/short_types.h	/^typedef beint32_t be32;$/;"	t
be32_to_cpu	ccan/ccan/endian/endian.h	/^static inline uint32_t be32_to_cpu(beint32_t be_val)$/;"	f
be32dec_vect	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256.c	/^be32dec_vect(uint32_t *dst, const unsigned char *src, size_t len)$/;"	f	file:
be32enc_vect	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256.c	/^be32enc_vect(unsigned char *dst, const uint32_t *src, size_t len)$/;"	f	file:
be64	ccan/ccan/endian/endian.h	/^typedef beint64_t be64;$/;"	t
be64	ccan/ccan/short_types/short_types.h	/^typedef beint64_t be64;$/;"	t
be64_to_cpu	ccan/ccan/endian/endian.h	/^static inline uint64_t be64_to_cpu(beint64_t be_val)$/;"	f
be64dec_vect	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512.c	/^be64dec_vect(uint64_t *dst, const unsigned char *src, size_t len)$/;"	f	file:
be64enc_vect	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512.c	/^be64enc_vect(unsigned char *dst, const uint64_t *src, size_t len)$/;"	f	file:
before	test/test_state_coverage.c	/^	const struct peer *before, *after;$/;"	m	struct:trail	typeref:struct:trail::peer	file:
beint16_t	ccan/ccan/endian/endian.h	/^typedef uint16_t ENDIAN_TYPE beint16_t;$/;"	t
beint32_t	ccan/ccan/endian/endian.h	/^typedef uint32_t ENDIAN_TYPE beint32_t;$/;"	t
beint64_t	ccan/ccan/endian/endian.h	/^typedef uint64_t ENDIAN_TYPE beint64_t;$/;"	t
bench_context_sign	secp256k1/src/bench_internal.c	/^void bench_context_sign(void* arg) {$/;"	f
bench_context_verify	secp256k1/src/bench_internal.c	/^void bench_context_verify(void* arg) {$/;"	f
bench_ecdh	secp256k1/src/bench_ecdh.c	/^static void bench_ecdh(void* arg) {$/;"	f	file:
bench_ecdh_OBJECTS	secp256k1/Makefile	/^bench_ecdh_OBJECTS = $(am_bench_ecdh_OBJECTS)$/;"	m
bench_ecdh_setup	secp256k1/src/bench_ecdh.c	/^static void bench_ecdh_setup(void* arg) {$/;"	f	file:
bench_ecdh_t	secp256k1/src/bench_ecdh.c	/^} bench_ecdh_t;$/;"	t	typeref:struct:__anon21	file:
bench_ecmult_wnaf	secp256k1/src/bench_internal.c	/^void bench_ecmult_wnaf(void* arg) {$/;"	f
bench_field_inverse	secp256k1/src/bench_internal.c	/^void bench_field_inverse(void* arg) {$/;"	f
bench_field_inverse_var	secp256k1/src/bench_internal.c	/^void bench_field_inverse_var(void* arg) {$/;"	f
bench_field_mul	secp256k1/src/bench_internal.c	/^void bench_field_mul(void* arg) {$/;"	f
bench_field_normalize	secp256k1/src/bench_internal.c	/^void bench_field_normalize(void* arg) {$/;"	f
bench_field_normalize_weak	secp256k1/src/bench_internal.c	/^void bench_field_normalize_weak(void* arg) {$/;"	f
bench_field_sqr	secp256k1/src/bench_internal.c	/^void bench_field_sqr(void* arg) {$/;"	f
bench_field_sqrt_var	secp256k1/src/bench_internal.c	/^void bench_field_sqrt_var(void* arg) {$/;"	f
bench_group_add_affine	secp256k1/src/bench_internal.c	/^void bench_group_add_affine(void* arg) {$/;"	f
bench_group_add_affine_var	secp256k1/src/bench_internal.c	/^void bench_group_add_affine_var(void* arg) {$/;"	f
bench_group_add_var	secp256k1/src/bench_internal.c	/^void bench_group_add_var(void* arg) {$/;"	f
bench_group_double_var	secp256k1/src/bench_internal.c	/^void bench_group_double_var(void* arg) {$/;"	f
bench_hmac_sha256	secp256k1/src/bench_internal.c	/^void bench_hmac_sha256(void* arg) {$/;"	f
bench_internal_OBJECTS	secp256k1/Makefile	/^bench_internal_OBJECTS = $(am_bench_internal_OBJECTS)$/;"	m
bench_inv_t	secp256k1/src/bench_internal.c	/^} bench_inv_t;$/;"	t	typeref:struct:__anon19	file:
bench_recover	secp256k1/src/bench_recover.c	/^void bench_recover(void* arg) {$/;"	f
bench_recover_OBJECTS	secp256k1/Makefile	/^bench_recover_OBJECTS = $(am_bench_recover_OBJECTS)$/;"	m
bench_recover_setup	secp256k1/src/bench_recover.c	/^void bench_recover_setup(void* arg) {$/;"	f
bench_recover_t	secp256k1/src/bench_recover.c	/^} bench_recover_t;$/;"	t	typeref:struct:__anon38	file:
bench_rfc6979_hmac_sha256	secp256k1/src/bench_internal.c	/^void bench_rfc6979_hmac_sha256(void* arg) {$/;"	f
bench_scalar_add	secp256k1/src/bench_internal.c	/^void bench_scalar_add(void* arg) {$/;"	f
bench_scalar_inverse	secp256k1/src/bench_internal.c	/^void bench_scalar_inverse(void* arg) {$/;"	f
bench_scalar_inverse_var	secp256k1/src/bench_internal.c	/^void bench_scalar_inverse_var(void* arg) {$/;"	f
bench_scalar_mul	secp256k1/src/bench_internal.c	/^void bench_scalar_mul(void* arg) {$/;"	f
bench_scalar_negate	secp256k1/src/bench_internal.c	/^void bench_scalar_negate(void* arg) {$/;"	f
bench_scalar_split	secp256k1/src/bench_internal.c	/^void bench_scalar_split(void* arg) {$/;"	f
bench_scalar_sqr	secp256k1/src/bench_internal.c	/^void bench_scalar_sqr(void* arg) {$/;"	f
bench_schnorr_verify_OBJECTS	secp256k1/Makefile	/^bench_schnorr_verify_OBJECTS = $(am_bench_schnorr_verify_OBJECTS)$/;"	m
bench_setup	secp256k1/src/bench_internal.c	/^void bench_setup(void* arg) {$/;"	f
bench_sha256	secp256k1/src/bench_internal.c	/^void bench_sha256(void* arg) {$/;"	f
bench_sign	secp256k1/src/bench_sign.c	/^static void bench_sign(void* arg) {$/;"	f	file:
bench_sign_OBJECTS	secp256k1/Makefile	/^bench_sign_OBJECTS = $(am_bench_sign_OBJECTS)$/;"	m
bench_sign_setup	secp256k1/src/bench_sign.c	/^static void bench_sign_setup(void* arg) {$/;"	f	file:
bench_sign_t	secp256k1/src/bench_sign.c	/^} bench_sign_t;$/;"	t	typeref:struct:__anon36	file:
bench_verify_OBJECTS	secp256k1/Makefile	/^bench_verify_OBJECTS = $(am_bench_verify_OBJECTS)$/;"	m
bench_wnaf_const	secp256k1/src/bench_internal.c	/^void bench_wnaf_const(void* arg) {$/;"	f
benchmark_schnorr_init	secp256k1/src/bench_schnorr_verify.c	/^static void benchmark_schnorr_init(void* arg) {$/;"	f	file:
benchmark_schnorr_sig_t	secp256k1/src/bench_schnorr_verify.c	/^} benchmark_schnorr_sig_t;$/;"	t	typeref:struct:__anon33	file:
benchmark_schnorr_verify	secp256k1/src/bench_schnorr_verify.c	/^static void benchmark_schnorr_verify(void* arg) {$/;"	f	file:
benchmark_schnorr_verify_t	secp256k1/src/bench_schnorr_verify.c	/^} benchmark_schnorr_verify_t;$/;"	t	typeref:struct:__anon34	file:
benchmark_verify	secp256k1/src/bench_verify.c	/^static void benchmark_verify(void* arg) {$/;"	f	file:
benchmark_verify_openssl	secp256k1/src/bench_verify.c	/^static void benchmark_verify_openssl(void* arg) {$/;"	f	file:
benchmark_verify_t	secp256k1/src/bench_verify.c	/^} benchmark_verify_t;$/;"	t	typeref:struct:__anon25	file:
bfg	daemon/routing.h	/^	} bfg[ROUTING_MAX_HOPS+1];$/;"	m	struct:node	typeref:struct:node::__anon54
bfg_one_edge	daemon/routing.c	/^static void bfg_one_edge(struct node *node, size_t edgenum, double riskfactor)$/;"	f	file:
bindir	libsodium/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	libsodium/dist-build/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	libsodium/msvc-scripts/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	libsodium/src/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	libsodium/src/libsodium/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	libsodium/src/libsodium/include/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	libsodium/test/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	libsodium/test/default/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	secp256k1/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bit_num	ccan/ccan/intmap/intmap.c	/^	u8 bit_num;$/;"	m	struct:node	file:
bit_num	ccan/ccan/strmap/strmap.c	/^	u8 bit_num;$/;"	m	struct:node	file:
bit_set	ccan/ccan/crypto/shachain/test/run-can_derive.c	/^static bool bit_set(shachain_index_t index, int bit)$/;"	f	file:
bitcoin	lightning.pb-c.h	/^    BitcoinPubkey *bitcoin;$/;"	m	union:_RouteStep::__anon43
bitcoin_address	bitcoin/address.h	/^struct bitcoin_address {$/;"	s
bitcoin_anchor	test/test_state_coverage.c	/^const struct bitcoin_tx *bitcoin_anchor(const tal_t *ctx, struct peer *peer)$/;"	f
bitcoin_blkid_from_hex	bitcoin/block.c	/^bool bitcoin_blkid_from_hex(const char *hexstr, size_t hexstr_len,$/;"	f
bitcoin_blkid_to_hex	bitcoin/block.c	/^bool bitcoin_blkid_to_hex(const struct sha256_double *blockid,$/;"	f
bitcoin_block	bitcoin/block.h	/^struct bitcoin_block {$/;"	s
bitcoin_block_from_hex	bitcoin/block.c	/^struct bitcoin_block *bitcoin_block_from_hex(const tal_t *ctx,$/;"	f
bitcoin_block_hdr	bitcoin/block.h	/^struct bitcoin_block_hdr {$/;"	s
bitcoin_cli	daemon/bitcoind.c	/^struct bitcoin_cli {$/;"	s	file:
bitcoin_close	test/test_state_coverage.c	/^const struct bitcoin_tx *bitcoin_close(const tal_t *ctx,$/;"	f
bitcoin_commit	test/test_state_coverage.c	/^const struct bitcoin_tx *bitcoin_commit(const tal_t *ctx, struct peer *peer)$/;"	f
bitcoin_create_anchor	daemon/peer.c	/^static bool bitcoin_create_anchor(struct peer *peer)$/;"	f	file:
bitcoin_create_anchor	test/test_state_coverage.c	/^void bitcoin_create_anchor(struct peer *peer, enum state_input done)$/;"	f
bitcoin_datadir	daemon/bitcoind.c	/^char *bitcoin_datadir;$/;"	v
bitcoin_datadir	lightningd/lightningd.c	/^char *bitcoin_datadir;$/;"	v
bitcoin_from_base58	bitcoin/base58.c	/^bool bitcoin_from_base58(bool *test_net,$/;"	f
bitcoin_htlc_offer_spend_timeout	bitcoin/script.c	/^u8 **bitcoin_htlc_offer_spend_timeout(const tal_t *ctx,$/;"	f
bitcoin_htlc_receive_spend_preimage	bitcoin/script.c	/^u8 **bitcoin_htlc_receive_spend_preimage(const tal_t *ctx,$/;"	f
bitcoin_htlc_spend	test/test_state_coverage.c	/^const struct bitcoin_tx *bitcoin_htlc_spend(const tal_t *ctx,$/;"	f
bitcoin_htlc_timeout	test/test_state_coverage.c	/^const struct bitcoin_tx *bitcoin_htlc_timeout(const tal_t *ctx,$/;"	f
bitcoin_key_1	wire/test/run-peer-wire.c	/^	struct pubkey bitcoin_key_1;$/;"	m	struct:msg_channel_announcement	typeref:struct:msg_channel_announcement::pubkey	file:
bitcoin_key_2	wire/test/run-peer-wire.c	/^	struct pubkey bitcoin_key_2;$/;"	m	struct:msg_channel_announcement	typeref:struct:msg_channel_announcement::pubkey	file:
bitcoin_nsequence	bitcoin/locktime.c	/^u32 bitcoin_nsequence(const struct rel_locktime *rel)$/;"	f
bitcoin_pubkey__descriptor	lightning.pb-c.c	/^const ProtobufCMessageDescriptor bitcoin_pubkey__descriptor =$/;"	v
bitcoin_pubkey__field_descriptors	lightning.pb-c.c	/^static const ProtobufCFieldDescriptor bitcoin_pubkey__field_descriptors[1] =$/;"	v	file:
bitcoin_pubkey__field_indices_by_name	lightning.pb-c.c	/^static const unsigned bitcoin_pubkey__field_indices_by_name[] = {$/;"	v	file:
bitcoin_pubkey__free_unpacked	lightning.pb-c.c	/^void   bitcoin_pubkey__free_unpacked$/;"	f
bitcoin_pubkey__get_packed_size	lightning.pb-c.c	/^size_t bitcoin_pubkey__get_packed_size$/;"	f
bitcoin_pubkey__init	lightning.pb-c.c	/^void   bitcoin_pubkey__init$/;"	f
bitcoin_pubkey__number_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange bitcoin_pubkey__number_ranges[1 + 1] =$/;"	v	file:
bitcoin_pubkey__pack	lightning.pb-c.c	/^size_t bitcoin_pubkey__pack$/;"	f
bitcoin_pubkey__pack_to_buffer	lightning.pb-c.c	/^size_t bitcoin_pubkey__pack_to_buffer$/;"	f
bitcoin_pubkey__unpack	lightning.pb-c.c	/^       bitcoin_pubkey__unpack$/;"	f
bitcoin_redeem_2of2	bitcoin/script.c	/^u8 *bitcoin_redeem_2of2(const tal_t *ctx,$/;"	f
bitcoin_redeem_htlc_recv	bitcoin/script.c	/^u8 *bitcoin_redeem_htlc_recv(const tal_t *ctx,$/;"	f
bitcoin_redeem_htlc_send	bitcoin/script.c	/^u8 *bitcoin_redeem_htlc_send(const tal_t *ctx,$/;"	f
bitcoin_redeem_p2pkh	bitcoin/script.c	/^u8 *bitcoin_redeem_p2pkh(const tal_t *ctx, const struct pubkey *pubkey,$/;"	f
bitcoin_redeem_p2wpkh	bitcoin/script.c	/^u8 *bitcoin_redeem_p2wpkh(const tal_t *ctx, const struct pubkey *key)$/;"	f
bitcoin_redeem_secret_or_delay	bitcoin/script.c	/^u8 *bitcoin_redeem_secret_or_delay(const tal_t *ctx,$/;"	f
bitcoin_redeem_single	bitcoin/script.c	/^u8 *bitcoin_redeem_single(const tal_t *ctx, const struct pubkey *key)$/;"	f
bitcoin_release_anchor	test/test_state_coverage.c	/^void bitcoin_release_anchor(struct peer *peer, enum state_input done)$/;"	f
bitcoin_req	daemon/lightningd.h	/^	struct list_head bitcoin_req;$/;"	m	struct:lightningd_state	typeref:struct:lightningd_state::list_head
bitcoin_req_running	daemon/lightningd.h	/^	bool bitcoin_req_running;$/;"	m	struct:lightningd_state
bitcoin_signature_1	wire/test/run-peer-wire.c	/^	secp256k1_ecdsa_signature bitcoin_signature_1;$/;"	m	struct:msg_channel_announcement	file:
bitcoin_signature_2	wire/test/run-peer-wire.c	/^	secp256k1_ecdsa_signature bitcoin_signature_2;$/;"	m	struct:msg_channel_announcement	file:
bitcoin_spend_ours	daemon/peer.c	/^static const struct bitcoin_tx *bitcoin_spend_ours(struct peer *peer)$/;"	f	file:
bitcoin_spend_ours	test/test_state_coverage.c	/^const struct bitcoin_tx *bitcoin_spend_ours(const tal_t *ctx,$/;"	f
bitcoin_spend_theirs	test/test_state_coverage.c	/^const struct bitcoin_tx *bitcoin_spend_theirs(const tal_t *ctx,$/;"	f
bitcoin_steal	test/test_state_coverage.c	/^const struct bitcoin_tx *bitcoin_steal(const tal_t *ctx,$/;"	f
bitcoin_to_base58	bitcoin/base58.c	/^char *bitcoin_to_base58(const tal_t *ctx, bool test_net,$/;"	f
bitcoin_to_local_spend_delayedkey	bitcoin/script.c	/^u8 **bitcoin_to_local_spend_delayedkey(const tal_t *ctx,$/;"	f
bitcoin_to_local_spend_revocation	bitcoin/script.c	/^u8 **bitcoin_to_local_spend_revocation(const tal_t *ctx,$/;"	f
bitcoin_tx	bitcoin/tx.c	/^struct bitcoin_tx *bitcoin_tx(const tal_t *ctx, varint_t input_count,$/;"	f
bitcoin_tx	bitcoin/tx.h	/^struct bitcoin_tx {$/;"	s
bitcoin_tx	test/test_state_coverage.c	/^static struct bitcoin_tx *bitcoin_tx(const char *str)$/;"	f	file:
bitcoin_tx	type_to_string.h	/^	const struct bitcoin_tx *bitcoin_tx;$/;"	m	union:printable_types	typeref:struct:printable_types::bitcoin_tx
bitcoin_tx_from_hex	bitcoin/tx.c	/^struct bitcoin_tx *bitcoin_tx_from_hex(const tal_t *ctx, const char *hex,$/;"	f
bitcoin_tx_input	bitcoin/tx.h	/^struct bitcoin_tx_input {$/;"	s
bitcoin_tx_is	test/test_state_coverage.c	/^static bool bitcoin_tx_is(const struct bitcoin_tx *btx, const char *str)$/;"	f	file:
bitcoin_tx_output	bitcoin/tx.h	/^struct bitcoin_tx_output {$/;"	s
bitcoin_txid	bitcoin/tx.c	/^void bitcoin_txid(const struct bitcoin_tx *tx, struct sha256_double *txid)$/;"	f
bitcoin_txid_from_hex	bitcoin/tx.c	/^bool bitcoin_txid_from_hex(const char *hexstr, size_t hexstr_len,$/;"	f
bitcoin_txid_to_hex	bitcoin/tx.c	/^bool bitcoin_txid_to_hex(const struct sha256_double *txid,$/;"	f
bitcoin_witness_2of2	bitcoin/script.c	/^u8 **bitcoin_witness_2of2(const tal_t *ctx,$/;"	f
bitcoin_witness_htlc	bitcoin/script.c	/^u8 **bitcoin_witness_htlc(const tal_t *ctx,$/;"	f
bitcoin_witness_p2sh_p2wpkh	bitcoin/script.c	/^void bitcoin_witness_p2sh_p2wpkh(const tal_t *ctx,$/;"	f
bitcoin_witness_secret	bitcoin/script.c	/^u8 **bitcoin_witness_secret(const tal_t *ctx,$/;"	f
bitcoin_wscript_htlc_offer	bitcoin/script.c	/^u8 *bitcoin_wscript_htlc_offer(const tal_t *ctx,$/;"	f
bitcoin_wscript_htlc_receive	bitcoin/script.c	/^u8 *bitcoin_wscript_htlc_receive(const tal_t *ctx,$/;"	f
bitcoin_wscript_htlc_tx	bitcoin/script.c	/^u8 *bitcoin_wscript_htlc_tx(const tal_t *ctx,$/;"	f
bitcoin_wscript_to_local	bitcoin/script.c	/^u8 *bitcoin_wscript_to_local(const tal_t *ctx, u16 to_self_delay,$/;"	f
bitcoind	tests/test_lightningd.py	/^bitcoind = None$/;"	v
bitcoind_estimate_fee	daemon/bitcoind.h	22;"	d
bitcoind_estimate_fee_	daemon/bitcoind.c	/^void bitcoind_estimate_fee_(struct lightningd_state *dstate,$/;"	f
bitcoind_get_chaintip	daemon/bitcoind.h	51;"	d
bitcoind_get_chaintip_	daemon/bitcoind.c	/^void bitcoind_get_chaintip_(struct lightningd_state *dstate,$/;"	f
bitcoind_getblockcount	daemon/bitcoind.h	65;"	d
bitcoind_getblockcount_	daemon/bitcoind.c	/^void bitcoind_getblockcount_(struct lightningd_state *dstate,$/;"	f
bitcoind_getblockhash	daemon/bitcoind.h	79;"	d
bitcoind_getblockhash_	daemon/bitcoind.c	/^void bitcoind_getblockhash_(struct lightningd_state *dstate,$/;"	f
bitcoind_getrawblock	daemon/bitcoind.h	94;"	d
bitcoind_getrawblock_	daemon/bitcoind.c	/^void bitcoind_getrawblock_(struct lightningd_state *dstate,$/;"	f
bitcoind_sendrawtx	daemon/bitcoind.h	37;"	d
bitcoind_sendrawtx_	daemon/bitcoind.c	/^void bitcoind_sendrawtx_(struct peer *peer,$/;"	f
bits	ccan/ccan/htable/htable.h	/^	unsigned int bits;$/;"	m	struct:htable
bitslice	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common.h	433;"	d
bitslicekey	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common.h	405;"	d
bitslicekey0	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common.h	355;"	d
bitslicekey10	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common.h	378;"	d
blake2_H	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	18;"	d
blake2_impl_H	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2-impl.h	15;"	d
blake2b	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	33;"	d
blake2b	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-ref.c	/^int blake2b( uint8_t *out, const void *in, const void *key, const uint8_t outlen, const uint64_t inlen, uint8_t keylen )$/;"	f
blake2b_IV	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.c	/^CRYPTO_ALIGN(64) static const uint64_t blake2b_IV[8] =$/;"	v	file:
blake2b_IV	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-ref.c	/^CRYPTO_ALIGN(64) static const uint64_t blake2b_IV[8] =$/;"	v	file:
blake2b_IV	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-sse41.c	/^CRYPTO_ALIGN(64) static const uint64_t blake2b_IV[8] =$/;"	v	file:
blake2b_IV	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-ssse3.c	/^CRYPTO_ALIGN(64) static const uint64_t blake2b_IV[8] =$/;"	v	file:
blake2b_IV	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-ref.c	/^static const uint64_t blake2b_IV[8] =$/;"	v	file:
blake2b_compress	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-ref.c	/^static blake2b_compress_fn blake2b_compress = blake2b_compress_ref;$/;"	v	file:
blake2b_compress_avx2	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.c	/^int blake2b_compress_avx2( blake2b_state *S, const uint8_t block[BLAKE2B_BLOCKBYTES] )$/;"	f
blake2b_compress_avx2_H	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h	3;"	d
blake2b_compress_fn	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	/^typedef int ( *blake2b_compress_fn )( blake2b_state *S, const uint8_t block[BLAKE2B_BLOCKBYTES] );$/;"	t
blake2b_compress_ref	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-ref.c	/^int blake2b_compress_ref( blake2b_state *S, const uint8_t block[BLAKE2B_BLOCKBYTES] )$/;"	f
blake2b_compress_sse41	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-sse41.c	/^int blake2b_compress_sse41( blake2b_state *S, const uint8_t block[BLAKE2B_BLOCKBYTES] )$/;"	f
blake2b_compress_sse41_H	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-sse41.h	3;"	d
blake2b_compress_ssse3	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-ssse3.c	/^int blake2b_compress_ssse3( blake2b_state *S, const uint8_t block[BLAKE2B_BLOCKBYTES] )$/;"	f
blake2b_compress_ssse3_H	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-ssse3.h	3;"	d
blake2b_constant	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	/^enum blake2b_constant$/;"	g
blake2b_final	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	32;"	d
blake2b_final	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-ref.c	/^int blake2b_final( blake2b_state *S, uint8_t *out, uint8_t outlen )$/;"	f
blake2b_increment_counter	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-ref.c	/^static inline int blake2b_increment_counter( blake2b_state *S, const uint64_t inc )$/;"	f	file:
blake2b_init	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	27;"	d
blake2b_init	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-ref.c	/^int blake2b_init( blake2b_state *S, const uint8_t outlen )$/;"	f
blake2b_init0	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-ref.c	/^static inline int blake2b_init0( blake2b_state *S )$/;"	f	file:
blake2b_init_key	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	29;"	d
blake2b_init_key	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-ref.c	/^int blake2b_init_key( blake2b_state *S, const uint8_t outlen, const void *key, const uint8_t keylen )$/;"	f
blake2b_init_key_salt_personal	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	30;"	d
blake2b_init_key_salt_personal	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-ref.c	/^int blake2b_init_key_salt_personal( blake2b_state *S, const uint8_t outlen, const void *key, const uint8_t keylen,$/;"	f
blake2b_init_param	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	26;"	d
blake2b_init_param	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-ref.c	/^int blake2b_init_param( blake2b_state *S, const blake2b_param *P )$/;"	f
blake2b_init_salt_personal	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	28;"	d
blake2b_init_salt_personal	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-ref.c	/^int blake2b_init_salt_personal( blake2b_state *S, const uint8_t outlen,$/;"	f
blake2b_load_avx2_H	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h	2;"	d
blake2b_load_sse2_H	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h	15;"	d
blake2b_load_sse41_H	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h	15;"	d
blake2b_long	libsodium/src/libsodium/crypto_pwhash/argon2/blake2b-long.c	/^int blake2b_long(void *pout, size_t outlen, const void *in, size_t inlen) {$/;"	f
blake2b_long_H	libsodium/src/libsodium/crypto_pwhash/argon2/blake2b-long.h	2;"	d
blake2b_param	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	/^} blake2b_param;$/;"	t	typeref:struct:blake2b_param_
blake2b_param_	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	/^typedef struct blake2b_param_$/;"	s
blake2b_param_set_personal	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-ref.c	/^static inline int blake2b_param_set_personal( blake2b_param *P, const uint8_t personal[BLAKE2B_PERSONALBYTES] )$/;"	f	file:
blake2b_param_set_salt	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-ref.c	/^static inline int blake2b_param_set_salt( blake2b_param *P, const uint8_t salt[BLAKE2B_SALTBYTES] )$/;"	f	file:
blake2b_pick_best_implementation	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	35;"	d
blake2b_pick_best_implementation	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-ref.c	/^blake2b_pick_best_implementation(void)$/;"	f
blake2b_salt_personal	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	34;"	d
blake2b_salt_personal	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-ref.c	/^int blake2b_salt_personal( uint8_t *out, const void *in, const void *key, const uint8_t outlen, const uint64_t inlen, uint8_t keylen,$/;"	f
blake2b_set_lastblock	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-ref.c	/^static inline int blake2b_set_lastblock( blake2b_state *S )$/;"	f	file:
blake2b_set_lastnode	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-ref.c	/^static inline int blake2b_set_lastnode( blake2b_state *S )$/;"	f	file:
blake2b_sigma	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-ref.c	/^static const uint8_t blake2b_sigma[12][16] =$/;"	v	file:
blake2b_state	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	/^typedef crypto_generichash_blake2b_state blake2b_state;$/;"	t
blake2b_update	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	31;"	d
blake2b_update	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-ref.c	/^int blake2b_update( blake2b_state *S, const uint8_t *in, uint64_t inlen )$/;"	f
blamka_round_ref_H	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ref.h	2;"	d
blamka_round_ssse3_H	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ssse3.h	2;"	d
blendps	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^blendps $12, %xmm11, %xmm10$/;"	l
blind	daemon/sphinx.c	/^	u8 blind[BLINDING_FACTOR_SIZE];$/;"	m	struct:hop_params	file:
blind	secp256k1/src/ecmult_gen.h	/^    secp256k1_scalar blind;$/;"	m	struct:__anon37
blind_group_element	daemon/sphinx.c	/^static bool blind_group_element($/;"	f	file:
blkcpy	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c	/^blkcpy(escrypt_block_t *dest, const escrypt_block_t *src, size_t len)$/;"	f	file:
blkcpy_64	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c	/^blkcpy_64(escrypt_block_t *dest, const escrypt_block_t *src)$/;"	f	file:
blkheight	daemon/chaintopology.h	/^	u32 blkheight;$/;"	m	struct:txlocator
blkid	daemon/bitcoind.c	/^	struct sha256_double prevblk, blkid;$/;"	m	struct:normalizing	typeref:struct:normalizing::	file:
blkid	daemon/chaintopology.c	/^	struct sha256_double blkid;$/;"	m	struct:block	typeref:struct:block::sha256_double	file:
blkxor	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c	/^blkxor(escrypt_block_t *dest, const escrypt_block_t *src, size_t len)$/;"	f	file:
blkxor_64	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c	/^blkxor_64(escrypt_block_t *dest, const escrypt_block_t *src)$/;"	f	file:
block	daemon/chaintopology.c	/^struct block {$/;"	s	file:
block	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^typedef struct block_ { uint64_t v[ARGON2_QWORDS_IN_BLOCK]; } block;$/;"	t	typeref:struct:block_
block_	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^typedef struct block_ { uint64_t v[ARGON2_QWORDS_IN_BLOCK]; } block;$/;"	s
block_eq	daemon/chaintopology.c	/^static bool block_eq(const struct block *b, const struct sha256_double *key)$/;"	f	file:
block_for_tx	daemon/chaintopology.c	/^static struct block *block_for_tx(struct lightningd_state *dstate,$/;"	f	file:
block_map	daemon/chaintopology.c	/^	struct block_map block_map;$/;"	m	struct:topology	typeref:struct:topology::block_map	file:
block_region	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^} block_region;$/;"	t	typeref:struct:block_region_
block_region_	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^typedef struct block_region_ {$/;"	s
blockheight	daemon/test/scripts/helpers.sh	/^blockheight()$/;"	f
blockid	lightning.pb-c.h	/^  Sha256Hash *blockid;$/;"	m	struct:_OpenComplete
blockmix_salsa8	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c	/^blockmix_salsa8(const uint32_t * Bin, uint32_t * Bout, uint32_t * X, size_t r)$/;"	f	file:
blockmix_salsa8	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	/^blockmix_salsa8(const __m128i * Bin, __m128i * Bout, size_t r)$/;"	f	file:
blockmix_salsa8_xor	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	/^blockmix_salsa8_xor(const __m128i * Bin1, const __m128i * Bin2, __m128i * Bout,$/;"	f	file:
blocknum	wire/wire.h	/^	u32 blocknum;$/;"	m	struct:channel_id
blocks	lightning.pb-c.h	/^    uint32_t blocks;$/;"	m	union:_Locktime::__anon41
blocks_to_abs_locktime	bitcoin/locktime.c	/^bool blocks_to_abs_locktime(u32 blocks, struct abs_locktime *abs)$/;"	f
blocks_to_rel_locktime	bitcoin/locktime.c	/^bool blocks_to_rel_locktime(u32 blocks, struct rel_locktime *rel)$/;"	f
bobpk	libsodium/test/default/box.c	/^static const unsigned char bobpk[32]$/;"	v	file:
bobpk	libsodium/test/default/box7.c	/^static unsigned char bobpk[crypto_box_PUBLICKEYBYTES];$/;"	v	file:
bobpk	libsodium/test/default/box8.c	/^static unsigned char bobpk[crypto_box_PUBLICKEYBYTES];$/;"	v	file:
bobpk	libsodium/test/default/box_easy.c	/^static unsigned char bobpk[32]$/;"	v	file:
bobpk	libsodium/test/default/scalarmult2.c	/^static unsigned char bobpk[32];$/;"	v	file:
bobpk	libsodium/test/default/scalarmult5.c	/^static unsigned char bobpk[32]$/;"	v	file:
bobsk	libsodium/test/default/box2.c	/^static unsigned char bobsk[32]$/;"	v	file:
bobsk	libsodium/test/default/box7.c	/^static unsigned char bobsk[crypto_box_SECRETKEYBYTES];$/;"	v	file:
bobsk	libsodium/test/default/box8.c	/^static unsigned char bobsk[crypto_box_SECRETKEYBYTES];$/;"	v	file:
bobsk	libsodium/test/default/scalarmult.c	/^static const unsigned char bobsk[crypto_scalarmult_BYTES]$/;"	v	file:
bobsk	libsodium/test/default/scalarmult2.c	/^static unsigned char bobsk[32]$/;"	v	file:
bobsk_	libsodium/test/default/scalarmult6.c	/^static unsigned char bobsk_[crypto_scalarmult_SCALARBYTES]$/;"	v	file:
bolt_file	check-bolt.c	/^struct bolt_file {$/;"	s	file:
bounds_end	ccan/ccan/tal/tal.c	/^static const void *bounds_start, *bounds_end;$/;"	v	file:
bounds_start	ccan/ccan/tal/tal.c	/^static const void *bounds_start, *bounds_end;$/;"	v	file:
box	libsodium/examples/box.c	/^box(void)$/;"	f	file:
box2_DEPENDENCIES	libsodium/test/default/Makefile	/^box2_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
box2_LDADD	libsodium/test/default/Makefile	/^box2_LDADD = $(TESTS_LDADD)$/;"	m
box2_OBJECTS	libsodium/test/default/Makefile	/^box2_OBJECTS = box2.$(OBJEXT)$/;"	m
box2_SOURCE	libsodium/test/default/Makefile	/^box2_SOURCE = cmptest.h box2.c$/;"	m
box2_SOURCES	libsodium/test/default/Makefile	/^box2_SOURCES = box2.c$/;"	m
box7_DEPENDENCIES	libsodium/test/default/Makefile	/^box7_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
box7_LDADD	libsodium/test/default/Makefile	/^box7_LDADD = $(TESTS_LDADD)$/;"	m
box7_OBJECTS	libsodium/test/default/Makefile	/^box7_OBJECTS = box7.$(OBJEXT)$/;"	m
box7_SOURCE	libsodium/test/default/Makefile	/^box7_SOURCE = cmptest.h box7.c$/;"	m
box7_SOURCES	libsodium/test/default/Makefile	/^box7_SOURCES = box7.c$/;"	m
box8_DEPENDENCIES	libsodium/test/default/Makefile	/^box8_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
box8_LDADD	libsodium/test/default/Makefile	/^box8_LDADD = $(TESTS_LDADD)$/;"	m
box8_OBJECTS	libsodium/test/default/Makefile	/^box8_OBJECTS = box8.$(OBJEXT)$/;"	m
box8_SOURCE	libsodium/test/default/Makefile	/^box8_SOURCE = cmptest.h box8.c$/;"	m
box8_SOURCES	libsodium/test/default/Makefile	/^box8_SOURCES = box8.c$/;"	m
box_DEPENDENCIES	libsodium/test/default/Makefile	/^box_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
box_LDADD	libsodium/test/default/Makefile	/^box_LDADD = $(TESTS_LDADD)$/;"	m
box_OBJECTS	libsodium/test/default/Makefile	/^box_OBJECTS = box.$(OBJEXT)$/;"	m
box_SOURCE	libsodium/test/default/Makefile	/^box_SOURCE = cmptest.h box.c$/;"	m
box_SOURCES	libsodium/test/default/Makefile	/^box_SOURCES = box.c$/;"	m
box_detached	libsodium/examples/box_detached.c	/^box_detached(void)$/;"	f	file:
box_easy2_DEPENDENCIES	libsodium/test/default/Makefile	/^box_easy2_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
box_easy2_LDADD	libsodium/test/default/Makefile	/^box_easy2_LDADD = $(TESTS_LDADD)$/;"	m
box_easy2_OBJECTS	libsodium/test/default/Makefile	/^box_easy2_OBJECTS = box_easy2.$(OBJEXT)$/;"	m
box_easy2_SOURCE	libsodium/test/default/Makefile	/^box_easy2_SOURCE = cmptest.h box_easy2.c$/;"	m
box_easy2_SOURCES	libsodium/test/default/Makefile	/^box_easy2_SOURCES = box_easy2.c$/;"	m
box_easy_DEPENDENCIES	libsodium/test/default/Makefile	/^box_easy_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
box_easy_LDADD	libsodium/test/default/Makefile	/^box_easy_LDADD = $(TESTS_LDADD)$/;"	m
box_easy_OBJECTS	libsodium/test/default/Makefile	/^box_easy_OBJECTS = box_easy.$(OBJEXT)$/;"	m
box_easy_SOURCE	libsodium/test/default/Makefile	/^box_easy_SOURCE = cmptest.h box_easy.c$/;"	m
box_easy_SOURCES	libsodium/test/default/Makefile	/^box_easy_SOURCES = box_easy.c$/;"	m
box_seal_DEPENDENCIES	libsodium/test/default/Makefile	/^box_seal_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
box_seal_LDADD	libsodium/test/default/Makefile	/^box_seal_LDADD = $(TESTS_LDADD)$/;"	m
box_seal_OBJECTS	libsodium/test/default/Makefile	/^box_seal_OBJECTS = box_seal.$(OBJEXT)$/;"	m
box_seal_SOURCE	libsodium/test/default/Makefile	/^box_seal_SOURCE = cmptest.h box_seal.c$/;"	m
box_seal_SOURCES	libsodium/test/default/Makefile	/^box_seal_SOURCES = box_seal.c$/;"	m
box_seed_DEPENDENCIES	libsodium/test/default/Makefile	/^box_seed_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
box_seed_LDADD	libsodium/test/default/Makefile	/^box_seed_LDADD = $(TESTS_LDADD)$/;"	m
box_seed_OBJECTS	libsodium/test/default/Makefile	/^box_seed_OBJECTS = box_seed.$(OBJEXT)$/;"	m
box_seed_SOURCE	libsodium/test/default/Makefile	/^box_seed_SOURCE = cmptest.h box_seed.c$/;"	m
box_seed_SOURCES	libsodium/test/default/Makefile	/^box_seed_SOURCES = box_seed.c$/;"	m
breakpoint	ccan/ccan/breakpoint/breakpoint.h	/^static inline void breakpoint(void)$/;"	f
breakpoint_init	ccan/ccan/breakpoint/breakpoint.c	/^void breakpoint_init(void)$/;"	f
breakpoint_initialized	ccan/ccan/breakpoint/breakpoint.c	/^bool breakpoint_initialized;$/;"	v
breakpoint_under_debug	ccan/ccan/breakpoint/breakpoint.c	/^bool breakpoint_under_debug;$/;"	v
broadcast_channel_announcement	daemon/p2p_announce.c	/^static void broadcast_channel_announcement(struct lightningd_state *dstate, struct peer *peer)$/;"	f	file:
broadcast_channel_update	daemon/p2p_announce.c	/^static void broadcast_channel_update(struct lightningd_state *dstate, struct peer *peer)$/;"	f	file:
broadcast_done	daemon/chaintopology.c	/^static void broadcast_done(struct lightningd_state *dstate,$/;"	f	file:
broadcast_index	daemon/peer.h	/^	u64 broadcast_index;$/;"	m	struct:peer
broadcast_index	lightningd/gossip/gossip.c	/^	u64 broadcast_index;$/;"	m	struct:peer	file:
broadcast_node_announcement	daemon/p2p_announce.c	/^static void broadcast_node_announcement(struct lightningd_state *dstate)$/;"	f	file:
broadcast_queue	daemon/lightningd.h	/^	struct list_head broadcast_queue;$/;"	m	struct:lightningd_state	typeref:struct:lightningd_state::list_head
broadcast_remainder	daemon/chaintopology.c	/^static void broadcast_remainder(struct lightningd_state *dstate,$/;"	f	file:
broadcast_state	daemon/broadcast.h	/^struct broadcast_state {$/;"	s
broadcast_tx	daemon/chaintopology.c	/^void broadcast_tx(struct peer *peer, const struct bitcoin_tx *tx,$/;"	f
broadcasts	daemon/broadcast.h	/^UINTMAP(struct queued_message *) broadcasts;$/;"	m	struct:broadcast_state
broadcasts	daemon/routing.h	/^	struct broadcast_state *broadcasts;$/;"	m	struct:routing_state	typeref:struct:routing_state::broadcast_state
brute_force_first	ccan/ccan/timer/timer.c	/^static const struct timer *brute_force_first(struct timers *timers)$/;"	f	file:
bswap_16	ccan/ccan/endian/endian.h	/^static inline uint16_t bswap_16(uint16_t val)$/;"	f
bswap_32	ccan/ccan/endian/endian.h	/^static inline uint32_t bswap_32(uint32_t val)$/;"	f
bswap_64	ccan/ccan/endian/endian.h	/^static inline uint64_t bswap_64(uint64_t val)$/;"	f
buf	ccan/ccan/crypto/siphash24/siphash24.h	/^	} buf;$/;"	m	struct:siphash24_ctx	typeref:union:siphash24_ctx::__anon10
buf	ccan/ccan/io/benchmarks/run-loop.c	/^	char buf[32];$/;"	m	struct:buffer	file:
buf	ccan/ccan/io/test/run-02-read.c	/^	char buf[4];$/;"	m	struct:data	file:
buf	ccan/ccan/io/test/run-03-readpartial.c	/^	char buf[4];$/;"	m	struct:data	file:
buf	ccan/ccan/io/test/run-04-writepartial.c	/^	char *buf;$/;"	m	struct:data	file:
buf	ccan/ccan/io/test/run-05-write.c	/^	char *buf;$/;"	m	struct:data	file:
buf	ccan/ccan/io/test/run-06-idle.c	/^	char buf[4];$/;"	m	struct:data	file:
buf	ccan/ccan/io/test/run-07-break.c	/^	char buf[4];$/;"	m	struct:data	file:
buf	ccan/ccan/io/test/run-09-connect.c	/^	char buf[10];$/;"	m	struct:data	file:
buf	ccan/ccan/io/test/run-10-many.c	/^	char buf[32];$/;"	m	struct:buffer	file:
buf	ccan/ccan/io/test/run-10-many.c	/^static struct buffer buf[NUM];$/;"	v	typeref:struct:buffer	file:
buf	ccan/ccan/io/test/run-12-bidir.c	/^	char buf[4];$/;"	m	struct:data	file:
buf	ccan/ccan/io/test/run-14-duplex-both-read.c	/^	char buf[4];$/;"	m	struct:data	file:
buf	ccan/ccan/io/test/run-15-timeout.c	/^	char buf[4];$/;"	m	struct:data	file:
buf	ccan/ccan/io/test/run-16-duplex-test.c	/^	char buf[4];$/;"	m	struct:data	file:
buf	ccan/ccan/io/test/run-19-always.c	/^	char *buf;$/;"	m	struct:data	file:
buf	libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h	/^    uint8_t  buf[2 * 128];$/;"	m	struct:crypto_generichash_blake2b_state
buf	libsodium/src/libsodium/include/sodium/crypto_hash_sha256.h	/^    unsigned char buf[64];$/;"	m	struct:crypto_hash_sha256_state
buf	libsodium/src/libsodium/include/sodium/crypto_hash_sha512.h	/^    unsigned char buf[128];$/;"	m	struct:crypto_hash_sha512_state
buf	libsodium/src/libsodium/include/sodium/randombytes.h	/^    void        (*buf)(void * const buf, const size_t size); \/* required *\/$/;"	m	struct:randombytes_implementation
buf	secp256k1/src/hash.h	/^    uint32_t buf[16]; \/* In big endian *\/$/;"	m	struct:__anon22
buffer	ccan/ccan/io/benchmarks/run-loop.c	/^struct buffer {$/;"	s	file:
buffer	ccan/ccan/io/test/run-10-many.c	/^struct buffer {$/;"	s	file:
buffer	daemon/jsonrpc.h	/^	char *buffer;$/;"	m	struct:json_connection
buffer	irc.h	/^	char buffer[512];$/;"	m	struct:ircstate
buffer	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	/^        unsigned char buffer[poly1305_block_size];$/;"	m	struct:poly1305_state_internal_t
buffer	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	/^        unsigned char buffer[poly1305_block_size];$/;"	m	struct:poly1305_state_internal_t
buffer	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^    unsigned char buffer[poly1305_block_size]; \/* 32 bytes *\/$/;"	m	struct:poly1305_state_internal_t	file:
buffered	irc.h	/^	size_t buffered;$/;"	m	struct:ircstate
buflen	libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h	/^    size_t   buflen;$/;"	m	struct:crypto_generichash_blake2b_state
build	libsodium/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build	libsodium/dist-build/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build	libsodium/msvc-scripts/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build	libsodium/src/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build	libsodium/src/libsodium/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build	libsodium/src/libsodium/include/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build	libsodium/test/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build	libsodium/test/default/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build	secp256k1/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build_alias	libsodium/Makefile	/^build_alias = $/;"	m
build_alias	libsodium/dist-build/Makefile	/^build_alias = $/;"	m
build_alias	libsodium/msvc-scripts/Makefile	/^build_alias = $/;"	m
build_alias	libsodium/src/Makefile	/^build_alias = $/;"	m
build_alias	libsodium/src/libsodium/Makefile	/^build_alias = $/;"	m
build_alias	libsodium/src/libsodium/include/Makefile	/^build_alias = $/;"	m
build_alias	libsodium/test/Makefile	/^build_alias = $/;"	m
build_alias	libsodium/test/default/Makefile	/^build_alias = $/;"	m
build_alias	secp256k1/Makefile	/^build_alias = $/;"	m
build_cpu	libsodium/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	libsodium/dist-build/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	libsodium/msvc-scripts/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	libsodium/src/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	libsodium/src/libsodium/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	libsodium/src/libsodium/include/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	libsodium/test/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	libsodium/test/default/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	secp256k1/Makefile	/^build_cpu = x86_64$/;"	m
build_os	libsodium/Makefile	/^build_os = linux-gnu$/;"	m
build_os	libsodium/dist-build/Makefile	/^build_os = linux-gnu$/;"	m
build_os	libsodium/msvc-scripts/Makefile	/^build_os = linux-gnu$/;"	m
build_os	libsodium/src/Makefile	/^build_os = linux-gnu$/;"	m
build_os	libsodium/src/libsodium/Makefile	/^build_os = linux-gnu$/;"	m
build_os	libsodium/src/libsodium/include/Makefile	/^build_os = linux-gnu$/;"	m
build_os	libsodium/test/Makefile	/^build_os = linux-gnu$/;"	m
build_os	libsodium/test/default/Makefile	/^build_os = linux-gnu$/;"	m
build_os	secp256k1/Makefile	/^build_os = linux-gnu$/;"	m
build_triplet	libsodium/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_triplet	libsodium/dist-build/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_triplet	libsodium/msvc-scripts/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_triplet	libsodium/src/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_triplet	libsodium/src/libsodium/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_triplet	libsodium/src/libsodium/include/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_triplet	libsodium/test/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_triplet	libsodium/test/default/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_triplet	secp256k1/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_vendor	libsodium/Makefile	/^build_vendor = pc$/;"	m
build_vendor	libsodium/dist-build/Makefile	/^build_vendor = pc$/;"	m
build_vendor	libsodium/msvc-scripts/Makefile	/^build_vendor = pc$/;"	m
build_vendor	libsodium/src/Makefile	/^build_vendor = pc$/;"	m
build_vendor	libsodium/src/libsodium/Makefile	/^build_vendor = pc$/;"	m
build_vendor	libsodium/src/libsodium/include/Makefile	/^build_vendor = pc$/;"	m
build_vendor	libsodium/test/Makefile	/^build_vendor = pc$/;"	m
build_vendor	libsodium/test/default/Makefile	/^build_vendor = pc$/;"	m
build_vendor	secp256k1/Makefile	/^build_vendor = pc$/;"	m
builddir	libsodium/Makefile	/^builddir = .$/;"	m
builddir	libsodium/dist-build/Makefile	/^builddir = .$/;"	m
builddir	libsodium/msvc-scripts/Makefile	/^builddir = .$/;"	m
builddir	libsodium/src/Makefile	/^builddir = .$/;"	m
builddir	libsodium/src/libsodium/Makefile	/^builddir = .$/;"	m
builddir	libsodium/src/libsodium/include/Makefile	/^builddir = .$/;"	m
builddir	libsodium/test/Makefile	/^builddir = .$/;"	m
builddir	libsodium/test/default/Makefile	/^builddir = .$/;"	m
builddir	secp256k1/Makefile	/^builddir = .$/;"	m
builtin_ilog32_nz	ccan/ccan/ilog/ilog.h	104;"	d
builtin_ilog32_nz	ccan/ccan/ilog/ilog.h	107;"	d
builtin_ilog64_nz	ccan/ccan/ilog/ilog.h	112;"	d
builtin_ilog64_nz	ccan/ccan/ilog/ilog.h	115;"	d
builtin_ilog64_nz	ccan/ccan/ilog/ilog.h	118;"	d
by_comments	tools/generate-wire.py	/^    by_comments = line.rstrip().split('#')$/;"	v
byte_num	ccan/ccan/strmap/strmap.c	/^	size_t byte_num;$/;"	m	struct:node	file:
bytes	ccan/ccan/crypto/siphash24/siphash24.h	/^	uint64_t bytes;$/;"	m	struct:siphash24_ctx
bytes	ccan/ccan/io/test/run-03-readpartial.c	/^	size_t bytes;$/;"	m	struct:data	file:
bytes	ccan/ccan/io/test/run-04-writepartial.c	/^	size_t bytes;$/;"	m	struct:data	file:
bytes	ccan/ccan/io/test/run-05-write.c	/^	size_t bytes;$/;"	m	struct:data	file:
bytes	ccan/ccan/io/test/run-19-always.c	/^	size_t bytes;$/;"	m	struct:data	file:
bytes	secp256k1/src/hash.h	/^    size_t bytes;$/;"	m	struct:__anon22
c	ccan/ccan/alignof/test/run.c	/^	char c;$/;"	m	struct:lots_of_types	file:
c	ccan/ccan/cast/test/compile_fail-cast_const.c	/^	char c;$/;"	m	struct:char_struct	file:
c	ccan/ccan/cast/test/compile_fail-cast_const2.c	/^	char c;$/;"	m	struct:char_struct	file:
c	ccan/ccan/cast/test/compile_fail-cast_const3.c	/^	char c;$/;"	m	struct:char_struct	file:
c	ccan/ccan/cast/test/compile_fail-cast_signed-sizesame.c	/^	char c;$/;"	m	struct:char_struct	file:
c	ccan/ccan/crypto/ripemd160/ripemd160.h	/^	RIPEMD160_CTX c;$/;"	m	struct:ripemd160_ctx
c	ccan/ccan/crypto/sha256/sha256.h	/^	SHA256_CTX c;$/;"	m	struct:sha256_ctx
c	ccan/ccan/io/io_plan.h	/^	char c[sizeof(size_t)];$/;"	m	union:io_plan_union
c	ccan/ccan/isaac/isaac.h	/^  uint32_t c;$/;"	m	struct:isaac_ctx
c	ccan/ccan/isaac/isaac64.h	/^  uint64_t c;$/;"	m	struct:isaac64_ctx
c	ccan/ccan/tal/tal.c	/^	struct children c;$/;"	m	struct:__anon4	typeref:struct:__anon4::children	file:
c	libsodium/test/default/auth.c	/^static unsigned char c[] = "what do ya want for nothing?";$/;"	v	file:
c	libsodium/test/default/auth2.c	/^static unsigned char c[50]$/;"	v	file:
c	libsodium/test/default/auth3.c	/^static unsigned char c[50]$/;"	v	file:
c	libsodium/test/default/auth5.c	/^static unsigned char c[1000];$/;"	v	file:
c	libsodium/test/default/auth6.c	/^static unsigned char c[] = "what do ya want for nothing?";$/;"	v	file:
c	libsodium/test/default/auth7.c	/^static unsigned char c[600];$/;"	v	file:
c	libsodium/test/default/box.c	/^static unsigned char c[163];$/;"	v	file:
c	libsodium/test/default/box2.c	/^static unsigned char c[163]$/;"	v	file:
c	libsodium/test/default/box_easy.c	/^static unsigned char c[147 + crypto_box_MACBYTES];$/;"	v	file:
c	libsodium/test/default/core1.c	/^static unsigned char c[16]$/;"	v	file:
c	libsodium/test/default/core2.c	/^static unsigned char c[16]$/;"	v	file:
c	libsodium/test/default/core3.c	/^static unsigned char c[16]$/;"	v	file:
c	libsodium/test/default/core4.c	/^static unsigned char c[16]$/;"	v	file:
c	libsodium/test/default/core5.c	/^static unsigned char c[16]$/;"	v	file:
c	libsodium/test/default/core6.c	/^static unsigned char c[16]$/;"	v	file:
c	libsodium/test/default/onetimeauth.c	/^static unsigned char c[131]$/;"	v	file:
c	libsodium/test/default/onetimeauth2.c	/^static unsigned char c[131]$/;"	v	file:
c	libsodium/test/default/onetimeauth7.c	/^static unsigned char c[1000];$/;"	v	file:
c	libsodium/test/default/secretbox.c	/^static unsigned char c[163];$/;"	v	file:
c	libsodium/test/default/secretbox2.c	/^static unsigned char c[163]$/;"	v	file:
c	libsodium/test/default/secretbox7.c	/^static unsigned char c[10000];$/;"	v	file:
c	libsodium/test/default/secretbox8.c	/^static unsigned char c[10000];$/;"	v	file:
c	libsodium/test/default/stream4.c	/^static unsigned char c[163];$/;"	v	file:
c	lightning.pb-c.h	/^  uint64_t c;$/;"	m	struct:_Preimage
c	lightning.pb-c.h	/^  uint64_t c;$/;"	m	struct:_Sha256Hash
c12r_err	ccan/tools/configurator/configurator.c	/^static void c12r_err(int eval, const char *fmt, ...)$/;"	f	file:
c12r_errx	ccan/tools/configurator/configurator.c	/^static void c12r_errx(int eval, const char *fmt, ...)$/;"	f	file:
c2	ccan/ccan/alignof/test/run.c	/^	char c2;$/;"	m	struct:lots_of_types	file:
c2p	ccan/ccan/read_write_all/test/run-read_all.c	/^static int p2c[2], c2p[2];$/;"	v	file:
c3	ccan/ccan/alignof/test/run.c	/^	char c3;$/;"	m	struct:lots_of_types	file:
c4	ccan/ccan/alignof/test/run.c	/^	char c4;$/;"	m	struct:lots_of_types	file:
c5	ccan/ccan/alignof/test/run.c	/^	char c5;$/;"	m	struct:lots_of_types	file:
cROUNDS	ccan/ccan/crypto/siphash24/siphash24.c	12;"	d	file:
calc_fee	lightningd/test/run-commit_tx.c	/^static u64 calc_fee(const struct bitcoin_tx *tx, u64 input_satoshi)$/;"	f	file:
calculate_fee_msat	daemon/channel.c	/^static uint64_t calculate_fee_msat(size_t num_nondust_htlcs,$/;"	f	file:
call	contrib/pylightning/lightning/lightning.py	/^        def call():$/;"	f	function:LegacyLightningRpc.waitinvoice
call_connect	contrib/pylightning/lightning/lightning.py	/^        def call_connect():$/;"	f	function:LegacyLightningRpc.connect
call_connect	tests/utils.py	/^        def call_connect():$/;"	f	function:LightningNode.connect
call_error	ccan/ccan/tal/tal.c	/^static inline void COLD call_error(const char *msg)$/;"	f	file:
callback	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb-int.c	12;"	d	file:
callback_onearg	ccan/ccan/typesafe_cb/test/run.c	/^struct callback_onearg$/;"	s	file:
callback_onearg	ccan/ccan/typesafe_cb/test/run.c	32;"	d	file:
callback_postargs	ccan/ccan/typesafe_cb/test/run.c	/^struct callback_postargs$/;"	s	file:
callback_postargs	ccan/ccan/typesafe_cb/test/run.c	38;"	d	file:
callback_preargs	ccan/ccan/typesafe_cb/test/run.c	/^struct callback_preargs$/;"	s	file:
callback_preargs	ccan/ccan/typesafe_cb/test/run.c	35;"	d	file:
can_afford_feerate	daemon/channel.c	/^bool can_afford_feerate(const struct channel_state *cstate, uint64_t fee_rate,$/;"	f
can_derive	ccan/ccan/crypto/shachain/shachain.c	/^static bool can_derive(shachain_index_t from, shachain_index_t to)$/;"	f	file:
can_refire	test/test_state_coverage.c	/^static bool can_refire(enum state_input i)$/;"	f	file:
canaried_int	ccan/ccan/tcon/test/run-wrap.c	/^typedef TCON_WRAP(int, char *canary) canaried_int;$/;"	t	file:
canary	libsodium/src/libsodium/sodium/utils.c	/^static unsigned char canary[CANARY_SIZE];$/;"	v	file:
canonicalize	check-bolt.c	/^static char *canonicalize(char *str)$/;"	f	file:
cap	test/test_state_coverage.c	/^static unsigned int cap(unsigned int val)$/;"	f	file:
capped_htlc_spends_to_them	test/test_state_coverage.c	/^	uint8_t capped_htlc_spends_to_them;$/;"	m	struct:core_state	file:
capped_htlc_spends_to_us	test/test_state_coverage.c	/^	uint8_t capped_htlc_spends_to_us;$/;"	m	struct:core_state	file:
capped_htlcs_to_them	test/test_state_coverage.c	/^	uint8_t capped_htlcs_to_them;$/;"	m	struct:core_state	file:
capped_htlcs_to_us	test/test_state_coverage.c	/^	uint8_t capped_htlcs_to_us;$/;"	m	struct:core_state	file:
capped_live_htlcs_to_them	test/test_state_coverage.c	/^	uint8_t capped_live_htlcs_to_them;$/;"	m	struct:core_state	file:
capped_live_htlcs_to_us	test/test_state_coverage.c	/^	uint8_t capped_live_htlcs_to_us;$/;"	m	struct:core_state	file:
carg	ccan/ccan/opt/opt.h	/^		const void *carg;$/;"	m	union:opt_table::__anon5
cast_const	ccan/ccan/cast/cast.h	46;"	d
cast_const2	ccan/ccan/cast/cast.h	58;"	d
cast_const3	ccan/ccan/cast/cast.h	70;"	d
cast_const_compat1	ccan/ccan/cast/cast.h	118;"	d
cast_const_compat1	ccan/ccan/cast/cast.h	130;"	d
cast_const_compat2	ccan/ccan/cast/cast.h	121;"	d
cast_const_compat2	ccan/ccan/cast/cast.h	131;"	d
cast_const_compat3	ccan/ccan/cast/cast.h	124;"	d
cast_const_compat3	ccan/ccan/cast/cast.h	132;"	d
cast_const_strip1	ccan/ccan/cast/cast.h	112;"	d
cast_const_strip2	ccan/ccan/cast/cast.h	114;"	d
cast_const_strip3	ccan/ccan/cast/cast.h	116;"	d
cast_sign_compatible	ccan/ccan/cast/cast.h	128;"	d
cast_sign_compatible	ccan/ccan/cast/cast.h	94;"	d
cast_signed	ccan/ccan/cast/cast.h	17;"	d
cast_static	ccan/ccan/cast/cast.h	85;"	d
cast_static	ccan/ccan/cast/cast.h	88;"	d
cb	ccan/ccan/opt/opt.h	/^	char *(*cb)(void *arg); \/* OPT_NOARG *\/$/;"	m	struct:opt_table
cb	ccan/ccan/order/order.h	/^	_total_order_cb cb;$/;"	m	struct:_total_order
cb	daemon/bitcoind.c	/^	void (*cb)(struct lightningd_state *dstate,$/;"	m	struct:normalizing	file:
cb	daemon/bitcoind.c	/^	void *cb;$/;"	m	struct:bitcoin_cli	file:
cb	daemon/cryptopkt.c	/^	struct io_plan *(*cb)(struct io_conn *, struct peer *);$/;"	m	struct:io_data	typeref:struct:io_data::cb	file:
cb	daemon/cryptopkt.c	/^	struct io_plan *(*cb)(struct io_conn *conn,$/;"	m	struct:key_negotiate	typeref:struct:key_negotiate::cb	file:
cb	daemon/timeout.c	/^	void (*cb)(void *);$/;"	m	struct:oneshot	file:
cb	daemon/watch.h	/^	enum watch_result (*cb)(struct peer *peer, unsigned int depth,$/;"	m	struct:txwatch	typeref:enum:txwatch::cb
cb	daemon/watch.h	/^	enum watch_result (*cb)(struct peer *peer,$/;"	m	struct:txowatch	typeref:enum:txowatch::cb
cb_arg	ccan/ccan/opt/opt.h	/^	char *(*cb_arg)(const char *optarg, void *arg); \/* OPT_HASARG *\/$/;"	m	struct:opt_table
cb_arg	daemon/bitcoind.c	/^	void *cb_arg;$/;"	m	struct:bitcoin_cli	file:
cb_arg	daemon/bitcoind.c	/^	void *cb_arg;$/;"	m	struct:normalizing	file:
cb_onearg	ccan/ccan/typesafe_cb/test/run.c	/^struct callback_onearg cb_onearg$/;"	v	typeref:struct:callback_onearg
cb_postargs	ccan/ccan/typesafe_cb/test/run.c	/^struct callback_postargs cb_postargs$/;"	v	typeref:struct:callback_postargs
cb_preargs	ccan/ccan/typesafe_cb/test/run.c	/^struct callback_preargs cb_preargs$/;"	v	typeref:struct:callback_preargs
cbdata	daemon/watch.h	/^	void *cbdata;$/;"	m	struct:txowatch
cbdata	daemon/watch.h	/^	void *cbdata;$/;"	m	struct:txwatch
cdump_array	ccan/ccan/cdump/cdump.h	/^struct cdump_array {$/;"	s
cdump_definitions	ccan/ccan/cdump/cdump.h	/^struct cdump_definitions {$/;"	s
cdump_enum_val	ccan/ccan/cdump/cdump.h	/^struct cdump_enum_val {$/;"	s
cdump_extract	ccan/ccan/cdump/cdump.c	/^struct cdump_definitions *cdump_extract(const tal_t *ctx, const char *code,$/;"	f
cdump_map_t	ccan/ccan/cdump/cdump.h	/^typedef STRMAP(struct cdump_type *) cdump_map_t;$/;"	t
cdump_member	ccan/ccan/cdump/cdump.h	/^struct cdump_member {$/;"	s
cdump_type	ccan/ccan/cdump/cdump.h	/^struct cdump_type {$/;"	s
cdump_type_kind	ccan/ccan/cdump/cdump.h	/^enum cdump_type_kind {$/;"	g
chacha20_DEPENDENCIES	libsodium/test/default/Makefile	/^chacha20_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
chacha20_LDADD	libsodium/test/default/Makefile	/^chacha20_LDADD = $(TESTS_LDADD)$/;"	m
chacha20_OBJECTS	libsodium/test/default/Makefile	/^chacha20_OBJECTS = chacha20.$(OBJEXT)$/;"	m
chacha20_SOURCE	libsodium/test/default/Makefile	/^chacha20_SOURCE = cmptest.h chacha20.c$/;"	m
chacha20_SOURCES	libsodium/test/default/Makefile	/^chacha20_SOURCES = chacha20.c$/;"	m
chacha_ctx	libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c	/^struct chacha_ctx {$/;"	s	file:
chacha_ctx	libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c	/^typedef struct chacha_ctx chacha_ctx;$/;"	t	typeref:struct:chacha_ctx	file:
chacha_ctx	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	/^struct chacha_ctx {$/;"	s	file:
chacha_ctx	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	/^typedef struct chacha_ctx chacha_ctx;$/;"	t	typeref:struct:chacha_ctx	file:
chacha_encrypt_bytes	libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c	/^chacha_encrypt_bytes(chacha_ctx *ctx, const u8 *m, u8 *c, unsigned long long bytes)$/;"	f	file:
chacha_encrypt_bytes	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	/^chacha_encrypt_bytes(chacha_ctx *ctx, const uint8_t *in, uint8_t *out,$/;"	f	file:
chacha_ietf_ivsetup	libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c	/^chacha_ietf_ivsetup(chacha_ctx *ctx, const u8 *iv, const u8 *counter)$/;"	f	file:
chacha_ietf_ivsetup	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	/^chacha_ietf_ivsetup(chacha_ctx *ctx, const uint8_t *iv, uint32_t ic)$/;"	f	file:
chacha_ivsetup	libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c	/^chacha_ivsetup(chacha_ctx *ctx, const u8 *iv, const u8 *counter)$/;"	f	file:
chacha_ivsetup	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	/^chacha_ivsetup(chacha_ctx *ctx, const uint8_t *iv, uint64_t ic)$/;"	f	file:
chacha_keysetup	libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c	/^chacha_keysetup(chacha_ctx *ctx, const u8 *k)$/;"	f	file:
chacha_keysetup	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	/^chacha_keysetup(chacha_ctx *ctx, const uint8_t *k)$/;"	f	file:
change_bit	ccan/ccan/crypto/shachain/shachain.c	/^static void change_bit(unsigned char *arr, size_t index)$/;"	f	file:
change_funding	daemon/channel.c	/^static bool change_funding(uint64_t anchor_satoshis,$/;"	f	file:
change_htlcs	test/test_protocol.c	377;"	d	file:
change_htlcs_	test/test_protocol.c	/^static bool change_htlcs_(struct peer *peer, bool commit,$/;"	f	file:
changestates	daemon/peer.c	/^static const char *changestates(struct peer *peer,$/;"	f	file:
channel	irc.h	/^	const char *channel;$/;"	m	struct:privmsg
channel_announcement	daemon/routing.h	/^	u8 *channel_announcement;$/;"	m	struct:node_connection
channel_announcement_eq	wire/test/run-peer-wire.c	/^static bool channel_announcement_eq(const struct msg_channel_announcement *a,$/;"	f	file:
channel_config	lightningd/channel_config.h	/^struct channel_config {$/;"	s
channel_id	daemon/routing.h	/^	struct channel_id channel_id;$/;"	m	struct:node_connection	typeref:struct:node_connection::channel_id
channel_id	type_to_string.h	/^	const struct channel_id *channel_id;$/;"	m	union:printable_types	typeref:struct:printable_types::channel_id
channel_id	wire/test/run-peer-wire.c	/^	struct channel_id channel_id;$/;"	m	struct:msg_announcement_signatures	typeref:struct:msg_announcement_signatures::channel_id	file:
channel_id	wire/test/run-peer-wire.c	/^	struct channel_id channel_id;$/;"	m	struct:msg_channel_announcement	typeref:struct:msg_channel_announcement::channel_id	file:
channel_id	wire/test/run-peer-wire.c	/^	struct channel_id channel_id;$/;"	m	struct:msg_channel_update	typeref:struct:msg_channel_update::channel_id	file:
channel_id	wire/test/run-peer-wire.c	/^	struct channel_id channel_id;$/;"	m	struct:msg_closing_signed	typeref:struct:msg_closing_signed::channel_id	file:
channel_id	wire/test/run-peer-wire.c	/^	struct channel_id channel_id;$/;"	m	struct:msg_commit_sig	typeref:struct:msg_commit_sig::channel_id	file:
channel_id	wire/test/run-peer-wire.c	/^	struct channel_id channel_id;$/;"	m	struct:msg_error	typeref:struct:msg_error::channel_id	file:
channel_id	wire/test/run-peer-wire.c	/^	struct channel_id channel_id;$/;"	m	struct:msg_funding_locked	typeref:struct:msg_funding_locked::channel_id	file:
channel_id	wire/test/run-peer-wire.c	/^	struct channel_id channel_id;$/;"	m	struct:msg_revoke_and_ack	typeref:struct:msg_revoke_and_ack::channel_id	file:
channel_id	wire/test/run-peer-wire.c	/^	struct channel_id channel_id;$/;"	m	struct:msg_shutdown	typeref:struct:msg_shutdown::channel_id	file:
channel_id	wire/test/run-peer-wire.c	/^	struct channel_id channel_id;$/;"	m	struct:msg_update_add_htlc	typeref:struct:msg_update_add_htlc::channel_id	file:
channel_id	wire/test/run-peer-wire.c	/^	struct channel_id channel_id;$/;"	m	struct:msg_update_fail_htlc	typeref:struct:msg_update_fail_htlc::channel_id	file:
channel_id	wire/test/run-peer-wire.c	/^	struct channel_id channel_id;$/;"	m	struct:msg_update_fee	typeref:struct:msg_update_fee::channel_id	file:
channel_id	wire/test/run-peer-wire.c	/^	struct channel_id channel_id;$/;"	m	struct:msg_update_fulfill_htlc	typeref:struct:msg_update_fulfill_htlc::channel_id	file:
channel_id	wire/wire.h	/^struct channel_id {$/;"	s
channel_oneside	daemon/channel.h	/^struct channel_oneside {$/;"	s
channel_oneside	type_to_string.h	/^	const struct channel_oneside *channel_oneside;$/;"	m	union:printable_types	typeref:struct:printable_types::channel_oneside
channel_reserve_satoshis	lightningd/channel_config.h	/^	u64 channel_reserve_satoshis;$/;"	m	struct:channel_config
channel_reserve_satoshis	wire/test/run-peer-wire.c	/^	u64 channel_reserve_satoshis;$/;"	m	struct:msg_accept_channel	file:
channel_reserve_satoshis	wire/test/run-peer-wire.c	/^	u64 channel_reserve_satoshis;$/;"	m	struct:msg_open_channel	file:
channel_state	daemon/channel.h	/^struct channel_state {$/;"	s
channel_state	type_to_string.h	/^	const struct channel_state *channel_state;$/;"	m	union:printable_types	typeref:struct:printable_types::channel_state
channel_update	daemon/routing.h	/^	u8 *channel_update;$/;"	m	struct:node_connection
channel_update_eq	wire/test/run-peer-wire.c	/^static bool channel_update_eq(const struct msg_channel_update *a,$/;"	f	file:
char_struct	ccan/ccan/cast/test/compile_fail-cast_const.c	/^struct char_struct {$/;"	s	file:
char_struct	ccan/ccan/cast/test/compile_fail-cast_const2.c	/^struct char_struct {$/;"	s	file:
char_struct	ccan/ccan/cast/test/compile_fail-cast_const3.c	/^struct char_struct {$/;"	s	file:
char_struct	ccan/ccan/cast/test/compile_fail-cast_signed-sizesame.c	/^struct char_struct {$/;"	s	file:
char_to_hex	ccan/ccan/str/hex/hex.c	/^static bool char_to_hex(unsigned char *val, char c)$/;"	f	file:
charp_	type_to_string.h	/^	const char *charp_;$/;"	m	union:printable_types
charp_and_int_container	ccan/ccan/tcon/test/compile_ok-sizeof.c	/^struct charp_and_int_container {$/;"	s	file:
charp_and_int_container	ccan/ccan/tcon/test/compile_ok.c	/^struct charp_and_int_container {$/;"	s	file:
check	daemon/jsmn/jsmn_test.c	15;"	d	file:
check	daemon/test/scripts/helpers.sh	/^check()$/;"	f
check1	ccan/ccan/cppmagic/test/run.c	/^static inline void check1(const char *orig, const char *expand,$/;"	f	file:
checkLenField	tools/generate-wire.py	/^    def checkLenField(self,field):$/;"	m	class:Message
check_PROGRAMS	libsodium/test/default/Makefile	/^check_PROGRAMS = $(am__EXEEXT_2)$/;"	m
check_act_one	lightningd/handshake/handshake.c	/^static inline void check_act_one(const struct act_one *act1)$/;"	f	file:
check_act_three	lightningd/handshake/handshake.c	/^static inline void check_act_three(const struct act_three *act3)$/;"	f	file:
check_act_two	lightningd/handshake/handshake.c	/^static inline void check_act_two(const struct act_two *act2)$/;"	f	file:
check_all_effects	test/test_state_coverage.c	/^static const char *check_all_effects(const struct peer *old,$/;"	f	file:
check_balance_single	daemon/test/scripts/helpers.sh	/^check_balance_single()$/;"	f
check_batch	ccan/ccan/ptr_valid/test/run.c	/^static bool check_batch(char *p, unsigned int num, bool expect)$/;"	f	file:
check_both_committed	daemon/peer.c	/^static void check_both_committed(struct peer *peer, struct htlc *h)$/;"	f	file:
check_bounds	ccan/ccan/tal/tal.c	/^static void check_bounds(const void *p)$/;"	f	file:
check_chaintip	daemon/chaintopology.c	/^static void check_chaintip(struct lightningd_state *dstate,$/;"	f	file:
check_changes	test/test_state_coverage.c	/^static const char *check_changes(const struct peer *old, struct peer *new,$/;"	f	file:
check_children	ccan/ccan/list/test/compile_ok-constant.c	/^static void check_children(const struct list_head *list)$/;"	f	file:
check_children	ccan/ccan/tal/test/run-iter.c	/^static void check_children(const tal_t *parent, char val)$/;"	f	file:
check_config	daemon/options.c	/^static void check_config(struct lightningd_state *dstate)$/;"	f	file:
check_err	ccan/ccan/tal/tal.c	/^static bool check_err(struct tal_hdr *t, const char *errorstr,$/;"	f	file:
check_fe_equal	secp256k1/src/tests.c	/^int check_fe_equal(const secp256k1_fe *a, const secp256k1_fe *b) {$/;"	f
check_fe_inverse	secp256k1/src/tests.c	/^int check_fe_inverse(const secp256k1_fe *a, const secp256k1_fe *ai) {$/;"	f
check_for_resolution	daemon/peer.c	/^static enum watch_result check_for_resolution(struct peer *peer,$/;"	f	file:
check_htlc_expiry	daemon/peer.c	/^static void check_htlc_expiry(struct peer *peer)$/;"	f	file:
check_mask	ccan/ccan/htable/test/run-type-int.c	/^static bool check_mask(struct htable *ht, const struct obj val[], unsigned num)$/;"	f	file:
check_mask	ccan/ccan/htable/test/run-type.c	/^static bool check_mask(struct htable *ht, const struct obj val[], unsigned num)$/;"	f	file:
check_mask	ccan/ccan/htable/test/run.c	/^static bool check_mask(struct htable *ht, uint64_t val[], unsigned num)$/;"	f	file:
check_msg_read	lightningd/test/run-cryptomsg.c	/^static struct io_plan *check_msg_read(struct io_conn *conn, struct peer *peer,$/;"	f	file:
check_msg_write	lightningd/test/run-cryptomsg.c	/^static struct io_plan *check_msg_write(struct io_conn *conn, struct peer *peer)$/;"	f	file:
check_no_peers	daemon/test/scripts/helpers.sh	/^check_no_peers()$/;"	f
check_node	ccan/ccan/tal/tal.c	/^static bool check_node(struct children *parent_child,$/;"	f	file:
check_opt	ccan/ccan/opt/opt.c	/^static void check_opt(const struct opt_table *entry)$/;"	f	file:
check_parameter	ccan/ccan/array_size/test/compile_fail-function-param.c	/^int check_parameter(const struct foo *array)$/;"	f
check_peerconnected	daemon/test/scripts/helpers.sh	/^check_peerconnected()$/;"	f
check_peerstate	daemon/test/scripts/helpers.sh	/^check_peerstate()$/;"	f
check_proof	daemon/cryptopkt.c	/^static bool check_proof(struct key_negotiate *neg, struct log *log,$/;"	f	file:
check_ripemd160	ccan/ccan/crypto/ripemd160/ripemd160.c	/^static void check_ripemd160(struct ripemd160_ctx *ctx UNUSED)$/;"	f	file:
check_routing_failure	daemon/pay.c	/^static void check_routing_failure(struct lightningd_state *dstate,$/;"	f	file:
check_sha256	ccan/ccan/crypto/sha256/sha256.c	/^static void check_sha256(struct sha256_ctx *ctx UNUSED)$/;"	f	file:
check_signed_hash	bitcoin/signature.c	/^bool check_signed_hash(const struct sha256_double *hash,$/;"	f
check_siphash24	ccan/ccan/crypto/siphash24/siphash24.c	/^static void check_siphash24(struct siphash24_ctx *ctx)$/;"	f	file:
check_smap	ccan/ccan/intmap/test/run-order-smallsize.c	/^static bool check_smap(const smap *map)$/;"	f	file:
check_smap	ccan/ccan/intmap/test/run-order.c	/^static bool check_smap(const smap *map)$/;"	f	file:
check_status	daemon/test/scripts/helpers.sh	/^check_status()$/;"	f
check_status_single	daemon/test/scripts/helpers.sh	/^check_status_single()$/;"	f
check_tx_sig	bitcoin/signature.c	/^bool check_tx_sig(struct bitcoin_tx *tx, size_t input_num,$/;"	f
check_tx_spend	daemon/test/scripts/helpers.sh	/^check_tx_spend()$/;"	f
check_type	ccan/ccan/check_type/check_type.h	49;"	d
check_type	ccan/ccan/check_type/check_type.h	57;"	d
check_types_match	ccan/ccan/check_type/check_type.h	52;"	d
check_types_match	ccan/ccan/check_type/check_type.h	60;"	d
check_umap	ccan/ccan/intmap/test/run-order-smallsize.c	/^static bool check_umap(const umap *map)$/;"	f	file:
check_umap	ccan/ccan/intmap/test/run-order.c	/^static bool check_umap(const umap *map)$/;"	f	file:
check_with_child	ccan/ccan/ptr_valid/ptr_valid.c	/^static bool check_with_child(struct ptr_valid_batch *batch,$/;"	f	file:
check_with_maps	ccan/ccan/ptr_valid/ptr_valid.c	/^static bool check_with_maps(struct ptr_valid_batch *batch,$/;"	f	file:
checked_malloc	secp256k1/src/util.h	/^static SECP256K1_INLINE void *checked_malloc(const secp256k1_callback* cb, size_t size) {$/;"	f
child	ccan/ccan/fdpass/test/run.c	/^static void child(int sockfd)$/;"	f	file:
child	ccan/ccan/intmap/intmap.c	/^	struct intmap child[2];$/;"	m	struct:node	typeref:struct:node::intmap	file:
child	ccan/ccan/list/test/compile_ok-constant.c	/^struct child {$/;"	s	file:
child	ccan/ccan/list/test/run-check-nonconst.c	/^struct child {$/;"	s	file:
child	ccan/ccan/list/test/run-list_prev-list_next.c	/^struct child {$/;"	s	file:
child	ccan/ccan/list/test/run-single-eval.c	/^struct child {$/;"	s	file:
child	ccan/ccan/list/test/run.c	/^struct child {$/;"	s	file:
child	ccan/ccan/strmap/strmap.c	/^	struct strmap child[2];$/;"	m	struct:node	typeref:struct:node::strmap	file:
child	ccan/ccan/tal/test/run-destructor.c	/^static char *parent, *child;$/;"	v	file:
child_alive	ccan/ccan/ptr_valid/ptr_valid.c	/^static bool child_alive(struct ptr_valid_batch *batch)$/;"	f	file:
child_nofd	ccan/ccan/fdpass/test/run.c	/^static void child_nofd(int sockfd)$/;"	f	file:
child_pid	ccan/ccan/ptr_valid/ptr_valid.h	/^	int child_pid;$/;"	m	struct:ptr_valid_batch
children	ccan/ccan/list/test/compile_ok-constant.c	/^static bool children(const struct list_head *list)$/;"	f	file:
children	ccan/ccan/list/test/run-list_prev-list_next.c	/^	struct list_head children;$/;"	m	struct:parent	typeref:struct:parent::list_head	file:
children	ccan/ccan/list/test/run-single-eval.c	/^	struct list_head children;$/;"	m	struct:parent	typeref:struct:parent::list_head	file:
children	ccan/ccan/list/test/run.c	/^	struct list_head children;$/;"	m	struct:parent	typeref:struct:parent::list_head	file:
children	ccan/ccan/tal/benchmark/samba-allocs.c	/^	struct node *children[0];$/;"	m	struct:node	typeref:struct:node::node	file:
children	ccan/ccan/tal/tal.c	/^	struct list_head children; \/* Head of siblings. *\/$/;"	m	struct:children	typeref:struct:children::list_head	file:
children	ccan/ccan/tal/tal.c	/^struct children {$/;"	s	file:
ci	lightningd/hsm/hsm.c	/^	struct conn_info ci;$/;"	m	struct:client	typeref:struct:client::conn_info	file:
ciphertext	lightningd/handshake/handshake.c	/^	u8 ciphertext[PUBKEY_DER_LEN + crypto_aead_chacha20poly1305_ietf_ABYTES];$/;"	m	struct:act_three	file:
ciphertext_hex	libsodium/test/default/aead_aes256gcm.c	/^    const char *ciphertext_hex;$/;"	m	struct:__anon62	file:
cisalnum	ccan/ccan/str/str.h	/^static inline bool cisalnum(char c)$/;"	f
cisalpha	ccan/ccan/str/str.h	/^static inline bool cisalpha(char c)$/;"	f
cisascii	ccan/ccan/str/str.h	/^static inline bool cisascii(char c)$/;"	f
cisblank	ccan/ccan/str/str.h	/^static inline bool cisblank(char c)$/;"	f
ciscntrl	ccan/ccan/str/str.h	/^static inline bool ciscntrl(char c)$/;"	f
cisdigit	ccan/ccan/str/str.h	/^static inline bool cisdigit(char c)$/;"	f
cisgraph	ccan/ccan/str/str.h	/^static inline bool cisgraph(char c)$/;"	f
cislower	ccan/ccan/str/str.h	/^static inline bool cislower(char c)$/;"	f
cisprint	ccan/ccan/str/str.h	/^static inline bool cisprint(char c)$/;"	f
cispunct	ccan/ccan/str/str.h	/^static inline bool cispunct(char c)$/;"	f
cisspace	ccan/ccan/str/str.h	/^static inline bool cisspace(char c)$/;"	f
cisupper	ccan/ccan/str/str.h	/^static inline bool cisupper(char c)$/;"	f
cisxdigit	ccan/ccan/str/str.h	/^static inline bool cisxdigit(char c)$/;"	f
ck	lightningd/handshake/handshake.c	/^	struct secret ck;$/;"	m	struct:handshake	typeref:struct:handshake::secret	file:
cleanup	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    public static synchronized void cleanup() {$/;"	m	class:NativeSecp256k1
cleanup_conn_without_close	ccan/ccan/io/poll.c	/^void cleanup_conn_without_close(struct io_conn *conn)$/;"	f
cleanup_peers	daemon/peer.c	/^void cleanup_peers(struct lightningd_state *dstate)$/;"	f
clear	ccan/ccan/intmap/intmap.c	/^static void clear(struct intmap n)$/;"	f	file:
clear	ccan/ccan/strmap/strmap.c	/^static void clear(struct strmap n)$/;"	f	file:
clear_bfg	daemon/routing.c	/^static void clear_bfg(struct node_map *nodes)$/;"	f	file:
clear_current_htlc	test/test_state_coverage.c	/^static void clear_current_htlc(struct peer *peer)$/;"	f	file:
clear_memory	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^static void clear_memory(argon2_instance_t *instance, int clear) {$/;"	f	file:
clear_output_queue	daemon/peer.c	/^static void clear_output_queue(struct peer *peer)$/;"	f	file:
client	ccan/ccan/io/benchmarks/run-different-speed.c	/^struct client {$/;"	s	file:
client	ccan/ccan/io/benchmarks/run-length-prefix.c	/^struct client {$/;"	s	file:
client	lightningd/hsm/hsm.c	/^struct client {$/;"	s	file:
client_received_req	lightningd/hsm/hsm.c	/^static struct io_plan *client_received_req(struct io_conn *conn,$/;"	f	file:
cloneContext	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    public static long cloneContext() {$/;"	m	class:NativeSecp256k1
clone_trail	test/test_state_coverage.c	/^static const struct trail *clone_trail(const tal_t *ctx,$/;"	f	file:
close	libsodium/src/libsodium/include/sodium/randombytes.h	/^    int         (*close)(void);               \/* optional *\/$/;"	m	struct:randombytes_implementation
close_command	daemon/peer.c	/^static const struct json_command close_command = {$/;"	v	typeref:struct:json_command	file:
close_db	daemon/db.c	/^static void close_db(struct db *db)$/;"	f	file:
close_fee	lightning.pb-c.h	/^  uint64_t close_fee;$/;"	m	struct:_CloseSignature
close_noerr	ccan/ccan/noerr/noerr.c	/^int close_noerr(int fd)$/;"	f
close_shutdown	lightning.pb-c.h	/^    CloseShutdown *close_shutdown;$/;"	m	union:_Pkt::__anon45
close_shutdown__descriptor	lightning.pb-c.c	/^const ProtobufCMessageDescriptor close_shutdown__descriptor =$/;"	v
close_shutdown__field_descriptors	lightning.pb-c.c	/^static const ProtobufCFieldDescriptor close_shutdown__field_descriptors[1] =$/;"	v	file:
close_shutdown__field_indices_by_name	lightning.pb-c.c	/^static const unsigned close_shutdown__field_indices_by_name[] = {$/;"	v	file:
close_shutdown__free_unpacked	lightning.pb-c.c	/^void   close_shutdown__free_unpacked$/;"	f
close_shutdown__get_packed_size	lightning.pb-c.c	/^size_t close_shutdown__get_packed_size$/;"	f
close_shutdown__init	lightning.pb-c.c	/^void   close_shutdown__init$/;"	f
close_shutdown__number_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange close_shutdown__number_ranges[1 + 1] =$/;"	v	file:
close_shutdown__pack	lightning.pb-c.c	/^size_t close_shutdown__pack$/;"	f
close_shutdown__pack_to_buffer	lightning.pb-c.c	/^size_t close_shutdown__pack_to_buffer$/;"	f
close_shutdown__unpack	lightning.pb-c.c	/^       close_shutdown__unpack$/;"	f
close_signature	lightning.pb-c.h	/^    CloseSignature *close_signature;$/;"	m	union:_Pkt::__anon45
close_signature__descriptor	lightning.pb-c.c	/^const ProtobufCMessageDescriptor close_signature__descriptor =$/;"	v
close_signature__field_descriptors	lightning.pb-c.c	/^static const ProtobufCFieldDescriptor close_signature__field_descriptors[2] =$/;"	v	file:
close_signature__field_indices_by_name	lightning.pb-c.c	/^static const unsigned close_signature__field_indices_by_name[] = {$/;"	v	file:
close_signature__free_unpacked	lightning.pb-c.c	/^void   close_signature__free_unpacked$/;"	f
close_signature__get_packed_size	lightning.pb-c.c	/^size_t close_signature__get_packed_size$/;"	f
close_signature__init	lightning.pb-c.c	/^void   close_signature__init$/;"	f
close_signature__number_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange close_signature__number_ranges[1 + 1] =$/;"	v	file:
close_signature__pack	lightning.pb-c.c	/^size_t close_signature__pack$/;"	f
close_signature__pack_to_buffer	lightning.pb-c.c	/^size_t close_signature__pack_to_buffer$/;"	f
close_signature__unpack	lightning.pb-c.c	/^       close_signature__unpack$/;"	f
closer	ccan/ccan/io/test/run-09-connect.c	/^static struct io_plan *closer(struct io_conn *conn, struct data *d)$/;"	f	file:
closest	ccan/ccan/intmap/intmap.c	/^static struct intmap *closest(struct intmap *n, intmap_index_t index)$/;"	f	file:
closest	ccan/ccan/strmap/strmap.c	/^static struct strmap *closest(struct strmap *n, const char *member)$/;"	f	file:
closing	daemon/peer.h	/^	} closing;$/;"	m	struct:peer	typeref:struct:peer::__anon49
closing_order	daemon/peer.h	/^		s64 shutdown_order, closing_order;$/;"	m	struct:peer::__anon49
closing_pkt_in	daemon/peer.c	/^static bool closing_pkt_in(struct peer *peer, const Pkt *pkt)$/;"	f	file:
closing_signed_eq	wire/test/run-peer-wire.c	/^static bool closing_signed_eq(const struct msg_closing_signed *a,$/;"	f	file:
cmd	daemon/chaintopology.c	/^	struct command *cmd;$/;"	m	struct:txs_to_broadcast	typeref:struct:txs_to_broadcast::command	file:
cmd	daemon/invoice.c	/^	struct command *cmd;$/;"	m	struct:invoice_waiter	typeref:struct:invoice_waiter::command	file:
cmd	daemon/pay.c	/^	struct command *cmd;$/;"	m	struct:pay_command	typeref:struct:pay_command::command	file:
cmd	daemon/peer.c	/^	struct command *cmd;$/;"	m	struct:json_connecting	typeref:struct:json_connecting::command	file:
cmd	lightningd/peer_control.c	/^	struct command *cmd;$/;"	m	struct:json_connecting	typeref:struct:json_connecting::command	file:
cmddonefd	test/test_protocol.c	/^	int infd, outfd, cmdfd, cmddonefd;$/;"	m	struct:peer	file:
cmdfd	test/test_protocol.c	/^	int infd, outfd, cmdfd, cmddonefd;$/;"	m	struct:peer	file:
cmov	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^static void cmov(ge_precomp *t,const ge_precomp *u,unsigned char b)$/;"	f	file:
cmovl	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^cmovl %r11,%r12$/;"	l
cmovne	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^cmovne %r11,%r12$/;"	l
cmp	ccan/ccan/asort/test/compile_fail-context-type.c	/^static int cmp(char *const *a UNNEEDED, char *const *b UNNEEDED, int *flag UNNEEDED)$/;"	f	file:
cmp	ccan/ccan/htable/test/run-copy.c	/^static bool cmp(const void *candidate, void *ptr)$/;"	f	file:
cmp	ccan/ccan/htable/test/run-type-int.c	/^static bool cmp(const struct obj *obj, const unsigned int key)$/;"	f	file:
cmp	ccan/ccan/htable/test/run-type.c	/^static bool cmp(const struct obj *obj, const unsigned int *key)$/;"	f	file:
cmp	ccan/ccan/htable/tools/speed.c	/^static bool cmp(const struct object *object, const unsigned int *key)$/;"	f	file:
cmp	ccan/ccan/htable/tools/stringspeed.c	/^static bool cmp(const char *obj, const char *key)$/;"	f	file:
cmp	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^cmp  $0,%rsi$/;"	l
cmp	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^cmp  %r10,%rdx$/;"	l
cmp	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^cmp  %rax,%r8$/;"	l
cmp	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^cmp  %rax,%r9$/;"	l
cmp	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^cmp  %rax,%rcx$/;"	l
cmp	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^cmp  %rax,%rsi$/;"	l
cmp	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^cmp  $0,%rdx$/;"	l
cmp	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^cmp  $0,%rdx$/;"	l
cmp	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^cmp  $0,%r9$/;"	l
cmp	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^cmp  $256,%r9$/;"	l
cmp	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^cmp  $64,%r9$/;"	l
cmp_info	ccan/ccan/order/test/fancy_cmp.h	/^struct cmp_info {$/;"	s
cmp_times	daemon/chaintopology.c	/^static int cmp_times(const u32 *a, const u32 *b, void *unused)$/;"	f	file:
cmult	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^cmult(limb *resultx, limb *resultz, const u8 *n, const limb *q) {$/;"	f	file:
code	ccan/ccan/cdump/cdump.c	/^	const char *code;$/;"	m	struct:parse_state	file:
code_to_regex	check-bolt.c	/^static char *code_to_regex(const char *code, size_t len, bool escape)$/;"	f	file:
command	daemon/jsonrpc.h	/^struct command {$/;"	s
command	irc.h	/^	const char *command;$/;"	m	struct:irccommand
command_fail	daemon/jsonrpc.c	/^void command_fail(struct command *cmd, const char *fmt, ...)$/;"	f
command_htlc_add	daemon/peer.c	/^const char *command_htlc_add(struct peer *peer, u64 msatoshi,$/;"	f
command_htlc_fail	daemon/peer.c	/^static bool command_htlc_fail(struct peer *peer, struct htlc *htlc)$/;"	f	file:
command_htlc_fulfill	daemon/peer.c	/^static bool command_htlc_fulfill(struct peer *peer, struct htlc *htlc)$/;"	f	file:
command_htlc_set_fail	daemon/peer.c	/^static bool command_htlc_set_fail(struct peer *peer, struct htlc *htlc,$/;"	f	file:
command_success	daemon/jsonrpc.c	/^void command_success(struct command *cmd, struct json_result *result)$/;"	f
comments	tools/generate-wire.py	/^comments = []$/;"	v
commit	daemon/peer.h	/^	struct commit_info *commit;$/;"	m	struct:peer_visible_state	typeref:struct:peer_visible_state::commit_info
commit	daemon/secrets.c	/^	struct privkey commit, final;$/;"	m	struct:peer_secrets	typeref:struct:peer_secrets::privkey	file:
commit_fee_rate	daemon/peer.h	/^	u64 commit_fee_rate;$/;"	m	struct:peer_visible_state
commit_info	daemon/peer.h	/^struct commit_info {$/;"	s
commit_info	test/test_protocol.c	/^struct commit_info {$/;"	s	file:
commit_jsoncmd	daemon/peer.h	/^	struct command *commit_jsoncmd;$/;"	m	struct:peer	typeref:struct:peer::command
commit_key	lightning.pb-c.h	/^  BitcoinPubkey *commit_key;$/;"	m	struct:_OpenChannel
commit_num	daemon/peer.h	/^	u64 commit_num;$/;"	m	struct:commit_info
commit_num	daemon/peer.h	/^	u64 commit_num;$/;"	m	struct:their_commit
commit_number_obscurer	lightningd/commit_tx.c	/^u64 commit_number_obscurer(const struct pubkey *opener_payment_basepoint,$/;"	f
commit_output_to_them	daemon/commit_tx.c	/^u8 *commit_output_to_them(const tal_t *ctx,$/;"	f
commit_output_to_us	daemon/commit_tx.c	/^u8 *commit_output_to_us(const tal_t *ctx,$/;"	f
commit_sig	test/test_protocol.c	/^static struct signature commit_sig(const struct commit_tx *commit_tx)$/;"	f	file:
commit_sig_eq	wire/test/run-peer-wire.c	/^static bool commit_sig_eq(const struct msg_commit_sig *a,$/;"	f	file:
commit_time	daemon/lightningd.h	/^	struct timerel commit_time;$/;"	m	struct:config	typeref:struct:config::timerel
commit_timer	daemon/peer.h	/^	struct oneshot *commit_timer;$/;"	m	struct:peer	typeref:struct:peer::oneshot
commit_tx	lightningd/commit_tx.c	/^struct bitcoin_tx *commit_tx(const tal_t *ctx,$/;"	f
commit_tx	test/test_protocol.c	/^struct commit_tx {$/;"	s	file:
commit_tx_base_fee	lightningd/commit_tx.c	/^static u64 commit_tx_base_fee(u64 feerate_per_kw, size_t num_untrimmed_htlcs)$/;"	f	file:
commit_tx_fee	daemon/peer.c	/^static u64 commit_tx_fee(const struct bitcoin_tx *commit, u64 anchor_satoshis)$/;"	f	file:
commitkey	daemon/peer.h	/^	struct pubkey commitkey, finalkey;$/;"	m	struct:peer_visible_state	typeref:struct:peer_visible_state::pubkey
commitment_fee_max_percent	daemon/lightningd.h	/^	u32 commitment_fee_max_percent;$/;"	m	struct:config
commitment_fee_min_percent	daemon/lightningd.h	/^	u32 commitment_fee_min_percent;$/;"	m	struct:config
commitment_fee_percent	daemon/lightningd.h	/^	u32 commitment_fee_percent;$/;"	m	struct:config
committed_to_htlcs	daemon/peer.c	/^static bool committed_to_htlcs(const struct peer *peer)$/;"	f	file:
committed_to_htlcs	test/test_state_coverage.c	/^bool committed_to_htlcs(const struct peer *peer)$/;"	f
common_H	libsodium/src/libsodium/include/sodium/private/common.h	2;"	d
common_bits	ccan/ccan/htable/htable.h	/^	uintptr_t common_mask, common_bits;$/;"	m	struct:htable
common_mask	ccan/ccan/htable/htable.h	/^	uintptr_t common_mask, common_bits;$/;"	m	struct:htable
compat_tests	libsodium/test/default/randombytes.c	/^static int compat_tests(void)$/;"	f	file:
complain	ccan/ccan/cdump/cdump.c	/^static void complain(struct parse_state *ps, const char *complaint)$/;"	f	file:
complaints	ccan/ccan/cdump/cdump.c	/^	char *complaints;$/;"	m	struct:parse_state	file:
complete_pay_command	daemon/pay.c	/^void complete_pay_command(struct lightningd_state *dstate,$/;"	f
completed	ccan/ccan/io/benchmarks/run-different-speed.c	/^static unsigned int completed;$/;"	v	file:
completed	ccan/ccan/io/benchmarks/run-length-prefix.c	/^static unsigned int completed;$/;"	v	file:
compress_block_loop	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^compress_block_loop:$/;"	l
computePubkey	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    public static byte[] computePubkey(byte[] seckey) throws AssertFailException{$/;"	m	class:NativeSecp256k1
compute_blinding_factor	daemon/sphinx.c	/^static void compute_blinding_factor(const secp256k1_pubkey *key,$/;"	f	file:
compute_hmac	daemon/sphinx.c	/^static bool compute_hmac($/;"	f	file:
compute_packet_hmac	daemon/sphinx.c	/^static void compute_packet_hmac(const struct onionpacket *packet,$/;"	f	file:
cond	test/test_state_coverage.c	/^	enum state_peercond cond;$/;"	m	struct:peer	typeref:enum:peer::state_peercond	file:
condition	lightningd/peer_control.h	/^	const char *condition;$/;"	m	struct:peer
condstr	ccan/ccan/likely/likely.c	/^	const char *condstr;$/;"	m	struct:trace	file:
config	daemon/lightningd.h	/^	struct config config;$/;"	m	struct:lightningd_state	typeref:struct:lightningd_state::config
config	daemon/lightningd.h	/^struct config {$/;"	s
config_dir	daemon/lightningd.h	/^	char *config_dir;$/;"	m	struct:lightningd_state
config_log_stderr_exit	daemon/options.c	/^static void config_log_stderr_exit(const char *fmt, ...)$/;"	f	file:
config_register_opts	daemon/options.c	/^static void config_register_opts(struct lightningd_state *dstate)$/;"	f	file:
configdir_register_opts	daemon/configdir.c	/^void configdir_register_opts(const tal_t *ctx,$/;"	f
conn	ccan/ccan/io/test/run-15-timeout.c	/^	struct io_conn *conn;$/;"	m	struct:data	typeref:struct:data::io_conn	file:
conn	daemon/peer.h	/^	struct io_conn *conn;$/;"	m	struct:peer	typeref:struct:peer::io_conn
conn	irc.h	/^	struct io_conn *conn;$/;"	m	struct:ircstate	typeref:struct:ircstate::io_conn
conn	lightningd/gossip/gossip.c	/^	struct io_conn *conn;$/;"	m	struct:peer	typeref:struct:peer::io_conn	file:
conn_info	lightningd/hsm/hsm.c	/^struct conn_info {$/;"	s	file:
conn_info_init	lightningd/hsm/hsm.c	/^static void conn_info_init(struct conn_info *ci,$/;"	f	file:
connect	contrib/pylightning/lightning/lightning.py	/^    def connect(self, hostname, port, fundingtxhex, async=False):$/;"	m	class:LegacyLightningRpc
connect	contrib/pylightning/lightning/lightning.py	/^    def connect(self, hostname, port, remote_id):$/;"	m	class:LightningRpc
connect	tests/utils.py	/^    def connect(self, remote_node, capacity, async=False):$/;"	m	class:LightningNode
connect_args	ccan/tools/configurator/configurator.c	/^static char *connect_args(const char *argv[], const char *outflag,$/;"	f	file:
connect_block	daemon/chaintopology.c	/^static void connect_block(struct lightningd_state *dstate,$/;"	f	file:
connect_cmd	lightningd/peer_control.h	/^	struct command *connect_cmd;$/;"	m	struct:peer	typeref:struct:peer::command
connect_command	daemon/peer.c	/^static const struct json_command connect_command = {$/;"	v	typeref:struct:json_command	file:
connect_command	lightningd/peer_control.c	/^static const struct json_command connect_command = {$/;"	v	typeref:struct:json_command	file:
connect_failed	daemon/dns.c	/^static void connect_failed(struct io_conn *conn, struct dns_async *d)$/;"	f	file:
connect_failed	lightningd/peer_control.c	/^static void connect_failed(struct lightningd_state *dstate,$/;"	f	file:
connect_htlc_src	daemon/db.c	/^static void connect_htlc_src(struct lightningd_state *dstate)$/;"	f	file:
connected	ccan/ccan/io/test/run-09-connect.c	/^static struct io_plan *connected(struct io_conn *conn, struct data *d2)$/;"	f	file:
connected	daemon/dns.c	/^static struct io_plan *connected(struct io_conn *conn, struct dns_async *d)$/;"	f	file:
connected	daemon/peer.h	/^	bool connected;$/;"	m	struct:peer
connected	irc.h	/^	bool connected;$/;"	m	struct:ircstate
connection_fee	daemon/routing.c	/^s64 connection_fee(const struct node_connection *c, u64 msatoshi)$/;"	f
const_vp	ccan/ccan/io/io_plan.h	/^	const void *const_vp;$/;"	m	union:io_plan_union
consts_namespace_H	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	2;"	d
consume_option	ccan/ccan/opt/parse.c	/^static void consume_option(int *argc, char *argv[], unsigned optnum)$/;"	f	file:
consume_words	ccan/ccan/opt/usage.c	/^static size_t consume_words(const char *words, size_t maxlen, size_t *prefix,$/;"	f	file:
container	ccan/ccan/tcon/test/compile_fail-tcon_cast.c	/^struct container {$/;"	s	file:
container	ccan/ccan/tcon/test/compile_fail-tcon_cast_wrap.c	/^struct container {$/;"	s	file:
container	ccan/ccan/tcon/test/compile_fail-wrap.c	/^struct container {$/;"	s	file:
container	ccan/ccan/tcon/test/compile_fail.c	/^struct container {$/;"	s	file:
container	ccan/ccan/tcon/test/compile_ok-sizeof.c	/^struct container {$/;"	s	file:
container	ccan/ccan/tcon/test/compile_ok-value.c	/^struct container {$/;"	s	file:
container	ccan/ccan/tcon/test/compile_ok-void.c	/^struct container {$/;"	s	file:
container	ccan/ccan/tcon/test/compile_ok.c	/^struct container {$/;"	s	file:
container_of	ccan/ccan/container_of/container_of.h	33;"	d
container_of_or_null	ccan/ccan/container_of/container_of.h	69;"	d
container_of_or_null_	ccan/ccan/container_of/container_of.h	/^static inline char *container_of_or_null_(void *member_ptr, size_t offset)$/;"	f
container_of_var	ccan/ccan/container_of/container_of.h	119;"	d
container_of_var	ccan/ccan/container_of/container_of.h	122;"	d
container_off	ccan/ccan/container_of/container_of.h	99;"	d
container_off_var	ccan/ccan/container_of/container_of.h	138;"	d
container_off_var	ccan/ccan/container_of/container_of.h	141;"	d
contents	ccan/ccan/io/test/run-17-homemade-io.c	/^	void *contents;$/;"	m	struct:packet	file:
contents	check-bolt.c	/^	const char *contents;$/;"	m	struct:bolt_file	file:
context	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^typedef struct context {$/;"	s	file:
context	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^} context;$/;"	t	typeref:struct:context	file:
context	secp256k1/src/java/org/bitcoin/Secp256k1Context.java	/^  private static final long context; \/\/ref to pointer to context obj$/;"	f	class:Secp256k1Context	file:
control_init	lightningd/hsm/hsm.c	/^static struct io_plan *control_init(struct io_conn *conn,$/;"	f	file:
control_received_req	lightningd/hsm/hsm.c	/^static struct io_plan *control_received_req(struct io_conn *conn,$/;"	f	file:
copy2	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128.h	29;"	d
copy2	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128_aes128ctr.c	/^void copy2(int128 *r, const int128 *x)$/;"	f
copy_block	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^void copy_block(block *dst, const block *src) {$/;"	f
copy_cstate	daemon/channel.c	/^struct channel_state *copy_cstate(const tal_t *ctx,$/;"	f
copy_peers	test/test_state_coverage.c	/^static void copy_peers(struct peer *dst, struct peer *other,$/;"	f	file:
core	test/test_state_coverage.c	/^	struct core_state core;$/;"	m	struct:peer	typeref:struct:peer::core_state	file:
core1_DEPENDENCIES	libsodium/test/default/Makefile	/^core1_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
core1_LDADD	libsodium/test/default/Makefile	/^core1_LDADD = $(TESTS_LDADD)$/;"	m
core1_OBJECTS	libsodium/test/default/Makefile	/^core1_OBJECTS = core1.$(OBJEXT)$/;"	m
core1_SOURCE	libsodium/test/default/Makefile	/^core1_SOURCE = cmptest.h core1.c$/;"	m
core1_SOURCES	libsodium/test/default/Makefile	/^core1_SOURCES = core1.c$/;"	m
core2_DEPENDENCIES	libsodium/test/default/Makefile	/^core2_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
core2_LDADD	libsodium/test/default/Makefile	/^core2_LDADD = $(TESTS_LDADD)$/;"	m
core2_OBJECTS	libsodium/test/default/Makefile	/^core2_OBJECTS = core2.$(OBJEXT)$/;"	m
core2_SOURCE	libsodium/test/default/Makefile	/^core2_SOURCE = cmptest.h core2.c$/;"	m
core2_SOURCES	libsodium/test/default/Makefile	/^core2_SOURCES = core2.c$/;"	m
core3_DEPENDENCIES	libsodium/test/default/Makefile	/^core3_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
core3_LDADD	libsodium/test/default/Makefile	/^core3_LDADD = $(TESTS_LDADD)$/;"	m
core3_OBJECTS	libsodium/test/default/Makefile	/^core3_OBJECTS = core3.$(OBJEXT)$/;"	m
core3_SOURCE	libsodium/test/default/Makefile	/^core3_SOURCE = cmptest.h core3.c$/;"	m
core3_SOURCES	libsodium/test/default/Makefile	/^core3_SOURCES = core3.c$/;"	m
core4_DEPENDENCIES	libsodium/test/default/Makefile	/^core4_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
core4_LDADD	libsodium/test/default/Makefile	/^core4_LDADD = $(TESTS_LDADD)$/;"	m
core4_OBJECTS	libsodium/test/default/Makefile	/^core4_OBJECTS = core4.$(OBJEXT)$/;"	m
core4_SOURCE	libsodium/test/default/Makefile	/^core4_SOURCE = cmptest.h core4.c$/;"	m
core4_SOURCES	libsodium/test/default/Makefile	/^core4_SOURCES = core4.c$/;"	m
core5_DEPENDENCIES	libsodium/test/default/Makefile	/^core5_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
core5_LDADD	libsodium/test/default/Makefile	/^core5_LDADD = $(TESTS_LDADD)$/;"	m
core5_OBJECTS	libsodium/test/default/Makefile	/^core5_OBJECTS = core5.$(OBJEXT)$/;"	m
core5_SOURCE	libsodium/test/default/Makefile	/^core5_SOURCE = cmptest.h core5.c$/;"	m
core5_SOURCES	libsodium/test/default/Makefile	/^core5_SOURCES = core5.c$/;"	m
core6_DEPENDENCIES	libsodium/test/default/Makefile	/^core6_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
core6_LDADD	libsodium/test/default/Makefile	/^core6_LDADD = $(TESTS_LDADD)$/;"	m
core6_OBJECTS	libsodium/test/default/Makefile	/^core6_OBJECTS = core6.$(OBJEXT)$/;"	m
core6_SOURCE	libsodium/test/default/Makefile	/^core6_SOURCE = cmptest.h core6.c$/;"	m
core6_SOURCES	libsodium/test/default/Makefile	/^core6_SOURCES = core6.c$/;"	m
core_hchacha20_H	libsodium/src/libsodium/crypto_core/hchacha20/core_hchacha20.h	2;"	d
core_state	test/test_state_coverage.c	/^struct core_state {$/;"	s	file:
corrupt	ccan/ccan/list/list.c	/^static void *corrupt(const char *abortstr,$/;"	f	file:
count	ccan/ccan/likely/likely.c	/^	unsigned long count, right;$/;"	m	struct:trace	file:
count	libsodium/src/libsodium/include/sodium/crypto_hash_sha256.h	/^    uint64_t      count;$/;"	m	struct:crypto_hash_sha256_state
count	libsodium/src/libsodium/include/sodium/crypto_hash_sha512.h	/^    uint64_t      count[2];$/;"	m	struct:crypto_hash_sha512_state
count	secp256k1/src/tests.c	/^static int count = 64;$/;"	v	file:
count_deleted	ccan/ccan/htable/tools/speed.c	/^static size_t count_deleted(const struct htable *ht)$/;"	f	file:
count_htlcs	daemon/commit_tx.c	/^static size_t count_htlcs(const struct htlc_map *htlcs, int flag)$/;"	f	file:
count_open_braces	ccan/ccan/tal/str/str.c	/^static size_t count_open_braces(const char *string)$/;"	f	file:
count_trailing_zeroes	ccan/ccan/crypto/shachain/shachain.c	/^static unsigned int count_trailing_zeroes(shachain_index_t index)$/;"	f	file:
counterparty_signed	test/test_protocol.c	/^	bool counterparty_signed;$/;"	m	struct:commit_info	file:
counting_illegal_callback_fn	secp256k1/src/tests.c	/^static void counting_illegal_callback_fn(const char* str, void* data) {$/;"	f	file:
cp	ccan/ccan/io/io_plan.h	/^	char *cp;$/;"	m	union:io_plan_union
cpkt	daemon/cryptopkt.c	/^	struct crypto_pkt *cpkt;$/;"	m	struct:dir_state	typeref:struct:dir_state::crypto_pkt	file:
cpu_to_be16	ccan/ccan/endian/endian.h	/^static inline beint16_t cpu_to_be16(uint16_t native)$/;"	f
cpu_to_be32	ccan/ccan/endian/endian.h	/^static inline beint32_t cpu_to_be32(uint32_t native)$/;"	f
cpu_to_be64	ccan/ccan/endian/endian.h	/^static inline beint64_t cpu_to_be64(uint64_t native)$/;"	f
cpu_to_le16	ccan/ccan/endian/endian.h	/^static inline leint16_t cpu_to_le16(uint16_t native)$/;"	f
cpu_to_le32	ccan/ccan/endian/endian.h	/^static inline leint32_t cpu_to_le32(uint32_t native)$/;"	f
cpu_to_le64	ccan/ccan/endian/endian.h	/^static inline leint64_t cpu_to_le64(uint64_t native)$/;"	f
crashlog	daemon/log.c	/^static struct log *crashlog;$/;"	v	typeref:struct:log	file:
crashlog_activate	daemon/log.c	/^void crashlog_activate(struct log *log)$/;"	f
createECDHSecret	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    public static byte[] createECDHSecret(byte[] seckey, byte[] pubkey) throws AssertFailException{$/;"	m	class:NativeSecp256k1
create_child	ccan/ccan/ptr_valid/ptr_valid.c	/^static bool create_child(struct ptr_valid_batch *batch)$/;"	f	file:
create_clients	ccan/ccan/io/benchmarks/run-different-speed.c	/^static void create_clients(struct sockaddr_un *addr, int waitfd)$/;"	f	file:
create_clients	ccan/ccan/io/benchmarks/run-length-prefix.c	/^static void create_clients(struct sockaddr_un *addr, int waitfd)$/;"	f	file:
create_close_tx	close_tx.c	/^struct bitcoin_tx *create_close_tx(const tal_t *ctx,$/;"	f
create_commit_tx	daemon/commit_tx.c	/^struct bitcoin_tx *create_commit_tx(const tal_t *ctx,$/;"	f
create_new_hsm	lightningd/hsm/hsm.c	/^static u8 *create_new_hsm(struct conn_info *control)$/;"	f	file:
create_onionpacket	daemon/sphinx.c	/^struct onionpacket *create_onionpacket($/;"	f
create_opaque_blob	ccan/ccan/list/test/helper.c	/^struct opaque *create_opaque_blob(void)$/;"	f
create_shared_secret	daemon/sphinx.c	/^static bool create_shared_secret($/;"	f	file:
crecip	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^crecip(felem out, const felem z) {$/;"	f	file:
crypto_aead_aes256gcm_ABYTES	libsodium/src/libsodium/include/sodium/crypto_aead_aes256gcm.h	29;"	d
crypto_aead_aes256gcm_H	libsodium/src/libsodium/include/sodium/crypto_aead_aes256gcm.h	2;"	d
crypto_aead_aes256gcm_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_aes256gcm.h	17;"	d
crypto_aead_aes256gcm_NPUBBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_aes256gcm.h	25;"	d
crypto_aead_aes256gcm_NSECBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_aes256gcm.h	21;"	d
crypto_aead_aes256gcm_abytes	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_abytes(void)$/;"	f
crypto_aead_aes256gcm_beforenm	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_beforenm(crypto_aead_aes256gcm_state *ctx_,$/;"	f
crypto_aead_aes256gcm_decrypt	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_decrypt(unsigned char *m, unsigned long long *mlen_p,$/;"	f
crypto_aead_aes256gcm_decrypt	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_decrypt(unsigned char *m,$/;"	f
crypto_aead_aes256gcm_decrypt_afternm	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_decrypt_afternm(unsigned char *m, unsigned long long *mlen_p,$/;"	f
crypto_aead_aes256gcm_decrypt_detached	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_decrypt_detached(unsigned char *m,$/;"	f
crypto_aead_aes256gcm_decrypt_detached_afternm	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_decrypt_detached_afternm(unsigned char *m, unsigned char *nsec,$/;"	f
crypto_aead_aes256gcm_encrypt	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_encrypt(unsigned char *c, unsigned long long *clen_p,$/;"	f
crypto_aead_aes256gcm_encrypt	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_encrypt(unsigned char *c,$/;"	f
crypto_aead_aes256gcm_encrypt_afternm	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_encrypt_afternm(unsigned char *c, unsigned long long *clen_p,$/;"	f
crypto_aead_aes256gcm_encrypt_detached	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_encrypt_detached(unsigned char *c,$/;"	f
crypto_aead_aes256gcm_encrypt_detached_afternm	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_encrypt_detached_afternm(unsigned char *c,$/;"	f
crypto_aead_aes256gcm_is_available	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_is_available(void)$/;"	f
crypto_aead_aes256gcm_keybytes	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_keybytes(void)$/;"	f
crypto_aead_aes256gcm_npubbytes	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_npubbytes(void)$/;"	f
crypto_aead_aes256gcm_nsecbytes	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_nsecbytes(void)$/;"	f
crypto_aead_aes256gcm_state	libsodium/src/libsodium/include/sodium/crypto_aead_aes256gcm.h	/^typedef CRYPTO_ALIGN(16) unsigned char crypto_aead_aes256gcm_state[512];$/;"	v
crypto_aead_aes256gcm_statebytes	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_statebytes(void)$/;"	f
crypto_aead_chacha20poly1305_ABYTES	libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h	94;"	d
crypto_aead_chacha20poly1305_H	libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h	2;"	d
crypto_aead_chacha20poly1305_IETF_ABYTES	libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h	150;"	d
crypto_aead_chacha20poly1305_IETF_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h	147;"	d
crypto_aead_chacha20poly1305_IETF_NPUBBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h	149;"	d
crypto_aead_chacha20poly1305_IETF_NSECBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h	148;"	d
crypto_aead_chacha20poly1305_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h	82;"	d
crypto_aead_chacha20poly1305_NPUBBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h	90;"	d
crypto_aead_chacha20poly1305_NSECBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h	86;"	d
crypto_aead_chacha20poly1305_abytes	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_abytes(void) {$/;"	f
crypto_aead_chacha20poly1305_decrypt	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_decrypt(unsigned char *m,$/;"	f
crypto_aead_chacha20poly1305_decrypt_detached	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_decrypt_detached(unsigned char *m,$/;"	f
crypto_aead_chacha20poly1305_encrypt	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_encrypt(unsigned char *c,$/;"	f
crypto_aead_chacha20poly1305_encrypt_detached	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_encrypt_detached(unsigned char *c,$/;"	f
crypto_aead_chacha20poly1305_ietf_ABYTES	libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h	29;"	d
crypto_aead_chacha20poly1305_ietf_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h	16;"	d
crypto_aead_chacha20poly1305_ietf_NPUBBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h	24;"	d
crypto_aead_chacha20poly1305_ietf_NSECBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h	20;"	d
crypto_aead_chacha20poly1305_ietf_abytes	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_ietf_abytes(void) {$/;"	f
crypto_aead_chacha20poly1305_ietf_decrypt	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_ietf_decrypt(unsigned char *m,$/;"	f
crypto_aead_chacha20poly1305_ietf_decrypt_detached	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_ietf_decrypt_detached(unsigned char *m,$/;"	f
crypto_aead_chacha20poly1305_ietf_encrypt	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_ietf_encrypt(unsigned char *c,$/;"	f
crypto_aead_chacha20poly1305_ietf_encrypt_detached	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_ietf_encrypt_detached(unsigned char *c,$/;"	f
crypto_aead_chacha20poly1305_ietf_keybytes	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_ietf_keybytes(void) {$/;"	f
crypto_aead_chacha20poly1305_ietf_npubbytes	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_ietf_npubbytes(void) {$/;"	f
crypto_aead_chacha20poly1305_ietf_nsecbytes	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_ietf_nsecbytes(void) {$/;"	f
crypto_aead_chacha20poly1305_keybytes	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_keybytes(void) {$/;"	f
crypto_aead_chacha20poly1305_npubbytes	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_npubbytes(void) {$/;"	f
crypto_aead_chacha20poly1305_nsecbytes	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_nsecbytes(void) {$/;"	f
crypto_auth	libsodium/src/libsodium/crypto_auth/crypto_auth.c	/^crypto_auth(unsigned char *out, const unsigned char *in,$/;"	f
crypto_auth_BYTES	libsodium/src/libsodium/include/sodium/crypto_auth.h	16;"	d
crypto_auth_H	libsodium/src/libsodium/include/sodium/crypto_auth.h	2;"	d
crypto_auth_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_auth.h	20;"	d
crypto_auth_PRIMITIVE	libsodium/src/libsodium/include/sodium/crypto_auth.h	24;"	d
crypto_auth_bytes	libsodium/src/libsodium/crypto_auth/crypto_auth.c	/^crypto_auth_bytes(void)$/;"	f
crypto_auth_hmacsha256	libsodium/src/libsodium/crypto_auth/hmacsha256/cp/hmac_hmacsha256.c	/^crypto_auth_hmacsha256(unsigned char *out, const unsigned char *in,$/;"	f
crypto_auth_hmacsha256_BYTES	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha256.h	15;"	d
crypto_auth_hmacsha256_H	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha256.h	2;"	d
crypto_auth_hmacsha256_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha256.h	19;"	d
crypto_auth_hmacsha256_bytes	libsodium/src/libsodium/crypto_auth/hmacsha256/auth_hmacsha256_api.c	/^crypto_auth_hmacsha256_bytes(void) {$/;"	f
crypto_auth_hmacsha256_final	libsodium/src/libsodium/crypto_auth/hmacsha256/cp/hmac_hmacsha256.c	/^crypto_auth_hmacsha256_final(crypto_auth_hmacsha256_state *state,$/;"	f
crypto_auth_hmacsha256_init	libsodium/src/libsodium/crypto_auth/hmacsha256/cp/hmac_hmacsha256.c	/^crypto_auth_hmacsha256_init(crypto_auth_hmacsha256_state *state,$/;"	f
crypto_auth_hmacsha256_keybytes	libsodium/src/libsodium/crypto_auth/hmacsha256/auth_hmacsha256_api.c	/^crypto_auth_hmacsha256_keybytes(void) {$/;"	f
crypto_auth_hmacsha256_state	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha256.h	/^typedef struct crypto_auth_hmacsha256_state {$/;"	s
crypto_auth_hmacsha256_state	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha256.h	/^} crypto_auth_hmacsha256_state;$/;"	t	typeref:struct:crypto_auth_hmacsha256_state
crypto_auth_hmacsha256_statebytes	libsodium/src/libsodium/crypto_auth/hmacsha256/auth_hmacsha256_api.c	/^crypto_auth_hmacsha256_statebytes(void) {$/;"	f
crypto_auth_hmacsha256_update	libsodium/src/libsodium/crypto_auth/hmacsha256/cp/hmac_hmacsha256.c	/^crypto_auth_hmacsha256_update(crypto_auth_hmacsha256_state *state,$/;"	f
crypto_auth_hmacsha256_verify	libsodium/src/libsodium/crypto_auth/hmacsha256/cp/verify_hmacsha256.c	/^int crypto_auth_hmacsha256_verify(const unsigned char *h,const unsigned char *in,unsigned long long inlen,const unsigned char *k)$/;"	f
crypto_auth_hmacsha512	libsodium/src/libsodium/crypto_auth/hmacsha512/cp/hmac_hmacsha512.c	/^crypto_auth_hmacsha512(unsigned char *out, const unsigned char *in,$/;"	f
crypto_auth_hmacsha512256	libsodium/src/libsodium/crypto_auth/hmacsha512256/cp/hmac_hmacsha512256.c	/^crypto_auth_hmacsha512256(unsigned char *out, const unsigned char *in,$/;"	f
crypto_auth_hmacsha512256_BYTES	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512256.h	15;"	d
crypto_auth_hmacsha512256_H	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512256.h	2;"	d
crypto_auth_hmacsha512256_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512256.h	19;"	d
crypto_auth_hmacsha512256_bytes	libsodium/src/libsodium/crypto_auth/hmacsha512256/auth_hmacsha512256_api.c	/^crypto_auth_hmacsha512256_bytes(void) {$/;"	f
crypto_auth_hmacsha512256_final	libsodium/src/libsodium/crypto_auth/hmacsha512256/cp/hmac_hmacsha512256.c	/^crypto_auth_hmacsha512256_final(crypto_auth_hmacsha512256_state *state,$/;"	f
crypto_auth_hmacsha512256_init	libsodium/src/libsodium/crypto_auth/hmacsha512256/cp/hmac_hmacsha512256.c	/^crypto_auth_hmacsha512256_init(crypto_auth_hmacsha512256_state *state,$/;"	f
crypto_auth_hmacsha512256_keybytes	libsodium/src/libsodium/crypto_auth/hmacsha512256/auth_hmacsha512256_api.c	/^crypto_auth_hmacsha512256_keybytes(void) {$/;"	f
crypto_auth_hmacsha512256_state	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512256.h	/^typedef crypto_auth_hmacsha512_state crypto_auth_hmacsha512256_state;$/;"	t
crypto_auth_hmacsha512256_statebytes	libsodium/src/libsodium/crypto_auth/hmacsha512256/auth_hmacsha512256_api.c	/^crypto_auth_hmacsha512256_statebytes(void) {$/;"	f
crypto_auth_hmacsha512256_update	libsodium/src/libsodium/crypto_auth/hmacsha512256/cp/hmac_hmacsha512256.c	/^crypto_auth_hmacsha512256_update(crypto_auth_hmacsha512256_state *state,$/;"	f
crypto_auth_hmacsha512256_verify	libsodium/src/libsodium/crypto_auth/hmacsha512256/cp/verify_hmacsha512256.c	/^int crypto_auth_hmacsha512256_verify(const unsigned char *h,$/;"	f
crypto_auth_hmacsha512_BYTES	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512.h	15;"	d
crypto_auth_hmacsha512_H	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512.h	2;"	d
crypto_auth_hmacsha512_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512.h	19;"	d
crypto_auth_hmacsha512_bytes	libsodium/src/libsodium/crypto_auth/hmacsha512/auth_hmacsha512_api.c	/^crypto_auth_hmacsha512_bytes(void) {$/;"	f
crypto_auth_hmacsha512_final	libsodium/src/libsodium/crypto_auth/hmacsha512/cp/hmac_hmacsha512.c	/^crypto_auth_hmacsha512_final(crypto_auth_hmacsha512_state *state,$/;"	f
crypto_auth_hmacsha512_init	libsodium/src/libsodium/crypto_auth/hmacsha512/cp/hmac_hmacsha512.c	/^crypto_auth_hmacsha512_init(crypto_auth_hmacsha512_state *state,$/;"	f
crypto_auth_hmacsha512_keybytes	libsodium/src/libsodium/crypto_auth/hmacsha512/auth_hmacsha512_api.c	/^crypto_auth_hmacsha512_keybytes(void) {$/;"	f
crypto_auth_hmacsha512_state	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512.h	/^typedef struct crypto_auth_hmacsha512_state {$/;"	s
crypto_auth_hmacsha512_state	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512.h	/^} crypto_auth_hmacsha512_state;$/;"	t	typeref:struct:crypto_auth_hmacsha512_state
crypto_auth_hmacsha512_statebytes	libsodium/src/libsodium/crypto_auth/hmacsha512/auth_hmacsha512_api.c	/^crypto_auth_hmacsha512_statebytes(void) {$/;"	f
crypto_auth_hmacsha512_update	libsodium/src/libsodium/crypto_auth/hmacsha512/cp/hmac_hmacsha512.c	/^crypto_auth_hmacsha512_update(crypto_auth_hmacsha512_state *state,$/;"	f
crypto_auth_hmacsha512_verify	libsodium/src/libsodium/crypto_auth/hmacsha512/cp/verify_hmacsha512.c	/^int crypto_auth_hmacsha512_verify(const unsigned char *h, const unsigned char *in,$/;"	f
crypto_auth_keybytes	libsodium/src/libsodium/crypto_auth/crypto_auth.c	/^crypto_auth_keybytes(void)$/;"	f
crypto_auth_primitive	libsodium/src/libsodium/crypto_auth/crypto_auth.c	/^crypto_auth_primitive(void)$/;"	f
crypto_auth_verify	libsodium/src/libsodium/crypto_auth/crypto_auth.c	/^crypto_auth_verify(const unsigned char *h, const unsigned char *in,$/;"	f
crypto_box	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box(unsigned char *c, const unsigned char *m,$/;"	f
crypto_box_BEFORENMBYTES	libsodium/src/libsodium/include/sodium/crypto_box.h	84;"	d
crypto_box_BOXZEROBYTES	libsodium/src/libsodium/include/sodium/crypto_box.h	138;"	d
crypto_box_H	libsodium/src/libsodium/include/sodium/crypto_box.h	2;"	d
crypto_box_MACBYTES	libsodium/src/libsodium/include/sodium/crypto_box.h	39;"	d
crypto_box_NONCEBYTES	libsodium/src/libsodium/include/sodium/crypto_box.h	35;"	d
crypto_box_PRIMITIVE	libsodium/src/libsodium/include/sodium/crypto_box.h	43;"	d
crypto_box_PUBLICKEYBYTES	libsodium/src/libsodium/include/sodium/crypto_box.h	27;"	d
crypto_box_SEALBYTES	libsodium/src/libsodium/include/sodium/crypto_box.h	118;"	d
crypto_box_SECRETKEYBYTES	libsodium/src/libsodium/include/sodium/crypto_box.h	31;"	d
crypto_box_SEEDBYTES	libsodium/src/libsodium/include/sodium/crypto_box.h	23;"	d
crypto_box_ZEROBYTES	libsodium/src/libsodium/include/sodium/crypto_box.h	134;"	d
crypto_box_afternm	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_afternm(unsigned char *c, const unsigned char *m,$/;"	f
crypto_box_beforenm	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_beforenm(unsigned char *k, const unsigned char *pk,$/;"	f
crypto_box_beforenmbytes	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_beforenmbytes(void)$/;"	f
crypto_box_boxzerobytes	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_boxzerobytes(void)$/;"	f
crypto_box_curve25519xsalsa20poly1305	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/box_curve25519xsalsa20poly1305.c	/^int crypto_box_curve25519xsalsa20poly1305($/;"	f
crypto_box_curve25519xsalsa20poly1305_BEFORENMBYTES	libsodium/src/libsodium/include/sodium/crypto_box_curve25519xsalsa20poly1305.h	26;"	d
crypto_box_curve25519xsalsa20poly1305_BOXZEROBYTES	libsodium/src/libsodium/include/sodium/crypto_box_curve25519xsalsa20poly1305.h	38;"	d
crypto_box_curve25519xsalsa20poly1305_H	libsodium/src/libsodium/include/sodium/crypto_box_curve25519xsalsa20poly1305.h	2;"	d
crypto_box_curve25519xsalsa20poly1305_MACBYTES	libsodium/src/libsodium/include/sodium/crypto_box_curve25519xsalsa20poly1305.h	34;"	d
crypto_box_curve25519xsalsa20poly1305_NONCEBYTES	libsodium/src/libsodium/include/sodium/crypto_box_curve25519xsalsa20poly1305.h	30;"	d
crypto_box_curve25519xsalsa20poly1305_PUBLICKEYBYTES	libsodium/src/libsodium/include/sodium/crypto_box_curve25519xsalsa20poly1305.h	18;"	d
crypto_box_curve25519xsalsa20poly1305_SECRETKEYBYTES	libsodium/src/libsodium/include/sodium/crypto_box_curve25519xsalsa20poly1305.h	22;"	d
crypto_box_curve25519xsalsa20poly1305_SEEDBYTES	libsodium/src/libsodium/include/sodium/crypto_box_curve25519xsalsa20poly1305.h	14;"	d
crypto_box_curve25519xsalsa20poly1305_ZEROBYTES	libsodium/src/libsodium/include/sodium/crypto_box_curve25519xsalsa20poly1305.h	42;"	d
crypto_box_curve25519xsalsa20poly1305_afternm	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/after_curve25519xsalsa20poly1305.c	/^int crypto_box_curve25519xsalsa20poly1305_afternm($/;"	f
crypto_box_curve25519xsalsa20poly1305_beforenm	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/before_curve25519xsalsa20poly1305.c	/^int crypto_box_curve25519xsalsa20poly1305_beforenm($/;"	f
crypto_box_curve25519xsalsa20poly1305_beforenmbytes	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c	/^crypto_box_curve25519xsalsa20poly1305_beforenmbytes(void) {$/;"	f
crypto_box_curve25519xsalsa20poly1305_boxzerobytes	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c	/^crypto_box_curve25519xsalsa20poly1305_boxzerobytes(void) {$/;"	f
crypto_box_curve25519xsalsa20poly1305_keypair	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/keypair_curve25519xsalsa20poly1305.c	/^int crypto_box_curve25519xsalsa20poly1305_keypair($/;"	f
crypto_box_curve25519xsalsa20poly1305_macbytes	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c	/^crypto_box_curve25519xsalsa20poly1305_macbytes(void) {$/;"	f
crypto_box_curve25519xsalsa20poly1305_noncebytes	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c	/^crypto_box_curve25519xsalsa20poly1305_noncebytes(void) {$/;"	f
crypto_box_curve25519xsalsa20poly1305_open	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/box_curve25519xsalsa20poly1305.c	/^int crypto_box_curve25519xsalsa20poly1305_open($/;"	f
crypto_box_curve25519xsalsa20poly1305_open_afternm	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/after_curve25519xsalsa20poly1305.c	/^int crypto_box_curve25519xsalsa20poly1305_open_afternm($/;"	f
crypto_box_curve25519xsalsa20poly1305_publickeybytes	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c	/^crypto_box_curve25519xsalsa20poly1305_publickeybytes(void) {$/;"	f
crypto_box_curve25519xsalsa20poly1305_secretkeybytes	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c	/^crypto_box_curve25519xsalsa20poly1305_secretkeybytes(void) {$/;"	f
crypto_box_curve25519xsalsa20poly1305_seed_keypair	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/keypair_curve25519xsalsa20poly1305.c	/^int crypto_box_curve25519xsalsa20poly1305_seed_keypair($/;"	f
crypto_box_curve25519xsalsa20poly1305_seedbytes	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c	/^crypto_box_curve25519xsalsa20poly1305_seedbytes(void) {$/;"	f
crypto_box_curve25519xsalsa20poly1305_zerobytes	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c	/^crypto_box_curve25519xsalsa20poly1305_zerobytes(void) {$/;"	f
crypto_box_detached	libsodium/src/libsodium/crypto_box/crypto_box_easy.c	/^crypto_box_detached(unsigned char *c, unsigned char *mac,$/;"	f
crypto_box_detached_afternm	libsodium/src/libsodium/crypto_box/crypto_box_easy.c	/^crypto_box_detached_afternm(unsigned char *c, unsigned char *mac,$/;"	f
crypto_box_easy	libsodium/src/libsodium/crypto_box/crypto_box_easy.c	/^crypto_box_easy(unsigned char *c, const unsigned char *m,$/;"	f
crypto_box_easy_afternm	libsodium/src/libsodium/crypto_box/crypto_box_easy.c	/^crypto_box_easy_afternm(unsigned char *c, const unsigned char *m,$/;"	f
crypto_box_keypair	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_keypair(unsigned char *pk, unsigned char *sk)$/;"	f
crypto_box_macbytes	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_macbytes(void)$/;"	f
crypto_box_noncebytes	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_noncebytes(void)$/;"	f
crypto_box_open	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_open(unsigned char *m, const unsigned char *c,$/;"	f
crypto_box_open_afternm	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_open_afternm(unsigned char *m, const unsigned char *c,$/;"	f
crypto_box_open_detached	libsodium/src/libsodium/crypto_box/crypto_box_easy.c	/^crypto_box_open_detached(unsigned char *m, const unsigned char *c,$/;"	f
crypto_box_open_detached_afternm	libsodium/src/libsodium/crypto_box/crypto_box_easy.c	/^crypto_box_open_detached_afternm(unsigned char *m, const unsigned char *c,$/;"	f
crypto_box_open_easy	libsodium/src/libsodium/crypto_box/crypto_box_easy.c	/^crypto_box_open_easy(unsigned char *m, const unsigned char *c,$/;"	f
crypto_box_open_easy_afternm	libsodium/src/libsodium/crypto_box/crypto_box_easy.c	/^crypto_box_open_easy_afternm(unsigned char *m, const unsigned char *c,$/;"	f
crypto_box_primitive	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_primitive(void)$/;"	f
crypto_box_publickeybytes	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_publickeybytes(void)$/;"	f
crypto_box_seal	libsodium/src/libsodium/crypto_box/crypto_box_seal.c	/^crypto_box_seal(unsigned char *c, const unsigned char *m,$/;"	f
crypto_box_seal_open	libsodium/src/libsodium/crypto_box/crypto_box_seal.c	/^crypto_box_seal_open(unsigned char *m, const unsigned char *c,$/;"	f
crypto_box_sealbytes	libsodium/src/libsodium/crypto_box/crypto_box_seal.c	/^crypto_box_sealbytes(void)$/;"	f
crypto_box_secretkeybytes	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_secretkeybytes(void)$/;"	f
crypto_box_seed_keypair	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_seed_keypair(unsigned char *pk, unsigned char *sk,$/;"	f
crypto_box_seedbytes	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_seedbytes(void)$/;"	f
crypto_box_zerobytes	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_zerobytes(void)$/;"	f
crypto_core_hchacha20	libsodium/src/libsodium/crypto_core/hchacha20/core_hchacha20.c	/^crypto_core_hchacha20(unsigned char *out, const unsigned char *in,$/;"	f
crypto_core_hchacha20_CONSTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_hchacha20.h	23;"	d
crypto_core_hchacha20_H	libsodium/src/libsodium/include/sodium/crypto_core_hchacha20.h	2;"	d
crypto_core_hchacha20_INPUTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_hchacha20.h	15;"	d
crypto_core_hchacha20_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_core_hchacha20.h	19;"	d
crypto_core_hchacha20_OUTPUTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_hchacha20.h	11;"	d
crypto_core_hchacha20_constbytes	libsodium/src/libsodium/crypto_core/hchacha20/core_hchacha20.c	/^crypto_core_hchacha20_constbytes(void)$/;"	f
crypto_core_hchacha20_inputbytes	libsodium/src/libsodium/crypto_core/hchacha20/core_hchacha20.c	/^crypto_core_hchacha20_inputbytes(void)$/;"	f
crypto_core_hchacha20_keybytes	libsodium/src/libsodium/crypto_core/hchacha20/core_hchacha20.c	/^crypto_core_hchacha20_keybytes(void)$/;"	f
crypto_core_hchacha20_outputbytes	libsodium/src/libsodium/crypto_core/hchacha20/core_hchacha20.c	/^crypto_core_hchacha20_outputbytes(void)$/;"	f
crypto_core_hsalsa20	libsodium/src/libsodium/crypto_core/hsalsa20/ref2/core_hsalsa20.c	/^int crypto_core_hsalsa20($/;"	f
crypto_core_hsalsa20_CONSTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_hsalsa20.h	23;"	d
crypto_core_hsalsa20_H	libsodium/src/libsodium/include/sodium/crypto_core_hsalsa20.h	2;"	d
crypto_core_hsalsa20_INPUTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_hsalsa20.h	15;"	d
crypto_core_hsalsa20_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_core_hsalsa20.h	19;"	d
crypto_core_hsalsa20_OUTPUTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_hsalsa20.h	11;"	d
crypto_core_hsalsa20_constbytes	libsodium/src/libsodium/crypto_core/hsalsa20/core_hsalsa20_api.c	/^crypto_core_hsalsa20_constbytes(void) {$/;"	f
crypto_core_hsalsa20_inputbytes	libsodium/src/libsodium/crypto_core/hsalsa20/core_hsalsa20_api.c	/^crypto_core_hsalsa20_inputbytes(void) {$/;"	f
crypto_core_hsalsa20_keybytes	libsodium/src/libsodium/crypto_core/hsalsa20/core_hsalsa20_api.c	/^crypto_core_hsalsa20_keybytes(void) {$/;"	f
crypto_core_hsalsa20_outputbytes	libsodium/src/libsodium/crypto_core/hsalsa20/core_hsalsa20_api.c	/^crypto_core_hsalsa20_outputbytes(void) {$/;"	f
crypto_core_salsa20	libsodium/src/libsodium/crypto_core/salsa20/ref/core_salsa20.c	/^int crypto_core_salsa20($/;"	f
crypto_core_salsa2012	libsodium/src/libsodium/crypto_core/salsa2012/ref/core_salsa2012.c	/^int crypto_core_salsa2012($/;"	f
crypto_core_salsa2012_CONSTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_salsa2012.h	23;"	d
crypto_core_salsa2012_H	libsodium/src/libsodium/include/sodium/crypto_core_salsa2012.h	2;"	d
crypto_core_salsa2012_INPUTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_salsa2012.h	15;"	d
crypto_core_salsa2012_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_core_salsa2012.h	19;"	d
crypto_core_salsa2012_OUTPUTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_salsa2012.h	11;"	d
crypto_core_salsa2012_constbytes	libsodium/src/libsodium/crypto_core/salsa2012/core_salsa2012_api.c	/^crypto_core_salsa2012_constbytes(void) {$/;"	f
crypto_core_salsa2012_inputbytes	libsodium/src/libsodium/crypto_core/salsa2012/core_salsa2012_api.c	/^crypto_core_salsa2012_inputbytes(void) {$/;"	f
crypto_core_salsa2012_keybytes	libsodium/src/libsodium/crypto_core/salsa2012/core_salsa2012_api.c	/^crypto_core_salsa2012_keybytes(void) {$/;"	f
crypto_core_salsa2012_outputbytes	libsodium/src/libsodium/crypto_core/salsa2012/core_salsa2012_api.c	/^crypto_core_salsa2012_outputbytes(void) {$/;"	f
crypto_core_salsa208	libsodium/src/libsodium/crypto_core/salsa208/ref/core_salsa208.c	/^int crypto_core_salsa208($/;"	f
crypto_core_salsa208_CONSTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_salsa208.h	23;"	d
crypto_core_salsa208_H	libsodium/src/libsodium/include/sodium/crypto_core_salsa208.h	2;"	d
crypto_core_salsa208_INPUTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_salsa208.h	15;"	d
crypto_core_salsa208_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_core_salsa208.h	19;"	d
crypto_core_salsa208_OUTPUTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_salsa208.h	11;"	d
crypto_core_salsa208_constbytes	libsodium/src/libsodium/crypto_core/salsa208/core_salsa208_api.c	/^crypto_core_salsa208_constbytes(void) {$/;"	f
crypto_core_salsa208_inputbytes	libsodium/src/libsodium/crypto_core/salsa208/core_salsa208_api.c	/^crypto_core_salsa208_inputbytes(void) {$/;"	f
crypto_core_salsa208_keybytes	libsodium/src/libsodium/crypto_core/salsa208/core_salsa208_api.c	/^crypto_core_salsa208_keybytes(void) {$/;"	f
crypto_core_salsa208_outputbytes	libsodium/src/libsodium/crypto_core/salsa208/core_salsa208_api.c	/^crypto_core_salsa208_outputbytes(void) {$/;"	f
crypto_core_salsa20_CONSTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_salsa20.h	23;"	d
crypto_core_salsa20_H	libsodium/src/libsodium/include/sodium/crypto_core_salsa20.h	2;"	d
crypto_core_salsa20_INPUTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_salsa20.h	15;"	d
crypto_core_salsa20_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_core_salsa20.h	19;"	d
crypto_core_salsa20_OUTPUTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_salsa20.h	11;"	d
crypto_core_salsa20_constbytes	libsodium/src/libsodium/crypto_core/salsa20/core_salsa20_api.c	/^crypto_core_salsa20_constbytes(void) {$/;"	f
crypto_core_salsa20_inputbytes	libsodium/src/libsodium/crypto_core/salsa20/core_salsa20_api.c	/^crypto_core_salsa20_inputbytes(void) {$/;"	f
crypto_core_salsa20_keybytes	libsodium/src/libsodium/crypto_core/salsa20/core_salsa20_api.c	/^crypto_core_salsa20_keybytes(void) {$/;"	f
crypto_core_salsa20_outputbytes	libsodium/src/libsodium/crypto_core/salsa20/core_salsa20_api.c	/^crypto_core_salsa20_outputbytes(void) {$/;"	f
crypto_generichash	libsodium/src/libsodium/crypto_generichash/crypto_generichash.c	/^crypto_generichash(unsigned char *out, size_t outlen, const unsigned char *in,$/;"	f
crypto_generichash_BYTES	libsodium/src/libsodium/include/sodium/crypto_generichash.h	24;"	d
crypto_generichash_BYTES_MAX	libsodium/src/libsodium/include/sodium/crypto_generichash.h	20;"	d
crypto_generichash_BYTES_MIN	libsodium/src/libsodium/include/sodium/crypto_generichash.h	16;"	d
crypto_generichash_H	libsodium/src/libsodium/include/sodium/crypto_generichash.h	2;"	d
crypto_generichash_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_generichash.h	36;"	d
crypto_generichash_KEYBYTES_MAX	libsodium/src/libsodium/include/sodium/crypto_generichash.h	32;"	d
crypto_generichash_KEYBYTES_MIN	libsodium/src/libsodium/include/sodium/crypto_generichash.h	28;"	d
crypto_generichash_PRIMITIVE	libsodium/src/libsodium/include/sodium/crypto_generichash.h	40;"	d
crypto_generichash_blake2b	libsodium/src/libsodium/crypto_generichash/blake2/ref/generichash_blake2b.c	/^crypto_generichash_blake2b(unsigned char *out, size_t outlen,$/;"	f
crypto_generichash_blake2b_BYTES	libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h	46;"	d
crypto_generichash_blake2b_BYTES_MAX	libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h	42;"	d
crypto_generichash_blake2b_BYTES_MIN	libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h	38;"	d
crypto_generichash_blake2b_H	libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h	2;"	d
crypto_generichash_blake2b_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h	58;"	d
crypto_generichash_blake2b_KEYBYTES_MAX	libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h	54;"	d
crypto_generichash_blake2b_KEYBYTES_MIN	libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h	50;"	d
crypto_generichash_blake2b_PERSONALBYTES	libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h	66;"	d
crypto_generichash_blake2b_SALTBYTES	libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h	62;"	d
crypto_generichash_blake2b_bytes	libsodium/src/libsodium/crypto_generichash/blake2/generichash_blake2_api.c	/^crypto_generichash_blake2b_bytes(void) {$/;"	f
crypto_generichash_blake2b_bytes_max	libsodium/src/libsodium/crypto_generichash/blake2/generichash_blake2_api.c	/^crypto_generichash_blake2b_bytes_max(void) {$/;"	f
crypto_generichash_blake2b_bytes_min	libsodium/src/libsodium/crypto_generichash/blake2/generichash_blake2_api.c	/^crypto_generichash_blake2b_bytes_min(void) {$/;"	f
crypto_generichash_blake2b_final	libsodium/src/libsodium/crypto_generichash/blake2/ref/generichash_blake2b.c	/^crypto_generichash_blake2b_final(crypto_generichash_blake2b_state *state,$/;"	f
crypto_generichash_blake2b_init	libsodium/src/libsodium/crypto_generichash/blake2/ref/generichash_blake2b.c	/^crypto_generichash_blake2b_init(crypto_generichash_blake2b_state *state,$/;"	f
crypto_generichash_blake2b_init_salt_personal	libsodium/src/libsodium/crypto_generichash/blake2/ref/generichash_blake2b.c	/^crypto_generichash_blake2b_init_salt_personal(crypto_generichash_blake2b_state *state,$/;"	f
crypto_generichash_blake2b_keybytes	libsodium/src/libsodium/crypto_generichash/blake2/generichash_blake2_api.c	/^crypto_generichash_blake2b_keybytes(void) {$/;"	f
crypto_generichash_blake2b_keybytes_max	libsodium/src/libsodium/crypto_generichash/blake2/generichash_blake2_api.c	/^crypto_generichash_blake2b_keybytes_max(void) {$/;"	f
crypto_generichash_blake2b_keybytes_min	libsodium/src/libsodium/crypto_generichash/blake2/generichash_blake2_api.c	/^crypto_generichash_blake2b_keybytes_min(void) {$/;"	f
crypto_generichash_blake2b_personalbytes	libsodium/src/libsodium/crypto_generichash/blake2/generichash_blake2_api.c	/^crypto_generichash_blake2b_personalbytes(void) {$/;"	f
crypto_generichash_blake2b_salt_personal	libsodium/src/libsodium/crypto_generichash/blake2/ref/generichash_blake2b.c	/^crypto_generichash_blake2b_salt_personal(unsigned char *out, size_t outlen,$/;"	f
crypto_generichash_blake2b_saltbytes	libsodium/src/libsodium/crypto_generichash/blake2/generichash_blake2_api.c	/^crypto_generichash_blake2b_saltbytes(void) {$/;"	f
crypto_generichash_blake2b_state	libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h	/^typedef CRYPTO_ALIGN(64) struct crypto_generichash_blake2b_state {$/;"	s
crypto_generichash_blake2b_state	libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h	/^} crypto_generichash_blake2b_state;$/;"	v	typeref:struct:crypto_generichash_blake2b_state
crypto_generichash_blake2b_statebytes	libsodium/src/libsodium/crypto_generichash/blake2/generichash_blake2_api.c	/^crypto_generichash_blake2b_statebytes(void)$/;"	f
crypto_generichash_blake2b_update	libsodium/src/libsodium/crypto_generichash/blake2/ref/generichash_blake2b.c	/^crypto_generichash_blake2b_update(crypto_generichash_blake2b_state *state,$/;"	f
crypto_generichash_bytes	libsodium/src/libsodium/crypto_generichash/crypto_generichash.c	/^crypto_generichash_bytes(void)$/;"	f
crypto_generichash_bytes_max	libsodium/src/libsodium/crypto_generichash/crypto_generichash.c	/^crypto_generichash_bytes_max(void)$/;"	f
crypto_generichash_bytes_min	libsodium/src/libsodium/crypto_generichash/crypto_generichash.c	/^crypto_generichash_bytes_min(void)$/;"	f
crypto_generichash_final	libsodium/src/libsodium/crypto_generichash/crypto_generichash.c	/^crypto_generichash_final(crypto_generichash_state *state,$/;"	f
crypto_generichash_init	libsodium/src/libsodium/crypto_generichash/crypto_generichash.c	/^crypto_generichash_init(crypto_generichash_state *state,$/;"	f
crypto_generichash_keybytes	libsodium/src/libsodium/crypto_generichash/crypto_generichash.c	/^crypto_generichash_keybytes(void)$/;"	f
crypto_generichash_keybytes_max	libsodium/src/libsodium/crypto_generichash/crypto_generichash.c	/^crypto_generichash_keybytes_max(void)$/;"	f
crypto_generichash_keybytes_min	libsodium/src/libsodium/crypto_generichash/crypto_generichash.c	/^crypto_generichash_keybytes_min(void)$/;"	f
crypto_generichash_primitive	libsodium/src/libsodium/crypto_generichash/crypto_generichash.c	/^crypto_generichash_primitive(void)$/;"	f
crypto_generichash_state	libsodium/src/libsodium/include/sodium/crypto_generichash.h	/^typedef crypto_generichash_blake2b_state crypto_generichash_state;$/;"	t
crypto_generichash_statebytes	libsodium/src/libsodium/crypto_generichash/crypto_generichash.c	/^crypto_generichash_statebytes(void)$/;"	f
crypto_generichash_update	libsodium/src/libsodium/crypto_generichash/crypto_generichash.c	/^crypto_generichash_update(crypto_generichash_state *state,$/;"	f
crypto_hash	libsodium/src/libsodium/crypto_hash/crypto_hash.c	/^crypto_hash(unsigned char *out, const unsigned char *in,$/;"	f
crypto_hash_BYTES	libsodium/src/libsodium/include/sodium/crypto_hash.h	23;"	d
crypto_hash_H	libsodium/src/libsodium/include/sodium/crypto_hash.h	2;"	d
crypto_hash_PRIMITIVE	libsodium/src/libsodium/include/sodium/crypto_hash.h	31;"	d
crypto_hash_bytes	libsodium/src/libsodium/crypto_hash/crypto_hash.c	/^crypto_hash_bytes(void)$/;"	f
crypto_hash_primitive	libsodium/src/libsodium/crypto_hash/crypto_hash.c	/^crypto_hash_primitive(void) {$/;"	f
crypto_hash_sha256	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256.c	/^crypto_hash_sha256(unsigned char *out, const unsigned char *in,$/;"	f
crypto_hash_sha256_BYTES	libsodium/src/libsodium/include/sodium/crypto_hash_sha256.h	32;"	d
crypto_hash_sha256_H	libsodium/src/libsodium/include/sodium/crypto_hash_sha256.h	2;"	d
crypto_hash_sha256_bytes	libsodium/src/libsodium/crypto_hash/sha256/hash_sha256_api.c	/^crypto_hash_sha256_bytes(void) {$/;"	f
crypto_hash_sha256_final	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256.c	/^crypto_hash_sha256_final(crypto_hash_sha256_state *state,$/;"	f
crypto_hash_sha256_init	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256.c	/^crypto_hash_sha256_init(crypto_hash_sha256_state *state)$/;"	f
crypto_hash_sha256_state	libsodium/src/libsodium/include/sodium/crypto_hash_sha256.h	/^typedef struct crypto_hash_sha256_state {$/;"	s
crypto_hash_sha256_state	libsodium/src/libsodium/include/sodium/crypto_hash_sha256.h	/^} crypto_hash_sha256_state;$/;"	t	typeref:struct:crypto_hash_sha256_state
crypto_hash_sha256_statebytes	libsodium/src/libsodium/crypto_hash/sha256/hash_sha256_api.c	/^crypto_hash_sha256_statebytes(void) {$/;"	f
crypto_hash_sha256_update	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256.c	/^crypto_hash_sha256_update(crypto_hash_sha256_state *state,$/;"	f
crypto_hash_sha512	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512.c	/^crypto_hash_sha512(unsigned char *out, const unsigned char *in,$/;"	f
crypto_hash_sha512_BYTES	libsodium/src/libsodium/include/sodium/crypto_hash_sha512.h	32;"	d
crypto_hash_sha512_H	libsodium/src/libsodium/include/sodium/crypto_hash_sha512.h	2;"	d
crypto_hash_sha512_bytes	libsodium/src/libsodium/crypto_hash/sha512/hash_sha512_api.c	/^crypto_hash_sha512_bytes(void) {$/;"	f
crypto_hash_sha512_final	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512.c	/^crypto_hash_sha512_final(crypto_hash_sha512_state *state,$/;"	f
crypto_hash_sha512_init	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512.c	/^crypto_hash_sha512_init(crypto_hash_sha512_state *state)$/;"	f
crypto_hash_sha512_state	libsodium/src/libsodium/include/sodium/crypto_hash_sha512.h	/^typedef struct crypto_hash_sha512_state {$/;"	s
crypto_hash_sha512_state	libsodium/src/libsodium/include/sodium/crypto_hash_sha512.h	/^} crypto_hash_sha512_state;$/;"	t	typeref:struct:crypto_hash_sha512_state
crypto_hash_sha512_statebytes	libsodium/src/libsodium/crypto_hash/sha512/hash_sha512_api.c	/^crypto_hash_sha512_statebytes(void) {$/;"	f
crypto_hash_sha512_update	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512.c	/^crypto_hash_sha512_update(crypto_hash_sha512_state *state,$/;"	f
crypto_int32	libsodium/src/libsodium/include/sodium/crypto_int32.h	/^typedef int32_t crypto_int32;$/;"	t
crypto_int32_H	libsodium/src/libsodium/include/sodium/crypto_int32.h	2;"	d
crypto_int64	libsodium/src/libsodium/include/sodium/crypto_int64.h	/^typedef int64_t crypto_int64;$/;"	t
crypto_int64_H	libsodium/src/libsodium/include/sodium/crypto_int64.h	2;"	d
crypto_on_in	daemon/peer.c	/^static struct io_plan *crypto_on_in(struct io_conn *conn,$/;"	f	file:
crypto_on_out	daemon/peer.c	/^static struct io_plan *crypto_on_out(struct io_conn *conn,$/;"	f	file:
crypto_on_reconnect	daemon/peer.c	/^static struct io_plan *crypto_on_reconnect(struct io_conn *conn,$/;"	f	file:
crypto_on_reconnect_in	daemon/peer.c	/^static struct io_plan *crypto_on_reconnect_in(struct io_conn *conn,$/;"	f	file:
crypto_on_reconnect_out	daemon/peer.c	/^static struct io_plan *crypto_on_reconnect_out(struct io_conn *conn,$/;"	f	file:
crypto_onetimeauth	libsodium/src/libsodium/crypto_onetimeauth/crypto_onetimeauth.c	/^crypto_onetimeauth(unsigned char *out, const unsigned char *in,$/;"	f
crypto_onetimeauth_BYTES	libsodium/src/libsodium/include/sodium/crypto_onetimeauth.h	20;"	d
crypto_onetimeauth_H	libsodium/src/libsodium/include/sodium/crypto_onetimeauth.h	2;"	d
crypto_onetimeauth_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_onetimeauth.h	24;"	d
crypto_onetimeauth_PRIMITIVE	libsodium/src/libsodium/include/sodium/crypto_onetimeauth.h	28;"	d
crypto_onetimeauth_bytes	libsodium/src/libsodium/crypto_onetimeauth/crypto_onetimeauth.c	/^crypto_onetimeauth_bytes(void)$/;"	f
crypto_onetimeauth_final	libsodium/src/libsodium/crypto_onetimeauth/crypto_onetimeauth.c	/^crypto_onetimeauth_final(crypto_onetimeauth_state *state,$/;"	f
crypto_onetimeauth_init	libsodium/src/libsodium/crypto_onetimeauth/crypto_onetimeauth.c	/^crypto_onetimeauth_init(crypto_onetimeauth_state *state,$/;"	f
crypto_onetimeauth_keybytes	libsodium/src/libsodium/crypto_onetimeauth/crypto_onetimeauth.c	/^crypto_onetimeauth_keybytes(void)$/;"	f
crypto_onetimeauth_poly1305	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c	/^crypto_onetimeauth_poly1305(unsigned char *out, const unsigned char *in,$/;"	f
crypto_onetimeauth_poly1305_BYTES	libsodium/src/libsodium/include/sodium/crypto_onetimeauth_poly1305.h	23;"	d
crypto_onetimeauth_poly1305_H	libsodium/src/libsodium/include/sodium/crypto_onetimeauth_poly1305.h	2;"	d
crypto_onetimeauth_poly1305_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_onetimeauth_poly1305.h	27;"	d
crypto_onetimeauth_poly1305_bytes	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c	/^crypto_onetimeauth_poly1305_bytes(void) {$/;"	f
crypto_onetimeauth_poly1305_donna	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c	/^crypto_onetimeauth_poly1305_donna(unsigned char *out, const unsigned char *m,$/;"	f	file:
crypto_onetimeauth_poly1305_donna_final	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c	/^crypto_onetimeauth_poly1305_donna_final(crypto_onetimeauth_poly1305_state *state,$/;"	f	file:
crypto_onetimeauth_poly1305_donna_implementation	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c	/^crypto_onetimeauth_poly1305_donna_implementation = {$/;"	v	typeref:struct:crypto_onetimeauth_poly1305_implementation
crypto_onetimeauth_poly1305_donna_init	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c	/^crypto_onetimeauth_poly1305_donna_init(crypto_onetimeauth_poly1305_state *state,$/;"	f	file:
crypto_onetimeauth_poly1305_donna_update	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c	/^crypto_onetimeauth_poly1305_donna_update(crypto_onetimeauth_poly1305_state *state,$/;"	f	file:
crypto_onetimeauth_poly1305_donna_verify	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c	/^crypto_onetimeauth_poly1305_donna_verify(const unsigned char *h,$/;"	f	file:
crypto_onetimeauth_poly1305_final	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c	/^crypto_onetimeauth_poly1305_final(crypto_onetimeauth_poly1305_state *state,$/;"	f
crypto_onetimeauth_poly1305_implementation	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h	/^typedef struct crypto_onetimeauth_poly1305_implementation {$/;"	s
crypto_onetimeauth_poly1305_implementation	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h	/^} crypto_onetimeauth_poly1305_implementation;$/;"	t	typeref:struct:crypto_onetimeauth_poly1305_implementation
crypto_onetimeauth_poly1305_init	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c	/^crypto_onetimeauth_poly1305_init(crypto_onetimeauth_poly1305_state *state,$/;"	f
crypto_onetimeauth_poly1305_keybytes	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c	/^crypto_onetimeauth_poly1305_keybytes(void) {$/;"	f
crypto_onetimeauth_poly1305_sse2	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^crypto_onetimeauth_poly1305_sse2(unsigned char *out, const unsigned char *m,$/;"	f	file:
crypto_onetimeauth_poly1305_sse2_final	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^crypto_onetimeauth_poly1305_sse2_final(crypto_onetimeauth_poly1305_state *state,$/;"	f	file:
crypto_onetimeauth_poly1305_sse2_implementation	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^crypto_onetimeauth_poly1305_sse2_implementation = {$/;"	v	typeref:struct:crypto_onetimeauth_poly1305_implementation
crypto_onetimeauth_poly1305_sse2_init	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^crypto_onetimeauth_poly1305_sse2_init(crypto_onetimeauth_poly1305_state *state,$/;"	f	file:
crypto_onetimeauth_poly1305_sse2_update	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^crypto_onetimeauth_poly1305_sse2_update(crypto_onetimeauth_poly1305_state *state,$/;"	f	file:
crypto_onetimeauth_poly1305_sse2_verify	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^crypto_onetimeauth_poly1305_sse2_verify(const unsigned char *h,$/;"	f	file:
crypto_onetimeauth_poly1305_state	libsodium/src/libsodium/include/sodium/crypto_onetimeauth_poly1305.h	/^typedef CRYPTO_ALIGN(16) struct crypto_onetimeauth_poly1305_state {$/;"	s
crypto_onetimeauth_poly1305_state	libsodium/src/libsodium/include/sodium/crypto_onetimeauth_poly1305.h	/^} crypto_onetimeauth_poly1305_state;$/;"	v	typeref:struct:crypto_onetimeauth_poly1305_state
crypto_onetimeauth_poly1305_update	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c	/^crypto_onetimeauth_poly1305_update(crypto_onetimeauth_poly1305_state *state,$/;"	f
crypto_onetimeauth_poly1305_verify	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c	/^crypto_onetimeauth_poly1305_verify(const unsigned char *h,$/;"	f
crypto_onetimeauth_primitive	libsodium/src/libsodium/crypto_onetimeauth/crypto_onetimeauth.c	/^crypto_onetimeauth_primitive(void)$/;"	f
crypto_onetimeauth_state	libsodium/src/libsodium/include/sodium/crypto_onetimeauth.h	/^typedef crypto_onetimeauth_poly1305_state crypto_onetimeauth_state;$/;"	t
crypto_onetimeauth_statebytes	libsodium/src/libsodium/crypto_onetimeauth/crypto_onetimeauth.c	/^crypto_onetimeauth_statebytes(void)$/;"	f
crypto_onetimeauth_update	libsodium/src/libsodium/crypto_onetimeauth/crypto_onetimeauth.c	/^crypto_onetimeauth_update(crypto_onetimeauth_state *state,$/;"	f
crypto_onetimeauth_verify	libsodium/src/libsodium/crypto_onetimeauth/crypto_onetimeauth.c	/^crypto_onetimeauth_verify(const unsigned char *h, const unsigned char *in,$/;"	f
crypto_pkt	daemon/cryptopkt.c	/^struct crypto_pkt {$/;"	s	file:
crypto_pwhash	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash(unsigned char * const out, unsigned long long outlen,$/;"	f
crypto_pwhash_ALG_ARGON2I13	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	16;"	d
crypto_pwhash_ALG_DEFAULT	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	20;"	d
crypto_pwhash_H	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	2;"	d
crypto_pwhash_MEMLIMIT_INTERACTIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	40;"	d
crypto_pwhash_MEMLIMIT_MODERATE	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	48;"	d
crypto_pwhash_MEMLIMIT_SENSITIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	56;"	d
crypto_pwhash_OPSLIMIT_INTERACTIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	36;"	d
crypto_pwhash_OPSLIMIT_MODERATE	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	44;"	d
crypto_pwhash_OPSLIMIT_SENSITIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	52;"	d
crypto_pwhash_PRIMITIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	79;"	d
crypto_pwhash_SALTBYTES	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	24;"	d
crypto_pwhash_STRBYTES	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	28;"	d
crypto_pwhash_STRPREFIX	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	32;"	d
crypto_pwhash_alg_argon2i13	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_alg_argon2i13(void)$/;"	f
crypto_pwhash_alg_default	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_alg_default(void)$/;"	f
crypto_pwhash_argon2i	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i(unsigned char * const out,$/;"	f
crypto_pwhash_argon2i_ALG_ARGON2I13	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	15;"	d
crypto_pwhash_argon2i_H	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	2;"	d
crypto_pwhash_argon2i_MEMLIMIT_INTERACTIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	35;"	d
crypto_pwhash_argon2i_MEMLIMIT_MODERATE	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	43;"	d
crypto_pwhash_argon2i_MEMLIMIT_SENSITIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	51;"	d
crypto_pwhash_argon2i_OPSLIMIT_INTERACTIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	31;"	d
crypto_pwhash_argon2i_OPSLIMIT_MODERATE	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	39;"	d
crypto_pwhash_argon2i_OPSLIMIT_SENSITIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	47;"	d
crypto_pwhash_argon2i_SALTBYTES	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	19;"	d
crypto_pwhash_argon2i_STRBYTES	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	23;"	d
crypto_pwhash_argon2i_STRPREFIX	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	27;"	d
crypto_pwhash_argon2i_alg_argon2i13	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_alg_argon2i13(void)$/;"	f
crypto_pwhash_argon2i_memlimit_interactive	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_memlimit_interactive(void)$/;"	f
crypto_pwhash_argon2i_memlimit_moderate	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_memlimit_moderate(void)$/;"	f
crypto_pwhash_argon2i_memlimit_sensitive	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_memlimit_sensitive(void)$/;"	f
crypto_pwhash_argon2i_opslimit_interactive	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_opslimit_interactive(void)$/;"	f
crypto_pwhash_argon2i_opslimit_moderate	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_opslimit_moderate(void)$/;"	f
crypto_pwhash_argon2i_opslimit_sensitive	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_opslimit_sensitive(void)$/;"	f
crypto_pwhash_argon2i_saltbytes	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_saltbytes(void)$/;"	f
crypto_pwhash_argon2i_str	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_str(char out[crypto_pwhash_argon2i_STRBYTES],$/;"	f
crypto_pwhash_argon2i_str_verify	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_str_verify(const char str[crypto_pwhash_argon2i_STRBYTES],$/;"	f
crypto_pwhash_argon2i_strbytes	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_strbytes(void)$/;"	f
crypto_pwhash_argon2i_strprefix	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_strprefix(void)$/;"	f
crypto_pwhash_memlimit_interactive	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_memlimit_interactive(void)$/;"	f
crypto_pwhash_memlimit_moderate	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_memlimit_moderate(void)$/;"	f
crypto_pwhash_memlimit_sensitive	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_memlimit_sensitive(void)$/;"	f
crypto_pwhash_opslimit_interactive	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_opslimit_interactive(void)$/;"	f
crypto_pwhash_opslimit_moderate	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_opslimit_moderate(void)$/;"	f
crypto_pwhash_opslimit_sensitive	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_opslimit_sensitive(void)$/;"	f
crypto_pwhash_primitive	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_primitive(void) {$/;"	f
crypto_pwhash_saltbytes	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_saltbytes(void)$/;"	f
crypto_pwhash_scryptsalsa208sha256	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^crypto_pwhash_scryptsalsa208sha256(unsigned char * const out,$/;"	f
crypto_pwhash_scryptsalsa208sha256_H	libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h	2;"	d
crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_INTERACTIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h	32;"	d
crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_SENSITIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h	40;"	d
crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_INTERACTIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h	28;"	d
crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_SENSITIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h	36;"	d
crypto_pwhash_scryptsalsa208sha256_SALTBYTES	libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h	16;"	d
crypto_pwhash_scryptsalsa208sha256_STRBYTES	libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h	20;"	d
crypto_pwhash_scryptsalsa208sha256_STRHASHBYTES	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	47;"	d
crypto_pwhash_scryptsalsa208sha256_STRHASHBYTES_ENCODED	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	48;"	d
crypto_pwhash_scryptsalsa208sha256_STRPREFIX	libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h	24;"	d
crypto_pwhash_scryptsalsa208sha256_STRPREFIXBYTES	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	43;"	d
crypto_pwhash_scryptsalsa208sha256_STRSALTBYTES	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	45;"	d
crypto_pwhash_scryptsalsa208sha256_STRSALTBYTES_ENCODED	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	46;"	d
crypto_pwhash_scryptsalsa208sha256_STRSETTINGBYTES	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	44;"	d
crypto_pwhash_scryptsalsa208sha256_ll	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c	/^crypto_pwhash_scryptsalsa208sha256_ll(const uint8_t * passwd, size_t passwdlen,$/;"	f
crypto_pwhash_scryptsalsa208sha256_memlimit_interactive	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^crypto_pwhash_scryptsalsa208sha256_memlimit_interactive(void)$/;"	f
crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive(void)$/;"	f
crypto_pwhash_scryptsalsa208sha256_opslimit_interactive	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^crypto_pwhash_scryptsalsa208sha256_opslimit_interactive(void)$/;"	f
crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive(void)$/;"	f
crypto_pwhash_scryptsalsa208sha256_saltbytes	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^crypto_pwhash_scryptsalsa208sha256_saltbytes(void)$/;"	f
crypto_pwhash_scryptsalsa208sha256_str	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^crypto_pwhash_scryptsalsa208sha256_str(char out[crypto_pwhash_scryptsalsa208sha256_STRBYTES],$/;"	f
crypto_pwhash_scryptsalsa208sha256_str_verify	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^crypto_pwhash_scryptsalsa208sha256_str_verify(const char str[crypto_pwhash_scryptsalsa208sha256_STRBYTES],$/;"	f
crypto_pwhash_scryptsalsa208sha256_strbytes	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^crypto_pwhash_scryptsalsa208sha256_strbytes(void)$/;"	f
crypto_pwhash_scryptsalsa208sha256_strprefix	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^crypto_pwhash_scryptsalsa208sha256_strprefix(void)$/;"	f
crypto_pwhash_str	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_str(char out[crypto_pwhash_STRBYTES],$/;"	f
crypto_pwhash_str_verify	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],$/;"	f
crypto_pwhash_strbytes	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_strbytes(void)$/;"	f
crypto_pwhash_strprefix	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_strprefix(void)$/;"	f
crypto_scalarmult	libsodium/src/libsodium/crypto_scalarmult/crypto_scalarmult.c	/^crypto_scalarmult(unsigned char *q, const unsigned char *n,$/;"	f
crypto_scalarmult_BYTES	libsodium/src/libsodium/include/sodium/crypto_scalarmult.h	13;"	d
crypto_scalarmult_H	libsodium/src/libsodium/include/sodium/crypto_scalarmult.h	2;"	d
crypto_scalarmult_PRIMITIVE	libsodium/src/libsodium/include/sodium/crypto_scalarmult.h	21;"	d
crypto_scalarmult_SCALARBYTES	libsodium/src/libsodium/include/sodium/crypto_scalarmult.h	17;"	d
crypto_scalarmult_base	libsodium/src/libsodium/crypto_scalarmult/crypto_scalarmult.c	/^crypto_scalarmult_base(unsigned char *q, const unsigned char *n)$/;"	f
crypto_scalarmult_bytes	libsodium/src/libsodium/crypto_scalarmult/crypto_scalarmult.c	/^crypto_scalarmult_bytes(void)$/;"	f
crypto_scalarmult_curve25519	libsodium/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.c	/^crypto_scalarmult_curve25519(unsigned char *q, const unsigned char *n,$/;"	f
crypto_scalarmult_curve25519_BYTES	libsodium/src/libsodium/include/sodium/crypto_scalarmult_curve25519.h	12;"	d
crypto_scalarmult_curve25519_H	libsodium/src/libsodium/include/sodium/crypto_scalarmult_curve25519.h	2;"	d
crypto_scalarmult_curve25519_SCALARBYTES	libsodium/src/libsodium/include/sodium/crypto_scalarmult_curve25519.h	16;"	d
crypto_scalarmult_curve25519_base	libsodium/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.c	/^crypto_scalarmult_curve25519_base(unsigned char *q, const unsigned char *n)$/;"	f
crypto_scalarmult_curve25519_bytes	libsodium/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.c	/^crypto_scalarmult_curve25519_bytes(void)$/;"	f
crypto_scalarmult_curve25519_donna_c64	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^crypto_scalarmult_curve25519_donna_c64(unsigned char *mypublic,$/;"	f	file:
crypto_scalarmult_curve25519_donna_c64_base	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^crypto_scalarmult_curve25519_donna_c64_base(unsigned char *q,$/;"	f	file:
crypto_scalarmult_curve25519_donna_c64_implementation	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^crypto_scalarmult_curve25519_donna_c64_implementation = {$/;"	v	typeref:struct:crypto_scalarmult_curve25519_implementation
crypto_scalarmult_curve25519_implementation	libsodium/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.h	/^typedef struct crypto_scalarmult_curve25519_implementation {$/;"	s
crypto_scalarmult_curve25519_implementation	libsodium/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.h	/^} crypto_scalarmult_curve25519_implementation;$/;"	t	typeref:struct:crypto_scalarmult_curve25519_implementation
crypto_scalarmult_curve25519_ref10	libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/x25519_ref10.c	/^crypto_scalarmult_curve25519_ref10(unsigned char *q,$/;"	f	file:
crypto_scalarmult_curve25519_ref10_base	libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/x25519_ref10.c	/^crypto_scalarmult_curve25519_ref10_base(unsigned char *q,$/;"	f	file:
crypto_scalarmult_curve25519_ref10_implementation	libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/x25519_ref10.c	/^crypto_scalarmult_curve25519_ref10_implementation = {$/;"	v	typeref:struct:crypto_scalarmult_curve25519_implementation
crypto_scalarmult_curve25519_sandy2x	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c	/^crypto_scalarmult_curve25519_sandy2x(unsigned char *q, const unsigned char *n,$/;"	f	file:
crypto_scalarmult_curve25519_sandy2x_base	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c	/^crypto_scalarmult_curve25519_sandy2x_base(unsigned char *q,$/;"	f	file:
crypto_scalarmult_curve25519_sandy2x_implementation	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c	/^crypto_scalarmult_curve25519_sandy2x_implementation = {$/;"	v	typeref:struct:crypto_scalarmult_curve25519_implementation
crypto_scalarmult_curve25519_scalarbytes	libsodium/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.c	/^crypto_scalarmult_curve25519_scalarbytes(void)$/;"	f
crypto_scalarmult_primitive	libsodium/src/libsodium/crypto_scalarmult/crypto_scalarmult.c	/^crypto_scalarmult_primitive(void)$/;"	f
crypto_scalarmult_scalarbytes	libsodium/src/libsodium/crypto_scalarmult/crypto_scalarmult.c	/^crypto_scalarmult_scalarbytes(void)$/;"	f
crypto_scrypt_H	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	31;"	d
crypto_secretbox	libsodium/src/libsodium/crypto_secretbox/crypto_secretbox.c	/^crypto_secretbox(unsigned char *c, const unsigned char *m,$/;"	f
crypto_secretbox_BOXZEROBYTES	libsodium/src/libsodium/include/sodium/crypto_secretbox.h	65;"	d
crypto_secretbox_H	libsodium/src/libsodium/include/sodium/crypto_secretbox.h	2;"	d
crypto_secretbox_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_secretbox.h	16;"	d
crypto_secretbox_MACBYTES	libsodium/src/libsodium/include/sodium/crypto_secretbox.h	24;"	d
crypto_secretbox_NONCEBYTES	libsodium/src/libsodium/include/sodium/crypto_secretbox.h	20;"	d
crypto_secretbox_PRIMITIVE	libsodium/src/libsodium/include/sodium/crypto_secretbox.h	28;"	d
crypto_secretbox_ZEROBYTES	libsodium/src/libsodium/include/sodium/crypto_secretbox.h	61;"	d
crypto_secretbox_boxzerobytes	libsodium/src/libsodium/crypto_secretbox/crypto_secretbox.c	/^crypto_secretbox_boxzerobytes(void)$/;"	f
crypto_secretbox_detached	libsodium/src/libsodium/crypto_secretbox/crypto_secretbox_easy.c	/^crypto_secretbox_detached(unsigned char *c, unsigned char *mac,$/;"	f
crypto_secretbox_easy	libsodium/src/libsodium/crypto_secretbox/crypto_secretbox_easy.c	/^crypto_secretbox_easy(unsigned char *c, const unsigned char *m,$/;"	f
crypto_secretbox_keybytes	libsodium/src/libsodium/crypto_secretbox/crypto_secretbox.c	/^crypto_secretbox_keybytes(void)$/;"	f
crypto_secretbox_macbytes	libsodium/src/libsodium/crypto_secretbox/crypto_secretbox.c	/^crypto_secretbox_macbytes(void)$/;"	f
crypto_secretbox_noncebytes	libsodium/src/libsodium/crypto_secretbox/crypto_secretbox.c	/^crypto_secretbox_noncebytes(void)$/;"	f
crypto_secretbox_open	libsodium/src/libsodium/crypto_secretbox/crypto_secretbox.c	/^crypto_secretbox_open(unsigned char *m, const unsigned char *c,$/;"	f
crypto_secretbox_open_detached	libsodium/src/libsodium/crypto_secretbox/crypto_secretbox_easy.c	/^crypto_secretbox_open_detached(unsigned char *m, const unsigned char *c,$/;"	f
crypto_secretbox_open_easy	libsodium/src/libsodium/crypto_secretbox/crypto_secretbox_easy.c	/^crypto_secretbox_open_easy(unsigned char *m, const unsigned char *c,$/;"	f
crypto_secretbox_primitive	libsodium/src/libsodium/crypto_secretbox/crypto_secretbox.c	/^crypto_secretbox_primitive(void)$/;"	f
crypto_secretbox_xsalsa20poly1305	libsodium/src/libsodium/crypto_secretbox/xsalsa20poly1305/ref/box_xsalsa20poly1305.c	/^int crypto_secretbox_xsalsa20poly1305($/;"	f
crypto_secretbox_xsalsa20poly1305_BOXZEROBYTES	libsodium/src/libsodium/include/sodium/crypto_secretbox_xsalsa20poly1305.h	26;"	d
crypto_secretbox_xsalsa20poly1305_H	libsodium/src/libsodium/include/sodium/crypto_secretbox_xsalsa20poly1305.h	2;"	d
crypto_secretbox_xsalsa20poly1305_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_secretbox_xsalsa20poly1305.h	14;"	d
crypto_secretbox_xsalsa20poly1305_MACBYTES	libsodium/src/libsodium/include/sodium/crypto_secretbox_xsalsa20poly1305.h	22;"	d
crypto_secretbox_xsalsa20poly1305_NONCEBYTES	libsodium/src/libsodium/include/sodium/crypto_secretbox_xsalsa20poly1305.h	18;"	d
crypto_secretbox_xsalsa20poly1305_ZEROBYTES	libsodium/src/libsodium/include/sodium/crypto_secretbox_xsalsa20poly1305.h	30;"	d
crypto_secretbox_xsalsa20poly1305_boxzerobytes	libsodium/src/libsodium/crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305_api.c	/^crypto_secretbox_xsalsa20poly1305_boxzerobytes(void) {$/;"	f
crypto_secretbox_xsalsa20poly1305_keybytes	libsodium/src/libsodium/crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305_api.c	/^crypto_secretbox_xsalsa20poly1305_keybytes(void) {$/;"	f
crypto_secretbox_xsalsa20poly1305_macbytes	libsodium/src/libsodium/crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305_api.c	/^crypto_secretbox_xsalsa20poly1305_macbytes(void) {$/;"	f
crypto_secretbox_xsalsa20poly1305_noncebytes	libsodium/src/libsodium/crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305_api.c	/^crypto_secretbox_xsalsa20poly1305_noncebytes(void) {$/;"	f
crypto_secretbox_xsalsa20poly1305_open	libsodium/src/libsodium/crypto_secretbox/xsalsa20poly1305/ref/box_xsalsa20poly1305.c	/^int crypto_secretbox_xsalsa20poly1305_open($/;"	f
crypto_secretbox_xsalsa20poly1305_zerobytes	libsodium/src/libsodium/crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305_api.c	/^crypto_secretbox_xsalsa20poly1305_zerobytes(void) {$/;"	f
crypto_secretbox_zerobytes	libsodium/src/libsodium/crypto_secretbox/crypto_secretbox.c	/^crypto_secretbox_zerobytes(void)$/;"	f
crypto_shorthash	libsodium/src/libsodium/crypto_shorthash/crypto_shorthash.c	/^crypto_shorthash(unsigned char *out, const unsigned char *in,$/;"	f
crypto_shorthash_BYTES	libsodium/src/libsodium/include/sodium/crypto_shorthash.h	16;"	d
crypto_shorthash_H	libsodium/src/libsodium/include/sodium/crypto_shorthash.h	2;"	d
crypto_shorthash_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_shorthash.h	20;"	d
crypto_shorthash_PRIMITIVE	libsodium/src/libsodium/include/sodium/crypto_shorthash.h	24;"	d
crypto_shorthash_bytes	libsodium/src/libsodium/crypto_shorthash/crypto_shorthash.c	/^crypto_shorthash_bytes(void)$/;"	f
crypto_shorthash_keybytes	libsodium/src/libsodium/crypto_shorthash/crypto_shorthash.c	/^crypto_shorthash_keybytes(void)$/;"	f
crypto_shorthash_primitive	libsodium/src/libsodium/crypto_shorthash/crypto_shorthash.c	/^crypto_shorthash_primitive(void)$/;"	f
crypto_shorthash_siphash24	libsodium/src/libsodium/crypto_shorthash/siphash24/ref/shorthash_siphash24.c	/^int crypto_shorthash_siphash24(unsigned char *out, const unsigned char *in,$/;"	f
crypto_shorthash_siphash24_BYTES	libsodium/src/libsodium/include/sodium/crypto_shorthash_siphash24.h	14;"	d
crypto_shorthash_siphash24_H	libsodium/src/libsodium/include/sodium/crypto_shorthash_siphash24.h	2;"	d
crypto_shorthash_siphash24_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_shorthash_siphash24.h	18;"	d
crypto_shorthash_siphash24_bytes	libsodium/src/libsodium/crypto_shorthash/siphash24/shorthash_siphash24_api.c	/^crypto_shorthash_siphash24_bytes(void) {$/;"	f
crypto_shorthash_siphash24_keybytes	libsodium/src/libsodium/crypto_shorthash/siphash24/shorthash_siphash24_api.c	/^crypto_shorthash_siphash24_keybytes(void) {$/;"	f
crypto_sign	libsodium/src/libsodium/crypto_sign/crypto_sign.c	/^crypto_sign(unsigned char *sm, unsigned long long *smlen_p,$/;"	f
crypto_sign_BYTES	libsodium/src/libsodium/include/sodium/crypto_sign.h	23;"	d
crypto_sign_H	libsodium/src/libsodium/include/sodium/crypto_sign.h	2;"	d
crypto_sign_PRIMITIVE	libsodium/src/libsodium/include/sodium/crypto_sign.h	39;"	d
crypto_sign_PUBLICKEYBYTES	libsodium/src/libsodium/include/sodium/crypto_sign.h	31;"	d
crypto_sign_SECRETKEYBYTES	libsodium/src/libsodium/include/sodium/crypto_sign.h	35;"	d
crypto_sign_SEEDBYTES	libsodium/src/libsodium/include/sodium/crypto_sign.h	27;"	d
crypto_sign_bytes	libsodium/src/libsodium/crypto_sign/crypto_sign.c	/^crypto_sign_bytes(void)$/;"	f
crypto_sign_check_S_lt_L	libsodium/src/libsodium/crypto_sign/ed25519/ref10/open.c	/^crypto_sign_check_S_lt_L(const unsigned char *S)$/;"	f	file:
crypto_sign_detached	libsodium/src/libsodium/crypto_sign/crypto_sign.c	/^crypto_sign_detached(unsigned char *sig, unsigned long long *siglen_p,$/;"	f
crypto_sign_ed25519	libsodium/src/libsodium/crypto_sign/ed25519/ref10/sign.c	/^crypto_sign_ed25519(unsigned char *sm, unsigned long long *smlen_p,$/;"	f
crypto_sign_ed25519_BYTES	libsodium/src/libsodium/include/sodium/crypto_sign_ed25519.h	14;"	d
crypto_sign_ed25519_H	libsodium/src/libsodium/include/sodium/crypto_sign_ed25519.h	2;"	d
crypto_sign_ed25519_PUBLICKEYBYTES	libsodium/src/libsodium/include/sodium/crypto_sign_ed25519.h	22;"	d
crypto_sign_ed25519_SECRETKEYBYTES	libsodium/src/libsodium/include/sodium/crypto_sign_ed25519.h	26;"	d
crypto_sign_ed25519_SEEDBYTES	libsodium/src/libsodium/include/sodium/crypto_sign_ed25519.h	18;"	d
crypto_sign_ed25519_bytes	libsodium/src/libsodium/crypto_sign/ed25519/sign_ed25519_api.c	/^crypto_sign_ed25519_bytes(void) {$/;"	f
crypto_sign_ed25519_detached	libsodium/src/libsodium/crypto_sign/ed25519/ref10/sign.c	/^crypto_sign_ed25519_detached(unsigned char *sig, unsigned long long *siglen_p,$/;"	f
crypto_sign_ed25519_keypair	libsodium/src/libsodium/crypto_sign/ed25519/ref10/keypair.c	/^int crypto_sign_ed25519_keypair(unsigned char *pk, unsigned char *sk)$/;"	f
crypto_sign_ed25519_open	libsodium/src/libsodium/crypto_sign/ed25519/ref10/open.c	/^crypto_sign_ed25519_open(unsigned char *m, unsigned long long *mlen_p,$/;"	f
crypto_sign_ed25519_pk_to_curve25519	libsodium/src/libsodium/crypto_sign/ed25519/ref10/keypair.c	/^int crypto_sign_ed25519_pk_to_curve25519(unsigned char *curve25519_pk,$/;"	f
crypto_sign_ed25519_publickeybytes	libsodium/src/libsodium/crypto_sign/ed25519/sign_ed25519_api.c	/^crypto_sign_ed25519_publickeybytes(void) {$/;"	f
crypto_sign_ed25519_secretkeybytes	libsodium/src/libsodium/crypto_sign/ed25519/sign_ed25519_api.c	/^crypto_sign_ed25519_secretkeybytes(void) {$/;"	f
crypto_sign_ed25519_seed_keypair	libsodium/src/libsodium/crypto_sign/ed25519/ref10/keypair.c	/^int crypto_sign_ed25519_seed_keypair(unsigned char *pk, unsigned char *sk,$/;"	f
crypto_sign_ed25519_seedbytes	libsodium/src/libsodium/crypto_sign/ed25519/sign_ed25519_api.c	/^crypto_sign_ed25519_seedbytes(void) {$/;"	f
crypto_sign_ed25519_sk_to_curve25519	libsodium/src/libsodium/crypto_sign/ed25519/ref10/keypair.c	/^int crypto_sign_ed25519_sk_to_curve25519(unsigned char *curve25519_sk,$/;"	f
crypto_sign_ed25519_sk_to_pk	libsodium/src/libsodium/crypto_sign/ed25519/sign_ed25519_api.c	/^crypto_sign_ed25519_sk_to_pk(unsigned char *pk, const unsigned char *sk)$/;"	f
crypto_sign_ed25519_sk_to_seed	libsodium/src/libsodium/crypto_sign/ed25519/sign_ed25519_api.c	/^crypto_sign_ed25519_sk_to_seed(unsigned char *seed, const unsigned char *sk)$/;"	f
crypto_sign_ed25519_verify_detached	libsodium/src/libsodium/crypto_sign/ed25519/ref10/open.c	/^crypto_sign_ed25519_verify_detached(const unsigned char *sig,$/;"	f
crypto_sign_edwards25519sha512batch	libsodium/src/libsodium/crypto_sign/ed25519/ref10/obsolete.c	/^int crypto_sign_edwards25519sha512batch(unsigned char *sm,$/;"	f
crypto_sign_edwards25519sha512batch_BYTES	libsodium/src/libsodium/include/sodium/crypto_sign_edwards25519sha512batch.h	25;"	d
crypto_sign_edwards25519sha512batch_H	libsodium/src/libsodium/include/sodium/crypto_sign_edwards25519sha512batch.h	2;"	d
crypto_sign_edwards25519sha512batch_PUBLICKEYBYTES	libsodium/src/libsodium/include/sodium/crypto_sign_edwards25519sha512batch.h	26;"	d
crypto_sign_edwards25519sha512batch_SECRETKEYBYTES	libsodium/src/libsodium/include/sodium/crypto_sign_edwards25519sha512batch.h	27;"	d
crypto_sign_edwards25519sha512batch_keypair	libsodium/src/libsodium/crypto_sign/ed25519/ref10/obsolete.c	/^int crypto_sign_edwards25519sha512batch_keypair(unsigned char *pk,$/;"	f
crypto_sign_edwards25519sha512batch_open	libsodium/src/libsodium/crypto_sign/ed25519/ref10/obsolete.c	/^int crypto_sign_edwards25519sha512batch_open(unsigned char *m,$/;"	f
crypto_sign_keypair	libsodium/src/libsodium/crypto_sign/crypto_sign.c	/^crypto_sign_keypair(unsigned char *pk, unsigned char *sk)$/;"	f
crypto_sign_open	libsodium/src/libsodium/crypto_sign/crypto_sign.c	/^crypto_sign_open(unsigned char *m, unsigned long long *mlen_p,$/;"	f
crypto_sign_primitive	libsodium/src/libsodium/crypto_sign/crypto_sign.c	/^crypto_sign_primitive(void)$/;"	f
crypto_sign_publickeybytes	libsodium/src/libsodium/crypto_sign/crypto_sign.c	/^crypto_sign_publickeybytes(void)$/;"	f
crypto_sign_secretkeybytes	libsodium/src/libsodium/crypto_sign/crypto_sign.c	/^crypto_sign_secretkeybytes(void)$/;"	f
crypto_sign_seed_keypair	libsodium/src/libsodium/crypto_sign/crypto_sign.c	/^crypto_sign_seed_keypair(unsigned char *pk, unsigned char *sk,$/;"	f
crypto_sign_seedbytes	libsodium/src/libsodium/crypto_sign/crypto_sign.c	/^crypto_sign_seedbytes(void)$/;"	f
crypto_sign_verify_detached	libsodium/src/libsodium/crypto_sign/crypto_sign.c	/^crypto_sign_verify_detached(const unsigned char *sig, const unsigned char *m,$/;"	f
crypto_state	lightningd/cryptomsg.c	/^struct crypto_state *crypto_state(struct peer *peer,$/;"	f
crypto_state	lightningd/cryptomsg.c	/^struct crypto_state {$/;"	s	file:
crypto_stream	libsodium/src/libsodium/crypto_stream/crypto_stream.c	/^crypto_stream(unsigned char *c, unsigned long long clen,$/;"	f
crypto_stream_H	libsodium/src/libsodium/include/sodium/crypto_stream.h	2;"	d
crypto_stream_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_stream.h	24;"	d
crypto_stream_NONCEBYTES	libsodium/src/libsodium/include/sodium/crypto_stream.h	28;"	d
crypto_stream_PRIMITIVE	libsodium/src/libsodium/include/sodium/crypto_stream.h	32;"	d
crypto_stream_aes128ctr	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/stream_aes128ctr.c	/^int crypto_stream_aes128ctr($/;"	f
crypto_stream_aes128ctr_BEFORENMBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_aes128ctr.h	30;"	d
crypto_stream_aes128ctr_H	libsodium/src/libsodium/include/sodium/crypto_stream_aes128ctr.h	2;"	d
crypto_stream_aes128ctr_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_aes128ctr.h	22;"	d
crypto_stream_aes128ctr_NONCEBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_aes128ctr.h	26;"	d
crypto_stream_aes128ctr_afternm	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/afternm_aes128ctr.c	/^int crypto_stream_aes128ctr_afternm(unsigned char *out, unsigned long long len, const unsigned char *nonce, const unsigned char *c)$/;"	f
crypto_stream_aes128ctr_beforenm	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/beforenm_aes128ctr.c	/^int crypto_stream_aes128ctr_beforenm(unsigned char *c, const unsigned char *k)$/;"	f
crypto_stream_aes128ctr_beforenmbytes	libsodium/src/libsodium/crypto_stream/aes128ctr/stream_aes128ctr_api.c	/^crypto_stream_aes128ctr_beforenmbytes(void) {$/;"	f
crypto_stream_aes128ctr_keybytes	libsodium/src/libsodium/crypto_stream/aes128ctr/stream_aes128ctr_api.c	/^crypto_stream_aes128ctr_keybytes(void) {$/;"	f
crypto_stream_aes128ctr_noncebytes	libsodium/src/libsodium/crypto_stream/aes128ctr/stream_aes128ctr_api.c	/^crypto_stream_aes128ctr_noncebytes(void) {$/;"	f
crypto_stream_aes128ctr_xor	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/stream_aes128ctr.c	/^int crypto_stream_aes128ctr_xor($/;"	f
crypto_stream_aes128ctr_xor_afternm	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/xor_afternm_aes128ctr.c	/^int crypto_stream_aes128ctr_xor_afternm(unsigned char *out, const unsigned char *in, unsigned long long len, const unsigned char *nonce, const unsigned char *c)$/;"	f
crypto_stream_chacha20	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c	/^crypto_stream_chacha20(unsigned char *c, unsigned long long clen,$/;"	f
crypto_stream_chacha20_H	libsodium/src/libsodium/include/sodium/crypto_stream_chacha20.h	2;"	d
crypto_stream_chacha20_IETF_NONCEBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_chacha20.h	50;"	d
crypto_stream_chacha20_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_chacha20.h	23;"	d
crypto_stream_chacha20_NONCEBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_chacha20.h	27;"	d
crypto_stream_chacha20_ietf	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c	/^crypto_stream_chacha20_ietf(unsigned char *c, unsigned long long clen,$/;"	f
crypto_stream_chacha20_ietf_noncebytes	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c	/^crypto_stream_chacha20_ietf_noncebytes(void) {$/;"	f
crypto_stream_chacha20_ietf_xor	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c	/^crypto_stream_chacha20_ietf_xor(unsigned char *c, const unsigned char *m,$/;"	f
crypto_stream_chacha20_ietf_xor_ic	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c	/^crypto_stream_chacha20_ietf_xor_ic(unsigned char *c, const unsigned char *m,$/;"	f
crypto_stream_chacha20_implementation	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.h	/^typedef struct crypto_stream_chacha20_implementation {$/;"	s
crypto_stream_chacha20_implementation	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.h	/^} crypto_stream_chacha20_implementation;$/;"	t	typeref:struct:crypto_stream_chacha20_implementation
crypto_stream_chacha20_keybytes	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c	/^crypto_stream_chacha20_keybytes(void) {$/;"	f
crypto_stream_chacha20_noncebytes	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c	/^crypto_stream_chacha20_noncebytes(void) {$/;"	f
crypto_stream_chacha20_ref_implementation	libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c	/^crypto_stream_chacha20_ref_implementation = {$/;"	v	typeref:struct:crypto_stream_chacha20_implementation
crypto_stream_chacha20_vec_implementation	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	/^crypto_stream_chacha20_vec_implementation = {$/;"	v	typeref:struct:crypto_stream_chacha20_implementation
crypto_stream_chacha20_xor	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c	/^crypto_stream_chacha20_xor(unsigned char *c, const unsigned char *m,$/;"	f
crypto_stream_chacha20_xor_ic	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c	/^crypto_stream_chacha20_xor_ic(unsigned char *c, const unsigned char *m,$/;"	f
crypto_stream_keybytes	libsodium/src/libsodium/crypto_stream/crypto_stream.c	/^crypto_stream_keybytes(void)$/;"	f
crypto_stream_noncebytes	libsodium/src/libsodium/crypto_stream/crypto_stream.c	/^crypto_stream_noncebytes(void)$/;"	f
crypto_stream_primitive	libsodium/src/libsodium/crypto_stream/crypto_stream.c	/^crypto_stream_primitive(void)$/;"	f
crypto_stream_salsa20	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^crypto_stream_salsa20:$/;"	l
crypto_stream_salsa20	libsodium/src/libsodium/crypto_stream/salsa20/ref/stream_salsa20_ref.c	/^int crypto_stream_salsa20($/;"	f
crypto_stream_salsa2012	libsodium/src/libsodium/crypto_stream/salsa2012/ref/stream_salsa2012.c	/^int crypto_stream_salsa2012($/;"	f
crypto_stream_salsa2012_H	libsodium/src/libsodium/include/sodium/crypto_stream_salsa2012.h	2;"	d
crypto_stream_salsa2012_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_salsa2012.h	22;"	d
crypto_stream_salsa2012_NONCEBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_salsa2012.h	26;"	d
crypto_stream_salsa2012_keybytes	libsodium/src/libsodium/crypto_stream/salsa2012/stream_salsa2012_api.c	/^crypto_stream_salsa2012_keybytes(void) {$/;"	f
crypto_stream_salsa2012_noncebytes	libsodium/src/libsodium/crypto_stream/salsa2012/stream_salsa2012_api.c	/^crypto_stream_salsa2012_noncebytes(void) {$/;"	f
crypto_stream_salsa2012_xor	libsodium/src/libsodium/crypto_stream/salsa2012/ref/xor_salsa2012.c	/^int crypto_stream_salsa2012_xor($/;"	f
crypto_stream_salsa208	libsodium/src/libsodium/crypto_stream/salsa208/ref/stream_salsa208.c	/^int crypto_stream_salsa208($/;"	f
crypto_stream_salsa208_H	libsodium/src/libsodium/include/sodium/crypto_stream_salsa208.h	2;"	d
crypto_stream_salsa208_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_salsa208.h	22;"	d
crypto_stream_salsa208_NONCEBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_salsa208.h	26;"	d
crypto_stream_salsa208_keybytes	libsodium/src/libsodium/crypto_stream/salsa208/stream_salsa208_api.c	/^crypto_stream_salsa208_keybytes(void) {$/;"	f
crypto_stream_salsa208_noncebytes	libsodium/src/libsodium/crypto_stream/salsa208/stream_salsa208_api.c	/^crypto_stream_salsa208_noncebytes(void) {$/;"	f
crypto_stream_salsa208_xor	libsodium/src/libsodium/crypto_stream/salsa208/ref/xor_salsa208.c	/^int crypto_stream_salsa208_xor($/;"	f
crypto_stream_salsa20_H	libsodium/src/libsodium/include/sodium/crypto_stream_salsa20.h	2;"	d
crypto_stream_salsa20_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_salsa20.h	23;"	d
crypto_stream_salsa20_NONCEBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_salsa20.h	27;"	d
crypto_stream_salsa20_keybytes	libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20_api.c	/^crypto_stream_salsa20_keybytes(void) {$/;"	f
crypto_stream_salsa20_noncebytes	libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20_api.c	/^crypto_stream_salsa20_noncebytes(void) {$/;"	f
crypto_stream_salsa20_xor	libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20_api.c	/^crypto_stream_salsa20_xor(unsigned char *c, const unsigned char *m,$/;"	f
crypto_stream_salsa20_xor_ic	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^crypto_stream_salsa20_xor_ic:$/;"	l
crypto_stream_salsa20_xor_ic	libsodium/src/libsodium/crypto_stream/salsa20/ref/xor_salsa20_ref.c	/^int crypto_stream_salsa20_xor_ic($/;"	f
crypto_stream_xor	libsodium/src/libsodium/crypto_stream/crypto_stream.c	/^crypto_stream_xor(unsigned char *c, const unsigned char *m,$/;"	f
crypto_stream_xsalsa20	libsodium/src/libsodium/crypto_stream/xsalsa20/ref/stream_xsalsa20.c	/^int crypto_stream_xsalsa20($/;"	f
crypto_stream_xsalsa20_H	libsodium/src/libsodium/include/sodium/crypto_stream_xsalsa20.h	2;"	d
crypto_stream_xsalsa20_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_xsalsa20.h	23;"	d
crypto_stream_xsalsa20_NONCEBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_xsalsa20.h	27;"	d
crypto_stream_xsalsa20_keybytes	libsodium/src/libsodium/crypto_stream/xsalsa20/stream_xsalsa20_api.c	/^crypto_stream_xsalsa20_keybytes(void) {$/;"	f
crypto_stream_xsalsa20_noncebytes	libsodium/src/libsodium/crypto_stream/xsalsa20/stream_xsalsa20_api.c	/^crypto_stream_xsalsa20_noncebytes(void) {$/;"	f
crypto_stream_xsalsa20_xor	libsodium/src/libsodium/crypto_stream/xsalsa20/ref/xor_xsalsa20.c	/^int crypto_stream_xsalsa20_xor($/;"	f
crypto_stream_xsalsa20_xor_ic	libsodium/src/libsodium/crypto_stream/xsalsa20/ref/xor_xsalsa20.c	/^int crypto_stream_xsalsa20_xor_ic($/;"	f
crypto_uint16	libsodium/src/libsodium/include/sodium/crypto_uint16.h	/^typedef uint16_t crypto_uint16;$/;"	t
crypto_uint16_H	libsodium/src/libsodium/include/sodium/crypto_uint16.h	2;"	d
crypto_uint32	libsodium/src/libsodium/include/sodium/crypto_uint32.h	/^typedef uint32_t crypto_uint32;$/;"	t
crypto_uint32_H	libsodium/src/libsodium/include/sodium/crypto_uint32.h	2;"	d
crypto_uint64	libsodium/src/libsodium/include/sodium/crypto_uint64.h	/^typedef uint64_t crypto_uint64;$/;"	t
crypto_uint64_H	libsodium/src/libsodium/include/sodium/crypto_uint64.h	2;"	d
crypto_uint8	libsodium/src/libsodium/include/sodium/crypto_uint8.h	/^typedef uint8_t crypto_uint8;$/;"	t
crypto_uint8_H	libsodium/src/libsodium/include/sodium/crypto_uint8.h	2;"	d
crypto_verify_16	libsodium/src/libsodium/crypto_verify/16/ref/verify_16.c	/^crypto_verify_16(const unsigned char *x, const unsigned char *y)$/;"	f
crypto_verify_16_BYTES	libsodium/src/libsodium/include/sodium/crypto_verify_16.h	11;"	d
crypto_verify_16_H	libsodium/src/libsodium/include/sodium/crypto_verify_16.h	2;"	d
crypto_verify_16_bytes	libsodium/src/libsodium/crypto_verify/16/verify_16_api.c	/^crypto_verify_16_bytes(void) {$/;"	f
crypto_verify_32	libsodium/src/libsodium/crypto_verify/32/ref/verify_32.c	/^crypto_verify_32(const unsigned char *x, const unsigned char *y)$/;"	f
crypto_verify_32_BYTES	libsodium/src/libsodium/include/sodium/crypto_verify_32.h	11;"	d
crypto_verify_32_H	libsodium/src/libsodium/include/sodium/crypto_verify_32.h	2;"	d
crypto_verify_32_bytes	libsodium/src/libsodium/crypto_verify/32/verify_32_api.c	/^crypto_verify_32_bytes(void) {$/;"	f
crypto_verify_64	libsodium/src/libsodium/crypto_verify/64/ref/verify_64.c	/^crypto_verify_64(const unsigned char *x, const unsigned char *y)$/;"	f
crypto_verify_64_BYTES	libsodium/src/libsodium/include/sodium/crypto_verify_64.h	11;"	d
crypto_verify_64_H	libsodium/src/libsodium/include/sodium/crypto_verify_64.h	2;"	d
crypto_verify_64_bytes	libsodium/src/libsodium/crypto_verify/64/verify_64_api.c	/^crypto_verify_64_bytes(void) {$/;"	f
cs	lightningd/gossip/gossip.c	/^	struct crypto_state *cs;$/;"	m	struct:peer	typeref:struct:peer::crypto_state	file:
cstate	daemon/peer.h	/^	struct channel_state *cstate;$/;"	m	struct:commit_info	typeref:struct:commit_info::channel_state
cstate_add_htlc	daemon/channel.c	/^bool cstate_add_htlc(struct channel_state *cstate, const struct htlc *htlc,$/;"	f
cstate_fail_htlc	daemon/channel.c	/^void cstate_fail_htlc(struct channel_state *cstate, const struct htlc *htlc)$/;"	f
cstate_fulfill_htlc	daemon/channel.c	/^void cstate_fulfill_htlc(struct channel_state *cstate, const struct htlc *htlc)$/;"	f
ctx	ccan/ccan/io/backend.h	/^	const tal_t *ctx;$/;"	m	struct:io_listener
ctx	ccan/ccan/order/order.h	/^	void *ctx;$/;"	m	struct:_total_order
ctx	ccan/ccan/tal/test/run-notifier.c	/^static char *ctx;$/;"	v	file:
ctx	secp256k1/src/bench_ecdh.c	/^    secp256k1_context *ctx;$/;"	m	struct:__anon21	file:
ctx	secp256k1/src/bench_recover.c	/^    secp256k1_context *ctx;$/;"	m	struct:__anon38	file:
ctx	secp256k1/src/bench_schnorr_verify.c	/^    secp256k1_context *ctx;$/;"	m	struct:__anon34	file:
ctx	secp256k1/src/bench_sign.c	/^    secp256k1_context* ctx;$/;"	m	struct:__anon36	file:
ctx	secp256k1/src/bench_verify.c	/^    secp256k1_context *ctx;$/;"	m	struct:__anon25	file:
ctx	secp256k1/src/tests.c	/^static secp256k1_context *ctx = NULL;$/;"	v	file:
ctx_t	ccan/ccan/order/test/compile_fail_2.c	/^typedef int ctx_t;$/;"	t	file:
ctx_t	ccan/ccan/order/test/compile_fail_2.c	/^typedef struct cmp_info ctx_t;$/;"	t	typeref:struct:cmp_info	file:
cur_commit	daemon/peer.h	/^	} cur_commit;$/;"	m	struct:peer	typeref:struct:peer::__anon48
current	daemon/jsonrpc.h	/^	struct command *current;$/;"	m	struct:json_connection	typeref:struct:json_connection::command
current_command	test/test_state_coverage.c	/^	enum state_input current_command;$/;"	m	struct:core_state	typeref:enum:core_state::state_input	file:
current_htlc	test/test_state_coverage.c	/^	struct htlc_progress current_htlc;$/;"	m	struct:peer	typeref:struct:peer::htlc_progress	file:
current_idata	test/test_state_coverage.c	/^	const union input *current_idata;$/;"	m	struct:peer	typeref:union:peer::input	file:
current_input	test/test_state_coverage.c	/^	enum state_input current_input;$/;"	m	struct:peer	typeref:enum:peer::state_input	file:
cursor	daemon/chaintopology.c	/^	size_t cursor;$/;"	m	struct:txs_to_broadcast	file:
curve25519_donna_c64_H	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.h	2;"	d
curve25519_ref10_H	libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/x25519_ref10.h	2;"	d
curve25519_sandy2x_H	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.h	2;"	d
d	ccan/ccan/alignof/test/run.c	/^	double d;$/;"	m	struct:lots_of_types	file:
d	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^static const fe d = {$/;"	v	file:
d	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	/^    uint64_t d[8];$/;"	m	union:__anon65
d	lightning.pb-c.h	/^  uint64_t d;$/;"	m	struct:_Preimage
d	lightning.pb-c.h	/^  uint64_t d;$/;"	m	struct:_Sha256Hash
d	secp256k1/src/scalar_4x64.h	/^    uint64_t d[4];$/;"	m	struct:__anon35
d	secp256k1/src/scalar_8x32.h	/^    uint32_t d[8];$/;"	m	struct:__anon16
d2	ccan/ccan/io/test/run-09-connect.c	/^static struct data *d2;$/;"	v	typeref:struct:data	file:
d2	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^static const fe d2 = {$/;"	v	file:
dROUNDS	ccan/ccan/crypto/siphash24/siphash24.c	13;"	d	file:
daemon	lightningd/gossip/gossip.c	/^	struct daemon *daemon;$/;"	m	struct:peer	typeref:struct:peer::daemon	file:
daemon	lightningd/gossip/gossip.c	/^struct daemon {$/;"	s	file:
daemon_dir	lightningd/lightningd.h	/^	const char *daemon_dir;$/;"	m	struct:lightningd
daemons	lightningd/lightningd.c	/^static const char *daemons[] = {$/;"	v	file:
damage_array	secp256k1/src/tests.c	/^static void damage_array(unsigned char *sig, size_t *len) {$/;"	f	file:
data	ccan/ccan/crypto/hmac_sha256/test/api-rfc4231.c	/^	const char *key, *data, *hmac;$/;"	m	struct:test	file:
data	ccan/ccan/htable/test/run-zero-hash-first-entry.c	/^struct data {$/;"	s	file:
data	ccan/ccan/io/test/run-02-read.c	/^struct data {$/;"	s	file:
data	ccan/ccan/io/test/run-03-readpartial.c	/^struct data {$/;"	s	file:
data	ccan/ccan/io/test/run-04-writepartial.c	/^struct data {$/;"	s	file:
data	ccan/ccan/io/test/run-05-write.c	/^struct data {$/;"	s	file:
data	ccan/ccan/io/test/run-06-idle.c	/^struct data {$/;"	s	file:
data	ccan/ccan/io/test/run-07-break.c	/^struct data {$/;"	s	file:
data	ccan/ccan/io/test/run-09-connect.c	/^struct data {$/;"	s	file:
data	ccan/ccan/io/test/run-12-bidir.c	/^struct data {$/;"	s	file:
data	ccan/ccan/io/test/run-14-duplex-both-read.c	/^struct data {$/;"	s	file:
data	ccan/ccan/io/test/run-15-timeout.c	/^struct data {$/;"	s	file:
data	ccan/ccan/io/test/run-16-duplex-test.c	/^struct data {$/;"	s	file:
data	ccan/ccan/io/test/run-19-always.c	/^struct data {$/;"	s	file:
data	daemon/cryptopkt.c	/^	u8 data[];$/;"	m	struct:crypto_pkt	file:
data	secp256k1/include/secp256k1.h	/^    unsigned char data[64];$/;"	m	struct:__anon14
data	secp256k1/include/secp256k1.h	/^    unsigned char data[64];$/;"	m	struct:__anon15
data	secp256k1/include/secp256k1_recovery.h	/^    unsigned char data[65];$/;"	m	struct:__anon13
data	secp256k1/src/bench_internal.c	/^    unsigned char data[64];$/;"	m	struct:__anon19	file:
data	secp256k1/src/num_gmp.h	/^    mp_limb_t data[2*NUM_LIMBS];$/;"	m	struct:__anon28
data	secp256k1/src/util.h	/^    const void* data;$/;"	m	struct:__anon20
data	wire/test/run-peer-wire.c	/^	u8 *data;$/;"	m	struct:msg_error	file:
database	test/test_protocol.c	/^struct database {$/;"	s	file:
datadir	libsodium/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	libsodium/dist-build/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	libsodium/msvc-scripts/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	libsodium/src/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	libsodium/src/libsodium/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	libsodium/src/libsodium/include/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	libsodium/test/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	libsodium/test/default/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	secp256k1/Makefile	/^datadir = ${datarootdir}$/;"	m
datarootdir	libsodium/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	libsodium/dist-build/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	libsodium/msvc-scripts/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	libsodium/src/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	libsodium/src/libsodium/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	libsodium/src/libsodium/include/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	libsodium/test/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	libsodium/test/default/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	secp256k1/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
db	daemon/db.c	/^struct db {$/;"	s	file:
db	daemon/lightningd.h	/^	struct db *db;$/;"	m	struct:lightningd_state	typeref:struct:lightningd_state::db
db	test/test_protocol.c	/^	struct database db;$/;"	m	struct:peer	typeref:struct:peer::database	file:
db_abort_transaction	daemon/db.c	/^void db_abort_transaction(struct peer *peer)$/;"	f
db_add_commit_map	daemon/db.c	/^void db_add_commit_map(struct peer *peer,$/;"	f
db_add_peer_address	daemon/db.c	/^bool db_add_peer_address(struct lightningd_state *dstate,$/;"	f
db_add_wallet_privkey	daemon/db.c	/^void db_add_wallet_privkey(struct lightningd_state *dstate,$/;"	f
db_begin_shutdown	daemon/db.c	/^void db_begin_shutdown(struct peer *peer)$/;"	f
db_check_version	daemon/db.c	/^static void db_check_version(struct lightningd_state *dstate)$/;"	f	file:
db_commit_transaction	daemon/db.c	/^const char *db_commit_transaction(struct peer *peer)$/;"	f
db_complete_pay_command	daemon/db.c	/^void db_complete_pay_command(struct lightningd_state *dstate,$/;"	f
db_create_peer	daemon/db.c	/^void db_create_peer(struct peer *peer)$/;"	f
db_exec	daemon/db.c	/^	db_exec(const char *caller,$/;"	f
db_forget_peer	daemon/db.c	/^void db_forget_peer(struct peer *peer)$/;"	f
db_htlc_failed	daemon/db.c	/^void db_htlc_failed(struct peer *peer, const struct htlc *htlc)$/;"	f
db_htlc_fulfilled	daemon/db.c	/^void db_htlc_fulfilled(struct peer *peer, const struct htlc *htlc)$/;"	f
db_init	daemon/db.c	/^void db_init(struct lightningd_state *dstate)$/;"	f
db_load	daemon/db.c	/^static void db_load(struct lightningd_state *dstate)$/;"	f	file:
db_load_addresses	daemon/db.c	/^static void db_load_addresses(struct lightningd_state *dstate)$/;"	f	file:
db_load_invoice	daemon/db.c	/^static void db_load_invoice(struct lightningd_state *dstate)$/;"	f	file:
db_load_pay	daemon/db.c	/^static void db_load_pay(struct lightningd_state *dstate)$/;"	f	file:
db_load_peers	daemon/db.c	/^static void db_load_peers(struct lightningd_state *dstate)$/;"	f	file:
db_load_wallet	daemon/db.c	/^static void db_load_wallet(struct lightningd_state *dstate)$/;"	f	file:
db_new_commit_info	daemon/db.c	/^void db_new_commit_info(struct peer *peer, enum side side,$/;"	f
db_new_feechange	daemon/db.c	/^void db_new_feechange(struct peer *peer, const struct feechange *feechange)$/;"	f
db_new_htlc	daemon/db.c	/^void db_new_htlc(struct peer *peer, const struct htlc *htlc)$/;"	f
db_new_htlc	daemon/test/run-maxfee.c	/^void db_new_htlc(struct peer *peer UNNEEDED, const struct htlc *htlc UNNEEDED)$/;"	f
db_new_invoice	daemon/db.c	/^bool db_new_invoice(struct lightningd_state *dstate,$/;"	f
db_new_pay_command	daemon/db.c	/^bool db_new_pay_command(struct lightningd_state *dstate,$/;"	f
db_recv_local_commit	test/test_protocol.c	/^static void db_recv_local_commit(struct database *db,$/;"	f	file:
db_recv_remote_revoke	test/test_protocol.c	/^static void db_recv_remote_revoke(struct database *db,$/;"	f	file:
db_remove_feechange	daemon/db.c	/^void db_remove_feechange(struct peer *peer, const struct feechange *feechange,$/;"	f
db_remove_invoice	daemon/db.c	/^bool db_remove_invoice(struct lightningd_state *dstate,$/;"	f
db_remove_their_prev_revocation_hash	daemon/db.c	/^void db_remove_their_prev_revocation_hash(struct peer *peer)$/;"	f
db_replace_pay_command	daemon/db.c	/^bool db_replace_pay_command(struct lightningd_state *dstate,$/;"	f
db_resolve_invoice	daemon/db.c	/^void db_resolve_invoice(struct lightningd_state *dstate,$/;"	f
db_save_shachain	daemon/db.c	/^void db_save_shachain(struct peer *peer)$/;"	f
db_send_local_revoke	test/test_protocol.c	/^static void db_send_local_revoke(struct database *db,$/;"	f	file:
db_send_remote_commit	test/test_protocol.c	/^static void db_send_remote_commit(struct peer *peer,$/;"	f	file:
db_set_anchor	daemon/db.c	/^void db_set_anchor(struct peer *peer)$/;"	f
db_set_our_closing_script	daemon/db.c	/^void db_set_our_closing_script(struct peer *peer)$/;"	f
db_set_their_closing_script	daemon/db.c	/^void db_set_their_closing_script(struct peer *peer)$/;"	f
db_set_visible_state	daemon/db.c	/^void db_set_visible_state(struct peer *peer)$/;"	f
db_start_transaction	daemon/db.c	/^void db_start_transaction(struct peer *peer)$/;"	f
db_update_feechange_state	daemon/db.c	/^void db_update_feechange_state(struct peer *peer,$/;"	f
db_update_htlc	test/test_protocol.c	/^static void db_update_htlc(struct database *db, const struct htlc *htlc)$/;"	f	file:
db_update_htlc_state	daemon/db.c	/^void db_update_htlc_state(struct peer *peer, const struct htlc *htlc,$/;"	f
db_update_htlc_state	daemon/test/run-maxfee.c	/^void db_update_htlc_state(struct peer *peer UNNEEDED, const struct htlc *htlc UNNEEDED,$/;"	f
db_update_next_revocation_hash	daemon/db.c	/^void db_update_next_revocation_hash(struct peer *peer)$/;"	f
db_update_our_closing	daemon/db.c	/^void db_update_our_closing(struct peer *peer)$/;"	f
db_update_state	daemon/db.c	/^void db_update_state(struct peer *peer)$/;"	f
db_update_their_closing	daemon/db.c	/^bool db_update_their_closing(struct peer *peer)$/;"	f
db_version_ignore	daemon/lightningd.h	/^	bool db_version_ignore;$/;"	m	struct:config
deadline	daemon/htlc.h	/^	u32 deadline;$/;"	m	struct:htlc
deadline_blocks	daemon/lightningd.h	/^	u32 deadline_blocks;$/;"	m	struct:config
debug_dump_peers	daemon/peer.c	/^void debug_dump_peers(struct lightningd_state *dstate)$/;"	f
debug_dump_peers	lightningd/lightningd.c	/^void debug_dump_peers(struct lightningd_state *dstate)$/;"	f
debug_tal	ccan/ccan/tal/tal.c	/^static struct tal_hdr *debug_tal(struct tal_hdr *tal)$/;"	f	file:
decode64_one	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c	/^decode64_one(uint32_t * dst, uint8_t src)$/;"	f	file:
decode64_uint32	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c	/^decode64_uint32(uint32_t * dst, uint32_t dstbits, const uint8_t * src)$/;"	f	file:
decode_decimal	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	/^static const char *decode_decimal(const char *str, unsigned long *v) {$/;"	f	file:
decode_string	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	/^int decode_string(argon2_context *ctx, const char *str, argon2_type type) {$/;"	f
decrypt	lightningd/handshake/handshake.c	/^static bool decrypt(const struct secret *k, u64 nonce,$/;"	f	file:
decrypt_body	daemon/cryptopkt.c	/^static Pkt *decrypt_body(const tal_t *ctx, struct io_data *iod, struct log *log)$/;"	f	file:
decrypt_header	daemon/cryptopkt.c	/^static bool decrypt_header(struct log *log, struct io_data *iod,$/;"	f	file:
decrypt_in_place	daemon/cryptopkt.c	/^static bool decrypt_in_place(void *data, size_t len,$/;"	f	file:
default_configdir	daemon/configdir.c	/^static char *default_configdir(const tal_t *ctx)$/;"	f	file:
default_error_callback	secp256k1/src/gen_context.c	/^static const secp256k1_callback default_error_callback = {$/;"	v	file:
default_error_callback	secp256k1/src/secp256k1.c	/^static const secp256k1_callback default_error_callback = {$/;"	v	file:
default_error_callback_fn	secp256k1/src/gen_context.c	/^static void default_error_callback_fn(const char* str, void* data) {$/;"	f	file:
default_error_callback_fn	secp256k1/src/secp256k1.c	/^static void default_error_callback_fn(const char* str, void* data) {$/;"	f	file:
default_fee_rate	daemon/lightningd.h	/^	u64 default_fee_rate;$/;"	m	struct:config
default_illegal_callback	secp256k1/src/secp256k1.c	/^static const secp256k1_callback default_illegal_callback = {$/;"	v	file:
default_illegal_callback_fn	secp256k1/src/secp256k1.c	/^static void default_illegal_callback_fn(const char* str, void* data) {$/;"	f	file:
defs	ccan/ccan/cdump/cdump.c	/^	struct cdump_definitions *defs;$/;"	m	struct:parse_state	typeref:struct:parse_state::cdump_definitions	file:
del_fd	ccan/ccan/io/poll.c	/^static void del_fd(struct fd *fd)$/;"	f	file:
del_notifier_property	ccan/ccan/tal/tal.c	/^static enum tal_notify_type del_notifier_property(struct tal_hdr *t,$/;"	f	file:
del_tree	ccan/ccan/tal/tal.c	/^static void del_tree(struct tal_hdr *t, const tal_t *orig, int saved_errno)$/;"	f	file:
del_vals	ccan/ccan/htable/test/run-type-int.c	/^static void del_vals(struct htable_obj *ht,$/;"	f	file:
del_vals	ccan/ccan/htable/test/run-type.c	/^static void del_vals(struct htable_obj *ht,$/;"	f	file:
del_vals	ccan/ccan/htable/test/run.c	/^static void del_vals(struct htable *ht,$/;"	f	file:
del_vals_bykey	ccan/ccan/htable/test/run-type-int.c	/^static void del_vals_bykey(struct htable_obj *ht,$/;"	f	file:
del_vals_bykey	ccan/ccan/htable/test/run-type.c	/^static void del_vals_bykey(struct htable_obj *ht,$/;"	f	file:
delay	daemon/routing.h	/^	u32 delay;$/;"	m	struct:node_connection
delay	lightning.pb-c.h	/^  Locktime *delay;$/;"	m	struct:_OpenChannel
delayed_payment_basepoint	wire/test/run-peer-wire.c	/^	struct pubkey delayed_payment_basepoint;$/;"	m	struct:msg_accept_channel	typeref:struct:msg_accept_channel::pubkey	file:
delayed_payment_basepoint	wire/test/run-peer-wire.c	/^	struct pubkey delayed_payment_basepoint;$/;"	m	struct:msg_open_channel	typeref:struct:msg_open_channel::pubkey	file:
deleted	ccan/ccan/htable/htable.h	/^	size_t elems, deleted, max, max_with_deleted;$/;"	m	struct:htable
delinearize_shachain	daemon/db.c	/^static bool delinearize_shachain(struct shachain *shachain,$/;"	f	file:
delinvoice_command	daemon/invoice.c	/^static const struct json_command delinvoice_command = {$/;"	v	typeref:struct:json_command	file:
depcomp	libsodium/src/libsodium/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/build-aux\/depcomp$/;"	m
depcomp	libsodium/test/default/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/build-aux\/depcomp$/;"	m
depcomp	secp256k1/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/build-aux\/depcomp$/;"	m
depends	ccan/tools/configurator/configurator.c	/^	const char *depends;$/;"	m	struct:test	file:
depth	daemon/watch.h	/^	unsigned int depth;$/;"	m	struct:txwatch
depth	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	/^  uint8_t  depth;          \/*  4 *\/$/;"	m	struct:blake2b_param_
depth	test/test_state_coverage.c	/^	unsigned int depth;$/;"	m	struct:trail	file:
derive	ccan/ccan/crypto/shachain/shachain.c	/^static void derive(shachain_index_t from, shachain_index_t to,$/;"	f	file:
derive_revocation_key	lightningd/key_derive.c	/^bool derive_revocation_key(const struct pubkey *basepoint,$/;"	f
derive_revocation_privkey	lightningd/key_derive.c	/^bool derive_revocation_privkey(const struct privkey *base_secret,$/;"	f
derive_simple_key	lightningd/key_derive.c	/^bool derive_simple_key(const struct pubkey *basepoint,$/;"	f
derive_simple_privkey	lightningd/key_derive.c	/^bool derive_simple_privkey(const struct privkey *base_secret,$/;"	f
desc	ccan/ccan/opt/opt.h	/^	const char *desc;$/;"	m	struct:opt_table
desc	test/test_protocol.c	/^	const char *desc;$/;"	m	struct:sent	file:
description	contrib/pylightning/setup.py	/^      description='Client library for lightningd',$/;"	v
description	daemon/jsonrpc.h	/^	const char *description;$/;"	m	struct:json_command
desired_commit_feerate	daemon/peer.c	/^static u64 desired_commit_feerate(struct lightningd_state *dstate)$/;"	f	file:
destroy	ccan/ccan/tal/tal.c	/^		void (*destroy)(tal_t *); \/* If NOTIFY_IS_DESTRUCTOR set *\/$/;"	m	union:notifier::__anon3	file:
destroy2	ccan/ccan/tal/tal.c	/^		void (*destroy2)(tal_t *, void *); \/* If NOTIFY_EXTRA_ARG *\/$/;"	m	union:notifier::__anon3	file:
destroy_child	ccan/ccan/tal/test/run-destructor.c	/^static void destroy_child(char *p)$/;"	f	file:
destroy_conn	ccan/ccan/io/poll.c	/^static void destroy_conn(struct io_conn *conn, bool close_fd)$/;"	f	file:
destroy_conn_close_fd	ccan/ccan/io/poll.c	/^static void destroy_conn_close_fd(struct io_conn *conn)$/;"	f	file:
destroy_connection	daemon/routing.c	/^static void destroy_connection(struct node_connection *nc)$/;"	f	file:
destroy_count	ccan/ccan/tal/test/run-destructor.c	/^static int destroy_count;$/;"	v	file:
destroy_dec	ccan/ccan/tal/test/run-destructor2.c	/^static void destroy_dec(char *p UNNEEDED, int *destroy_count)$/;"	f	file:
destroy_definitions	ccan/ccan/cdump/cdump.c	/^static void destroy_definitions(struct cdump_definitions *defs)$/;"	f	file:
destroy_errno	ccan/ccan/tal/test/run-free.c	/^static void destroy_errno(char *p UNNEEDED)$/;"	f	file:
destroy_inc	ccan/ccan/tal/test/run-destructor.c	/^static void destroy_inc(char *p UNNEEDED)$/;"	f	file:
destroy_inc	ccan/ccan/tal/test/run-destructor2.c	/^static void destroy_inc(char *p UNNEEDED, int *destroy_count)$/;"	f	file:
destroy_listener	ccan/ccan/io/poll.c	/^static void destroy_listener(struct io_listener *l)$/;"	f	file:
destroy_node	daemon/routing.c	/^static void destroy_node(struct node *node)$/;"	f	file:
destroy_opaque_blob	ccan/ccan/list/test/helper.c	/^void destroy_opaque_blob(struct opaque *blob)$/;"	f
destroy_outgoing_tx	daemon/chaintopology.c	/^static void destroy_outgoing_tx(struct outgoing_tx *otx)$/;"	f	file:
destroy_p	ccan/ccan/tal/test/run-allocfail.c	/^static void destroy_p(void *p UNNEEDED)$/;"	f	file:
destroy_p	ccan/ccan/tal/test/run-test-backend.c	/^static void destroy_p(void *p UNNEEDED)$/;"	f	file:
destroy_parent	ccan/ccan/tal/test/run-destructor.c	/^static void destroy_parent(char *p)$/;"	f	file:
destroy_peer	daemon/peer.c	/^static void destroy_peer(struct peer *peer)$/;"	f	file:
destroy_peer	lightningd/gossip/gossip.c	/^static void destroy_peer(struct peer *peer)$/;"	f	file:
destroy_peer	lightningd/peer_control.c	/^static void destroy_peer(struct peer *peer)$/;"	f	file:
destroy_subdaemon	lightningd/subdaemon.c	/^static void destroy_subdaemon(struct subdaemon *sd)$/;"	f	file:
destroy_txowatch	daemon/watch.c	/^static void destroy_txowatch(struct txowatch *w)$/;"	f	file:
destroy_txwatch	daemon/watch.c	/^static void destroy_txwatch(struct txwatch *w)$/;"	f	file:
destructor	ccan/ccan/tal/benchmark/samba-allocs.c	/^	bool destructor;$/;"	m	struct:node	file:
details	test/test_state_coverage.c	/^	struct fail_details *details;$/;"	m	struct:failpoint	typeref:struct:failpoint::fail_details	file:
dev_add_route	contrib/pylightning/lightning/lightning.py	/^    def dev_add_route(self, src, dst, base, var, delay, minblocks):$/;"	m	class:LightningRpc
dev_add_route	contrib/pylightning/lightning/lightning.py	/^    def dev_add_route(self, src, dst, base_fee, fee_rate, delay, minblocks):$/;"	m	class:LegacyLightningRpc
dev_add_route_command	daemon/routingrpc.c	/^static const struct json_command dev_add_route_command = {$/;"	v	typeref:struct:json_command	file:
dev_broadcast_command	daemon/chaintopology.c	/^static const struct json_command dev_broadcast_command = {$/;"	v	typeref:struct:json_command	file:
dev_commit_command	daemon/peer.c	/^static const struct json_command dev_commit_command = {$/;"	v	typeref:struct:json_command	file:
dev_crash_command	daemon/jsonrpc.c	/^static const struct json_command dev_crash_command = {$/;"	v	typeref:struct:json_command	file:
dev_disconnect_command	daemon/peer.c	/^static const struct json_command dev_disconnect_command = {$/;"	v	typeref:struct:json_command	file:
dev_failhtlc_command	daemon/peer.c	/^static const struct json_command dev_failhtlc_command = {$/;"	v	typeref:struct:json_command	file:
dev_feerate_command	daemon/peer.c	/^static const struct json_command dev_feerate_command = {$/;"	v	typeref:struct:json_command	file:
dev_fulfillhtlc_command	daemon/peer.c	/^static const struct json_command dev_fulfillhtlc_command = {$/;"	v	typeref:struct:json_command	file:
dev_never_routefail	daemon/lightningd.h	/^	bool dev_never_routefail;$/;"	m	struct:lightningd_state
dev_newhtlc	contrib/pylightning/lightning/lightning.py	/^    def dev_newhtlc(self, peerid, amount, expiry, rhash):$/;"	m	class:LegacyLightningRpc
dev_newhtlc_command	daemon/peer.c	/^static const struct json_command dev_newhtlc_command = {$/;"	v	typeref:struct:json_command	file:
dev_no_broadcast	daemon/lightningd.h	/^	bool dev_no_broadcast;$/;"	m	struct:lightningd_state
dev_output_command	daemon/peer.c	/^static const struct json_command dev_output_command = {$/;"	v	typeref:struct:json_command	file:
dev_reconnect_command	daemon/peer.c	/^static const struct json_command dev_reconnect_command = {$/;"	v	typeref:struct:json_command	file:
dev_register_opts	daemon/options.c	/^static void dev_register_opts(struct lightningd_state *dstate)$/;"	f	file:
dev_restart_command	daemon/jsonrpc.c	/^static const struct json_command dev_restart_command = {$/;"	v	typeref:struct:json_command	file:
dev_rhash	contrib/pylightning/lightning/lightning.py	/^    def dev_rhash(self, secret):$/;"	m	class:LegacyLightningRpc
dev_rhash_command	daemon/jsonrpc.c	/^static const struct json_command dev_rhash_command = {$/;"	v	typeref:struct:json_command	file:
dev_routefail_command	daemon/routingrpc.c	/^static const struct json_command dev_routefail_command = {$/;"	v	typeref:struct:json_command	file:
dev_signcommit_command	daemon/peer.c	/^static const struct json_command dev_signcommit_command = {$/;"	v	typeref:struct:json_command	file:
digest_length	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	/^  uint8_t  digest_length;  \/*  1 *\/$/;"	m	struct:blake2b_param_
dir_state	daemon/cryptopkt.c	/^struct dir_state {$/;"	s	file:
discard_extra	daemon/cryptopkt.c	/^static struct io_plan *discard_extra(struct io_conn *conn,$/;"	f	file:
dispatch	daemon/jsonrpc.h	/^	void (*dispatch)(struct command *,$/;"	m	struct:json_command
distcleancheck_listfiles	libsodium/Makefile	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distcleancheck_listfiles	secp256k1/Makefile	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distdir	libsodium/Makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distdir	secp256k1/Makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distuninstallcheck_listfiles	libsodium/Makefile	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
distuninstallcheck_listfiles	secp256k1/Makefile	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
dns_async	daemon/dns.c	/^struct dns_async {$/;"	s	file:
dns_lookup_failed	daemon/dns.c	/^static void dns_lookup_failed(struct io_conn *conn, struct dns_async *d)$/;"	f	file:
dns_resolve_and_connect	daemon/dns.h	12;"	d
dns_resolve_and_connect_	daemon/dns.c	/^struct dns_async *dns_resolve_and_connect_(struct lightningd_state *dstate,$/;"	f
do_cmd	test/test_protocol.c	/^static void do_cmd(struct peer *peer)$/;"	f	file:
do_commit	daemon/peer.c	/^static bool do_commit(struct peer *peer, struct command *jsoncmd)$/;"	f	file:
do_connect	ccan/ccan/io/io.c	/^static int do_connect(int fd, struct io_plan_arg *arg)$/;"	f	file:
do_fd_recv	ccan/ccan/io/fdpass/fdpass.c	/^static int do_fd_recv(int fd, struct io_plan_arg *arg)$/;"	f	file:
do_fd_send	ccan/ccan/io/fdpass/fdpass.c	/^static int do_fd_send(int fd, struct io_plan_arg *arg)$/;"	f	file:
do_last_block	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^do_last_block:$/;"	l
do_log_add	daemon/log.c	/^static void do_log_add(struct log *log, const char *fmt, va_list ap)$/;"	f	file:
do_mallocs	ccan/ccan/tal/benchmark/samba-allocs.c	/^static void do_mallocs(struct node *node)$/;"	f	file:
do_nothing	test/test_protocol.c	/^static void do_nothing(int sig)$/;"	f	file:
do_plan	ccan/ccan/io/io.c	/^static bool do_plan(struct io_conn *conn, struct io_plan *plan)$/;"	f	file:
do_read	ccan/ccan/io/io.c	/^static int do_read(int fd, struct io_plan_arg *arg)$/;"	f	file:
do_read	lightningd/test/run-cryptomsg.c	/^static void do_read(void *buf, size_t len)$/;"	f	file:
do_read_packet	ccan/ccan/io/test/run-17-homemade-io.c	/^static int do_read_packet(int fd, struct io_plan_arg *arg)$/;"	f	file:
do_read_partial	ccan/ccan/io/io.c	/^static int do_read_partial(int fd, struct io_plan_arg *arg)$/;"	f	file:
do_read_wire	wire/wire_io.c	/^static int do_read_wire(int fd, struct io_plan_arg *arg)$/;"	f	file:
do_read_wire_header	wire/wire_io.c	/^static int do_read_wire_header(int fd, struct io_plan_arg *arg)$/;"	f	file:
do_tallocs	ccan/ccan/tal/benchmark/samba-allocs.c	/^static void do_tallocs(struct node *node)$/;"	f	file:
do_tals	ccan/ccan/tal/benchmark/samba-allocs.c	/^static void do_tals(struct node *node)$/;"	f	file:
do_test	ccan/ccan/crypto/ripemd160/test/run-test-vectors.c	/^static bool do_test(const struct test *t, bool single)$/;"	f	file:
do_test	ccan/ccan/crypto/sha256/test/run-test-vectors.c	/^static bool do_test(const struct test *t)$/;"	f	file:
do_timeout	ccan/ccan/io/benchmarks/run-different-speed.c	/^static struct io_plan do_timeout(struct io_conn *conn, char *buf)$/;"	f	file:
do_timeout	ccan/ccan/io/benchmarks/run-length-prefix.c	/^static struct io_plan do_timeout(struct io_conn *conn, char *buf)$/;"	f	file:
do_vfmt	ccan/ccan/tal/str/str.c	/^static bool do_vfmt(char **buf, size_t off, const char *fmt, va_list ap)$/;"	f	file:
do_write	ccan/ccan/io/io.c	/^static int do_write(int fd, struct io_plan_arg *arg)$/;"	f	file:
do_write	lightningd/test/run-cryptomsg.c	/^static void do_write(const void *buf, size_t len)$/;"	f	file:
do_write_partial	ccan/ccan/io/io.c	/^static int do_write_partial(int fd, struct io_plan_arg *arg)$/;"	f	file:
do_write_wire	wire/wire_io.c	/^static int do_write_wire(int fd, struct io_plan_arg *arg)$/;"	f	file:
do_write_wire_header	wire/wire_io.c	/^static int do_write_wire_header(int fd, struct io_plan_arg *arg)$/;"	f	file:
docdir	libsodium/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	libsodium/dist-build/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	libsodium/msvc-scripts/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	libsodium/src/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	libsodium/src/libsodium/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	libsodium/src/libsodium/include/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	libsodium/test/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	libsodium/test/default/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	secp256k1/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
done	ccan/tools/configurator/configurator.c	/^	bool done;$/;"	m	struct:test	file:
done	daemon/jsmn/jsmn_test.c	12;"	d	file:
done	test/test_state_coverage.c	/^	enum state_input done;$/;"	m	struct:htlc_spend_watch	typeref:enum:htlc_spend_watch::state_input	file:
done_hash	ccan/ccan/crypto/sha256/benchmarks/sha256_avx1.asm	/^done_hash:$/;"	l
done_hash	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^done_hash:$/;"	l
done_hash	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^done_hash:$/;"	l
done_hash	ccan/ccan/crypto/sha256/benchmarks/sha256_sse4.asm	/^done_hash:$/;"	l
dosend	daemon/lightningd.h	/^	bool dosend;$/;"	m	struct:lightningd_state
dot_edge	test/test_state_coverage.c	/^struct dot_edge {$/;"	s	file:
dot_edge_eq	test/test_state_coverage.c	/^static bool dot_edge_eq(const struct dot_edge *a, const struct dot_edge *b)$/;"	f	file:
dot_edge_hash	test/test_state_coverage.c	/^static size_t dot_edge_hash(const struct dot_edge *d)$/;"	f	file:
dot_edge_keyof	test/test_state_coverage.c	/^static const struct dot_edge *dot_edge_keyof(const struct dot_edge *dot_edge)$/;"	f	file:
dot_enable	test/test_state_coverage.c	/^static bool dot_enable = false;$/;"	v	file:
dot_include_abnormal	test/test_state_coverage.c	/^static bool dot_include_abnormal = false;$/;"	v	file:
dot_include_errors	test/test_state_coverage.c	/^static bool dot_include_errors = false;$/;"	v	file:
dot_simplify	test/test_state_coverage.c	/^static bool dot_simplify = false;$/;"	v	file:
double_table	ccan/ccan/htable/htable.c	/^static COLD bool double_table(struct htable *ht)$/;"	f	file:
draw_line	test/test_protocol.c	/^static void draw_line(char **str,$/;"	f	file:
draw_restart	test/test_protocol.c	/^static void draw_restart(char **str, const char *name,$/;"	f	file:
dst	daemon/routing.h	/^	struct node *src, *dst;$/;"	m	struct:node_connection	typeref:struct:node_connection::
dstate	daemon/bitcoind.c	/^	struct lightningd_state *dstate;$/;"	m	struct:bitcoin_cli	typeref:struct:bitcoin_cli::lightningd_state	file:
dstate	daemon/cryptopkt.c	/^	struct lightningd_state *dstate;$/;"	m	struct:key_negotiate	typeref:struct:key_negotiate::lightningd_state	file:
dstate	daemon/dns.c	/^	struct lightningd_state *dstate;$/;"	m	struct:dns_async	typeref:struct:dns_async::lightningd_state	file:
dstate	daemon/jsonrpc.h	/^	struct lightningd_state *dstate;$/;"	m	struct:command	typeref:struct:command::lightningd_state
dstate	daemon/jsonrpc.h	/^	struct lightningd_state *dstate;$/;"	m	struct:json_connection	typeref:struct:json_connection::lightningd_state
dstate	daemon/peer.h	/^	struct lightningd_state *dstate;$/;"	m	struct:peer	typeref:struct:peer::lightningd_state
dstate	daemon/timeout.c	/^	struct lightningd_state *dstate;$/;"	m	struct:oneshot	typeref:struct:oneshot::lightningd_state	file:
dstate	daemon/watch.h	/^	struct lightningd_state *dstate;$/;"	m	struct:txwatch	typeref:struct:txwatch::lightningd_state
dstate	irc.h	/^	struct lightningd_state *dstate;$/;"	m	struct:ircstate	typeref:struct:ircstate::lightningd_state
dstate	lightningd/lightningd.h	/^	struct lightningd_state dstate;$/;"	m	struct:lightningd	typeref:struct:lightningd::lightningd_state
dummy	ccan/ccan/typesafe_cb/test/run.c	/^static char dummy = 0;$/;"	v	file:
dump	ccan/ccan/strmap/test/run-order.c	/^static bool dump(const char *member, char *value, bool *ok)$/;"	f	file:
dump	daemon/jsmn/example/jsondump.c	/^static int dump(const char *js, jsmntok_t *t, size_t count, int indent) {$/;"	f	file:
dump_bucket_stats	ccan/ccan/timer/timer.c	/^static void dump_bucket_stats(FILE *fp, const struct list_head *h)$/;"	f	file:
dump_commit_info	test/test_protocol.c	/^static void dump_commit_info(const struct peer *peer,$/;"	f	file:
dump_htlcs	test/test_protocol.c	/^static void dump_htlcs(struct htlc **htlcs,$/;"	f	file:
dump_map	ccan/ccan/cdump/tools/cdump-enumstr.c	/^static bool dump_map(const char *name, struct cdump_type *t, void *unused)$/;"	f	file:
dump_node	ccan/ccan/tal/tal.c	/^static void dump_node(unsigned int indent, const struct tal_hdr *t)$/;"	f	file:
dump_peer	test/test_protocol.c	/^static void dump_peer(const struct peer *peer, bool all)$/;"	f	file:
dump_tx	bitcoin/signature.c	/^static void dump_tx(const char *msg,$/;"	f	file:
dump_vsize	ccan/ccan/tal/benchmark/samba-allocs.c	/^static void dump_vsize(void)$/;"	f	file:
dup_idata	test/test_state_coverage.c	/^static const union input dup_idata(const tal_t *ctx,$/;"	f	file:
dust_limit_satoshis	lightningd/channel_config.h	/^	u64 dust_limit_satoshis;$/;"	m	struct:channel_config
dust_limit_satoshis	wire/test/run-peer-wire.c	/^	u64 dust_limit_satoshis;$/;"	m	struct:msg_accept_channel	file:
dust_limit_satoshis	wire/test/run-peer-wire.c	/^	u64 dust_limit_satoshis;$/;"	m	struct:msg_open_channel	file:
dvidir	libsodium/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	libsodium/dist-build/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	libsodium/msvc-scripts/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	libsodium/src/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	libsodium/src/libsodium/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	libsodium/src/libsodium/include/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	libsodium/test/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	libsodium/test/default/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	secp256k1/Makefile	/^dvidir = ${docdir}$/;"	m
e	lightningd/handshake/handshake.c	/^	struct keypair e;$/;"	m	struct:handshake	typeref:struct:handshake::keypair	file:
e_priv	lightningd/handshake/test/run-handshake.c	/^static unsigned char e_priv[32];$/;"	v	file:
ec_group	secp256k1/src/bench_verify.c	/^    EC_GROUP* ec_group;$/;"	m	struct:__anon25	file:
ec_privkey_export_der	secp256k1/contrib/lax_der_privatekey_parsing.c	/^int ec_privkey_export_der(const secp256k1_context *ctx, unsigned char *privkey, size_t *privkeylen, const unsigned char *key32, int compressed) {$/;"	f
ec_privkey_import_der	secp256k1/contrib/lax_der_privatekey_parsing.c	/^int ec_privkey_import_der(const secp256k1_context* ctx, unsigned char *out32, const unsigned char *privkey, size_t privkeylen) {$/;"	f
ec_pubkey_parse_pointtest	secp256k1/src/tests.c	/^void ec_pubkey_parse_pointtest(const unsigned char *input, int xvalid, int yvalid) {$/;"	f
ecdh_client	lightningd/hsm/hsm.c	/^static struct io_plan *ecdh_client(struct io_conn *conn, struct client *c)$/;"	f	file:
ecdsa_signature_parse_der_lax	secp256k1/contrib/lax_der_parsing.c	/^int ecdsa_signature_parse_der_lax(const secp256k1_context* ctx, secp256k1_ecdsa_signature* sig, const unsigned char *input, size_t inputlen) {$/;"	f
ecmult_const_chain_multiply	secp256k1/src/tests.c	/^void ecmult_const_chain_multiply(void) {$/;"	f
ecmult_const_commutativity	secp256k1/src/tests.c	/^void ecmult_const_commutativity(void) {$/;"	f
ecmult_const_mult_zero_one	secp256k1/src/tests.c	/^void ecmult_const_mult_zero_one(void) {$/;"	f
ecmult_const_random_mult	secp256k1/src/tests.c	/^void ecmult_const_random_mult(void) {$/;"	f
ecmult_ctx	secp256k1/src/secp256k1.c	/^    secp256k1_ecmult_context ecmult_ctx;$/;"	m	struct:secp256k1_context_struct	file:
ecmult_gen_ctx	secp256k1/src/secp256k1.c	/^    secp256k1_ecmult_gen_context ecmult_gen_ctx;$/;"	m	struct:secp256k1_context_struct	file:
ed25519_convert_DEPENDENCIES	libsodium/test/default/Makefile	/^ed25519_convert_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
ed25519_convert_LDADD	libsodium/test/default/Makefile	/^ed25519_convert_LDADD = $(TESTS_LDADD)$/;"	m
ed25519_convert_OBJECTS	libsodium/test/default/Makefile	/^ed25519_convert_OBJECTS = ed25519_convert.$(OBJEXT)$/;"	m
ed25519_convert_SOURCE	libsodium/test/default/Makefile	/^ed25519_convert_SOURCE = cmptest.h ed25519_convert.c$/;"	m
ed25519_convert_SOURCES	libsodium/test/default/Makefile	/^ed25519_convert_SOURCES = ed25519_convert.c$/;"	m
edges	test/test_state_coverage.c	/^	struct edge_hash edges;$/;"	m	struct:hist	typeref:struct:hist::edge_hash	file:
edwards_to_montgomery	libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/x25519_ref10.c	/^edwards_to_montgomery(fe montgomeryX, const fe edwardsY, const fe edwardsZ)$/;"	f	file:
eight_blocks_loop	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^eight_blocks_loop:$/;"	l
elems	ccan/ccan/htable/htable.h	/^	size_t elems, deleted, max, max_with_deleted;$/;"	m	struct:htable
eliminate_input	test/test_state_coverage.c	/^static void eliminate_input(enum state_input **inputs, enum state_input in)$/;"	f	file:
empty_node_map	daemon/routing.c	/^struct node_map *empty_node_map(const tal_t *ctx)$/;"	f
enabled	secp256k1/src/java/org/bitcoin/Secp256k1Context.java	/^  private static final boolean enabled; \/\/true if the library is loaded$/;"	f	class:Secp256k1Context	file:
enckey	daemon/cryptopkt.c	/^	struct enckey enckey;$/;"	m	struct:dir_state	typeref:struct:dir_state::enckey	file:
enckey	daemon/cryptopkt.c	/^struct enckey {$/;"	s	file:
enckey_from_secret	daemon/cryptopkt.c	/^static struct enckey enckey_from_secret(const unsigned char secret[32],$/;"	f	file:
encode64	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c	/^encode64(uint8_t * dst, size_t dstlen, const uint8_t * src, size_t srclen)$/;"	f	file:
encode64_uint32	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c	/^encode64_uint32(uint8_t * dst, size_t dstlen, uint32_t src, uint32_t srcbits)$/;"	f	file:
encode_string	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	/^int encode_string(char *dst, size_t dst_len, argon2_context *ctx,$/;"	f
encrypt_ad	lightningd/handshake/handshake.c	/^static void encrypt_ad(const struct secret *k, u64 nonce,$/;"	f	file:
encrypt_in_place	daemon/cryptopkt.c	/^static void encrypt_in_place(void *data, size_t len,$/;"	f	file:
encrypt_pkt	daemon/cryptopkt.c	/^static struct crypto_pkt *encrypt_pkt(struct io_data *iod, const Pkt *pkt,$/;"	f	file:
end	ccan/ccan/io/test/run-14-duplex-both-read.c	/^static struct io_plan *end(struct io_conn *conn, struct data *d)$/;"	f	file:
end	ccan/ccan/ptr_valid/ptr_valid.h	/^	const char *start, *end;$/;"	m	struct:ptr_valid_map
end	ccan/ccan/structeq/test/compile_fail-different.c	/^	int start, end;$/;"	m	struct:mydata1	file:
end	ccan/ccan/structeq/test/compile_fail-different.c	/^	int start, end;$/;"	m	struct:mydata2	file:
end	ccan/ccan/structeq/test/run.c	/^	int start, end;$/;"	m	struct:mydata	file:
end	daemon/jsmn/jsmn.h	/^	int end;$/;"	m	struct:__anon58
end	libsodium/builds/msvc/build/buildbase.bat	/^:end$/;"	l
end	lightning.pb-c.h	/^    protobuf_c_boolean end;$/;"	m	union:_RouteStep::__anon43
entry_is_valid	ccan/ccan/htable/htable.c	/^static inline bool entry_is_valid(uintptr_t e)$/;"	f	file:
enum_PktCase_names	daemon/gen_pkt_names.h	/^} enum_PktCase_names[] = {$/;"	v	typeref:struct:__anon61
enum_feechange_state_names	daemon/gen_feechange_state_names.h	/^} enum_feechange_state_names[] = {$/;"	v	typeref:struct:__anon46
enum_htlc_state_names	daemon/gen_htlc_state_names.h	/^} enum_htlc_state_names[] = {$/;"	v	typeref:struct:__anon60
enum_state_input_names	daemon/gen_state_names.h	/^} enum_state_input_names[] = {$/;"	v	typeref:struct:__anon52
enum_state_names	daemon/gen_state_names.h	/^} enum_state_names[] = {$/;"	v	typeref:struct:__anon51
enum_vals	ccan/ccan/cdump/cdump.h	/^		struct cdump_enum_val *enum_vals;$/;"	m	union:cdump_type::__anon6	typeref:struct:cdump_type::__anon6::cdump_enum_val
enums	ccan/ccan/cdump/cdump.h	/^	cdump_map_t enums;$/;"	m	struct:cdump_definitions
ephemeralkey	daemon/sphinx.c	/^	secp256k1_pubkey ephemeralkey;$/;"	m	struct:hop_params	file:
ephemeralkey	daemon/sphinx.h	/^	secp256k1_pubkey ephemeralkey;$/;"	m	struct:onionpacket
eq	ccan/ccan/htable/test/run-zero-hash-first-entry.c	/^static bool eq(const void *e, void *k)$/;"	f	file:
eq_between	wire/test/run-peer-wire.c	57;"	d	file:
eq_field	wire/test/run-peer-wire.c	63;"	d	file:
eq_skip_	wire/test/run-peer-wire.c	/^static inline bool eq_skip_(const void *p1, const void *p2,$/;"	f	file:
eq_upto	wire/test/run-peer-wire.c	49;"	d	file:
eq_var	wire/test/run-peer-wire.c	68;"	d	file:
eq_with	wire/test/run-peer-wire.c	53;"	d	file:
equal	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^static unsigned char equal(signed char b,signed char c)$/;"	f	file:
err	ccan/ccan/err/err.c	/^void NORETURN err(int eval, const char *fmt, ...)$/;"	f
err	daemon/db.c	/^	const char *err;$/;"	m	struct:db	file:
err_count	ccan/ccan/tal/test/run-allocfail.c	/^static int alloc_count, when_to_fail, err_count;$/;"	v	file:
err_output	ccan/ccan/opt/test/utils.c	/^char *err_output = NULL;$/;"	v
err_set_progname	ccan/ccan/err/err.c	/^void err_set_progname(const char *name)$/;"	f
err_set_progname	ccan/ccan/err/err.h	10;"	d
error	libsodium/builds/msvc/build/buildbase.bat	/^:error$/;"	l
error	lightning.pb-c.h	/^    Error *error;$/;"	m	union:_Pkt::__anon45
error	lightningd/gossip/gossip.c	/^	const char *error;$/;"	m	struct:peer	file:
error	test/test_state_coverage.c	/^	const char *error;$/;"	m	struct:peer	file:
error__descriptor	lightning.pb-c.c	/^const ProtobufCMessageDescriptor error__descriptor =$/;"	v
error__field_descriptors	lightning.pb-c.c	/^static const ProtobufCFieldDescriptor error__field_descriptors[1] =$/;"	v	file:
error__field_indices_by_name	lightning.pb-c.c	/^static const unsigned error__field_indices_by_name[] = {$/;"	v	file:
error__free_unpacked	lightning.pb-c.c	/^void   error__free_unpacked$/;"	f
error__get_packed_size	lightning.pb-c.c	/^size_t error__get_packed_size$/;"	f
error__init	lightning.pb-c.c	/^void   error__init$/;"	f
error__number_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange error__number_ranges[1 + 1] =$/;"	v	file:
error__pack	lightning.pb-c.c	/^size_t error__pack$/;"	f
error__pack_to_buffer	lightning.pb-c.c	/^size_t error__pack_to_buffer$/;"	f
error__unpack	lightning.pb-c.c	/^       error__unpack$/;"	f
error_callback	secp256k1/src/secp256k1.c	/^    secp256k1_callback error_callback;$/;"	m	struct:secp256k1_context_struct	file:
error_code	lightning.pb-c.h	/^  uint32_t error_code;$/;"	m	struct:_FailInfo
error_count	ccan/ccan/tal/test/run-overflow.c	/^static int error_count;$/;"	v	file:
error_eq	wire/test/run-peer-wire.c	/^static bool error_eq(const struct msg_error *a,$/;"	f	file:
error_path	test/test_state_coverage.c	/^static bool error_path(enum state_input i, enum state src, enum state dst)$/;"	f	file:
errorfn	ccan/ccan/tal/tal.c	/^static void (*errorfn)(const char *msg) = (void *)abort;$/;"	v	file:
errx	ccan/ccan/err/err.c	/^void NORETURN errx(int eval, const char *fmt, ...)$/;"	f
escrypt_block_t	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	/^} escrypt_block_t;$/;"	t	typeref:union:__anon65
escrypt_free_local	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c	/^escrypt_free_local(escrypt_local_t * local)$/;"	f
escrypt_gensalt_r	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c	/^escrypt_gensalt_r(uint32_t N_log2, uint32_t r, uint32_t p,$/;"	f
escrypt_init_local	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c	/^escrypt_init_local(escrypt_local_t * local)$/;"	f
escrypt_kdf_nosse	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c	/^escrypt_kdf_nosse(escrypt_local_t * local,$/;"	f
escrypt_kdf_sse	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	/^escrypt_kdf_sse(escrypt_local_t * local,$/;"	f
escrypt_kdf_t	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	/^typedef int (*escrypt_kdf_t)(escrypt_local_t * __local,$/;"	t
escrypt_local_t	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	/^typedef escrypt_region_t escrypt_local_t;$/;"	t
escrypt_r	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c	/^escrypt_r(escrypt_local_t * local, const uint8_t * passwd, size_t passwdlen,$/;"	f
escrypt_region_t	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	/^} escrypt_region_t;$/;"	t	typeref:struct:__anon64
eval_count	ccan/ccan/list/test/run-single-eval.c	/^	int eval_count;$/;"	m	struct:parent	file:
event_notifies	test/test_state_coverage.c	/^	uint64_t event_notifies;$/;"	m	struct:core_state	file:
exec_prefix	libsodium/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	libsodium/dist-build/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	libsodium/msvc-scripts/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	libsodium/src/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	libsodium/src/libsodium/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	libsodium/src/libsodium/include/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	libsodium/test/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	libsodium/test/default/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	secp256k1/Makefile	/^exec_prefix = ${prefix}$/;"	m
exit	ccan/ccan/opt/test/run-helpers.c	12;"	d	file:
exited	ccan/ccan/opt/test/run-checkopt.c	/^static jmp_buf exited;$/;"	v	file:
exited	ccan/ccan/opt/test/run-helpers.c	/^static jmp_buf exited;$/;"	v	file:
exitstatus	daemon/bitcoind.c	/^	int *exitstatus;$/;"	m	struct:bitcoin_cli	file:
expect	ccan/ccan/likely/likely.c	/^	bool expect;$/;"	m	struct:trace	file:
expect	ccan/ccan/tal/test/run-notifier.c	/^static enum tal_notify_type expect;$/;"	v	typeref:enum:tal_notify_type	file:
expect_info	ccan/ccan/tal/test/run-notifier.c	/^static void *expect_info;$/;"	v	file:
expected	ccan/ccan/crypto/sha256/test/run-33-bit-test.c	/^static uint32_t expected[] = {$/;"	v	file:
expected_fd	ccan/ccan/io/test/run-01-start-finish.c	/^static int expected_fd;$/;"	v	file:
expected_id	daemon/cryptopkt.c	/^	const struct pubkey *expected_id;$/;"	m	struct:key_negotiate	typeref:struct:key_negotiate::pubkey	file:
expiry	daemon/htlc.h	/^	struct abs_locktime expiry;$/;"	m	struct:htlc	typeref:struct:htlc::abs_locktime
expiry	lightning.pb-c.h	/^  Locktime *expiry;$/;"	m	struct:_UpdateAddHtlc
expiry	wire/test/run-peer-wire.c	/^	u16 expiry;$/;"	m	struct:msg_channel_update	file:
expiry	wire/test/run-peer-wire.c	/^	u32 expiry;$/;"	m	struct:msg_update_add_htlc	file:
extended_tx	bitcoin/test/run-tx-encode.c	/^const char extended_tx[] = "02000000000101b5bef485c41d0d1f58d1e8a561924ece5c476d86cff063ea10c8df06136eb31d00000000171600144aa38e396e1394fb45cbf83f48d1464fbc9f498fffffffff0140330f000000000017a9140580ba016669d3efaf09a0b2ec3954469ea2bf038702483045022100f2abf9e9cf238c66533af93f23937eae8ac01fb6f105a00ab71dbefb9637dc9502205c1ac745829b3f6889607961f5d817dfa0c8f52bdda12e837c4f7b162f6db8a701210204096eb817f7efb414ef4d3d8be39dd04374256d3b054a322d4a6ee22736d03b00000000";$/;"	v
external_ip	daemon/lightningd.h	/^	char *external_ip;$/;"	m	struct:lightningd_state
extra_for_length	ccan/ccan/tal/tal.c	/^static size_t extra_for_length(size_t size)$/;"	f	file:
extract	secp256k1/src/scalar_4x64_impl.h	255;"	d
extract	secp256k1/src/scalar_4x64_impl.h	888;"	d
extract	secp256k1/src/scalar_8x32_impl.h	334;"	d
extract	secp256k1/src/scalar_8x32_impl.h	644;"	d
extract_fast	secp256k1/src/scalar_4x64_impl.h	263;"	d
extract_fast	secp256k1/src/scalar_4x64_impl.h	889;"	d
extract_fast	secp256k1/src/scalar_8x32_impl.h	342;"	d
extract_fast	secp256k1/src/scalar_8x32_impl.h	645;"	d
extract_id	daemon/test/scripts/helpers.sh	/^extract_id()$/;"	f
f	ccan/ccan/alignof/test/run.c	/^	float f;$/;"	m	struct:lots_of_types	file:
f	libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h	/^    uint64_t f[2];$/;"	m	struct:crypto_generichash_blake2b_state
f	test/test_protocol.c	/^	struct commit_tx f;$/;"	m	struct:signature	typeref:struct:signature::commit_tx	file:
f1	ccan/ccan/crypto/ripemd160/ripemd160.c	/^static uint32_t inline f1(uint32_t x, uint32_t y, uint32_t z) { return x ^ y ^ z; }$/;"	f	file:
f2	ccan/ccan/crypto/ripemd160/ripemd160.c	/^static uint32_t inline f2(uint32_t x, uint32_t y, uint32_t z) { return (x & y) | (~x & z); }$/;"	f	file:
f3	ccan/ccan/crypto/ripemd160/ripemd160.c	/^static uint32_t inline f3(uint32_t x, uint32_t y, uint32_t z) { return (x | ~y) ^ z; }$/;"	f	file:
f4	ccan/ccan/crypto/ripemd160/ripemd160.c	/^static uint32_t inline f4(uint32_t x, uint32_t y, uint32_t z) { return (x & z) | (y & ~z); }$/;"	f	file:
f5	ccan/ccan/crypto/ripemd160/ripemd160.c	/^static uint32_t inline f5(uint32_t x, uint32_t y, uint32_t z) { return x ^ (y | ~z); }$/;"	f	file:
fBlaMka	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ref.h	/^static inline uint64_t fBlaMka(uint64_t x, uint64_t y) {$/;"	f
fBlaMka	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ssse3.h	/^static inline __m128i fBlaMka(__m128i x, __m128i y) {$/;"	f
fail	daemon/dns.c	/^	void (*fail)(struct lightningd_state *, void *arg);$/;"	m	struct:dns_async	file:
fail	daemon/htlc.h	/^	const u8 *fail;$/;"	m	struct:htlc
fail	daemon/jsmn/jsmn_test.c	9;"	d	file:
fail	test/test_state_coverage.c	/^static bool fail(const struct peer *peer, enum failure which_fail)$/;"	f	file:
fail_details	test/test_state_coverage.c	/^struct fail_details {$/;"	s	file:
fail_error	daemon/failure.h	/^enum fail_error {$/;"	g
fail_info__descriptor	lightning.pb-c.c	/^const ProtobufCMessageDescriptor fail_info__descriptor =$/;"	v
fail_info__field_descriptors	lightning.pb-c.c	/^static const ProtobufCFieldDescriptor fail_info__field_descriptors[3] =$/;"	v	file:
fail_info__field_indices_by_name	lightning.pb-c.c	/^static const unsigned fail_info__field_indices_by_name[] = {$/;"	v	file:
fail_info__free_unpacked	lightning.pb-c.c	/^void   fail_info__free_unpacked$/;"	f
fail_info__get_packed_size	lightning.pb-c.c	/^size_t fail_info__get_packed_size$/;"	f
fail_info__init	lightning.pb-c.c	/^void   fail_info__init$/;"	f
fail_info__number_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange fail_info__number_ranges[1 + 1] =$/;"	v	file:
fail_info__pack	lightning.pb-c.c	/^size_t fail_info__pack$/;"	f
fail_info__pack_to_buffer	lightning.pb-c.c	/^size_t fail_info__pack_to_buffer$/;"	f
fail_info__unpack	lightning.pb-c.c	/^       fail_info__unpack$/;"	f
fail_mismatch	check-bolt.c	/^static void fail_mismatch(const char *filename,$/;"	f	file:
fail_nobolt	check-bolt.c	/^static void fail_nobolt(const char *filename,$/;"	f	file:
fail_own_htlc	daemon/peer.c	/^static void fail_own_htlc(struct peer *peer, struct htlc *htlc)$/;"	f	file:
fail_pull	wire/fromwire.c	/^static const void *fail_pull(const u8 **cursor, size_t *max)$/;"	f	file:
fail_realloc	ccan/ccan/take/test/run.c	/^static bool fail_realloc;$/;"	v	file:
fail_reason__descriptor	lightning.pb-c.c	/^const ProtobufCMessageDescriptor fail_reason__descriptor =$/;"	v
fail_reason__field_descriptors	lightning.pb-c.c	/^static const ProtobufCFieldDescriptor fail_reason__field_descriptors[1] =$/;"	v	file:
fail_reason__field_indices_by_name	lightning.pb-c.c	/^static const unsigned fail_reason__field_indices_by_name[] = {$/;"	v	file:
fail_reason__free_unpacked	lightning.pb-c.c	/^void   fail_reason__free_unpacked$/;"	f
fail_reason__get_packed_size	lightning.pb-c.c	/^size_t fail_reason__get_packed_size$/;"	f
fail_reason__init	lightning.pb-c.c	/^void   fail_reason__init$/;"	f
fail_reason__number_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange fail_reason__number_ranges[1 + 1] =$/;"	v	file:
fail_reason__pack	lightning.pb-c.c	/^size_t fail_reason__pack$/;"	f
fail_reason__pack_to_buffer	lightning.pb-c.c	/^size_t fail_reason__pack_to_buffer$/;"	f
fail_reason__unpack	lightning.pb-c.c	/^       fail_reason__unpack$/;"	f
failed	daemon/peer.h	/^	void (*failed)(struct peer *peer, int exitstatus, const char *err);$/;"	m	struct:outgoing_tx
failed	daemon/test/scripts/helpers.sh	/^failed()$/;"	f
failhash	test/test_state_coverage.c	/^static struct failhash failhash;$/;"	v	typeref:struct:failhash	file:
failinfo_create	daemon/failure.c	/^const u8 *failinfo_create(const tal_t *ctx,$/;"	f
failinfo_unwrap	daemon/failure.c	/^FailInfo *failinfo_unwrap(const tal_t *ctx, const void *data, size_t len)$/;"	f
failing_alloc	ccan/ccan/tal/test/run-allocfail.c	/^static void *failing_alloc(size_t len)$/;"	f	file:
failing_realloc	ccan/ccan/tal/test/run-allocfail.c	/^static void *failing_realloc(void *p, size_t len)$/;"	f	file:
failmsg	ccan/ccan/opt/opt.c	109;"	d	file:
failmsg	ccan/ccan/opt/test/run-checkopt.c	12;"	d	file:
failpoint	test/test_state_coverage.c	/^struct failpoint {$/;"	s	file:
failpoint_eq	test/test_state_coverage.c	/^static bool failpoint_eq(const struct failpoint *a,$/;"	f	file:
failpoint_hash	test/test_state_coverage.c	/^static size_t failpoint_hash(const struct failpoint *f)$/;"	f	file:
failpoint_keyof	test/test_state_coverage.c	/^failpoint_keyof(const struct failpoint *f)$/;"	f	file:
failure	test/test_state_coverage.c	/^enum failure {$/;"	g	file:
fake1	ccan/ccan/autodata/test/run-fools.c	/^static const void *NEEDED fake1[] = { (void *)(AUTODATA_MAGIC ^ 0x10000),$/;"	v	file:
fake2	ccan/ccan/autodata/test/run-fools.c	/^static const void *NEEDED fake2[] = { (void *)AUTODATA_MAGIC,$/;"	v	file:
fake3	ccan/ccan/autodata/test/run-fools.c	/^static const void *NEEDED fake3[] = { (void *)AUTODATA_MAGIC,$/;"	v	file:
fake4	ccan/ccan/autodata/test/run-fools.c	/^static const void *NEEDED fake4[] = { (void *)AUTODATA_MAGIC,$/;"	v	file:
fake5	ccan/ccan/autodata/test/run-fools.c	/^static const void *NEEDED fake5[] = { (void *)AUTODATA_MAGIC,$/;"	v	file:
fake6	ccan/ccan/autodata/test/run-fools.c	/^static const void *NEEDED fake6[] = { (void *)AUTODATA_MAGIC,$/;"	v	file:
fake_alpha	ccan/ccan/autodata/test/run-fools.c	/^static const void *NEEDED fake_alpha[] = { (void *)AUTODATA_MAGIC };$/;"	v	file:
fake_close	daemon/peer.h	/^	bool fake_close;$/;"	m	struct:peer
fake_mono_time	ccan/ccan/timer/test/run.c	/^static struct timemono fake_mono_time;$/;"	v	typeref:struct:timemono	file:
fake_omega	ccan/ccan/autodata/test/run-fools.c	/^static const void *NEEDED fake_omega[] = { (void *)AUTODATA_MAGIC };$/;"	v	file:
fake_read_all	lightningd/handshake/test/run-handshake.c	/^static bool fake_read_all(int fd, void *buf, size_t count)$/;"	f	file:
fake_time	ccan/ccan/io/test/run-20-io_time_override.c	/^static struct timemono fake_time;$/;"	v	typeref:struct:timemono	file:
fake_write_all	lightningd/handshake/test/run-handshake.c	/^static ssize_t fake_write_all(int fd, const void *buf, size_t count)$/;"	f	file:
fancy_cmp	ccan/ccan/order/test/fancy_cmp.h	/^static inline int fancy_cmp(const struct item *a, const struct item *b,$/;"	f
fancy_cmp_noctx	ccan/ccan/order/test/fancy_cmp.h	/^static inline int fancy_cmp_noctx(const void *av, const void *bv)$/;"	f
fanout	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	/^  uint8_t  fanout;         \/*  3 *\/$/;"	m	struct:blake2b_param_
far	ccan/ccan/timer/timer.h	/^	struct list_head far;$/;"	m	struct:timers	typeref:struct:timers::list_head
fatal	daemon/log.c	/^void fatal(const char *fmt, ...)$/;"	f
fclose_noerr	ccan/ccan/noerr/noerr.c	/^int fclose_noerr(FILE *fp)$/;"	f
fcontract	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^fcontract(u8 *output, const felem input) {$/;"	f	file:
fcopy	ccan/tools/configurator/configurator.c	/^static size_t fcopy(FILE *fsrc, FILE *fdst)$/;"	f	file:
fd	ccan/ccan/io/backend.h	/^	int fd;$/;"	m	struct:fd
fd	ccan/ccan/io/backend.h	/^	struct fd fd;$/;"	m	struct:io_conn	typeref:struct:io_conn::fd
fd	ccan/ccan/io/backend.h	/^	struct fd fd;$/;"	m	struct:io_listener	typeref:struct:io_listener::fd
fd	ccan/ccan/io/backend.h	/^struct fd {$/;"	s
fd	ccan/ccan/tal/path/path.c	/^	int fd;$/;"	m	struct:path_pushd	file:
fd	daemon/bitcoind.c	/^	int fd;$/;"	m	struct:bitcoin_cli	file:
fd	daemon/log.c	/^	int fd;$/;"	m	struct:log_data	file:
fd	lightningd/gossip/gossip.c	/^	int fd;$/;"	m	struct:peer	file:
fd	lightningd/peer_control.h	/^	int fd;$/;"	m	struct:peer
fd_in	lightningd/subdaemon.c	/^	int *fd_in;$/;"	m	struct:subdaemon_req	file:
fd_out	lightningd/subdaemon.c	/^	int fd_out;$/;"	m	struct:subdaemon_req	file:
fdifference_backwards	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^fdifference_backwards(felem out, const felem in) {$/;"	f	file:
fdpass_recv	ccan/ccan/fdpass/fdpass.c	/^int fdpass_recv(int sockin)$/;"	f
fdpass_send	ccan/ccan/fdpass/fdpass.c	/^bool fdpass_send(int sockout, int fd)$/;"	f
fds	ccan/ccan/io/poll.c	/^static struct fd **fds = NULL;$/;"	v	typeref:struct:fd	file:
fds2	ccan/ccan/io/test/run-08-hangup-on-idle.c	/^static int fds2[2];$/;"	v	file:
fe	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe.h	/^typedef uint64_t fe[10];$/;"	t
fe	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^typedef int32_t fe[10];$/;"	t
fe	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	7;"	d
fe51	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51.h	/^fe51;$/;"	t	typeref:struct:__anon66
fe51	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_namespace.h	4;"	d
fe51_H	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51.h	9;"	d
fe51_invert	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_invert.c	/^void fe51_invert(fe51 *r, const fe51 *x)$/;"	f
fe51_invert	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_namespace.h	13;"	d
fe51_mul	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^fe51_mul:$/;"	l
fe51_mul	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_namespace.h	8;"	d
fe51_namespace_H	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_namespace.h	2;"	d
fe51_nsquare	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_namespace.h	10;"	d
fe51_nsquare	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^fe51_nsquare:$/;"	l
fe51_pack	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_namespace.h	6;"	d
fe51_pack	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^fe51_pack:$/;"	l
fe51_square	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_invert.c	10;"	d	file:
fe_0	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void fe_0(fe h)$/;"	f
fe_0	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	23;"	d
fe_1	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void fe_1(fe h)$/;"	f
fe_1	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	24;"	d
fe_H	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe.h	7;"	d
fe_add	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void fe_add(fe h,const fe f,const fe g)$/;"	f
fe_add	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	26;"	d
fe_cmov	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void fe_cmov(fe f,const fe g,unsigned int b)$/;"	f
fe_cmov	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	25;"	d
fe_copy	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void fe_copy(fe h,const fe f)$/;"	f
fe_copy	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	20;"	d
fe_cswap	libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/x25519_ref10.c	/^fe_cswap(fe f,fe g,unsigned int b)$/;"	f	file:
fe_frombytes	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void fe_frombytes(fe h,const unsigned char *s)$/;"	f
fe_frombytes	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe.h	22;"	d
fe_frombytes	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe_frombytes_sandy2x.c	/^void fe_frombytes(fe h,const unsigned char *s)$/;"	f
fe_frombytes	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	18;"	d
fe_invert	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void fe_invert(fe out,const fe z)$/;"	f
fe_invert	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	32;"	d
fe_isnegative	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^int fe_isnegative(const fe f)$/;"	f
fe_isnegative	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	22;"	d
fe_isnonzero	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^int fe_isnonzero(const fe f)$/;"	f
fe_isnonzero	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	21;"	d
fe_memcmp	secp256k1/src/tests.c	/^int fe_memcmp(const secp256k1_fe *a, const secp256k1_fe *b) {$/;"	f
fe_mul	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void fe_mul(fe h,const fe f,const fe g)$/;"	f
fe_mul	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	29;"	d
fe_mul121666	libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/x25519_ref10.c	/^fe_mul121666(fe h,const fe f)$/;"	f	file:
fe_neg	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void fe_neg(fe h,const fe f)$/;"	f
fe_neg	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	28;"	d
fe_pow22523	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void fe_pow22523(fe out,const fe z)$/;"	f
fe_pow22523	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	33;"	d
fe_sq	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void fe_sq(fe h,const fe f)$/;"	f
fe_sq	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	30;"	d
fe_sq2	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void fe_sq2(fe h,const fe f)$/;"	f
fe_sq2	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	31;"	d
fe_sub	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void fe_sub(fe h,const fe f,const fe g)$/;"	f
fe_sub	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	27;"	d
fe_tobytes	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void fe_tobytes(unsigned char *s,const fe h)$/;"	f
fe_tobytes	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	19;"	d
fe_x	secp256k1/src/bench_internal.c	/^    secp256k1_fe fe_x, fe_y;$/;"	m	struct:__anon19	file:
fe_y	secp256k1/src/bench_internal.c	/^    secp256k1_fe fe_x, fe_y;$/;"	m	struct:__anon19	file:
features	lightning.pb-c.h	/^  ProtobufCBinaryData features;$/;"	m	struct:_Init
features	wire/test/run-peer-wire.c	/^	u8 *features;$/;"	m	struct:msg_channel_announcement	file:
features	wire/test/run-peer-wire.c	/^	u8 *features;$/;"	m	struct:msg_node_announcement	file:
fee	test/test_protocol.c	/^	u32 fee;$/;"	m	struct:commit_tx	file:
fee_base	daemon/lightningd.h	/^	u32 fee_base;$/;"	m	struct:config
fee_base_msat	wire/test/run-peer-wire.c	/^	u32 fee_base_msat;$/;"	m	struct:msg_channel_update	file:
fee_by_feerate	daemon/channel.c	/^uint64_t fee_by_feerate(size_t txsize, uint64_t fee_rate)$/;"	f
fee_msat	daemon/channel.h	/^	uint64_t pay_msat, fee_msat;$/;"	m	struct:channel_oneside
fee_per_satoshi	daemon/lightningd.h	/^	s32 fee_per_satoshi;$/;"	m	struct:config
fee_proportional_millionths	wire/test/run-peer-wire.c	/^	u32 fee_proportional_millionths;$/;"	m	struct:msg_channel_update	file:
fee_rate	daemon/channel.h	/^	uint64_t fee_rate;$/;"	m	struct:channel_state
fee_rate	daemon/feechange.h	/^	u64 fee_rate;$/;"	m	struct:feechange
fee_rate	lightning.pb-c.h	/^  uint32_t fee_rate;$/;"	m	struct:_UpdateFee
fee_satoshis	wire/test/run-peer-wire.c	/^	u64 fee_satoshis;$/;"	m	struct:msg_closing_signed	file:
feechange	daemon/feechange.h	/^struct feechange {$/;"	s
feechange_changestate	daemon/feechange.c	/^void feechange_changestate(struct peer *peer,$/;"	f
feechange_has	daemon/feechange.h	/^static inline bool feechange_has(const struct feechange *f, int flag)$/;"	f
feechange_is_dead	daemon/feechange.h	/^static inline bool feechange_is_dead(const struct feechange *feechange)$/;"	f
feechange_side	daemon/feechange.h	/^static inline enum side feechange_side(enum feechange_state state)$/;"	f
feechange_state	daemon/feechange_state.h	/^enum feechange_state {$/;"	g
feechange_state_flags	daemon/feechange.c	/^int feechange_state_flags(enum feechange_state state)$/;"	f
feechange_state_from_name	daemon/feechange.c	/^enum feechange_state feechange_state_from_name(const char *name)$/;"	f
feechange_state_name	daemon/feechange.c	/^const char *feechange_state_name(enum feechange_state s)$/;"	f
feechanges	daemon/peer.h	/^	struct feechange *feechanges[FEECHANGE_STATE_INVALID];$/;"	m	struct:peer	typeref:struct:peer::feechange
feechanges_table	daemon/peer.c	/^struct feechanges_table {$/;"	s	file:
feerate	daemon/chaintopology.c	/^	u64 feerate;$/;"	m	struct:topology	file:
feerate_per_kw	wire/test/run-peer-wire.c	/^	u32 feerate_per_kw;$/;"	m	struct:msg_open_channel	file:
feerate_per_kw	wire/test/run-peer-wire.c	/^	u32 feerate_per_kw;$/;"	m	struct:msg_update_fee	file:
felem	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^typedef limb felem[5];$/;"	t	file:
fexpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^fexpand(limb *output, const u8 *in) {$/;"	f	file:
file	ccan/ccan/likely/likely.c	/^	const char *file;$/;"	m	struct:trace	file:
fill_block	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-ref.c	/^static void fill_block(const block *prev_block, const block *ref_block,$/;"	f	file:
fill_block	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-ssse3.c	/^static void fill_block(__m128i *state, const uint8_t *ref_block, uint8_t *next_block) {$/;"	f	file:
fill_block_with_xor	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-ref.c	/^static void fill_block_with_xor(const block *prev_block, const block *ref_block,$/;"	f	file:
fill_block_with_xor	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-ssse3.c	/^static void fill_block_with_xor(__m128i *state, const uint8_t *ref_block, uint8_t *next_block) {$/;"	f	file:
fill_first_blocks	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^void fill_first_blocks(uint8_t *blockhash, const argon2_instance_t *instance) {$/;"	f
fill_memory_blocks	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^int fill_memory_blocks(argon2_instance_t *instance) {$/;"	f
fill_segment	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^static fill_segment_fn fill_segment = fill_segment_ref;$/;"	v	file:
fill_segment_fn	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^typedef int (*fill_segment_fn)(const argon2_instance_t *instance,$/;"	t
fill_segment_ref	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-ref.c	/^int fill_segment_ref(const argon2_instance_t *instance,$/;"	f
fill_segment_ssse3	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-ssse3.c	/^int fill_segment_ssse3(const argon2_instance_t *instance,$/;"	f
final	daemon/secrets.c	/^	struct privkey commit, final;$/;"	m	struct:peer_secrets	typeref:struct:peer_secrets::	file:
final	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	/^        unsigned char final;$/;"	m	struct:poly1305_state_internal_t
final	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	/^        unsigned char final;$/;"	m	struct:poly1305_state_internal_t
final_key	lightning.pb-c.h	/^  BitcoinPubkey *final_key;$/;"	m	struct:_OpenChannel
finalize	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^void finalize(const argon2_context *context, argon2_instance_t *instance) {$/;"	f
finalkey	daemon/peer.h	/^	struct pubkey commitkey, finalkey;$/;"	m	struct:peer_visible_state	typeref:struct:peer_visible_state::
find_address	daemon/peer.c	/^static struct peer_address *find_address(struct lightningd_state *dstate,$/;"	f	file:
find_any_htlc	test/test_state_coverage.c	/^static struct htlc *find_any_htlc(const struct htlc *htlcs, size_t num,$/;"	f	file:
find_best_in	permute_tx.c	/^static size_t find_best_in(struct bitcoin_tx_input *inputs, size_t num)$/;"	f	file:
find_best_out	permute_tx.c	/^static size_t find_best_out(struct bitcoin_tx_output *outputs, size_t num)$/;"	f	file:
find_bolt	check-bolt.c	/^static struct bolt_file *find_bolt(const char *bolt_prefix,$/;"	f	file:
find_bolt_ref	check-bolt.c	/^static char *find_bolt_ref(char **p, size_t *len)$/;"	f	file:
find_by_pubkey	daemon/wallet.c	/^static struct wallet *find_by_pubkey(struct lightningd_state *dstate,$/;"	f	file:
find_cmd	daemon/jsonrpc.c	/^static const struct json_command *find_cmd(const char *buffer,$/;"	f	file:
find_commited_htlc	daemon/packets.c	/^static Pkt *find_commited_htlc(struct peer *peer, uint64_t id,$/;"	f	file:
find_empty	ccan/ccan/strmap/test/run-prefix.c	/^static bool find_empty(const char *index, char *value UNNEEDED, char *empty)$/;"	f	file:
find_first	ccan/ccan/timer/timer.c	/^static const struct timer *find_first(const struct list_head *list,$/;"	f	file:
find_htlc	test/test_protocol.c	/^static struct htlc *find_htlc(struct peer *peer, unsigned int htlc_id, int side)$/;"	f	file:
find_htlc	test/test_state_coverage.c	/^static struct htlc *find_htlc(const struct peer *peer, unsigned id)$/;"	f	file:
find_htlc_spend	test/test_state_coverage.c	/^static struct htlc *find_htlc_spend(const struct peer *peer,$/;"	f	file:
find_inv	daemon/invoice.c	/^static struct invoice *find_inv(const struct list_head *list,$/;"	f	file:
find_invoice_by_label	daemon/invoice.c	/^static struct invoice *find_invoice_by_label(const struct list_head *list,$/;"	f	file:
find_live_htlc	test/test_state_coverage.c	/^static struct htlc *find_live_htlc(const struct peer *peer,$/;"	f	file:
find_my_path	lightningd/lightningd.c	/^static const char *find_my_path(const tal_t *ctx, const char *argv0)$/;"	f	file:
find_output	find_p2sh_out.c	/^static u32 find_output(const struct bitcoin_tx *tx, const u8 *scriptpubkey)$/;"	f	file:
find_output	test/test_state_coverage.c	/^static bool find_output(const enum state_input *outputs, enum state_input out)$/;"	f	file:
find_p2wsh_out	find_p2sh_out.c	/^u32 find_p2wsh_out(const struct bitcoin_tx *tx, const u8 *witnessscript)$/;"	f
find_paid	daemon/invoice.c	/^static struct invoice *find_paid(struct invoices *invs,$/;"	f	file:
find_parent	ccan/ccan/tal/str/test/run-strreg.c	/^static bool find_parent(tal_t *child, tal_t *parent)$/;"	f	file:
find_pay_command	daemon/pay.c	/^static struct pay_command *find_pay_command(struct lightningd_state *dstate,$/;"	f	file:
find_peer	daemon/peer.c	/^struct peer *find_peer(struct lightningd_state *dstate, const struct pubkey *id)$/;"	f
find_peer	lightningd/lightningd.c	/^struct peer *find_peer(struct lightningd_state *dstate, const struct pubkey *id)$/;"	f
find_peer_by_pkhash	daemon/peer.c	/^struct peer *find_peer_by_pkhash(struct lightningd_state *dstate, const u8 *pkhash)$/;"	f
find_peer_json	daemon/peer.c	/^static struct peer *find_peer_json(struct lightningd_state *dstate,$/;"	f	file:
find_property	ccan/ccan/tal/tal.c	/^static void *find_property(const struct tal_hdr *parent, enum prop_type type)$/;"	f	file:
find_property_ptr	ccan/ccan/tal/tal.c	/^static struct prop_hdr **find_property_ptr(const struct tal_hdr *t,$/;"	f	file:
find_ptr	ccan/ccan/opt/test/run-set_alloc.c	/^static void **find_ptr(void *p)$/;"	f	file:
find_route	daemon/routing.c	/^struct pubkey *find_route(const tal_t *ctx,$/;"	f
find_string	ccan/ccan/strmap/test/run-iterate-const.c	/^static bool find_string(const char *str UNNEEDED, char *member, const char *cmp)$/;"	f	file:
find_taken	ccan/ccan/take/take.c	/^static size_t find_taken(const void *p)$/;"	f	file:
find_test	ccan/tools/configurator/configurator.c	/^static struct test *find_test(const char *name)$/;"	f	file:
find_their_old_tx	daemon/peer.c	/^static bool find_their_old_tx(struct peer *peer,$/;"	f	file:
find_unpaid	daemon/invoice.c	/^struct invoice *find_unpaid(struct invoices *invs, const struct sha256 *rhash)$/;"	f
find_vals	ccan/ccan/htable/test/run-type-int.c	/^static void find_vals(const struct htable_obj *ht,$/;"	f	file:
find_vals	ccan/ccan/htable/test/run-type.c	/^static void find_vals(const struct htable_obj *ht,$/;"	f	file:
find_vals	ccan/ccan/htable/test/run.c	/^static void find_vals(struct htable *ht,$/;"	f	file:
findport	daemon/test/scripts/vars.sh	/^findport()$/;"	f
finish	ccan/ccan/io/backend.h	/^	void (*finish)(struct io_conn *, void *arg);$/;"	m	struct:io_conn
finish_100	ccan/ccan/io/test/run-18-errno.c	/^static void finish_100(struct io_conn *conn, int *state)$/;"	f	file:
finish_EBADF	ccan/ccan/io/test/run-18-errno.c	/^static void finish_EBADF(struct io_conn *conn, int *state)$/;"	f	file:
finish_arg	ccan/ccan/io/backend.h	/^	void *finish_arg;$/;"	m	struct:io_conn
finish_child	ccan/ccan/ptr_valid/ptr_valid.c	/^static void finish_child(struct ptr_valid_batch *batch)$/;"	f	file:
finish_idle	ccan/ccan/io/test/run-06-idle.c	/^static void finish_idle(struct io_conn *conn, struct data *d)$/;"	f	file:
finish_jcon	daemon/jsonrpc.c	/^static void finish_jcon(struct io_conn *conn, struct json_connection *jcon)$/;"	f	file:
finish_ok	ccan/ccan/io/test/run-01-start-finish.c	/^static void finish_ok(struct io_conn *conn, int *state)$/;"	f	file:
finish_ok	ccan/ccan/io/test/run-02-read.c	/^static void finish_ok(struct io_conn *conn, struct data *d)$/;"	f	file:
finish_ok	ccan/ccan/io/test/run-03-readpartial.c	/^static void finish_ok(struct io_conn *conn, struct data *d)$/;"	f	file:
finish_ok	ccan/ccan/io/test/run-04-writepartial.c	/^static void finish_ok(struct io_conn *conn, struct data *d)$/;"	f	file:
finish_ok	ccan/ccan/io/test/run-05-write.c	/^static void finish_ok(struct io_conn *conn, struct data *d)$/;"	f	file:
finish_ok	ccan/ccan/io/test/run-07-break.c	/^static void finish_ok(struct io_conn *conn, struct data *d)$/;"	f	file:
finish_ok	ccan/ccan/io/test/run-12-bidir.c	/^static void finish_ok(struct io_conn *conn, struct data *d)$/;"	f	file:
finish_ok	ccan/ccan/io/test/run-14-duplex-both-read.c	/^static void finish_ok(struct io_conn *conn, struct data *d)$/;"	f	file:
finish_ok	ccan/ccan/io/test/run-15-timeout.c	/^static void finish_ok(struct io_conn *conn, struct data *d)$/;"	f	file:
finish_ok	ccan/ccan/io/test/run-16-duplex-test.c	/^static void finish_ok(struct io_conn *conn, struct data *d)$/;"	f	file:
finish_ok	ccan/ccan/io/test/run-17-homemade-io.c	/^static void finish_ok(struct io_conn *conn, struct packet *pkt)$/;"	f	file:
finish_ok	ccan/ccan/io/test/run-19-always.c	/^static void finish_ok(struct io_conn *conn, struct data *d)$/;"	f	file:
finish_waker	ccan/ccan/io/test/run-06-idle.c	/^static void finish_waker(struct io_conn *conn, struct data *d)$/;"	f	file:
finished	lightningd/subdaemon.h	/^	void (*finished)(struct subdaemon *sd, int status);$/;"	m	struct:subdaemon
first	ccan/ccan/timer/timer.h	/^	uint64_t first;$/;"	m	struct:timers
first_child	ccan/ccan/list/test/compile_ok-constant.c	/^static const struct child *first_child(const struct list_head *list)$/;"	f	file:
first_child	ccan/ccan/tal/tal.c	/^static struct tal_hdr *first_child(struct tal_hdr *parent)$/;"	f	file:
first_for_level	ccan/ccan/timer/timer.c	/^static const struct timer *first_for_level(struct timers *timers,$/;"	f	file:
first_lopt	ccan/ccan/opt/opt.c	/^const char *first_lopt(unsigned *i, unsigned *len)$/;"	f
first_name	ccan/ccan/opt/opt.c	/^static const char *first_name(const char *names, unsigned *len)$/;"	f	file:
first_opt	ccan/ccan/opt/opt.c	/^static const char *first_opt(unsigned *i, unsigned *len)$/;"	f	file:
first_per_commitment_point	wire/test/run-peer-wire.c	/^	struct pubkey first_per_commitment_point;$/;"	m	struct:msg_accept_channel	typeref:struct:msg_accept_channel::pubkey	file:
first_per_commitment_point	wire/test/run-peer-wire.c	/^	struct pubkey first_per_commitment_point;$/;"	m	struct:msg_open_channel	typeref:struct:msg_open_channel::pubkey	file:
first_sopt	ccan/ccan/opt/opt.c	/^const char *first_sopt(unsigned *i)$/;"	f
firstkey	libsodium/test/default/core1.c	/^static unsigned char firstkey[32];$/;"	v	file:
firstkey	libsodium/test/default/core2.c	/^static unsigned char firstkey[32]$/;"	v	file:
firstkey	libsodium/test/default/secretbox.c	/^static unsigned char firstkey[32]$/;"	v	file:
firstkey	libsodium/test/default/secretbox2.c	/^static unsigned char firstkey[32]$/;"	v	file:
firstkey	libsodium/test/default/secretbox_easy.c	/^static unsigned char firstkey[32]$/;"	v	file:
firstkey	libsodium/test/default/stream.c	/^static unsigned char firstkey[32]$/;"	v	file:
firstkey	libsodium/test/default/stream3.c	/^static unsigned char firstkey[32]$/;"	v	file:
firstkey	libsodium/test/default/stream4.c	/^static unsigned char firstkey[32]$/;"	v	file:
firsts	ccan/ccan/timer/timer.h	/^	uint64_t firsts[(64 + TIMER_LEVEL_BITS-1) \/ TIMER_LEVEL_BITS + 1];$/;"	m	struct:timers
fixed	lightning.pb-c.h	/^  int64_t fixed;$/;"	m	struct:_Funding
fixed_string	ccan/ccan/tal/path/path.c	/^static char *fixed_string(const tal_t *ctx,$/;"	f	file:
flags	ccan/tools/configurator/configurator.c	/^	const char *flags;$/;"	m	struct:test	file:
flags	daemon/routing.h	/^	u16 flags;$/;"	m	struct:node_connection
flags	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^    uint64_t flags;          \/*   8 bytes  *\/$/;"	m	struct:poly1305_state_internal_t	file:
flags	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint32_t flags; \/* array of bool options *\/$/;"	m	struct:Argon2_Context
flags	wire/test/run-peer-wire.c	/^	u16 flags;$/;"	m	struct:msg_channel_update	file:
fmonty	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^fmonty(limb *x2, limb *z2, \/* output 2Q *\/$/;"	f	file:
fmt	type_to_string.h	/^	char *(*fmt)(const tal_t *ctx, union printable_types u);$/;"	m	struct:type_to_string
fmt_abs_locktime	bitcoin/locktime.c	/^static char *fmt_abs_locktime(const tal_t *ctx, const struct abs_locktime *al)$/;"	f	file:
fmt_bitcoin_tx	bitcoin/tx.c	/^static char *fmt_bitcoin_tx(const tal_t *ctx, const struct bitcoin_tx *tx)$/;"	f	file:
fmt_channel_id	wire/fromwire.c	/^static char *fmt_channel_id(const tal_t *ctx, const struct channel_id *id)$/;"	f	file:
fmt_channel_oneside	daemon/channel.c	/^static char *fmt_channel_oneside(const tal_t *ctx,$/;"	f	file:
fmt_channel_state	daemon/channel.c	/^static char *fmt_channel_state(const tal_t *ctx,$/;"	f	file:
fmt_htlc	daemon/htlc.c	/^static char *fmt_htlc(const tal_t *ctx, const struct htlc *h)$/;"	f	file:
fmt_rel_locktime	bitcoin/locktime.c	/^static char *fmt_rel_locktime(const tal_t *ctx, const struct rel_locktime *rl)$/;"	f	file:
fmul	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^fmul(felem output, const felem in2, const felem in) {$/;"	f	file:
fn	ccan/ccan/typesafe_cb/test/run.c	/^	void (*fn)(int a, int b, void *arg);$/;"	m	struct:callback_preargs	file:
fn	ccan/ccan/typesafe_cb/test/run.c	/^	void (*fn)(void *arg);$/;"	m	struct:callback_onearg	file:
fn	ccan/ccan/typesafe_cb/test/run.c	/^	void (*fn)(void *arg, int a, int b);$/;"	m	struct:callback_postargs	file:
fn	secp256k1/src/util.h	/^    void (*fn)(const char *text, void* data);$/;"	m	struct:__anon20
foo	ccan/ccan/array_size/test/compile_fail-function-param.c	/^struct foo {$/;"	s	file:
foo	ccan/ccan/array_size/test/run.c	/^struct foo {$/;"	s	file:
foo	ccan/ccan/container_of/test/compile_fail-bad-type.c	/^struct foo {$/;"	s	file:
foo	ccan/ccan/container_of/test/compile_fail-types.c	/^struct foo {$/;"	s	file:
foo	ccan/ccan/container_of/test/compile_fail-var-types.c	/^struct foo {$/;"	s	file:
foo	ccan/ccan/container_of/test/run.c	/^struct foo {$/;"	s	file:
foo	ccan/ccan/endian/test/compile_ok-constant.c	/^struct foo {$/;"	s	file:
foo	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb_cast-multi.c	/^struct foo {$/;"	s	file:
foo	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb_cast.c	/^struct foo {$/;"	s	file:
force_add_htlc	daemon/channel.c	/^void force_add_htlc(struct channel_state *cstate, const struct htlc *htlc)$/;"	f
force_fail_htlc	daemon/channel.c	/^void force_fail_htlc(struct channel_state *cstate, const struct htlc *htlc)$/;"	f
force_fee	daemon/channel.c	/^bool force_fee(struct channel_state *cstate, uint64_t fee)$/;"	f
force_fulfill_htlc	daemon/channel.c	/^void force_fulfill_htlc(struct channel_state *cstate, const struct htlc *htlc)$/;"	f
force_remove_htlc	daemon/channel.c	/^static void force_remove_htlc(struct channel_state *cstate,$/;"	f	file:
forever_confirms	daemon/lightningd.h	/^	u32 forever_confirms;$/;"	m	struct:config
forget_uncommitted_changes	daemon/peer.c	/^static void forget_uncommitted_changes(struct peer *peer)$/;"	f	file:
found	ccan/ccan/strmap/test/run-iterate-const.c	/^static bool found = false;$/;"	v	file:
fp_res	libsodium/test/default/cmptest.h	/^FILE *fp_res;$/;"	v
fprintf	ccan/ccan/list/test/run-CCAN_LIST_DEBUG.c	13;"	d	file:
fprintf	ccan/ccan/list/test/run-check-corrupt.c	12;"	d	file:
fprintf	ccan/ccan/opt/test/run-helpers.c	17;"	d	file:
fragment	ccan/tools/configurator/configurator.c	/^	const char *fragment;$/;"	m	struct:test	file:
free	ccan/ccan/opt/private.h	/^	void (*free)(void *ptr);$/;"	m	struct:opt_alloc
free	ccan/ccan/opt/test/run-set_alloc.c	19;"	d	file:
free	ccan/ccan/opt/test/run-set_alloc.c	29;"	d	file:
free	ccan/ccan/tal/test/run-test-backend.c	24;"	d	file:
free_account	ccan/ccan/tal/test/run-groups-grow.c	/^static void free_account(void *p)$/;"	f	file:
free_blocks	daemon/chaintopology.c	/^static void free_blocks(struct lightningd_state *dstate, struct block *b)$/;"	f	file:
free_count	ccan/ccan/opt/test/run-set_alloc.c	/^static unsigned int alloc_count, realloc_count, free_count;$/;"	v	file:
free_mallocs	ccan/ccan/tal/benchmark/samba-allocs.c	/^static void free_mallocs(struct node *node)$/;"	f	file:
free_memory	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^static void free_memory(block_region *region) {$/;"	f	file:
free_noerr	ccan/ccan/noerr/noerr.c	/^void free_noerr(void *p)$/;"	f
free_region	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c	/^free_region(escrypt_region_t * region)$/;"	f
free_tallocs	ccan/ccan/tal/benchmark/samba-allocs.c	/^static void free_tallocs(struct node *node)$/;"	f	file:
free_tals	ccan/ccan/tal/benchmark/samba-allocs.c	/^static void free_tals(struct node *node)$/;"	f	file:
freefn	ccan/ccan/opt/test/run-set_alloc.c	/^static void freefn(void *ptr)$/;"	f	file:
freefn	ccan/ccan/tal/tal.c	/^static void (*freefn)(void *) = free;$/;"	v	file:
freq	libsodium/test/default/randombytes.c	/^static unsigned long long freq[256];$/;"	v	file:
from	daemon/peer.c	/^	enum feechange_state from, to;$/;"	m	struct:feechanges_table	typeref:enum:feechanges_table::feechange_state	file:
from	daemon/peer.c	/^	enum htlc_state from, to;$/;"	m	struct:htlcs_table	typeref:enum:htlcs_table::htlc_state	file:
from	test/test_protocol.c	/^	enum htlc_state from, to;$/;"	m	struct:state_table	typeref:enum:state_table::htlc_state	file:
from_base58	bitcoin/base58.c	/^static bool from_base58(u8 *version,$/;"	f	file:
from_base64	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	/^static const char *from_base64(void *dst, size_t *dst_len, const char *src) {$/;"	f	file:
from_child	ccan/ccan/ptr_valid/ptr_valid.h	/^	int to_child, from_child;$/;"	m	struct:ptr_valid_batch
from_sql_blob	daemon/db.c	/^static void from_sql_blob(sqlite3_stmt *stmt, int idx, void *p, size_t n)$/;"	f	file:
from_tal_hdr	ccan/ccan/tal/tal.c	/^static void *from_tal_hdr(const struct tal_hdr *hdr)$/;"	f	file:
from_tal_hdr_or_null	ccan/ccan/tal/tal.c	/^static void *from_tal_hdr_or_null(struct tal_hdr *hdr)$/;"	f	file:
fromhex	ccan/ccan/crypto/hkdf_sha256/test/api-rfc5869.c	/^static void *fromhex(const char *str, size_t *len)$/;"	f	file:
fromhex	ccan/ccan/crypto/hmac_sha256/test/api-rfc4231.c	/^static void *fromhex(const char *str, size_t *len)$/;"	f	file:
fromwire	wire/fromwire.c	/^const u8 *fromwire(const u8 **cursor, size_t *max, void *copy, size_t n)$/;"	f
fromwire_accept_channel	wire/gen_peer_wire.c	/^bool fromwire_accept_channel(const void *p, size_t *plen, struct channel_id *temporary_channel_id, u64 *dust_limit_satoshis, u64 *max_htlc_value_in_flight_msat, u64 *channel_reserve_satoshis, u32 *minimum_depth, u32 *htlc_minimum_msat, u16 *to_self_delay, u16 *max_accepted_htlcs, struct pubkey *funding_pubkey, struct pubkey *revocation_basepoint, struct pubkey *payment_basepoint, struct pubkey *delayed_payment_basepoint, struct pubkey *first_per_commitment_point)$/;"	f
fromwire_announcement_signatures	wire/gen_peer_wire.c	/^bool fromwire_announcement_signatures(const void *p, size_t *plen, struct channel_id *channel_id, secp256k1_ecdsa_signature *node_signature, secp256k1_ecdsa_signature *bitcoin_signature)$/;"	f
fromwire_bad_command	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_bad_command(const void *p, size_t *plen)$/;"	f
fromwire_bad_fdpass	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_bad_fdpass(const void *p, size_t *plen)$/;"	f
fromwire_bool	wire/fromwire.c	/^bool fromwire_bool(const u8 **cursor, size_t *max)$/;"	f
fromwire_channel_announcement	wire/gen_peer_wire.c	/^bool fromwire_channel_announcement(const tal_t *ctx, const void *p, size_t *plen, secp256k1_ecdsa_signature *node_signature_1, secp256k1_ecdsa_signature *node_signature_2, secp256k1_ecdsa_signature *bitcoin_signature_1, secp256k1_ecdsa_signature *bitcoin_signature_2, struct channel_id *channel_id, struct pubkey *node_id_1, struct pubkey *node_id_2, struct pubkey *bitcoin_key_1, struct pubkey *bitcoin_key_2, u8 **features)$/;"	f
fromwire_channel_config	lightningd/channel_config.c	/^struct channel_config *fromwire_channel_config(const tal_t *ctx,$/;"	f
fromwire_channel_id	wire/fromwire.c	/^void fromwire_channel_id(const u8 **cursor, size_t *max,$/;"	f
fromwire_channel_update	wire/gen_peer_wire.c	/^bool fromwire_channel_update(const void *p, size_t *plen, secp256k1_ecdsa_signature *signature, struct channel_id *channel_id, u32 *timestamp, u16 *flags, u16 *cltv_expiry_delta, u32 *htlc_minimum_msat, u32 *fee_base_msat, u32 *fee_proportional_millionths)$/;"	f
fromwire_closing_signed	wire/gen_peer_wire.c	/^bool fromwire_closing_signed(const void *p, size_t *plen, struct channel_id *channel_id, u64 *fee_satoshis, secp256k1_ecdsa_signature *signature)$/;"	f
fromwire_commit_sig	wire/gen_peer_wire.c	/^bool fromwire_commit_sig(const tal_t *ctx, const void *p, size_t *plen, struct channel_id *channel_id, secp256k1_ecdsa_signature *signature, secp256k1_ecdsa_signature **htlc_signature)$/;"	f
fromwire_crypto_state	lightningd/cryptomsg.c	/^struct crypto_state *fromwire_crypto_state(const tal_t *ctx,$/;"	f
fromwire_error	wire/gen_peer_wire.c	/^bool fromwire_error(const tal_t *ctx, const void *p, size_t *plen, struct channel_id *channel_id, u8 **data)$/;"	f
fromwire_funding_created	wire/gen_peer_wire.c	/^bool fromwire_funding_created(const void *p, size_t *plen, struct channel_id *temporary_channel_id, struct sha256 *txid, u8 *output_index, secp256k1_ecdsa_signature *signature)$/;"	f
fromwire_funding_locked	wire/gen_peer_wire.c	/^bool fromwire_funding_locked(const void *p, size_t *plen, struct channel_id *temporary_channel_id, struct channel_id *channel_id, struct pubkey *next_per_commitment_point)$/;"	f
fromwire_funding_signed	wire/gen_peer_wire.c	/^bool fromwire_funding_signed(const void *p, size_t *plen, struct channel_id *temporary_channel_id, secp256k1_ecdsa_signature *signature)$/;"	f
fromwire_gossipctl_new_peer	lightningd/gossip/gen_gossip_control_wire.c	/^bool fromwire_gossipctl_new_peer(const tal_t *ctx, const void *p, size_t *plen, u64 *unique_id, struct crypto_state **crypto_state)$/;"	f
fromwire_gossipctl_release_peer	lightningd/gossip/gen_gossip_control_wire.c	/^bool fromwire_gossipctl_release_peer(const void *p, size_t *plen, u64 *unique_id)$/;"	f
fromwire_gossipctl_release_peer_response	lightningd/gossip/gen_gossip_control_wire.c	/^bool fromwire_gossipctl_release_peer_response(const tal_t *ctx, const void *p, size_t *plen, u64 *unique_id, struct crypto_state **crypto_state)$/;"	f
fromwire_gossipstatus_bad_new_peer_request	lightningd/gossip/gen_gossip_status_wire.c	/^bool fromwire_gossipstatus_bad_new_peer_request(const void *p, size_t *plen)$/;"	f
fromwire_gossipstatus_bad_release_request	lightningd/gossip/gen_gossip_status_wire.c	/^bool fromwire_gossipstatus_bad_release_request(const void *p, size_t *plen)$/;"	f
fromwire_gossipstatus_bad_request	lightningd/gossip/gen_gossip_status_wire.c	/^bool fromwire_gossipstatus_bad_request(const void *p, size_t *plen)$/;"	f
fromwire_gossipstatus_fdpass_failed	lightningd/gossip/gen_gossip_status_wire.c	/^bool fromwire_gossipstatus_fdpass_failed(const void *p, size_t *plen)$/;"	f
fromwire_gossipstatus_init_failed	lightningd/gossip/gen_gossip_status_wire.c	/^bool fromwire_gossipstatus_init_failed(const void *p, size_t *plen)$/;"	f
fromwire_gossipstatus_peer_bad_msg	lightningd/gossip/gen_gossip_status_wire.c	/^bool fromwire_gossipstatus_peer_bad_msg(const tal_t *ctx, const void *p, size_t *plen, u64 *unique_id, u8 **err)$/;"	f
fromwire_gossipstatus_peer_nongossip	lightningd/gossip/gen_gossip_status_wire.c	/^bool fromwire_gossipstatus_peer_nongossip(const tal_t *ctx, const void *p, size_t *plen, u64 *unique_id, struct crypto_state **crypto_state, u8 **msg)$/;"	f
fromwire_gossipstatus_peer_ready	lightningd/gossip/gen_gossip_status_wire.c	/^bool fromwire_gossipstatus_peer_ready(const void *p, size_t *plen, u64 *unique_id)$/;"	f
fromwire_handshake_exit_req	lightningd/handshake/gen_handshake_control_wire.c	/^bool fromwire_handshake_exit_req(const void *p, size_t *plen)$/;"	f
fromwire_handshake_initiator_req	lightningd/handshake/gen_handshake_control_wire.c	/^bool fromwire_handshake_initiator_req(const void *p, size_t *plen, struct pubkey *my_id, struct pubkey *responder_id)$/;"	f
fromwire_handshake_initiator_resp	lightningd/handshake/gen_handshake_control_wire.c	/^bool fromwire_handshake_initiator_resp(const tal_t *ctx, const void *p, size_t *plen, struct crypto_state **cs)$/;"	f
fromwire_handshake_responder_req	lightningd/handshake/gen_handshake_control_wire.c	/^bool fromwire_handshake_responder_req(const void *p, size_t *plen, struct pubkey *my_id)$/;"	f
fromwire_handshake_responder_resp	lightningd/handshake/gen_handshake_control_wire.c	/^bool fromwire_handshake_responder_resp(const tal_t *ctx, const void *p, size_t *plen, struct pubkey *initiator_id, struct crypto_state **cs)$/;"	f
fromwire_hsm_ecdh_req	lightningd/hsm/gen_hsm_client_wire.c	/^bool fromwire_hsm_ecdh_req(const void *p, size_t *plen, struct pubkey *point)$/;"	f
fromwire_hsm_ecdh_resp	lightningd/hsm/gen_hsm_client_wire.c	/^bool fromwire_hsm_ecdh_resp(const void *p, size_t *plen, struct sha256 *ss)$/;"	f
fromwire_hsmctl_hsmfd_ecdh	lightningd/hsm/gen_hsm_control_wire.c	/^bool fromwire_hsmctl_hsmfd_ecdh(const void *p, size_t *plen, u64 *unique_id)$/;"	f
fromwire_hsmctl_hsmfd_ecdh_response	lightningd/hsm/gen_hsm_control_wire.c	/^bool fromwire_hsmctl_hsmfd_ecdh_response(const void *p, size_t *plen)$/;"	f
fromwire_hsmctl_init_load	lightningd/hsm/gen_hsm_control_wire.c	/^bool fromwire_hsmctl_init_load(const void *p, size_t *plen)$/;"	f
fromwire_hsmctl_init_new	lightningd/hsm/gen_hsm_control_wire.c	/^bool fromwire_hsmctl_init_new(const void *p, size_t *plen)$/;"	f
fromwire_hsmctl_init_response	lightningd/hsm/gen_hsm_control_wire.c	/^bool fromwire_hsmctl_init_response(const void *p, size_t *plen, struct pubkey *node_id)$/;"	f
fromwire_hsmctl_shutdown	lightningd/hsm/gen_hsm_control_wire.c	/^bool fromwire_hsmctl_shutdown(const void *p, size_t *plen)$/;"	f
fromwire_hsmstatus_bad_request	lightningd/hsm/gen_hsm_status_wire.c	/^bool fromwire_hsmstatus_bad_request(const void *p, size_t *plen)$/;"	f
fromwire_hsmstatus_client_bad_request	lightningd/hsm/gen_hsm_status_wire.c	/^bool fromwire_hsmstatus_client_bad_request(const tal_t *ctx, const void *p, size_t *plen, u64 *unique_id, u8 **msg)$/;"	f
fromwire_hsmstatus_fd_failed	lightningd/hsm/gen_hsm_status_wire.c	/^bool fromwire_hsmstatus_fd_failed(const void *p, size_t *plen)$/;"	f
fromwire_hsmstatus_init_failed	lightningd/hsm/gen_hsm_status_wire.c	/^bool fromwire_hsmstatus_init_failed(const void *p, size_t *plen)$/;"	f
fromwire_hsmstatus_writemsg_failed	lightningd/hsm/gen_hsm_status_wire.c	/^bool fromwire_hsmstatus_writemsg_failed(const void *p, size_t *plen)$/;"	f
fromwire_init	wire/gen_peer_wire.c	/^bool fromwire_init(const tal_t *ctx, const void *p, size_t *plen, u8 **globalfeatures, u8 **localfeatures)$/;"	f
fromwire_initr_act1_bad_ecdh_for_ss	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_initr_act1_bad_ecdh_for_ss(const void *p, size_t *plen)$/;"	f
fromwire_initr_act1_write_failed	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_initr_act1_write_failed(const void *p, size_t *plen)$/;"	f
fromwire_initr_act2_bad_ecdh_for_ss	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_initr_act2_bad_ecdh_for_ss(const void *p, size_t *plen)$/;"	f
fromwire_initr_act2_bad_pubkey	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_initr_act2_bad_pubkey(const void *p, size_t *plen)$/;"	f
fromwire_initr_act2_bad_tag	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_initr_act2_bad_tag(const void *p, size_t *plen)$/;"	f
fromwire_initr_act2_bad_version	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_initr_act2_bad_version(const void *p, size_t *plen)$/;"	f
fromwire_initr_act2_read_failed	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_initr_act2_read_failed(const void *p, size_t *plen)$/;"	f
fromwire_initr_act3_bad_hsm_ecdh	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_initr_act3_bad_hsm_ecdh(const void *p, size_t *plen)$/;"	f
fromwire_initr_act3_write_failed	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_initr_act3_write_failed(const void *p, size_t *plen)$/;"	f
fromwire_initr_act_one	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_initr_act_one(const void *p, size_t *plen)$/;"	f
fromwire_initr_act_three	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_initr_act_three(const void *p, size_t *plen)$/;"	f
fromwire_initr_act_two	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_initr_act_two(const void *p, size_t *plen)$/;"	f
fromwire_ipv6	wire/fromwire.c	/^void fromwire_ipv6(const u8 **cursor, size_t *max, struct ipv6 *ipv6)$/;"	f
fromwire_node_announcement	wire/gen_peer_wire.c	/^bool fromwire_node_announcement(const tal_t *ctx, const void *p, size_t *plen, secp256k1_ecdsa_signature *signature, u32 *timestamp, struct pubkey *node_id, u8 rgb_color[3], u8 alias[32], u8 **features, u8 **addresses)$/;"	f
fromwire_open_channel	wire/gen_peer_wire.c	/^bool fromwire_open_channel(const void *p, size_t *plen, struct channel_id *temporary_channel_id, u64 *funding_satoshis, u64 *push_msat, u64 *dust_limit_satoshis, u64 *max_htlc_value_in_flight_msat, u64 *channel_reserve_satoshis, u32 *htlc_minimum_msat, u32 *feerate_per_kw, u16 *to_self_delay, u16 *max_accepted_htlcs, struct pubkey *funding_pubkey, struct pubkey *revocation_basepoint, struct pubkey *payment_basepoint, struct pubkey *delayed_payment_basepoint, struct pubkey *first_per_commitment_point)$/;"	f
fromwire_pad	wire/fromwire.c	/^void fromwire_pad(const u8 **cursor, size_t *max, size_t num)$/;"	f
fromwire_pad	wire/test/run-peer-wire.c	/^void fromwire_pad(const u8 **cursor, size_t *max, size_t num)$/;"	f
fromwire_pad	wire/test/run-peer-wire.c	11;"	d	file:
fromwire_pad	wire/test/run-peer-wire.c	7;"	d	file:
fromwire_pad_arr	wire/test/run-peer-wire.c	/^static void *fromwire_pad_arr;$/;"	v	file:
fromwire_peektype	wire/fromwire.c	/^int fromwire_peektype(const u8 *cursor)$/;"	f
fromwire_pubkey	wire/fromwire.c	/^void fromwire_pubkey(const u8 **cursor, size_t *max, struct pubkey *pubkey)$/;"	f
fromwire_respr_act1_bad_hsm_ecdh	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_respr_act1_bad_hsm_ecdh(const void *p, size_t *plen)$/;"	f
fromwire_respr_act1_bad_pubkey	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_respr_act1_bad_pubkey(const void *p, size_t *plen)$/;"	f
fromwire_respr_act1_bad_tag	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_respr_act1_bad_tag(const void *p, size_t *plen)$/;"	f
fromwire_respr_act1_bad_version	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_respr_act1_bad_version(const void *p, size_t *plen)$/;"	f
fromwire_respr_act1_read_failed	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_respr_act1_read_failed(const void *p, size_t *plen)$/;"	f
fromwire_respr_act2_bad_ecdh_for_ss	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_respr_act2_bad_ecdh_for_ss(const void *p, size_t *plen)$/;"	f
fromwire_respr_act2_write_failed	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_respr_act2_write_failed(const void *p, size_t *plen)$/;"	f
fromwire_respr_act3_bad_ciphertext	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_respr_act3_bad_ciphertext(const void *p, size_t *plen)$/;"	f
fromwire_respr_act3_bad_ecdh_for_ss	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_respr_act3_bad_ecdh_for_ss(const void *p, size_t *plen)$/;"	f
fromwire_respr_act3_bad_pubkey	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_respr_act3_bad_pubkey(const void *p, size_t *plen)$/;"	f
fromwire_respr_act3_bad_tag	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_respr_act3_bad_tag(const void *p, size_t *plen)$/;"	f
fromwire_respr_act3_bad_version	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_respr_act3_bad_version(const void *p, size_t *plen)$/;"	f
fromwire_respr_act3_read_failed	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_respr_act3_read_failed(const void *p, size_t *plen)$/;"	f
fromwire_respr_act_one	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_respr_act_one(const void *p, size_t *plen)$/;"	f
fromwire_respr_act_three	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_respr_act_three(const void *p, size_t *plen)$/;"	f
fromwire_respr_act_two	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_respr_act_two(const void *p, size_t *plen)$/;"	f
fromwire_revoke_and_ack	wire/gen_peer_wire.c	/^bool fromwire_revoke_and_ack(const tal_t *ctx, const void *p, size_t *plen, struct channel_id *channel_id, struct sha256 *per_commitment_secret, struct pubkey *next_per_commitment_point, secp256k1_ecdsa_signature **htlc_timeout_signature)$/;"	f
fromwire_secp256k1_ecdsa_signature	wire/fromwire.c	/^void fromwire_secp256k1_ecdsa_signature(const u8 **cursor,$/;"	f
fromwire_secp256k1_ecdsa_signature_array	wire/fromwire.c	/^void fromwire_secp256k1_ecdsa_signature_array(const u8 **cursor, size_t *max,$/;"	f
fromwire_sha256	wire/fromwire.c	/^void fromwire_sha256(const u8 **cursor, size_t *max, struct sha256 *sha256)$/;"	f
fromwire_shutdown	wire/gen_peer_wire.c	/^bool fromwire_shutdown(const tal_t *ctx, const void *p, size_t *plen, struct channel_id *channel_id, u8 **scriptpubkey)$/;"	f
fromwire_struct_accept_channel	wire/test/run-peer-wire.c	/^static struct msg_accept_channel *fromwire_struct_accept_channel(const tal_t *ctx, const void *p, size_t *plen)$/;"	f	file:
fromwire_struct_announcement_signatures	wire/test/run-peer-wire.c	/^static struct msg_announcement_signatures *fromwire_struct_announcement_signatures(const tal_t *ctx, const void *p, size_t *plen)$/;"	f	file:
fromwire_struct_channel_announcement	wire/test/run-peer-wire.c	/^static struct msg_channel_announcement *fromwire_struct_channel_announcement(const tal_t *ctx, const void *p, size_t *plen)$/;"	f	file:
fromwire_struct_channel_update	wire/test/run-peer-wire.c	/^static struct msg_channel_update *fromwire_struct_channel_update(const tal_t *ctx, const void *p, size_t *plen)$/;"	f	file:
fromwire_struct_closing_signed	wire/test/run-peer-wire.c	/^static struct msg_closing_signed *fromwire_struct_closing_signed(const tal_t *ctx, const void *p, size_t *plen)$/;"	f	file:
fromwire_struct_commit_sig	wire/test/run-peer-wire.c	/^static struct msg_commit_sig *fromwire_struct_commit_sig(const tal_t *ctx, const void *p, size_t *plen)$/;"	f	file:
fromwire_struct_error	wire/test/run-peer-wire.c	/^static struct msg_error *fromwire_struct_error(const tal_t *ctx, const void *p, size_t *plen)$/;"	f	file:
fromwire_struct_funding_created	wire/test/run-peer-wire.c	/^static struct msg_funding_created *fromwire_struct_funding_created(const tal_t *ctx, const void *p, size_t *plen)$/;"	f	file:
fromwire_struct_funding_locked	wire/test/run-peer-wire.c	/^static struct msg_funding_locked *fromwire_struct_funding_locked(const tal_t *ctx, const void *p, size_t *plen)$/;"	f	file:
fromwire_struct_funding_signed	wire/test/run-peer-wire.c	/^static struct msg_funding_signed *fromwire_struct_funding_signed(const tal_t *ctx, const void *p, size_t *plen)$/;"	f	file:
fromwire_struct_init	wire/test/run-peer-wire.c	/^static struct msg_init *fromwire_struct_init(const tal_t *ctx, const void *p, size_t *plen)$/;"	f	file:
fromwire_struct_node_announcement	wire/test/run-peer-wire.c	/^static struct msg_node_announcement *fromwire_struct_node_announcement(const tal_t *ctx, const void *p, size_t *plen)$/;"	f	file:
fromwire_struct_open_channel	wire/test/run-peer-wire.c	/^static struct msg_open_channel *fromwire_struct_open_channel(const tal_t *ctx, const void *p, size_t *plen)$/;"	f	file:
fromwire_struct_revoke_and_ack	wire/test/run-peer-wire.c	/^static struct msg_revoke_and_ack *fromwire_struct_revoke_and_ack(const tal_t *ctx, const void *p, size_t *plen)$/;"	f	file:
fromwire_struct_shutdown	wire/test/run-peer-wire.c	/^static struct msg_shutdown *fromwire_struct_shutdown(const tal_t *ctx, const void *p, size_t *plen)$/;"	f	file:
fromwire_struct_update_add_htlc	wire/test/run-peer-wire.c	/^static struct msg_update_add_htlc *fromwire_struct_update_add_htlc(const tal_t *ctx, const void *p, size_t *plen)$/;"	f	file:
fromwire_struct_update_fail_htlc	wire/test/run-peer-wire.c	/^static struct msg_update_fail_htlc *fromwire_struct_update_fail_htlc(const tal_t *ctx, const void *p, size_t *plen)$/;"	f	file:
fromwire_struct_update_fee	wire/test/run-peer-wire.c	/^static struct msg_update_fee *fromwire_struct_update_fee(const tal_t *ctx, const void *p, size_t *plen)$/;"	f	file:
fromwire_struct_update_fulfill_htlc	wire/test/run-peer-wire.c	/^static struct msg_update_fulfill_htlc *fromwire_struct_update_fulfill_htlc(const tal_t *ctx, const void *p, size_t *plen)$/;"	f	file:
fromwire_success	lightningd/handshake/gen_handshake_status_wire.c	/^bool fromwire_success(const void *p, size_t *plen)$/;"	f
fromwire_u16	wire/fromwire.c	/^u16 fromwire_u16(const u8 **cursor, size_t *max)$/;"	f
fromwire_u32	wire/fromwire.c	/^u32 fromwire_u32(const u8 **cursor, size_t *max)$/;"	f
fromwire_u64	wire/fromwire.c	/^u64 fromwire_u64(const u8 **cursor, size_t *max)$/;"	f
fromwire_u8	wire/fromwire.c	/^u8 fromwire_u8(const u8 **cursor, size_t *max)$/;"	f
fromwire_u8_array	wire/fromwire.c	/^void fromwire_u8_array(const u8 **cursor, size_t *max, u8 *arr, size_t num)$/;"	f
fromwire_update_add_htlc	wire/gen_peer_wire.c	/^bool fromwire_update_add_htlc(const void *p, size_t *plen, struct channel_id *channel_id, u64 *id, u32 *amount_msat, u32 *cltv_expiry, struct sha256 *payment_hash, u8 onion_routing_packet[1254])$/;"	f
fromwire_update_fail_htlc	wire/gen_peer_wire.c	/^bool fromwire_update_fail_htlc(const tal_t *ctx, const void *p, size_t *plen, struct channel_id *channel_id, u64 *id, u8 **reason)$/;"	f
fromwire_update_fail_malformed_htlc	wire/gen_peer_wire.c	/^bool fromwire_update_fail_malformed_htlc(const void *p, size_t *plen, struct channel_id *channel_id, u64 *id, struct sha256 *sha256_of_onion, u16 *failure_code)$/;"	f
fromwire_update_fee	wire/gen_peer_wire.c	/^bool fromwire_update_fee(const void *p, size_t *plen, struct channel_id *channel_id, u32 *feerate_per_kw)$/;"	f
fromwire_update_fulfill_htlc	wire/gen_peer_wire.c	/^bool fromwire_update_fulfill_htlc(const void *p, size_t *plen, struct channel_id *channel_id, u64 *id, struct sha256 *payment_preimage)$/;"	f
fscalar_product	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^fscalar_product(felem output, const felem in, const limb scalar) {$/;"	f	file:
fsquare_times	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^fsquare_times(felem output, const felem in, limb count) {$/;"	f	file:
fsum	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^fsum(limb *output, const limb *in) {$/;"	f	file:
fulfill_onchain	daemon/peer.c	/^static bool fulfill_onchain(struct peer *peer, struct htlc *htlc)$/;"	f	file:
full_txs	daemon/chaintopology.c	/^	struct bitcoin_tx **full_txs;$/;"	m	struct:block	typeref:struct:block::bitcoin_tx	file:
func_add_hook	libsodium/build-aux/ltmain.sh	/^func_add_hook ()$/;"	f
func_add_hook	libsodium/libtool	/^func_add_hook ()$/;"	f
func_add_hook	secp256k1/build-aux/ltmain.sh	/^func_add_hook ()$/;"	f
func_add_hook	secp256k1/libtool	/^func_add_hook ()$/;"	f
func_append	libsodium/build-aux/ltmain.sh	/^  func_append ()$/;"	f
func_append	libsodium/libtool	/^  func_append ()$/;"	f
func_append	secp256k1/build-aux/ltmain.sh	/^  func_append ()$/;"	f
func_append	secp256k1/libtool	/^  func_append ()$/;"	f
func_append_quoted	libsodium/build-aux/ltmain.sh	/^  func_append_quoted ()$/;"	f
func_append_quoted	libsodium/libtool	/^  func_append_quoted ()$/;"	f
func_append_quoted	secp256k1/build-aux/ltmain.sh	/^  func_append_quoted ()$/;"	f
func_append_quoted	secp256k1/libtool	/^  func_append_quoted ()$/;"	f
func_append_uniq	libsodium/build-aux/ltmain.sh	/^func_append_uniq ()$/;"	f
func_append_uniq	libsodium/libtool	/^func_append_uniq ()$/;"	f
func_append_uniq	secp256k1/build-aux/ltmain.sh	/^func_append_uniq ()$/;"	f
func_append_uniq	secp256k1/libtool	/^func_append_uniq ()$/;"	f
func_arith	libsodium/build-aux/ltmain.sh	/^  func_arith ()$/;"	f
func_arith	libsodium/libtool	/^  func_arith ()$/;"	f
func_arith	secp256k1/build-aux/ltmain.sh	/^  func_arith ()$/;"	f
func_arith	secp256k1/libtool	/^  func_arith ()$/;"	f
func_cc_basename	libsodium/config.status	/^func_cc_basename ()$/;"	f
func_cc_basename	libsodium/configure	/^func_cc_basename ()$/;"	f
func_cc_basename	libsodium/libtool	/^func_cc_basename ()$/;"	f
func_cc_basename	secp256k1/config.status	/^func_cc_basename ()$/;"	f
func_cc_basename	secp256k1/configure	/^func_cc_basename ()$/;"	f
func_cc_basename	secp256k1/libtool	/^func_cc_basename ()$/;"	f
func_check_prog_grep	libsodium/build-aux/ltmain.sh	/^  func_check_prog_grep ()$/;"	f
func_check_prog_grep	libsodium/libtool	/^  func_check_prog_grep ()$/;"	f
func_check_prog_grep	secp256k1/build-aux/ltmain.sh	/^  func_check_prog_grep ()$/;"	f
func_check_prog_grep	secp256k1/libtool	/^  func_check_prog_grep ()$/;"	f
func_check_prog_sed	libsodium/build-aux/ltmain.sh	/^  func_check_prog_sed ()$/;"	f
func_check_prog_sed	libsodium/libtool	/^  func_check_prog_sed ()$/;"	f
func_check_prog_sed	secp256k1/build-aux/ltmain.sh	/^  func_check_prog_sed ()$/;"	f
func_check_prog_sed	secp256k1/libtool	/^  func_check_prog_sed ()$/;"	f
func_check_version_match	libsodium/build-aux/ltmain.sh	/^func_check_version_match ()$/;"	f
func_check_version_match	libsodium/libtool	/^func_check_version_match ()$/;"	f
func_check_version_match	secp256k1/build-aux/ltmain.sh	/^func_check_version_match ()$/;"	f
func_check_version_match	secp256k1/libtool	/^func_check_version_match ()$/;"	f
func_cl_dashL	libsodium/build-aux/compile	/^func_cl_dashL ()$/;"	f
func_cl_dashL	secp256k1/build-aux/compile	/^func_cl_dashL ()$/;"	f
func_cl_dashl	libsodium/build-aux/compile	/^func_cl_dashl ()$/;"	f
func_cl_dashl	secp256k1/build-aux/compile	/^func_cl_dashl ()$/;"	f
func_cl_wrapper	libsodium/build-aux/compile	/^func_cl_wrapper ()$/;"	f
func_cl_wrapper	secp256k1/build-aux/compile	/^func_cl_wrapper ()$/;"	f
func_config	libsodium/build-aux/ltmain.sh	/^func_config ()$/;"	f
func_config	libsodium/libtool	/^func_config ()$/;"	f
func_config	secp256k1/build-aux/ltmain.sh	/^func_config ()$/;"	f
func_config	secp256k1/libtool	/^func_config ()$/;"	f
func_convert_core_file_wine_to_w32	libsodium/build-aux/ltmain.sh	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_file_wine_to_w32	libsodium/libtool	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_file_wine_to_w32	secp256k1/build-aux/ltmain.sh	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_file_wine_to_w32	secp256k1/libtool	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	libsodium/build-aux/ltmain.sh	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	libsodium/libtool	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	secp256k1/build-aux/ltmain.sh	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	secp256k1/libtool	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	libsodium/build-aux/ltmain.sh	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	libsodium/libtool	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	secp256k1/build-aux/ltmain.sh	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	secp256k1/libtool	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_file_check	libsodium/build-aux/ltmain.sh	/^func_convert_file_check ()$/;"	f
func_convert_file_check	libsodium/libtool	/^func_convert_file_check ()$/;"	f
func_convert_file_check	secp256k1/build-aux/ltmain.sh	/^func_convert_file_check ()$/;"	f
func_convert_file_check	secp256k1/libtool	/^func_convert_file_check ()$/;"	f
func_convert_file_cygwin_to_w32	libsodium/build-aux/ltmain.sh	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_cygwin_to_w32	libsodium/libtool	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_cygwin_to_w32	secp256k1/build-aux/ltmain.sh	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_cygwin_to_w32	secp256k1/libtool	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_msys_to_cygwin	libsodium/build-aux/ltmain.sh	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_cygwin	libsodium/libtool	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_cygwin	secp256k1/build-aux/ltmain.sh	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_cygwin	secp256k1/libtool	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_w32	libsodium/build-aux/ltmain.sh	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_msys_to_w32	libsodium/libtool	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_msys_to_w32	secp256k1/build-aux/ltmain.sh	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_msys_to_w32	secp256k1/libtool	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_nix_to_cygwin	libsodium/build-aux/ltmain.sh	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_cygwin	libsodium/libtool	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_cygwin	secp256k1/build-aux/ltmain.sh	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_cygwin	secp256k1/libtool	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_w32	libsodium/build-aux/ltmain.sh	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_nix_to_w32	libsodium/libtool	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_nix_to_w32	secp256k1/build-aux/ltmain.sh	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_nix_to_w32	secp256k1/libtool	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_noop	libsodium/build-aux/ltmain.sh	/^func_convert_file_noop ()$/;"	f
func_convert_file_noop	libsodium/libtool	/^func_convert_file_noop ()$/;"	f
func_convert_file_noop	secp256k1/build-aux/ltmain.sh	/^func_convert_file_noop ()$/;"	f
func_convert_file_noop	secp256k1/libtool	/^func_convert_file_noop ()$/;"	f
func_convert_path_check	libsodium/build-aux/ltmain.sh	/^func_convert_path_check ()$/;"	f
func_convert_path_check	libsodium/libtool	/^func_convert_path_check ()$/;"	f
func_convert_path_check	secp256k1/build-aux/ltmain.sh	/^func_convert_path_check ()$/;"	f
func_convert_path_check	secp256k1/libtool	/^func_convert_path_check ()$/;"	f
func_convert_path_cygwin_to_w32	libsodium/build-aux/ltmain.sh	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_cygwin_to_w32	libsodium/libtool	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_cygwin_to_w32	secp256k1/build-aux/ltmain.sh	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_cygwin_to_w32	secp256k1/libtool	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_front_back_pathsep	libsodium/build-aux/ltmain.sh	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_front_back_pathsep	libsodium/libtool	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_front_back_pathsep	secp256k1/build-aux/ltmain.sh	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_front_back_pathsep	secp256k1/libtool	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_msys_to_cygwin	libsodium/build-aux/ltmain.sh	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_cygwin	libsodium/libtool	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_cygwin	secp256k1/build-aux/ltmain.sh	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_cygwin	secp256k1/libtool	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_w32	libsodium/build-aux/ltmain.sh	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_msys_to_w32	libsodium/libtool	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_msys_to_w32	secp256k1/build-aux/ltmain.sh	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_msys_to_w32	secp256k1/libtool	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_nix_to_cygwin	libsodium/build-aux/ltmain.sh	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_cygwin	libsodium/libtool	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_cygwin	secp256k1/build-aux/ltmain.sh	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_cygwin	secp256k1/libtool	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_w32	libsodium/build-aux/ltmain.sh	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_nix_to_w32	libsodium/libtool	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_nix_to_w32	secp256k1/build-aux/ltmain.sh	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_nix_to_w32	secp256k1/libtool	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_noop	libsodium/build-aux/ltmain.sh	/^func_convert_path_noop ()$/;"	f
func_convert_path_noop	libsodium/libtool	/^func_convert_path_noop ()$/;"	f
func_convert_path_noop	secp256k1/build-aux/ltmain.sh	/^func_convert_path_noop ()$/;"	f
func_convert_path_noop	secp256k1/libtool	/^func_convert_path_noop ()$/;"	f
func_cygming_dll_for_implib	libsodium/build-aux/ltmain.sh	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib	libsodium/libtool	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib	secp256k1/build-aux/ltmain.sh	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib	secp256k1/libtool	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib_fallback	libsodium/build-aux/ltmain.sh	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback	libsodium/libtool	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback	secp256k1/build-aux/ltmain.sh	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback	secp256k1/libtool	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback_core	libsodium/build-aux/ltmain.sh	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_dll_for_implib_fallback_core	libsodium/libtool	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_dll_for_implib_fallback_core	secp256k1/build-aux/ltmain.sh	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_dll_for_implib_fallback_core	secp256k1/libtool	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_gnu_implib_p	libsodium/build-aux/ltmain.sh	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_gnu_implib_p	libsodium/libtool	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_gnu_implib_p	secp256k1/build-aux/ltmain.sh	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_gnu_implib_p	secp256k1/libtool	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_ms_implib_p	libsodium/build-aux/ltmain.sh	/^func_cygming_ms_implib_p ()$/;"	f
func_cygming_ms_implib_p	libsodium/libtool	/^func_cygming_ms_implib_p ()$/;"	f
func_cygming_ms_implib_p	secp256k1/build-aux/ltmain.sh	/^func_cygming_ms_implib_p ()$/;"	f
func_cygming_ms_implib_p	secp256k1/libtool	/^func_cygming_ms_implib_p ()$/;"	f
func_cygpath	libsodium/build-aux/ltmain.sh	/^func_cygpath ()$/;"	f
func_cygpath	libsodium/libtool	/^func_cygpath ()$/;"	f
func_cygpath	secp256k1/build-aux/ltmain.sh	/^func_cygpath ()$/;"	f
func_cygpath	secp256k1/libtool	/^func_cygpath ()$/;"	f
func_dll_def_p	libsodium/build-aux/ltmain.sh	/^func_dll_def_p ()$/;"	f
func_dll_def_p	libsodium/libtool	/^func_dll_def_p ()$/;"	f
func_dll_def_p	secp256k1/build-aux/ltmain.sh	/^func_dll_def_p ()$/;"	f
func_dll_def_p	secp256k1/libtool	/^func_dll_def_p ()$/;"	f
func_echo	libsodium/build-aux/ltmain.sh	/^func_echo ()$/;"	f
func_echo	libsodium/libtool	/^func_echo ()$/;"	f
func_echo	secp256k1/build-aux/ltmain.sh	/^func_echo ()$/;"	f
func_echo	secp256k1/libtool	/^func_echo ()$/;"	f
func_echo_all	libsodium/build-aux/ltmain.sh	/^func_echo_all ()$/;"	f
func_echo_all	libsodium/configure	/^func_echo_all ()$/;"	f
func_echo_all	libsodium/libtool	/^func_echo_all ()$/;"	f
func_echo_all	secp256k1/build-aux/ltmain.sh	/^func_echo_all ()$/;"	f
func_echo_all	secp256k1/configure	/^func_echo_all ()$/;"	f
func_echo_all	secp256k1/libtool	/^func_echo_all ()$/;"	f
func_echo_infix_1	libsodium/build-aux/ltmain.sh	/^func_echo_infix_1 ()$/;"	f
func_echo_infix_1	libsodium/libtool	/^func_echo_infix_1 ()$/;"	f
func_echo_infix_1	secp256k1/build-aux/ltmain.sh	/^func_echo_infix_1 ()$/;"	f
func_echo_infix_1	secp256k1/libtool	/^func_echo_infix_1 ()$/;"	f
func_emit_cwrapperexe_src	libsodium/build-aux/ltmain.sh	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_cwrapperexe_src	libsodium/libtool	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_cwrapperexe_src	secp256k1/build-aux/ltmain.sh	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_cwrapperexe_src	secp256k1/libtool	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_wrapper	libsodium/build-aux/ltmain.sh	/^func_emit_wrapper ()$/;"	f
func_emit_wrapper	libsodium/libtool	/^func_emit_wrapper ()$/;"	f
func_emit_wrapper	secp256k1/build-aux/ltmain.sh	/^func_emit_wrapper ()$/;"	f
func_emit_wrapper	secp256k1/libtool	/^func_emit_wrapper ()$/;"	f
func_enable_tag	libsodium/build-aux/ltmain.sh	/^func_enable_tag ()$/;"	f
func_enable_tag	libsodium/libtool	/^func_enable_tag ()$/;"	f
func_enable_tag	secp256k1/build-aux/ltmain.sh	/^func_enable_tag ()$/;"	f
func_enable_tag	secp256k1/libtool	/^func_enable_tag ()$/;"	f
func_error	libsodium/build-aux/ltmain.sh	/^func_error ()$/;"	f
func_error	libsodium/libtool	/^func_error ()$/;"	f
func_error	secp256k1/build-aux/ltmain.sh	/^func_error ()$/;"	f
func_error	secp256k1/libtool	/^func_error ()$/;"	f
func_exec_program	libsodium/build-aux/ltmain.sh	/^func_exec_program ()$/;"	f
func_exec_program	libsodium/libtool	/^func_exec_program ()$/;"	f
func_exec_program	secp256k1/build-aux/ltmain.sh	/^func_exec_program ()$/;"	f
func_exec_program	secp256k1/libtool	/^func_exec_program ()$/;"	f
func_exec_program_core	libsodium/build-aux/ltmain.sh	/^func_exec_program_core ()$/;"	f
func_exec_program_core	libsodium/libtool	/^func_exec_program_core ()$/;"	f
func_exec_program_core	secp256k1/build-aux/ltmain.sh	/^func_exec_program_core ()$/;"	f
func_exec_program_core	secp256k1/libtool	/^func_exec_program_core ()$/;"	f
func_executable_p	libsodium/build-aux/ltmain.sh	/^func_executable_p ()$/;"	f
func_executable_p	libsodium/libtool	/^func_executable_p ()$/;"	f
func_executable_p	secp256k1/build-aux/ltmain.sh	/^func_executable_p ()$/;"	f
func_executable_p	secp256k1/libtool	/^func_executable_p ()$/;"	f
func_execute_cmds	libsodium/build-aux/ltmain.sh	/^func_execute_cmds ()$/;"	f
func_execute_cmds	libsodium/libtool	/^func_execute_cmds ()$/;"	f
func_execute_cmds	secp256k1/build-aux/ltmain.sh	/^func_execute_cmds ()$/;"	f
func_execute_cmds	secp256k1/libtool	/^func_execute_cmds ()$/;"	f
func_extract_an_archive	libsodium/build-aux/ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_an_archive	libsodium/libtool	/^func_extract_an_archive ()$/;"	f
func_extract_an_archive	secp256k1/build-aux/ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_an_archive	secp256k1/libtool	/^func_extract_an_archive ()$/;"	f
func_extract_archives	libsodium/build-aux/ltmain.sh	/^func_extract_archives ()$/;"	f
func_extract_archives	libsodium/libtool	/^func_extract_archives ()$/;"	f
func_extract_archives	secp256k1/build-aux/ltmain.sh	/^func_extract_archives ()$/;"	f
func_extract_archives	secp256k1/libtool	/^func_extract_archives ()$/;"	f
func_fallback_echo	libsodium/build-aux/ltmain.sh	/^func_fallback_echo ()$/;"	f
func_fallback_echo	libsodium/config.status	/^func_fallback_echo ()$/;"	f
func_fallback_echo	libsodium/configure	/^  func_fallback_echo ()$/;"	f
func_fallback_echo	libsodium/configure	/^func_fallback_echo ()$/;"	f
func_fallback_echo	libsodium/libtool	/^func_fallback_echo ()$/;"	f
func_fallback_echo	secp256k1/build-aux/ltmain.sh	/^func_fallback_echo ()$/;"	f
func_fallback_echo	secp256k1/config.status	/^func_fallback_echo ()$/;"	f
func_fallback_echo	secp256k1/configure	/^  func_fallback_echo ()$/;"	f
func_fallback_echo	secp256k1/configure	/^func_fallback_echo ()$/;"	f
func_fallback_echo	secp256k1/libtool	/^func_fallback_echo ()$/;"	f
func_fatal_configuration	libsodium/build-aux/ltmain.sh	/^func_fatal_configuration ()$/;"	f
func_fatal_configuration	libsodium/libtool	/^func_fatal_configuration ()$/;"	f
func_fatal_configuration	secp256k1/build-aux/ltmain.sh	/^func_fatal_configuration ()$/;"	f
func_fatal_configuration	secp256k1/libtool	/^func_fatal_configuration ()$/;"	f
func_fatal_error	libsodium/build-aux/ltmain.sh	/^func_fatal_error ()$/;"	f
func_fatal_error	libsodium/libtool	/^func_fatal_error ()$/;"	f
func_fatal_error	secp256k1/build-aux/ltmain.sh	/^func_fatal_error ()$/;"	f
func_fatal_error	secp256k1/libtool	/^func_fatal_error ()$/;"	f
func_fatal_help	libsodium/build-aux/ltmain.sh	/^func_fatal_help ()$/;"	f
func_fatal_help	libsodium/libtool	/^func_fatal_help ()$/;"	f
func_fatal_help	secp256k1/build-aux/ltmain.sh	/^func_fatal_help ()$/;"	f
func_fatal_help	secp256k1/libtool	/^func_fatal_help ()$/;"	f
func_features	libsodium/build-aux/ltmain.sh	/^func_features ()$/;"	f
func_features	libsodium/libtool	/^func_features ()$/;"	f
func_features	secp256k1/build-aux/ltmain.sh	/^func_features ()$/;"	f
func_features	secp256k1/libtool	/^func_features ()$/;"	f
func_file_conv	libsodium/build-aux/compile	/^func_file_conv ()$/;"	f
func_file_conv	secp256k1/build-aux/compile	/^func_file_conv ()$/;"	f
func_generate_dlsyms	libsodium/build-aux/ltmain.sh	/^func_generate_dlsyms ()$/;"	f
func_generate_dlsyms	libsodium/libtool	/^func_generate_dlsyms ()$/;"	f
func_generate_dlsyms	secp256k1/build-aux/ltmain.sh	/^func_generate_dlsyms ()$/;"	f
func_generate_dlsyms	secp256k1/libtool	/^func_generate_dlsyms ()$/;"	f
func_generated_by_libtool_p	libsodium/build-aux/ltmain.sh	/^func_generated_by_libtool_p ()$/;"	f
func_generated_by_libtool_p	libsodium/libtool	/^func_generated_by_libtool_p ()$/;"	f
func_generated_by_libtool_p	secp256k1/build-aux/ltmain.sh	/^func_generated_by_libtool_p ()$/;"	f
func_generated_by_libtool_p	secp256k1/libtool	/^func_generated_by_libtool_p ()$/;"	f
func_grep	libsodium/build-aux/ltmain.sh	/^func_grep ()$/;"	f
func_grep	libsodium/libtool	/^func_grep ()$/;"	f
func_grep	secp256k1/build-aux/ltmain.sh	/^func_grep ()$/;"	f
func_grep	secp256k1/libtool	/^func_grep ()$/;"	f
func_help	libsodium/build-aux/ltmain.sh	/^func_help ()$/;"	f
func_help	libsodium/libtool	/^func_help ()$/;"	f
func_help	secp256k1/build-aux/ltmain.sh	/^func_help ()$/;"	f
func_help	secp256k1/libtool	/^func_help ()$/;"	f
func_hookable	libsodium/build-aux/ltmain.sh	/^func_hookable ()$/;"	f
func_hookable	libsodium/libtool	/^func_hookable ()$/;"	f
func_hookable	secp256k1/build-aux/ltmain.sh	/^func_hookable ()$/;"	f
func_hookable	secp256k1/libtool	/^func_hookable ()$/;"	f
func_infer_tag	libsodium/build-aux/ltmain.sh	/^func_infer_tag ()$/;"	f
func_infer_tag	libsodium/libtool	/^func_infer_tag ()$/;"	f
func_infer_tag	secp256k1/build-aux/ltmain.sh	/^func_infer_tag ()$/;"	f
func_infer_tag	secp256k1/libtool	/^func_infer_tag ()$/;"	f
func_init_to_host_path_cmd	libsodium/build-aux/ltmain.sh	/^func_init_to_host_path_cmd ()$/;"	f
func_init_to_host_path_cmd	libsodium/libtool	/^func_init_to_host_path_cmd ()$/;"	f
func_init_to_host_path_cmd	secp256k1/build-aux/ltmain.sh	/^func_init_to_host_path_cmd ()$/;"	f
func_init_to_host_path_cmd	secp256k1/libtool	/^func_init_to_host_path_cmd ()$/;"	f
func_lalib_p	libsodium/build-aux/ltmain.sh	/^func_lalib_p ()$/;"	f
func_lalib_p	libsodium/libtool	/^func_lalib_p ()$/;"	f
func_lalib_p	secp256k1/build-aux/ltmain.sh	/^func_lalib_p ()$/;"	f
func_lalib_p	secp256k1/libtool	/^func_lalib_p ()$/;"	f
func_lalib_unsafe_p	libsodium/build-aux/ltmain.sh	/^func_lalib_unsafe_p ()$/;"	f
func_lalib_unsafe_p	libsodium/libtool	/^func_lalib_unsafe_p ()$/;"	f
func_lalib_unsafe_p	secp256k1/build-aux/ltmain.sh	/^func_lalib_unsafe_p ()$/;"	f
func_lalib_unsafe_p	secp256k1/libtool	/^func_lalib_unsafe_p ()$/;"	f
func_len	libsodium/build-aux/ltmain.sh	/^  func_len ()$/;"	f
func_len	libsodium/libtool	/^  func_len ()$/;"	f
func_len	secp256k1/build-aux/ltmain.sh	/^  func_len ()$/;"	f
func_len	secp256k1/libtool	/^  func_len ()$/;"	f
func_lo2o	libsodium/build-aux/ltmain.sh	/^  func_lo2o ()$/;"	f
func_lo2o	libsodium/libtool	/^  func_lo2o ()$/;"	f
func_lo2o	secp256k1/build-aux/ltmain.sh	/^  func_lo2o ()$/;"	f
func_lo2o	secp256k1/libtool	/^  func_lo2o ()$/;"	f
func_lt_dump_args	libsodium/build-aux/ltmain.sh	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	libsodium/libtool	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	secp256k1/build-aux/ltmain.sh	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	secp256k1/libtool	/^func_lt_dump_args ()$/;"	f
func_lt_ver	libsodium/build-aux/ltmain.sh	/^func_lt_ver ()$/;"	f
func_lt_ver	libsodium/libtool	/^func_lt_ver ()$/;"	f
func_lt_ver	secp256k1/build-aux/ltmain.sh	/^func_lt_ver ()$/;"	f
func_lt_ver	secp256k1/libtool	/^func_lt_ver ()$/;"	f
func_ltwrapper_executable_p	libsodium/build-aux/ltmain.sh	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_executable_p	libsodium/libtool	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_executable_p	secp256k1/build-aux/ltmain.sh	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_executable_p	secp256k1/libtool	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_p	libsodium/build-aux/ltmain.sh	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_p	libsodium/libtool	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_p	secp256k1/build-aux/ltmain.sh	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_p	secp256k1/libtool	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_script_p	libsodium/build-aux/ltmain.sh	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_script_p	libsodium/libtool	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_script_p	secp256k1/build-aux/ltmain.sh	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_script_p	secp256k1/libtool	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_scriptname	libsodium/build-aux/ltmain.sh	/^func_ltwrapper_scriptname ()$/;"	f
func_ltwrapper_scriptname	libsodium/libtool	/^func_ltwrapper_scriptname ()$/;"	f
func_ltwrapper_scriptname	secp256k1/build-aux/ltmain.sh	/^func_ltwrapper_scriptname ()$/;"	f
func_ltwrapper_scriptname	secp256k1/libtool	/^func_ltwrapper_scriptname ()$/;"	f
func_missing_arg	libsodium/build-aux/ltmain.sh	/^func_missing_arg ()$/;"	f
func_missing_arg	libsodium/libtool	/^func_missing_arg ()$/;"	f
func_missing_arg	secp256k1/build-aux/ltmain.sh	/^func_missing_arg ()$/;"	f
func_missing_arg	secp256k1/libtool	/^func_missing_arg ()$/;"	f
func_mkdir_p	libsodium/build-aux/ltmain.sh	/^func_mkdir_p ()$/;"	f
func_mkdir_p	libsodium/libtool	/^func_mkdir_p ()$/;"	f
func_mkdir_p	secp256k1/build-aux/ltmain.sh	/^func_mkdir_p ()$/;"	f
func_mkdir_p	secp256k1/libtool	/^func_mkdir_p ()$/;"	f
func_mktempdir	libsodium/build-aux/ltmain.sh	/^func_mktempdir ()$/;"	f
func_mktempdir	libsodium/libtool	/^func_mktempdir ()$/;"	f
func_mktempdir	secp256k1/build-aux/ltmain.sh	/^func_mktempdir ()$/;"	f
func_mktempdir	secp256k1/libtool	/^func_mktempdir ()$/;"	f
func_mode_compile	libsodium/build-aux/ltmain.sh	/^func_mode_compile ()$/;"	f
func_mode_compile	libsodium/libtool	/^func_mode_compile ()$/;"	f
func_mode_compile	secp256k1/build-aux/ltmain.sh	/^func_mode_compile ()$/;"	f
func_mode_compile	secp256k1/libtool	/^func_mode_compile ()$/;"	f
func_mode_execute	libsodium/build-aux/ltmain.sh	/^func_mode_execute ()$/;"	f
func_mode_execute	libsodium/libtool	/^func_mode_execute ()$/;"	f
func_mode_execute	secp256k1/build-aux/ltmain.sh	/^func_mode_execute ()$/;"	f
func_mode_execute	secp256k1/libtool	/^func_mode_execute ()$/;"	f
func_mode_finish	libsodium/build-aux/ltmain.sh	/^func_mode_finish ()$/;"	f
func_mode_finish	libsodium/libtool	/^func_mode_finish ()$/;"	f
func_mode_finish	secp256k1/build-aux/ltmain.sh	/^func_mode_finish ()$/;"	f
func_mode_finish	secp256k1/libtool	/^func_mode_finish ()$/;"	f
func_mode_help	libsodium/build-aux/ltmain.sh	/^func_mode_help ()$/;"	f
func_mode_help	libsodium/libtool	/^func_mode_help ()$/;"	f
func_mode_help	secp256k1/build-aux/ltmain.sh	/^func_mode_help ()$/;"	f
func_mode_help	secp256k1/libtool	/^func_mode_help ()$/;"	f
func_mode_install	libsodium/build-aux/ltmain.sh	/^func_mode_install ()$/;"	f
func_mode_install	libsodium/libtool	/^func_mode_install ()$/;"	f
func_mode_install	secp256k1/build-aux/ltmain.sh	/^func_mode_install ()$/;"	f
func_mode_install	secp256k1/libtool	/^func_mode_install ()$/;"	f
func_mode_link	libsodium/build-aux/ltmain.sh	/^func_mode_link ()$/;"	f
func_mode_link	libsodium/libtool	/^func_mode_link ()$/;"	f
func_mode_link	secp256k1/build-aux/ltmain.sh	/^func_mode_link ()$/;"	f
func_mode_link	secp256k1/libtool	/^func_mode_link ()$/;"	f
func_mode_uninstall	libsodium/build-aux/ltmain.sh	/^func_mode_uninstall ()$/;"	f
func_mode_uninstall	libsodium/libtool	/^func_mode_uninstall ()$/;"	f
func_mode_uninstall	secp256k1/build-aux/ltmain.sh	/^func_mode_uninstall ()$/;"	f
func_mode_uninstall	secp256k1/libtool	/^func_mode_uninstall ()$/;"	f
func_munge_path_list	libsodium/config.status	/^func_munge_path_list ()$/;"	f
func_munge_path_list	libsodium/configure	/^func_munge_path_list ()$/;"	f
func_munge_path_list	libsodium/libtool	/^func_munge_path_list ()$/;"	f
func_munge_path_list	secp256k1/config.status	/^func_munge_path_list ()$/;"	f
func_munge_path_list	secp256k1/configure	/^func_munge_path_list ()$/;"	f
func_munge_path_list	secp256k1/libtool	/^func_munge_path_list ()$/;"	f
func_normal_abspath	libsodium/build-aux/ltmain.sh	/^func_normal_abspath ()$/;"	f
func_normal_abspath	libsodium/libtool	/^func_normal_abspath ()$/;"	f
func_normal_abspath	secp256k1/build-aux/ltmain.sh	/^func_normal_abspath ()$/;"	f
func_normal_abspath	secp256k1/libtool	/^func_normal_abspath ()$/;"	f
func_notquiet	libsodium/build-aux/ltmain.sh	/^func_notquiet ()$/;"	f
func_notquiet	libsodium/libtool	/^func_notquiet ()$/;"	f
func_notquiet	secp256k1/build-aux/ltmain.sh	/^func_notquiet ()$/;"	f
func_notquiet	secp256k1/libtool	/^func_notquiet ()$/;"	f
func_options	libsodium/build-aux/ltmain.sh	/^func_options ()$/;"	f
func_options	libsodium/libtool	/^func_options ()$/;"	f
func_options	secp256k1/build-aux/ltmain.sh	/^func_options ()$/;"	f
func_options	secp256k1/libtool	/^func_options ()$/;"	f
func_options_prep	libsodium/build-aux/ltmain.sh	/^func_options_prep ()$/;"	f
func_options_prep	libsodium/libtool	/^func_options_prep ()$/;"	f
func_options_prep	secp256k1/build-aux/ltmain.sh	/^func_options_prep ()$/;"	f
func_options_prep	secp256k1/libtool	/^func_options_prep ()$/;"	f
func_parse_lt_options	libsodium/build-aux/ltmain.sh	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	libsodium/libtool	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	secp256k1/build-aux/ltmain.sh	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	secp256k1/libtool	/^func_parse_lt_options ()$/;"	f
func_parse_options	libsodium/build-aux/ltmain.sh	/^func_parse_options ()$/;"	f
func_parse_options	libsodium/libtool	/^func_parse_options ()$/;"	f
func_parse_options	secp256k1/build-aux/ltmain.sh	/^func_parse_options ()$/;"	f
func_parse_options	secp256k1/libtool	/^func_parse_options ()$/;"	f
func_path_progs	libsodium/build-aux/ltmain.sh	/^func_path_progs ()$/;"	f
func_path_progs	libsodium/libtool	/^func_path_progs ()$/;"	f
func_path_progs	secp256k1/build-aux/ltmain.sh	/^func_path_progs ()$/;"	f
func_path_progs	secp256k1/libtool	/^func_path_progs ()$/;"	f
func_quote_for_eval	libsodium/build-aux/ltmain.sh	/^func_quote_for_eval ()$/;"	f
func_quote_for_eval	libsodium/libtool	/^func_quote_for_eval ()$/;"	f
func_quote_for_eval	secp256k1/build-aux/ltmain.sh	/^func_quote_for_eval ()$/;"	f
func_quote_for_eval	secp256k1/libtool	/^func_quote_for_eval ()$/;"	f
func_quote_for_expand	libsodium/build-aux/ltmain.sh	/^func_quote_for_expand ()$/;"	f
func_quote_for_expand	libsodium/libtool	/^func_quote_for_expand ()$/;"	f
func_quote_for_expand	secp256k1/build-aux/ltmain.sh	/^func_quote_for_expand ()$/;"	f
func_quote_for_expand	secp256k1/libtool	/^func_quote_for_expand ()$/;"	f
func_relative_path	libsodium/build-aux/ltmain.sh	/^func_relative_path ()$/;"	f
func_relative_path	libsodium/libtool	/^func_relative_path ()$/;"	f
func_relative_path	secp256k1/build-aux/ltmain.sh	/^func_relative_path ()$/;"	f
func_relative_path	secp256k1/libtool	/^func_relative_path ()$/;"	f
func_remove_hook	libsodium/build-aux/ltmain.sh	/^func_remove_hook ()$/;"	f
func_remove_hook	libsodium/libtool	/^func_remove_hook ()$/;"	f
func_remove_hook	secp256k1/build-aux/ltmain.sh	/^func_remove_hook ()$/;"	f
func_remove_hook	secp256k1/libtool	/^func_remove_hook ()$/;"	f
func_replace_sysroot	libsodium/build-aux/ltmain.sh	/^func_replace_sysroot ()$/;"	f
func_replace_sysroot	libsodium/libtool	/^func_replace_sysroot ()$/;"	f
func_replace_sysroot	secp256k1/build-aux/ltmain.sh	/^func_replace_sysroot ()$/;"	f
func_replace_sysroot	secp256k1/libtool	/^func_replace_sysroot ()$/;"	f
func_require_term_colors	libsodium/build-aux/ltmain.sh	/^func_require_term_colors ()$/;"	f
func_require_term_colors	libsodium/libtool	/^func_require_term_colors ()$/;"	f
func_require_term_colors	secp256k1/build-aux/ltmain.sh	/^func_require_term_colors ()$/;"	f
func_require_term_colors	secp256k1/libtool	/^func_require_term_colors ()$/;"	f
func_resolve_sysroot	libsodium/build-aux/ltmain.sh	/^func_resolve_sysroot ()$/;"	f
func_resolve_sysroot	libsodium/libtool	/^func_resolve_sysroot ()$/;"	f
func_resolve_sysroot	secp256k1/build-aux/ltmain.sh	/^func_resolve_sysroot ()$/;"	f
func_resolve_sysroot	secp256k1/libtool	/^func_resolve_sysroot ()$/;"	f
func_run_hooks	libsodium/build-aux/ltmain.sh	/^func_run_hooks ()$/;"	f
func_run_hooks	libsodium/libtool	/^func_run_hooks ()$/;"	f
func_run_hooks	secp256k1/build-aux/ltmain.sh	/^func_run_hooks ()$/;"	f
func_run_hooks	secp256k1/libtool	/^func_run_hooks ()$/;"	f
func_show_eval	libsodium/build-aux/ltmain.sh	/^func_show_eval ()$/;"	f
func_show_eval	libsodium/libtool	/^func_show_eval ()$/;"	f
func_show_eval	secp256k1/build-aux/ltmain.sh	/^func_show_eval ()$/;"	f
func_show_eval	secp256k1/libtool	/^func_show_eval ()$/;"	f
func_show_eval_locale	libsodium/build-aux/ltmain.sh	/^func_show_eval_locale ()$/;"	f
func_show_eval_locale	libsodium/libtool	/^func_show_eval_locale ()$/;"	f
func_show_eval_locale	secp256k1/build-aux/ltmain.sh	/^func_show_eval_locale ()$/;"	f
func_show_eval_locale	secp256k1/libtool	/^func_show_eval_locale ()$/;"	f
func_sort_ver	libsodium/build-aux/ltmain.sh	/^func_sort_ver ()$/;"	f
func_sort_ver	libsodium/libtool	/^func_sort_ver ()$/;"	f
func_sort_ver	secp256k1/build-aux/ltmain.sh	/^func_sort_ver ()$/;"	f
func_sort_ver	secp256k1/libtool	/^func_sort_ver ()$/;"	f
func_source	libsodium/build-aux/ltmain.sh	/^func_source ()$/;"	f
func_source	libsodium/libtool	/^func_source ()$/;"	f
func_source	secp256k1/build-aux/ltmain.sh	/^func_source ()$/;"	f
func_source	secp256k1/libtool	/^func_source ()$/;"	f
func_split_equals	libsodium/build-aux/ltmain.sh	/^  func_split_equals ()$/;"	f
func_split_equals	libsodium/libtool	/^  func_split_equals ()$/;"	f
func_split_equals	secp256k1/build-aux/ltmain.sh	/^  func_split_equals ()$/;"	f
func_split_equals	secp256k1/libtool	/^  func_split_equals ()$/;"	f
func_split_short_opt	libsodium/build-aux/ltmain.sh	/^  func_split_short_opt ()$/;"	f
func_split_short_opt	libsodium/libtool	/^  func_split_short_opt ()$/;"	f
func_split_short_opt	secp256k1/build-aux/ltmain.sh	/^  func_split_short_opt ()$/;"	f
func_split_short_opt	secp256k1/libtool	/^  func_split_short_opt ()$/;"	f
func_stripname	libsodium/build-aux/ltmain.sh	/^  func_stripname ()$/;"	f
func_stripname	libsodium/libtool	/^  func_stripname ()$/;"	f
func_stripname	secp256k1/build-aux/ltmain.sh	/^  func_stripname ()$/;"	f
func_stripname	secp256k1/libtool	/^  func_stripname ()$/;"	f
func_suncc_cstd_abi	libsodium/build-aux/ltmain.sh	/^func_suncc_cstd_abi ()$/;"	f
func_suncc_cstd_abi	libsodium/libtool	/^func_suncc_cstd_abi ()$/;"	f
func_suncc_cstd_abi	secp256k1/build-aux/ltmain.sh	/^func_suncc_cstd_abi ()$/;"	f
func_suncc_cstd_abi	secp256k1/libtool	/^func_suncc_cstd_abi ()$/;"	f
func_to_host_file	libsodium/build-aux/ltmain.sh	/^func_to_host_file ()$/;"	f
func_to_host_file	libsodium/libtool	/^func_to_host_file ()$/;"	f
func_to_host_file	secp256k1/build-aux/ltmain.sh	/^func_to_host_file ()$/;"	f
func_to_host_file	secp256k1/libtool	/^func_to_host_file ()$/;"	f
func_to_host_path	libsodium/build-aux/ltmain.sh	/^func_to_host_path ()$/;"	f
func_to_host_path	libsodium/libtool	/^func_to_host_path ()$/;"	f
func_to_host_path	secp256k1/build-aux/ltmain.sh	/^func_to_host_path ()$/;"	f
func_to_host_path	secp256k1/libtool	/^func_to_host_path ()$/;"	f
func_to_tool_file	libsodium/build-aux/ltmain.sh	/^func_to_tool_file ()$/;"	f
func_to_tool_file	libsodium/libtool	/^func_to_tool_file ()$/;"	f
func_to_tool_file	secp256k1/build-aux/ltmain.sh	/^func_to_tool_file ()$/;"	f
func_to_tool_file	secp256k1/libtool	/^func_to_tool_file ()$/;"	f
func_tr_sh	libsodium/build-aux/ltmain.sh	/^func_tr_sh ()$/;"	f
func_tr_sh	libsodium/libtool	/^func_tr_sh ()$/;"	f
func_tr_sh	secp256k1/build-aux/ltmain.sh	/^func_tr_sh ()$/;"	f
func_tr_sh	secp256k1/libtool	/^func_tr_sh ()$/;"	f
func_usage	libsodium/build-aux/ltmain.sh	/^func_usage ()$/;"	f
func_usage	libsodium/libtool	/^func_usage ()$/;"	f
func_usage	secp256k1/build-aux/ltmain.sh	/^func_usage ()$/;"	f
func_usage	secp256k1/libtool	/^func_usage ()$/;"	f
func_usage_message	libsodium/build-aux/ltmain.sh	/^func_usage_message ()$/;"	f
func_usage_message	libsodium/libtool	/^func_usage_message ()$/;"	f
func_usage_message	secp256k1/build-aux/ltmain.sh	/^func_usage_message ()$/;"	f
func_usage_message	secp256k1/libtool	/^func_usage_message ()$/;"	f
func_validate_options	libsodium/build-aux/ltmain.sh	/^func_validate_options ()$/;"	f
func_validate_options	libsodium/libtool	/^func_validate_options ()$/;"	f
func_validate_options	secp256k1/build-aux/ltmain.sh	/^func_validate_options ()$/;"	f
func_validate_options	secp256k1/libtool	/^func_validate_options ()$/;"	f
func_verbose	libsodium/build-aux/ltmain.sh	/^func_verbose ()$/;"	f
func_verbose	libsodium/libtool	/^func_verbose ()$/;"	f
func_verbose	secp256k1/build-aux/ltmain.sh	/^func_verbose ()$/;"	f
func_verbose	secp256k1/libtool	/^func_verbose ()$/;"	f
func_version	libsodium/build-aux/ltmain.sh	/^func_version ()$/;"	f
func_version	libsodium/libtool	/^func_version ()$/;"	f
func_version	secp256k1/build-aux/ltmain.sh	/^func_version ()$/;"	f
func_version	secp256k1/libtool	/^func_version ()$/;"	f
func_warn_and_continue	libsodium/build-aux/ltmain.sh	/^func_warn_and_continue ()$/;"	f
func_warn_and_continue	libsodium/libtool	/^func_warn_and_continue ()$/;"	f
func_warn_and_continue	secp256k1/build-aux/ltmain.sh	/^func_warn_and_continue ()$/;"	f
func_warn_and_continue	secp256k1/libtool	/^func_warn_and_continue ()$/;"	f
func_warning	libsodium/build-aux/ltmain.sh	/^func_warning ()$/;"	f
func_warning	libsodium/libtool	/^func_warning ()$/;"	f
func_warning	secp256k1/build-aux/ltmain.sh	/^func_warning ()$/;"	f
func_warning	secp256k1/libtool	/^func_warning ()$/;"	f
func_win32_import_lib_p	libsodium/build-aux/ltmain.sh	/^func_win32_import_lib_p ()$/;"	f
func_win32_import_lib_p	libsodium/libtool	/^func_win32_import_lib_p ()$/;"	f
func_win32_import_lib_p	secp256k1/build-aux/ltmain.sh	/^func_win32_import_lib_p ()$/;"	f
func_win32_import_lib_p	secp256k1/libtool	/^func_win32_import_lib_p ()$/;"	f
func_win32_libid	libsodium/build-aux/ltmain.sh	/^func_win32_libid ()$/;"	f
func_win32_libid	libsodium/libtool	/^func_win32_libid ()$/;"	f
func_win32_libid	secp256k1/build-aux/ltmain.sh	/^func_win32_libid ()$/;"	f
func_win32_libid	secp256k1/libtool	/^func_win32_libid ()$/;"	f
func_write_libtool_object	libsodium/build-aux/ltmain.sh	/^func_write_libtool_object ()$/;"	f
func_write_libtool_object	libsodium/libtool	/^func_write_libtool_object ()$/;"	f
func_write_libtool_object	secp256k1/build-aux/ltmain.sh	/^func_write_libtool_object ()$/;"	f
func_write_libtool_object	secp256k1/libtool	/^func_write_libtool_object ()$/;"	f
func_xform	libsodium/build-aux/ltmain.sh	/^  func_xform ()$/;"	f
func_xform	libsodium/libtool	/^  func_xform ()$/;"	f
func_xform	secp256k1/build-aux/ltmain.sh	/^  func_xform ()$/;"	f
func_xform	secp256k1/libtool	/^  func_xform ()$/;"	f
fund_lightningd	daemon/test/scripts/helpers.sh	/^fund_lightningd()$/;"	f
funding__descriptor	lightning.pb-c.c	/^const ProtobufCMessageDescriptor funding__descriptor =$/;"	v
funding__field_descriptors	lightning.pb-c.c	/^static const ProtobufCFieldDescriptor funding__field_descriptors[2] =$/;"	v	file:
funding__field_indices_by_name	lightning.pb-c.c	/^static const unsigned funding__field_indices_by_name[] = {$/;"	v	file:
funding__fixed__default_value	lightning.pb-c.c	/^static const int64_t funding__fixed__default_value = 0ll;$/;"	v	file:
funding__free_unpacked	lightning.pb-c.c	/^void   funding__free_unpacked$/;"	f
funding__get_packed_size	lightning.pb-c.c	/^size_t funding__get_packed_size$/;"	f
funding__init	lightning.pb-c.c	/^void   funding__init$/;"	f
funding__number_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange funding__number_ranges[1 + 1] =$/;"	v	file:
funding__pack	lightning.pb-c.c	/^size_t funding__pack$/;"	f
funding__pack_to_buffer	lightning.pb-c.c	/^size_t funding__pack_to_buffer$/;"	f
funding__per_micro_satoshi__default_value	lightning.pb-c.c	/^static const int32_t funding__per_micro_satoshi__default_value = 0;$/;"	v	file:
funding__unpack	lightning.pb-c.c	/^       funding__unpack$/;"	f
funding_created_eq	wire/test/run-peer-wire.c	/^static bool funding_created_eq(const struct msg_funding_created *a,$/;"	f	file:
funding_locked_eq	wire/test/run-peer-wire.c	/^static bool funding_locked_eq(const struct msg_funding_locked *a,$/;"	f	file:
funding_pubkey	wire/test/run-peer-wire.c	/^	struct pubkey funding_pubkey;$/;"	m	struct:msg_accept_channel	typeref:struct:msg_accept_channel::pubkey	file:
funding_pubkey	wire/test/run-peer-wire.c	/^	struct pubkey funding_pubkey;$/;"	m	struct:msg_open_channel	typeref:struct:msg_open_channel::pubkey	file:
funding_satoshis	wire/test/run-peer-wire.c	/^	u64 funding_satoshis;$/;"	m	struct:msg_open_channel	file:
funding_signed_eq	wire/test/run-peer-wire.c	/^static bool funding_signed_eq(const struct msg_funding_signed *a,$/;"	f	file:
funding_tx	lightningd/funding_tx.c	/^struct bitcoin_tx *funding_tx(const tal_t *ctx,$/;"	f
funding_tx_failed	daemon/peer.c	/^static void funding_tx_failed(struct peer *peer,$/;"	f	file:
gamma	daemon/sphinx.c	/^	u8 gamma[KEY_LEN];$/;"	m	struct:keyset	file:
gather_args	ccan/ccan/pipecmd/pipecmd.c	/^static char **gather_args(const char *arg0, va_list ap)$/;"	f	file:
gather_args	daemon/bitcoind.c	/^static char **gather_args(struct lightningd_state *dstate,$/;"	f	file:
gather_blocks	daemon/chaintopology.c	/^static void gather_blocks(struct lightningd_state *dstate,$/;"	f	file:
gather_undefines	ccan/ccan/cdump/cdump.c	/^static bool gather_undefines(const char *name,$/;"	f	file:
ge_add	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void ge_add(ge_p1p1 *r,const ge_p3 *p,const ge_cached *q)$/;"	f
ge_add	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	121;"	d
ge_cached	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^} ge_cached;$/;"	t	typeref:struct:__anon72
ge_cached	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	97;"	d
ge_double_scalarmult_vartime	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void ge_double_scalarmult_vartime(ge_p2 *r,const unsigned char *a,const ge_p3 *A,const unsigned char *b)$/;"	f
ge_double_scalarmult_vartime	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	124;"	d
ge_equals_ge	secp256k1/src/tests.c	/^void ge_equals_ge(const secp256k1_ge *a, const secp256k1_ge *b) {$/;"	f
ge_equals_gej	secp256k1/src/tests.c	/^void ge_equals_gej(const secp256k1_ge *a, const secp256k1_gej *b) {$/;"	f
ge_frombytes_negate_vartime	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^int ge_frombytes_negate_vartime(ge_p3 *h,const unsigned char *s)$/;"	f
ge_frombytes_negate_vartime	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	105;"	d
ge_madd	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void ge_madd(ge_p1p1 *r,const ge_p3 *p,const ge_precomp *q)$/;"	f
ge_madd	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	119;"	d
ge_msub	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void ge_msub(ge_p1p1 *r,const ge_p3 *p,const ge_precomp *q)$/;"	f
ge_msub	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	120;"	d
ge_p1p1	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^} ge_p1p1;$/;"	t	typeref:struct:__anon70
ge_p1p1	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	82;"	d
ge_p1p1_to_p2	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^extern void ge_p1p1_to_p2(ge_p2 *r,const ge_p1p1 *p)$/;"	f
ge_p1p1_to_p2	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	114;"	d
ge_p1p1_to_p3	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^extern void ge_p1p1_to_p3(ge_p3 *r,const ge_p1p1 *p)$/;"	f
ge_p1p1_to_p3	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	115;"	d
ge_p2	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^} ge_p2;$/;"	t	typeref:struct:__anon68
ge_p2	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	67;"	d
ge_p2_0	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void ge_p2_0(ge_p2 *h)$/;"	f
ge_p2_0	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	109;"	d
ge_p2_dbl	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void ge_p2_dbl(ge_p1p1 *r,const ge_p2 *p)$/;"	f
ge_p2_dbl	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	116;"	d
ge_p3	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^} ge_p3;$/;"	t	typeref:struct:__anon69
ge_p3	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	74;"	d
ge_p3_0	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void ge_p3_0(ge_p3 *h)$/;"	f
ge_p3_0	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	110;"	d
ge_p3_dbl	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void ge_p3_dbl(ge_p1p1 *r,const ge_p3 *p)$/;"	f
ge_p3_dbl	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	117;"	d
ge_p3_to_cached	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^extern void ge_p3_to_cached(ge_cached *r,const ge_p3 *p)$/;"	f
ge_p3_to_cached	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	113;"	d
ge_p3_to_p2	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^extern void ge_p3_to_p2(ge_p2 *r,const ge_p3 *p)$/;"	f
ge_p3_to_p2	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	112;"	d
ge_p3_tobytes	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void ge_p3_tobytes(unsigned char *s,const ge_p3 *h)$/;"	f
ge_p3_tobytes	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	107;"	d
ge_precomp	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^} ge_precomp;$/;"	t	typeref:struct:__anon71
ge_precomp	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	90;"	d
ge_precomp_0	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void ge_precomp_0(ge_precomp *h)$/;"	f
ge_precomp_0	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	111;"	d
ge_scalarmult_base	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void ge_scalarmult_base(ge_p3 *h,const unsigned char *a)$/;"	f
ge_scalarmult_base	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	123;"	d
ge_scalarmult_vartime	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void ge_scalarmult_vartime(ge_p3 *r,const unsigned char *a,const ge_p3 *A)$/;"	f
ge_scalarmult_vartime	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	125;"	d
ge_select	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^static void ge_select(ge_precomp *t,int pos,signed char b)$/;"	f	file:
ge_sub	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void ge_sub(ge_p1p1 *r,const ge_p3 *p,const ge_cached *q)$/;"	f
ge_sub	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	122;"	d
ge_tobytes	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void ge_tobytes(unsigned char *s,const ge_p2 *h)$/;"	f
ge_tobytes	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	106;"	d
ge_x	secp256k1/src/bench_internal.c	/^    secp256k1_ge ge_x, ge_y;$/;"	m	struct:__anon19	file:
ge_y	secp256k1/src/bench_internal.c	/^    secp256k1_ge ge_x, ge_y;$/;"	m	struct:__anon19	file:
gej_x	secp256k1/src/bench_internal.c	/^    secp256k1_gej gej_x, gej_y;$/;"	m	struct:__anon19	file:
gej_xyz_equals_gej	secp256k1/src/tests.c	/^int gej_xyz_equals_gej(const secp256k1_gej *a, const secp256k1_gej *b) {$/;"	f
gej_y	secp256k1/src/bench_internal.c	/^    secp256k1_gej gej_x, gej_y;$/;"	m	struct:__anon19	file:
gen_context_BIN	secp256k1/Makefile	/^gen_context_BIN = gen_context$(BUILD_EXEEXT)$/;"	m
gen_context_OBJECTS	secp256k1/Makefile	/^gen_context_OBJECTS = gen_context.o$/;"	m
gen_sessionkey	daemon/cryptopkt.c	/^static void gen_sessionkey(u8 seckey[32],$/;"	f	file:
generate_addresses	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-ref.c	/^static void generate_addresses(const argon2_instance_t *instance,$/;"	f	file:
generate_addresses	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-ssse3.c	/^static void generate_addresses(const argon2_instance_t *instance,$/;"	f	file:
generate_cipher_stream	daemon/sphinx.c	/^static void generate_cipher_stream(void *dst, const u8 *k, size_t dstlen)$/;"	f	file:
generate_header_padding	daemon/sphinx.c	/^static bool generate_header_padding($/;"	f	file:
generate_hop_params	daemon/sphinx.c	/^static struct hop_params *generate_hop_params($/;"	f	file:
generate_key	daemon/sphinx.c	/^static bool generate_key(void *k, const char *t, u8 tlen, const u8 *s)$/;"	f	file:
generate_key	lightningd/handshake/handshake.c	/^static struct keypair generate_key(void)$/;"	f	file:
generate_key_set	daemon/sphinx.c	/^static void generate_key_set(u8 secret[SHARED_SECRET_SIZE], struct keyset *keys)$/;"	f	file:
generichash	libsodium/examples/generichash.c	/^generichash(void)$/;"	f
generichash2_DEPENDENCIES	libsodium/test/default/Makefile	/^generichash2_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
generichash2_LDADD	libsodium/test/default/Makefile	/^generichash2_LDADD = $(TESTS_LDADD)$/;"	m
generichash2_OBJECTS	libsodium/test/default/Makefile	/^generichash2_OBJECTS = generichash2.$(OBJEXT)$/;"	m
generichash2_SOURCE	libsodium/test/default/Makefile	/^generichash2_SOURCE = cmptest.h generichash2.c$/;"	m
generichash2_SOURCES	libsodium/test/default/Makefile	/^generichash2_SOURCES = generichash2.c$/;"	m
generichash3_DEPENDENCIES	libsodium/test/default/Makefile	/^generichash3_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
generichash3_LDADD	libsodium/test/default/Makefile	/^generichash3_LDADD = $(TESTS_LDADD)$/;"	m
generichash3_OBJECTS	libsodium/test/default/Makefile	/^generichash3_OBJECTS = generichash3.$(OBJEXT)$/;"	m
generichash3_SOURCE	libsodium/test/default/Makefile	/^generichash3_SOURCE = cmptest.h generichash3.c$/;"	m
generichash3_SOURCES	libsodium/test/default/Makefile	/^generichash3_SOURCES = generichash3.c$/;"	m
generichash_DEPENDENCIES	libsodium/test/default/Makefile	/^generichash_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
generichash_LDADD	libsodium/test/default/Makefile	/^generichash_LDADD = $(TESTS_LDADD)$/;"	m
generichash_OBJECTS	libsodium/test/default/Makefile	/^generichash_OBJECTS = generichash.$(OBJEXT)$/;"	m
generichash_SOURCE	libsodium/test/default/Makefile	/^generichash_SOURCE = cmptest.h generichash.c$/;"	m
generichash_SOURCES	libsodium/test/default/Makefile	/^generichash_SOURCES = generichash.c$/;"	m
generichash_stream	libsodium/examples/generichash_stream.c	/^generichash_stream(void)$/;"	f
getContext	secp256k1/src/java/org/bitcoin/Secp256k1Context.java	/^  public static long getContext() {$/;"	m	class:Secp256k1Context
get_block_height	daemon/chaintopology.c	/^u32 get_block_height(struct lightningd_state *dstate)$/;"	f
get_block_height	lightningd/lightningd.c	/^u32 get_block_height(struct lightningd_state *dstate)$/;"	f
get_bolt_files	check-bolt.c	/^static struct bolt_file *get_bolt_files(const char *dir)$/;"	f	file:
get_cmdlist	daemon/jsonrpc.c	/^static struct json_command **get_cmdlist(void)$/;"	f	file:
get_columns	ccan/ccan/opt/usage.c	/^static unsigned int get_columns(void)$/;"	f	file:
get_connection	daemon/routing.c	/^struct node_connection * get_connection(struct routing_state *rstate,$/;"	f
get_connection_by_cid	daemon/routing.c	/^struct node_connection *get_connection_by_cid(const struct routing_state *rstate,$/;"	f
get_destroying_bit	ccan/ccan/tal/tal.c	/^static bool get_destroying_bit(struct children *parent_child)$/;"	f	file:
get_extra_ptr_bits	ccan/ccan/htable/htable.c	/^static inline uintptr_t get_extra_ptr_bits(const struct htable *ht,$/;"	f	file:
get_fake_time	ccan/ccan/io/test/run-20-io_time_override.c	/^static struct timemono get_fake_time(void)$/;"	f	file:
get_fd	ccan/ccan/io/fdpass/test/run.c	/^static struct io_plan *get_fd(struct io_conn *conn, void *unused)$/;"	f	file:
get_feerate	daemon/chaintopology.c	/^u64 get_feerate(struct lightningd_state *dstate)$/;"	f
get_files	check-bolt.c	/^static bool get_files(const char *dir, const char *subdir,$/;"	f	file:
get_first	ccan/ccan/timer/timer.c	/^static const struct timer *get_first(struct timers *timers)$/;"	f	file:
get_hash_ptr_bits	ccan/ccan/htable/htable.c	/^static inline uintptr_t get_hash_ptr_bits(const struct htable *ht,$/;"	f	file:
get_htlc_output_map	daemon/output_to_htlc.c	/^struct htlc_output_map *get_htlc_output_map(const tal_t *ctx,$/;"	f
get_info_field	daemon/test/scripts/helpers.sh	/^get_info_field()$/;"	f
get_init_block	daemon/chaintopology.c	/^static void get_init_block(struct lightningd_state *dstate,$/;"	f	file:
get_init_blockhash	daemon/chaintopology.c	/^static void get_init_blockhash(struct lightningd_state *dstate, u32 blockcount,$/;"	f	file:
get_mediantime	daemon/chaintopology.c	/^static u32 get_mediantime(const struct topology *topo, const struct block *b)$/;"	f	file:
get_node	daemon/routing.c	/^struct node *get_node(struct routing_state *rstate,$/;"	f
get_node	tests/test_lightningd.py	/^    def get_node(self, legacy=True):$/;"	m	class:NodeFactory
get_openssl_key	secp256k1/src/tests.c	/^EC_KEY *get_openssl_key(const unsigned char *key32) {$/;"	f
get_or_make_connection	daemon/routing.c	/^get_or_make_connection(struct routing_state *rstate,$/;"	f	file:
get_output	test/test_protocol.c	/^static void get_output(int donefd, char **svg, bool is_a,$/;"	f	file:
get_proc_maps	ccan/ccan/ptr_valid/ptr_valid.c	/^static struct ptr_valid_map *get_proc_maps(unsigned int *num)$/;"	f	file:
get_raw_ptr	ccan/ccan/htable/htable.c	/^static inline void *get_raw_ptr(const struct htable *ht, uintptr_t e)$/;"	f	file:
get_rhash	daemon/peer.c	/^static struct sha256 *get_rhash(struct peer *peer, u64 commit_num,$/;"	f	file:
get_slash_u32	daemon/routing.c	/^static bool get_slash_u32(const char **arg, u32 *v)$/;"	f	file:
get_tip_mediantime	daemon/chaintopology.c	/^u32 get_tip_mediantime(struct lightningd_state *dstate)$/;"	f
get_tx_depth	daemon/chaintopology.c	/^size_t get_tx_depth(struct lightningd_state *dstate,$/;"	f
get_tx_depth	lightningd/lightningd.c	/^size_t get_tx_depth(struct lightningd_state *dstate,$/;"	f
get_tx_mediantime	daemon/chaintopology.c	/^u32 get_tx_mediantime(struct lightningd_state *dstate,$/;"	f
get_type	ccan/ccan/cdump/cdump.c	/^static struct cdump_type *get_type(struct cdump_definitions *defs,$/;"	f	file:
get_wpkh	daemon/output_to_htlc.c	/^static struct wscript_by_wpkh *get_wpkh(struct htlc_output_map *omap,$/;"	f	file:
getchannels	contrib/pylightning/lightning/lightning.py	/^    def getchannels(self):$/;"	m	class:LegacyLightningRpc
getchannels	contrib/pylightning/lightning/lightning.py	/^    def getchannels(self):$/;"	m	class:LightningRpc
getchannels_command	daemon/routingrpc.c	/^static const struct json_command getchannels_command = {$/;"	v	typeref:struct:json_command	file:
getenv	ccan/ccan/opt/test/run-usage.c	14;"	d	file:
getenv_override	ccan/ccan/opt/test/run-usage.c	/^static const char *getenv_override(const char *name UNNEEDED)$/;"	f	file:
gethtlcs_command	daemon/peer.c	/^static const struct json_command gethtlcs_command = {$/;"	v	typeref:struct:json_command	file:
getinfo	contrib/pylightning/lightning/lightning.py	/^    def getinfo(self):$/;"	m	class:LegacyLightningRpc
getinfo	contrib/pylightning/lightning/lightning.py	/^    def getinfo(self):$/;"	m	class:LightningRpc
getinfo_command	daemon/jsonrpc.c	/^static const struct json_command getinfo_command = {$/;"	v	typeref:struct:json_command	file:
getlog	contrib/pylightning/lightning/lightning.py	/^    def getlog(self, level=None):$/;"	m	class:LegacyLightningRpc
getlog	contrib/pylightning/lightning/lightning.py	/^    def getlog(self, level=None):$/;"	m	class:LightningRpc
getlog_command	daemon/jsonrpc.c	/^static const struct json_command getlog_command = {$/;"	v	typeref:struct:json_command	file:
getnodes	contrib/pylightning/lightning/lightning.py	/^    def getnodes(self):$/;"	m	class:LegacyLightningRpc
getnodes	contrib/pylightning/lightning/lightning.py	/^    def getnodes(self):$/;"	m	class:LightningRpc
getnodes_command	daemon/routingrpc.c	/^static const struct json_command getnodes_command = {$/;"	v	typeref:struct:json_command	file:
getpeer	contrib/pylightning/lightning/lightning.py	/^    def getpeer(self, peer_id):$/;"	m	class:LightningRpc
getpeers	contrib/pylightning/lightning/lightning.py	/^    def getpeers(self):$/;"	m	class:LegacyLightningRpc
getpeers	contrib/pylightning/lightning/lightning.py	/^    def getpeers(self):$/;"	m	class:LightningRpc
getpeers_command	daemon/peer.c	/^static const struct json_command getpeers_command = {$/;"	v	typeref:struct:json_command	file:
getpeers_command	lightningd/peer_control.c	/^static const struct json_command getpeers_command = {$/;"	v	typeref:struct:json_command	file:
getrandom_available	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^    int           getrandom_available;$/;"	m	struct:Salsa20Random_	file:
getrandom_available	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^    int getrandom_available;$/;"	m	struct:SysRandom_	file:
getroute	contrib/pylightning/lightning/lightning.py	/^    def getroute(self, destination, amount, riskfactor=1):$/;"	m	class:LegacyLightningRpc
getroute_command	daemon/pay.c	/^static const struct json_command getroute_command = {$/;"	v	typeref:struct:json_command	file:
gettimedouble	secp256k1/src/bench.h	/^static double gettimedouble(void) {$/;"	f
give_advice	libsodium/build-aux/missing	/^give_advice ()$/;"	f
give_advice	secp256k1/build-aux/missing	/^give_advice ()$/;"	f
global	ccan/ccan/crypto/sha256/benchmarks/sha256_avx1.asm	/^global sha256_avx$/;"	l
global	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^global sha256_rorx$/;"	l
global	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^global sha256_rorx_x8ms$/;"	l
global	ccan/ccan/crypto/sha256/benchmarks/sha256_sse4.asm	/^global sha256_sse4$/;"	l
globalfeatures	wire/test/run-peer-wire.c	/^	u8 *globalfeatures;$/;"	m	struct:msg_init	file:
gossip	lightningd/lightningd.h	/^	struct subdaemon *gossip;$/;"	m	struct:lightningd	typeref:struct:lightningd::subdaemon
gossip_control_wire_type	lightningd/gossip/gen_gossip_control_wire.h	/^enum gossip_control_wire_type {$/;"	g
gossip_control_wire_type_name	lightningd/gossip/gen_gossip_control_wire.c	/^const char *gossip_control_wire_type_name(int e)$/;"	f
gossip_finished	lightningd/gossip_control.c	/^static void gossip_finished(struct subdaemon *gossip, int status)$/;"	f	file:
gossip_init	lightningd/gossip_control.c	/^void gossip_init(struct lightningd *ld)$/;"	f
gossip_status	lightningd/gossip_control.c	/^static enum subdaemon_status gossip_status(struct subdaemon *gossip,$/;"	f	file:
gossip_status_wire_type	lightningd/gossip/gen_gossip_status_wire.h	/^enum gossip_status_wire_type {$/;"	g
gossip_status_wire_type_name	lightningd/gossip/gen_gossip_status_wire.c	/^const char *gossip_status_wire_type_name(int e)$/;"	f
got_signal	ccan/ccan/read_write_all/test/run-read_all.c	/^static void got_signal(int sig)$/;"	f	file:
grab	ccan/ccan/ptr_valid/ptr_valid.c	/^static char *grab(const char *filename)$/;"	f	file:
grab_fd	ccan/ccan/tal/grab_file/grab_file.c	/^void *grab_fd(const void *ctx, int fd)$/;"	f
grab_file	ccan/ccan/tal/grab_file/grab_file.c	/^void *grab_file(const void *ctx, const char *filename)$/;"	f
grab_stream	ccan/tools/configurator/configurator.c	/^static char *grab_stream(FILE *file)$/;"	f	file:
grains_to_time	ccan/ccan/timer/timer.c	/^static struct timemono grains_to_time(uint64_t grains)$/;"	f	file:
h	daemon/output_to_htlc.c	/^	struct htlc *h;$/;"	m	struct:wscript_by_wpkh	typeref:struct:wscript_by_wpkh::htlc	file:
h	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	/^        unsigned long h[5];$/;"	m	struct:poly1305_state_internal_t
h	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	/^        unsigned long long h[3];$/;"	m	struct:poly1305_state_internal_t
h	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^        uint64_t h[3];$/;"	m	union:poly1305_state_internal_t::__anon73	file:
h	libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h	/^    uint64_t h[8];$/;"	m	struct:crypto_generichash_blake2b_state
h	libsodium/test/default/core3.c	/^static unsigned char h[32];$/;"	v	file:
h	libsodium/test/default/hash.c	/^static unsigned char h[crypto_hash_BYTES];$/;"	v	file:
h	libsodium/test/default/hash3.c	/^static unsigned char h[crypto_hash_BYTES];$/;"	v	file:
h	libsodium/test/default/stream.c	/^static unsigned char h[32];$/;"	v	file:
h	libsodium/test/default/stream2.c	/^static unsigned char h[32];$/;"	v	file:
h	lightningd/handshake/handshake.c	/^	struct sha256 h;$/;"	m	struct:handshake	typeref:struct:handshake::sha256	file:
half_add_connection	daemon/routing.c	/^struct node_connection *half_add_connection(struct routing_state *rstate,$/;"	f
handle	lightningd/hsm/hsm.c	/^	u8 *(*handle)(struct client *c, const tal_t *data);$/;"	m	struct:client	file:
handle_always	ccan/ccan/io/poll.c	/^static bool handle_always(void)$/;"	f	file:
handle_channel_announcement	daemon/routing.c	/^void handle_channel_announcement($/;"	f
handle_channel_update	daemon/routing.c	/^void handle_channel_update(struct routing_state *rstate, const u8 *update, size_t len)$/;"	f
handle_ecdh	lightningd/hsm/hsm.c	/^static u8 *handle_ecdh(struct client *c, const void *data)$/;"	f	file:
handle_irc_channel_announcement	daemon/irc_announce.c	/^static void handle_irc_channel_announcement($/;"	f	file:
handle_irc_command	daemon/irc_announce.c	/^static void handle_irc_command(struct ircstate *istate, const struct irccommand *cmd)$/;"	f	file:
handle_irc_command	irc.c	/^static void handle_irc_command(struct ircstate *state, const char *line)$/;"	f	file:
handle_irc_connected	daemon/irc_announce.c	/^static void handle_irc_connected(struct ircstate *istate)$/;"	f	file:
handle_irc_disconnect	daemon/irc_announce.c	/^static void handle_irc_disconnect(struct ircstate *state)$/;"	f	file:
handle_irc_node_announcement	daemon/irc_announce.c	/^static void handle_irc_node_announcement($/;"	f	file:
handle_irc_privmsg	daemon/irc_announce.c	/^static void handle_irc_privmsg(struct ircstate *istate, const struct privmsg *msg)$/;"	f	file:
handle_json	daemon/pay.c	/^static void handle_json(struct command *cmd, const struct htlc *htlc,$/;"	f	file:
handle_node_announcement	daemon/routing.c	/^void handle_node_announcement($/;"	f
handle_opts	daemon/options.c	/^bool handle_opts(struct lightningd_state *dstate, int argc, char *argv[])$/;"	f
handle_pkt_commit	daemon/peer.c	/^static Pkt *handle_pkt_commit(struct peer *peer, const Pkt *pkt)$/;"	f	file:
handle_pkt_feechange	daemon/peer.c	/^static Pkt *handle_pkt_feechange(struct peer *peer, const Pkt *pkt)$/;"	f	file:
handle_pkt_htlc_add	daemon/peer.c	/^static Pkt *handle_pkt_htlc_add(struct peer *peer, const Pkt *pkt)$/;"	f	file:
handle_pkt_htlc_fail	daemon/peer.c	/^static Pkt *handle_pkt_htlc_fail(struct peer *peer, const Pkt *pkt)$/;"	f	file:
handle_pkt_htlc_fulfill	daemon/peer.c	/^static Pkt *handle_pkt_htlc_fulfill(struct peer *peer, const Pkt *pkt)$/;"	f	file:
handle_pkt_revocation	daemon/peer.c	/^static Pkt *handle_pkt_revocation(struct peer *peer, const Pkt *pkt,$/;"	f	file:
handshake	lightningd/handshake/handshake.c	/^struct handshake {$/;"	s	file:
handshake_control_wire_type	lightningd/handshake/gen_handshake_control_wire.h	/^enum handshake_control_wire_type {$/;"	g
handshake_control_wire_type_name	lightningd/handshake/gen_handshake_control_wire.c	/^const char *handshake_control_wire_type_name(int e)$/;"	f
handshake_status_wire_type	lightningd/handshake/gen_handshake_status_wire.h	/^enum handshake_status_wire_type {$/;"	g
handshake_status_wire_type_name	lightningd/handshake/gen_handshake_status_wire.c	/^const char *handshake_status_wire_type_name(int e)$/;"	f
handshake_succeeded	lightningd/peer_control.c	/^static void handshake_succeeded(struct subdaemon *hs, const u8 *msg,$/;"	f	file:
has_aesni	libsodium/src/libsodium/sodium/runtime.c	/^    int has_aesni;$/;"	m	struct:CPUFeatures_	file:
has_avx	libsodium/src/libsodium/sodium/runtime.c	/^    int has_avx;$/;"	m	struct:CPUFeatures_	file:
has_avx2	libsodium/src/libsodium/sodium/runtime.c	/^    int has_avx2;$/;"	m	struct:CPUFeatures_	file:
has_current_htlc	test/test_state_coverage.c	/^	bool has_current_htlc;$/;"	m	struct:core_state	file:
has_even_bit	lightningd/gossip/gossip.c	/^static bool has_even_bit(const u8 *bitmap)$/;"	f	file:
has_features	lightning.pb-c.h	/^  protobuf_c_boolean has_features;$/;"	m	struct:_Init
has_fixed	lightning.pb-c.h	/^  protobuf_c_boolean has_fixed;$/;"	m	struct:_Funding
has_min_depth	lightning.pb-c.h	/^  protobuf_c_boolean has_min_depth;$/;"	m	struct:_OpenChannel
has_neon	libsodium/src/libsodium/sodium/runtime.c	/^    int has_neon;$/;"	m	struct:CPUFeatures_	file:
has_packets	test/test_state_coverage.c	/^static bool has_packets(const struct peer *peer)$/;"	f	file:
has_pclmul	libsodium/src/libsodium/sodium/runtime.c	/^    int has_pclmul;$/;"	m	struct:CPUFeatures_	file:
has_per_micro_satoshi	lightning.pb-c.h	/^  protobuf_c_boolean has_per_micro_satoshi;$/;"	m	struct:_Funding
has_sse2	libsodium/src/libsodium/sodium/runtime.c	/^    int has_sse2;$/;"	m	struct:CPUFeatures_	file:
has_sse3	libsodium/src/libsodium/sodium/runtime.c	/^    int has_sse3;$/;"	m	struct:CPUFeatures_	file:
has_sse41	libsodium/src/libsodium/sodium/runtime.c	/^    int has_sse41;$/;"	m	struct:CPUFeatures_	file:
has_ssse3	libsodium/src/libsodium/sodium/runtime.c	/^    int has_ssse3;$/;"	m	struct:CPUFeatures_	file:
hash	ccan/ccan/crypto/shachain/shachain.h	/^		struct sha256 hash;$/;"	m	struct:shachain::__anon8	typeref:struct:shachain::__anon8::sha256
hash	ccan/ccan/htable/test/run-copy.c	/^static size_t hash(const void *elem, void *unused UNNEEDED)$/;"	f	file:
hash	ccan/ccan/htable/test/run-size.c	/^static size_t hash(const void *elem, void *unused UNNEEDED)$/;"	f	file:
hash	ccan/ccan/htable/test/run-zero-hash-first-entry.c	/^static size_t hash(const void *e, void *unused UNNEEDED)$/;"	f	file:
hash	ccan/ccan/htable/test/run.c	/^static size_t hash(const void *elem, void *unused UNNEEDED)$/;"	f	file:
hash	daemon/output_to_htlc.c	/^	struct sha256 hash;$/;"	m	struct:wscript_by_wpkh	typeref:struct:wscript_by_wpkh::sha256	file:
hash160	bitcoin/script.c	/^static void hash160(struct ripemd160 *redeemhash, const void *mem, size_t len)$/;"	f	file:
hash3_DEPENDENCIES	libsodium/test/default/Makefile	/^hash3_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
hash3_LDADD	libsodium/test/default/Makefile	/^hash3_LDADD = $(TESTS_LDADD)$/;"	m
hash3_OBJECTS	libsodium/test/default/Makefile	/^hash3_OBJECTS = hash3.$(OBJEXT)$/;"	m
hash3_SOURCE	libsodium/test/default/Makefile	/^hash3_SOURCE = cmptest.h hash3.c$/;"	m
hash3_SOURCES	libsodium/test/default/Makefile	/^hash3_SOURCES = hash3.c$/;"	m
hash_DEPENDENCIES	libsodium/test/default/Makefile	/^hash_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
hash_LDADD	libsodium/test/default/Makefile	/^hash_LDADD = $(TESTS_LDADD)$/;"	m
hash_OBJECTS	libsodium/test/default/Makefile	/^hash_OBJECTS = hash.$(OBJEXT)$/;"	m
hash_SOURCE	libsodium/test/default/Makefile	/^hash_SOURCE = cmptest.h hash.c$/;"	m
hash_SOURCES	libsodium/test/default/Makefile	/^hash_SOURCES = hash.c$/;"	m
hash_bucket	ccan/ccan/htable/htable.c	/^static size_t hash_bucket(const struct htable *ht, size_t h)$/;"	f	file:
hash_for_segwit	bitcoin/tx.c	/^static void hash_for_segwit(struct sha256_ctx *ctx,$/;"	f	file:
hash_obj	ccan/ccan/htable/tools/speed.c	/^static size_t hash_obj(const unsigned int *key)$/;"	f	file:
hash_outputs	bitcoin/tx.c	/^static void hash_outputs(struct sha256_double *h, const struct bitcoin_tx *tx)$/;"	f	file:
hash_prevouts	bitcoin/tx.c	/^static void hash_prevouts(struct sha256_double *h, const struct bitcoin_tx *tx)$/;"	f	file:
hash_sequence	bitcoin/tx.c	/^static void hash_sequence(struct sha256_double *h, const struct bitcoin_tx *tx)$/;"	f	file:
hash_sha	daemon/chaintopology.c	/^static size_t hash_sha(const struct sha256_double *key)$/;"	f	file:
hash_str	ccan/ccan/htable/tools/stringspeed.c	/^static size_t hash_str(const char *key)$/;"	f	file:
hash_trace	ccan/ccan/likely/likely.c	/^static size_t hash_trace(const struct trace *trace)$/;"	f	file:
hashcount	ccan/ccan/htable/tools/speed.c	/^static size_t hashcount;$/;"	v	file:
hashcount	ccan/ccan/htable/tools/stringspeed.c	/^static size_t hashcount;$/;"	v	file:
have_event	test/test_state_coverage.c	/^static bool have_event(uint64_t events, enum state_input input)$/;"	f	file:
have_flag	secp256k1/src/bench_internal.c	/^int have_flag(int argc, char** argv, char *flag) {$/;"	f
hdr	bitcoin/block.h	/^	struct bitcoin_block_hdr hdr;$/;"	m	struct:bitcoin_block	typeref:struct:bitcoin_block::bitcoin_block_hdr
hdr	ccan/ccan/tal/tal.c	/^	struct prop_hdr hdr; \/* CHILDREN *\/$/;"	m	struct:children	typeref:struct:children::prop_hdr	file:
hdr	ccan/ccan/tal/tal.c	/^	struct prop_hdr hdr; \/* LENGTH *\/$/;"	m	struct:length	typeref:struct:length::prop_hdr	file:
hdr	ccan/ccan/tal/tal.c	/^	struct prop_hdr hdr; \/* NAME *\/$/;"	m	struct:name	typeref:struct:name::prop_hdr	file:
hdr	ccan/ccan/tal/tal.c	/^	struct prop_hdr hdr; \/* NOTIFIER *\/$/;"	m	struct:notifier	typeref:struct:notifier::prop_hdr	file:
hdr	ccan/ccan/tal/tal.c	/^	struct tal_hdr hdr;$/;"	m	struct:__anon4	typeref:struct:__anon4::tal_hdr	file:
hdr	daemon/chaintopology.c	/^	struct bitcoin_block_hdr hdr;$/;"	m	struct:block	typeref:struct:block::bitcoin_block_hdr	file:
hdr_in	daemon/cryptopkt.c	/^	struct crypto_pkt hdr_in;$/;"	m	struct:io_data	typeref:struct:io_data::crypto_pkt	file:
height	daemon/chaintopology.c	/^	int height;$/;"	m	struct:block	file:
help	daemon/jsonrpc.h	/^	const char *help;$/;"	m	struct:json_command
help_command	daemon/jsonrpc.c	/^static const struct json_command help_command = {$/;"	v	typeref:struct:json_command	file:
hex	libsodium/test/default/scalarmult.c	/^static char hex[crypto_scalarmult_BYTES * 2 + 1];$/;"	v	file:
hex_data_size	ccan/ccan/str/hex/hex.h	/^static inline size_t hex_data_size(size_t strlen)$/;"	f
hex_decode	ccan/ccan/str/hex/hex.c	/^bool hex_decode(const char *str, size_t slen, void *buf, size_t bufsize)$/;"	f
hex_encode	ccan/ccan/str/hex/hex.c	/^bool hex_encode(const void *buf, size_t bufsize, char *dest, size_t destsize)$/;"	f
hex_str_size	ccan/ccan/str/hex/hex.h	/^static inline size_t hex_str_size(size_t bytes)$/;"	f
hexchar	ccan/ccan/str/hex/hex.c	/^static char hexchar(unsigned int val)$/;"	f	file:
hexeq	bitcoin/test/run-tx-encode.c	/^static void hexeq(const void *p, size_t len, const char *hex)$/;"	f	file:
hextx	daemon/peer.h	/^	const char *hextx;$/;"	m	struct:outgoing_tx
hh	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^        uint32_t hh[10];$/;"	m	union:poly1305_state_internal_t::__anon73	file:
hi	ccan/ccan/asort/asort.c	/^    char *hi;$/;"	m	struct:__anon2	file:
hist	test/test_state_coverage.c	/^struct hist {$/;"	s	file:
hkdf_sha256	ccan/ccan/crypto/hkdf_sha256/hkdf_sha256.c	/^void hkdf_sha256(void *okm, size_t okm_size,$/;"	f
hkdf_two_keys	lightningd/cryptomsg.c	/^static void hkdf_two_keys(struct sha256 *out1, struct sha256 *out2,$/;"	f	file:
hkdf_two_keys	lightningd/handshake/handshake.c	/^static void hkdf_two_keys(struct secret *out1, struct secret *out2,$/;"	f	file:
hmac	ccan/ccan/crypto/hmac_sha256/test/api-rfc4231.c	/^	const char *key, *data, *hmac;$/;"	m	struct:test	file:
hmac_sha256	ccan/ccan/crypto/hmac_sha256/hmac_sha256.c	/^void hmac_sha256(struct hmac_sha256 *hmac,$/;"	f
hmac_sha256	ccan/ccan/crypto/hmac_sha256/hmac_sha256.h	/^struct hmac_sha256 {$/;"	s
hmac_sha256_ctx	ccan/ccan/crypto/hmac_sha256/hmac_sha256.h	/^struct hmac_sha256_ctx {$/;"	s
hmac_sha256_done	ccan/ccan/crypto/hmac_sha256/hmac_sha256.c	/^void hmac_sha256_done(struct hmac_sha256_ctx *ctx,$/;"	f
hmac_sha256_init	ccan/ccan/crypto/hmac_sha256/hmac_sha256.c	/^void hmac_sha256_init(struct hmac_sha256_ctx *ctx,$/;"	f
hmac_sha256_update	ccan/ccan/crypto/hmac_sha256/hmac_sha256.c	/^void hmac_sha256_update(struct hmac_sha256_ctx *ctx, const void *p, size_t size)$/;"	f
hop_params	daemon/sphinx.c	/^struct hop_params {$/;"	s	file:
hoppayload	daemon/sphinx.h	/^	struct hoppayload *hoppayload;$/;"	m	struct:route_step	typeref:struct:route_step::hoppayload
hoppayload	daemon/sphinx.h	/^struct hoppayload {$/;"	s
hoppayloads	daemon/sphinx.h	/^	u8 hoppayloads[TOTAL_HOP_PAYLOAD_SIZE];$/;"	m	struct:onionpacket
host	libsodium/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	libsodium/dist-build/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	libsodium/msvc-scripts/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	libsodium/src/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	libsodium/src/libsodium/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	libsodium/src/libsodium/include/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	libsodium/test/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	libsodium/test/default/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	secp256k1/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host_alias	libsodium/Makefile	/^host_alias = $/;"	m
host_alias	libsodium/dist-build/Makefile	/^host_alias = $/;"	m
host_alias	libsodium/msvc-scripts/Makefile	/^host_alias = $/;"	m
host_alias	libsodium/src/Makefile	/^host_alias = $/;"	m
host_alias	libsodium/src/libsodium/Makefile	/^host_alias = $/;"	m
host_alias	libsodium/src/libsodium/include/Makefile	/^host_alias = $/;"	m
host_alias	libsodium/test/Makefile	/^host_alias = $/;"	m
host_alias	libsodium/test/default/Makefile	/^host_alias = $/;"	m
host_alias	secp256k1/Makefile	/^host_alias = $/;"	m
host_cpu	libsodium/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	libsodium/dist-build/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	libsodium/msvc-scripts/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	libsodium/src/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	libsodium/src/libsodium/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	libsodium/src/libsodium/include/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	libsodium/test/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	libsodium/test/default/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	secp256k1/Makefile	/^host_cpu = x86_64$/;"	m
host_os	libsodium/Makefile	/^host_os = linux-gnu$/;"	m
host_os	libsodium/dist-build/Makefile	/^host_os = linux-gnu$/;"	m
host_os	libsodium/msvc-scripts/Makefile	/^host_os = linux-gnu$/;"	m
host_os	libsodium/src/Makefile	/^host_os = linux-gnu$/;"	m
host_os	libsodium/src/libsodium/Makefile	/^host_os = linux-gnu$/;"	m
host_os	libsodium/src/libsodium/include/Makefile	/^host_os = linux-gnu$/;"	m
host_os	libsodium/test/Makefile	/^host_os = linux-gnu$/;"	m
host_os	libsodium/test/default/Makefile	/^host_os = linux-gnu$/;"	m
host_os	secp256k1/Makefile	/^host_os = linux-gnu$/;"	m
host_triplet	libsodium/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_triplet	libsodium/dist-build/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_triplet	libsodium/msvc-scripts/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_triplet	libsodium/src/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_triplet	libsodium/src/libsodium/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_triplet	libsodium/src/libsodium/include/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_triplet	libsodium/test/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_triplet	libsodium/test/default/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_triplet	secp256k1/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_vendor	libsodium/Makefile	/^host_vendor = pc$/;"	m
host_vendor	libsodium/dist-build/Makefile	/^host_vendor = pc$/;"	m
host_vendor	libsodium/msvc-scripts/Makefile	/^host_vendor = pc$/;"	m
host_vendor	libsodium/src/Makefile	/^host_vendor = pc$/;"	m
host_vendor	libsodium/src/libsodium/Makefile	/^host_vendor = pc$/;"	m
host_vendor	libsodium/src/libsodium/include/Makefile	/^host_vendor = pc$/;"	m
host_vendor	libsodium/test/Makefile	/^host_vendor = pc$/;"	m
host_vendor	libsodium/test/default/Makefile	/^host_vendor = pc$/;"	m
host_vendor	secp256k1/Makefile	/^host_vendor = pc$/;"	m
hostname	daemon/routing.h	/^	char *hostname;$/;"	m	struct:node
hsm	lightningd/lightningd.h	/^	struct subdaemon *hsm;$/;"	m	struct:lightningd	typeref:struct:lightningd::subdaemon
hsm_client_wire_type	lightningd/hsm/gen_hsm_client_wire.h	/^enum hsm_client_wire_type {$/;"	g
hsm_client_wire_type_name	lightningd/hsm/gen_hsm_client_wire.c	/^const char *hsm_client_wire_type_name(int e)$/;"	f
hsm_control_wire_type	lightningd/hsm/gen_hsm_control_wire.h	/^enum hsm_control_wire_type {$/;"	g
hsm_control_wire_type_name	lightningd/hsm/gen_hsm_control_wire.c	/^const char *hsm_control_wire_type_name(int e)$/;"	f
hsm_do_ecdh	lightningd/handshake/test/run-handshake.c	/^bool hsm_do_ecdh(struct sha256 *ss, const struct pubkey *point)$/;"	f
hsm_do_ecdh	lightningd/hsm/client.c	/^bool hsm_do_ecdh(struct sha256 *ss, const struct pubkey *point)$/;"	f
hsm_fd	lightningd/hsm/client.c	/^static int hsm_fd = -1;$/;"	v	file:
hsm_finished	lightningd/hsm_control.c	/^static void hsm_finished(struct subdaemon *hsm, int status)$/;"	f	file:
hsm_init	lightningd/hsm_control.c	/^void hsm_init(struct lightningd *ld, bool newdir)$/;"	f
hsm_init_done	lightningd/hsm_control.c	/^static void hsm_init_done(struct subdaemon *hsm, const u8 *msg,$/;"	f	file:
hsm_secret	lightningd/hsm/hsm.c	/^static struct privkey hsm_secret;$/;"	v	typeref:struct:privkey	file:
hsm_setup	lightningd/handshake/test/run-handshake.c	/^void hsm_setup(int fd)$/;"	f
hsm_setup	lightningd/hsm/client.c	/^void hsm_setup(int fd)$/;"	f
hsm_status	lightningd/hsm_control.c	/^static enum subdaemon_status hsm_status(struct subdaemon *hsm, const u8 *msg,$/;"	f	file:
hsm_status_wire_type	lightningd/hsm/gen_hsm_status_wire.h	/^enum hsm_status_wire_type {$/;"	g
hsm_status_wire_type_name	lightningd/hsm/gen_hsm_status_wire.c	/^const char *hsm_status_wire_type_name(int e)$/;"	f
hsmfd	lightningd/peer_control.h	/^	int hsmfd;$/;"	m	struct:peer
ht_add	ccan/ccan/htable/htable.c	/^static void ht_add(struct htable *ht, const void *new, size_t h)$/;"	f	file:
htable	ccan/ccan/htable/htable.h	/^struct htable {$/;"	s
htable	ccan/ccan/likely/likely.c	/^static struct thash htable$/;"	v	typeref:struct:thash	file:
htable_add	ccan/ccan/htable/htable.c	/^bool htable_add(struct htable *ht, size_t hash, const void *p)$/;"	f
htable_adjust_capacity	ccan/ccan/htable/htable.c	/^static void htable_adjust_capacity(struct htable *ht)$/;"	f	file:
htable_clear	ccan/ccan/htable/htable.c	/^void htable_clear(struct htable *ht)$/;"	f
htable_copy	ccan/ccan/htable/htable.c	/^bool htable_copy(struct htable *dst, const struct htable *src)$/;"	f
htable_del	ccan/ccan/htable/htable.c	/^bool htable_del(struct htable *ht, size_t h, const void *p)$/;"	f
htable_delval	ccan/ccan/htable/htable.c	/^void htable_delval(struct htable *ht, struct htable_iter *i)$/;"	f
htable_first	ccan/ccan/htable/htable.c	/^void *htable_first(const struct htable *ht, struct htable_iter *i)$/;"	f
htable_firstval	ccan/ccan/htable/htable.c	/^void *htable_firstval(const struct htable *ht,$/;"	f
htable_get	ccan/ccan/htable/htable.h	/^static inline void *htable_get(const struct htable *ht,$/;"	f
htable_init	ccan/ccan/htable/htable.c	/^void htable_init(struct htable *ht,$/;"	f
htable_init_sized	ccan/ccan/htable/htable.c	/^bool htable_init_sized(struct htable *ht,$/;"	f
htable_iter	ccan/ccan/htable/htable.h	/^struct htable_iter {$/;"	s
htable_next	ccan/ccan/htable/htable.c	/^void *htable_next(const struct htable *ht, struct htable_iter *i)$/;"	f
htable_nextval	ccan/ccan/htable/htable.c	/^void *htable_nextval(const struct htable *ht,$/;"	f
htable_prev	ccan/ccan/htable/htable.c	/^void *htable_prev(const struct htable *ht, struct htable_iter *i)$/;"	f
htable_val	ccan/ccan/htable/htable.c	/^static void *htable_val(const struct htable *ht,$/;"	f	file:
htlc	daemon/htlc.h	/^struct htlc {$/;"	s
htlc	daemon/pay.c	/^	struct htlc *htlc;$/;"	m	struct:pay_command	typeref:struct:pay_command::htlc	file:
htlc	test/test_protocol.c	/^struct htlc {$/;"	s	file:
htlc	test/test_state_coverage.c	/^	struct htlc htlc; \/* id == -1 if none in progress. *\/$/;"	m	struct:htlc_progress	typeref:struct:htlc_progress::htlc	file:
htlc	test/test_state_coverage.c	/^struct htlc {$/;"	s	file:
htlc	type_to_string.h	/^	const struct htlc *htlc;$/;"	m	union:printable_types	typeref:struct:printable_types::htlc
htlc_changestate	daemon/htlc.c	/^void htlc_changestate(struct htlc *h,$/;"	f
htlc_changestate	test/test_protocol.c	/^static void htlc_changestate(struct peer *peer,$/;"	f	file:
htlc_cmp	daemon/htlc.h	/^static inline bool htlc_cmp(const struct htlc *h, u64 id)$/;"	f
htlc_declined	test/test_state_coverage.c	/^	bool htlc_declined;$/;"	m	struct:peer	file:
htlc_destroy	daemon/peer.c	/^static void htlc_destroy(struct htlc *htlc)$/;"	f	file:
htlc_exists	daemon/test/scripts/helpers.sh	/^htlc_exists()$/;"	f
htlc_fulfill_tx	daemon/peer.c	/^static const struct bitcoin_tx *htlc_fulfill_tx(const struct peer *peer,$/;"	f	file:
htlc_get	daemon/htlc.h	/^static inline struct htlc *htlc_get(struct htlc_map *htlcs, u64 id, enum side owner)$/;"	f
htlc_has	daemon/htlc.h	/^static inline bool htlc_has(const struct htlc *h, int flag)$/;"	f
htlc_hash	daemon/htlc.h	/^static inline size_t htlc_hash(u64 id)$/;"	f
htlc_id	test/test_state_coverage.c	/^	int htlc_id;$/;"	m	struct:trail	file:
htlc_id_counter	daemon/peer.h	/^	u64 htlc_id_counter;$/;"	m	struct:peer
htlc_id_from_pkt	test/test_state_coverage.c	/^static unsigned int htlc_id_from_pkt(const Pkt *pkt)$/;"	f	file:
htlc_id_from_tx	test/test_state_coverage.c	/^static unsigned int htlc_id_from_tx(const struct bitcoin_tx *tx)$/;"	f	file:
htlc_is_dead	daemon/htlc.h	/^static inline bool htlc_is_dead(const struct htlc *htlc)$/;"	f
htlc_is_state	daemon/test/scripts/helpers.sh	/^htlc_is_state()$/;"	f
htlc_key	daemon/htlc.h	/^static inline u64 htlc_key(const struct htlc *h)$/;"	f
htlc_map_count	daemon/htlc.h	/^static inline size_t htlc_map_count(const struct htlc_map *htlcs)$/;"	f
htlc_mask	test/test_protocol.c	/^static u32 htlc_mask(unsigned int htlc)$/;"	f	file:
htlc_minimum_msat	daemon/routing.h	/^	u32 htlc_minimum_msat;$/;"	m	struct:node_connection
htlc_minimum_msat	lightningd/channel_config.h	/^	u32 htlc_minimum_msat;$/;"	m	struct:channel_config
htlc_minimum_msat	wire/test/run-peer-wire.c	/^	u32 htlc_minimum_msat;$/;"	m	struct:msg_accept_channel	file:
htlc_minimum_msat	wire/test/run-peer-wire.c	/^	u32 htlc_minimum_msat;$/;"	m	struct:msg_channel_update	file:
htlc_minimum_msat	wire/test/run-peer-wire.c	/^	u32 htlc_minimum_msat;$/;"	m	struct:msg_open_channel	file:
htlc_output_map	daemon/output_to_htlc.c	/^struct htlc_output_map {$/;"	s	file:
htlc_owner	daemon/htlc.h	/^static inline enum side htlc_owner(const struct htlc *h)$/;"	f
htlc_pkt	test/test_state_coverage.c	/^static Pkt *htlc_pkt(const tal_t *ctx, const char *prefix, unsigned int id)$/;"	f	file:
htlc_progress	test/test_state_coverage.c	/^struct htlc_progress {$/;"	s	file:
htlc_signature	wire/test/run-peer-wire.c	/^	secp256k1_ecdsa_signature *htlc_signature;$/;"	m	struct:msg_commit_sig	file:
htlc_spend_watch	test/test_state_coverage.c	/^struct htlc_spend_watch {$/;"	s	file:
htlc_spends_to_them	test/test_state_coverage.c	/^		htlc_spends_to_them[HTLC_ARRSIZE];$/;"	m	struct:peer	typeref:struct:peer::	file:
htlc_spends_to_us	test/test_state_coverage.c	/^	struct htlc htlc_spends_to_us[HTLC_ARRSIZE],$/;"	m	struct:peer	typeref:struct:peer::htlc	file:
htlc_state	daemon/htlc_state.h	/^enum htlc_state {$/;"	g
htlc_state	test/test_protocol.c	/^enum htlc_state {$/;"	g	file:
htlc_state_flags	daemon/htlc_state.c	/^int htlc_state_flags(enum htlc_state state)$/;"	f
htlc_state_from_name	daemon/htlc_state.c	/^enum htlc_state htlc_state_from_name(const char *name)$/;"	f
htlc_state_name	daemon/htlc_state.c	/^const char *htlc_state_name(enum htlc_state s)$/;"	f
htlc_state_owner	daemon/htlc.h	/^static inline enum side htlc_state_owner(enum htlc_state state)$/;"	f
htlc_stateflags	test/test_protocol.c	/^static const char *htlc_stateflags(const tal_t *ctx, enum htlc_state state)$/;"	f	file:
htlc_statename	test/test_protocol.c	/^static const char *htlc_statename(enum htlc_state state)$/;"	f	file:
htlc_success_fee	lightningd/commit_tx.c	/^u64 htlc_success_fee(u64 feerate_per_kw)$/;"	f
htlc_success_tx	lightningd/htlc_tx.c	/^struct bitcoin_tx *htlc_success_tx(const tal_t *ctx,$/;"	f
htlc_success_tx_add_witness	lightningd/htlc_tx.c	/^void htlc_success_tx_add_witness(struct bitcoin_tx *htlc_success,$/;"	f
htlc_timeout_fee	lightningd/commit_tx.c	/^u64 htlc_timeout_fee(u64 feerate_per_kw)$/;"	f
htlc_timeout_signature	wire/test/run-peer-wire.c	/^	secp256k1_ecdsa_signature *htlc_timeout_signature;$/;"	m	struct:msg_revoke_and_ack	file:
htlc_timeout_tx	daemon/peer.c	/^static const struct bitcoin_tx *htlc_timeout_tx(const struct peer *peer,$/;"	f	file:
htlc_timeout_tx	lightningd/htlc_tx.c	/^struct bitcoin_tx *htlc_timeout_tx(const tal_t *ctx,$/;"	f
htlc_timeout_tx_add_witness	lightningd/htlc_tx.c	/^void htlc_timeout_tx_add_witness(struct bitcoin_tx *htlc_timeout,$/;"	f
htlc_tx	lightningd/htlc_tx.c	/^static struct bitcoin_tx *htlc_tx(const tal_t *ctx,$/;"	f	file:
htlc_tx	test/test_state_coverage.c	/^static struct bitcoin_tx *htlc_tx(const tal_t *ctx,$/;"	f	file:
htlc_undostate	daemon/htlc.c	/^void htlc_undostate(struct htlc *h,$/;"	f
htlc_with_source	daemon/peer.c	/^static struct htlc *htlc_with_source(struct peer *peer, struct htlc *src)$/;"	f	file:
htlcs	daemon/peer.h	/^		struct htlc **htlcs;$/;"	m	struct:peer::__anon50	typeref:struct:peer::__anon50::htlc
htlcs	daemon/peer.h	/^	struct htlc_map htlcs;$/;"	m	struct:peer	typeref:struct:peer::htlc_map
htlcs	test/test_protocol.c	/^	struct htlc **htlcs;$/;"	m	struct:peer	typeref:struct:peer::htlc	file:
htlcs	test/test_protocol.c	/^	struct htlc htlcs[100];$/;"	m	struct:database	typeref:struct:database::htlc	file:
htlcs_table	daemon/peer.c	/^struct htlcs_table {$/;"	s	file:
htlcs_to_them	test/test_state_coverage.c	/^	struct htlc htlcs_to_them[MAX_HTLCS], htlcs_to_us[MAX_HTLCS];$/;"	m	struct:peer	typeref:struct:peer::htlc	file:
htlcs_to_us	test/test_state_coverage.c	/^	struct htlc htlcs_to_them[MAX_HTLCS], htlcs_to_us[MAX_HTLCS];$/;"	m	struct:peer	typeref:struct:peer::	file:
htmldir	libsodium/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	libsodium/dist-build/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	libsodium/msvc-scripts/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	libsodium/src/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	libsodium/src/libsodium/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	libsodium/src/libsodium/include/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	libsodium/test/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	libsodium/test/default/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	secp256k1/Makefile	/^htmldir = ${docdir}$/;"	m
i	ccan/ccan/alignof/test/run.c	/^	int i;$/;"	m	struct:lots_of_types	file:
i	ccan/ccan/intmap/intmap.h	/^		intmap_index_t i;$/;"	m	union:intmap::__anon12
i	daemon/bitcoind.c	/^	size_t i;$/;"	m	struct:normalizing	file:
i	test/test_state_coverage.c	/^	enum state_input i;$/;"	m	struct:dot_edge	typeref:enum:dot_edge::state_input	file:
ictx	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha256.h	/^    crypto_hash_sha256_state ictx;$/;"	m	struct:crypto_auth_hmacsha256_state
ictx	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512.h	/^    crypto_hash_sha512_state ictx;$/;"	m	struct:crypto_auth_hmacsha512_state
id	daemon/htlc.h	/^	u64 id;$/;"	m	struct:htlc
id	daemon/jsonrpc.h	/^	const char *id;$/;"	m	struct:command
id	daemon/lightningd.h	/^	struct pubkey id;$/;"	m	struct:lightningd_state	typeref:struct:lightningd_state::pubkey
id	daemon/peer.h	/^	struct pubkey *id;$/;"	m	struct:peer	typeref:struct:peer::pubkey
id	daemon/peer.h	/^	struct pubkey id;$/;"	m	struct:peer_address	typeref:struct:peer_address::pubkey
id	daemon/routing.h	/^	struct pubkey id;$/;"	m	struct:node	typeref:struct:node::pubkey
id	lightning.pb-c.h	/^  BitcoinPubkey *id;$/;"	m	struct:_FailInfo
id	lightning.pb-c.h	/^  uint64_t id;$/;"	m	struct:_UpdateAddHtlc
id	lightning.pb-c.h	/^  uint64_t id;$/;"	m	struct:_UpdateFailHtlc
id	lightning.pb-c.h	/^  uint64_t id;$/;"	m	struct:_UpdateFulfillHtlc
id	lightningd/hsm/hsm.c	/^	u64 id;$/;"	m	struct:client	file:
id	lightningd/peer_control.c	/^	struct pubkey id;$/;"	m	struct:json_connecting	typeref:struct:json_connecting::pubkey	file:
id	lightningd/peer_control.h	/^	struct pubkey *id;$/;"	m	struct:peer	typeref:struct:peer::pubkey
id	test/test_protocol.c	/^	unsigned int id;$/;"	m	struct:htlc	file:
id	test/test_state_coverage.c	/^	unsigned int id;$/;"	m	struct:htlc	file:
id	test/test_state_coverage.c	/^	unsigned int id;$/;"	m	struct:htlc_spend_watch	file:
id	wire/test/run-peer-wire.c	/^	u64 id;$/;"	m	struct:msg_update_add_htlc	file:
id	wire/test/run-peer-wire.c	/^	u64 id;$/;"	m	struct:msg_update_fail_htlc	file:
id	wire/test/run-peer-wire.c	/^	u64 id;$/;"	m	struct:msg_update_fulfill_htlc	file:
idata	test/test_state_coverage.c	/^	union input idata;$/;"	m	struct:fail_details	typeref:union:fail_details::input	file:
idem	tools/generate-wire.py	/^    idem = re.sub(r'[^A-Z]+', '_', options.headerfilename.upper())$/;"	v	class:Message
idler	ccan/ccan/io/test/run-06-idle.c	/^static struct io_conn *idler;$/;"	v	typeref:struct:io_conn	file:
ids	daemon/pay.c	/^	const struct pubkey *ids;$/;"	m	struct:pay_command	typeref:struct:pay_command::pubkey	file:
if_blobs_know_the_secret	ccan/ccan/list/test/helper.c	/^bool if_blobs_know_the_secret(struct opaque *blob)$/;"	f
ignore_destroying_bit	ccan/ccan/tal/tal.c	/^static struct children *ignore_destroying_bit(struct children *parent_child)$/;"	f	file:
ikm	ccan/ccan/crypto/hkdf_sha256/test/api-rfc5869.c	/^	const char *ikm, *salt, *info, *okm;$/;"	m	struct:test	file:
illegal_callback	secp256k1/src/secp256k1.c	/^    secp256k1_callback illegal_callback;$/;"	m	struct:secp256k1_context_struct	file:
ilog32	ccan/ccan/ilog/ilog.c	/^int ilog32(uint32_t _v){$/;"	f
ilog32	ccan/ccan/ilog/ilog.c	27;"	d	file:
ilog32	ccan/ccan/ilog/ilog.h	123;"	d
ilog32	ccan/ccan/ilog/ilog.h	127;"	d
ilog32_nz	ccan/ccan/ilog/ilog.c	/^int ilog32_nz(uint32_t _v)$/;"	f
ilog32_nz	ccan/ccan/ilog/ilog.c	26;"	d	file:
ilog32_nz	ccan/ccan/ilog/ilog.h	124;"	d
ilog32_nz	ccan/ccan/ilog/ilog.h	126;"	d
ilog64	ccan/ccan/ilog/ilog.c	/^int ilog64(uint64_t _v){$/;"	f
ilog64	ccan/ccan/ilog/ilog.c	29;"	d	file:
ilog64	ccan/ccan/ilog/ilog.h	131;"	d
ilog64	ccan/ccan/ilog/ilog.h	135;"	d
ilog64_nz	ccan/ccan/ilog/ilog.c	/^int ilog64_nz(uint64_t _v)$/;"	f
ilog64_nz	ccan/ccan/ilog/ilog.c	28;"	d	file:
ilog64_nz	ccan/ccan/ilog/ilog.h	132;"	d
ilog64_nz	ccan/ccan/ilog/ilog.h	134;"	d
impl_tests	libsodium/test/default/randombytes.c	/^static int impl_tests(void)$/;"	f	file:
implementation	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c	/^static const crypto_onetimeauth_poly1305_implementation *implementation =$/;"	v	file:
implementation	libsodium/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.c	/^static const crypto_scalarmult_curve25519_implementation *implementation =$/;"	v	file:
implementation	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c	/^static const crypto_stream_chacha20_implementation *implementation =$/;"	v	file:
implementation	libsodium/src/libsodium/randombytes/randombytes.c	/^static const randombytes_implementation *implementation = NULL;$/;"	v	file:
implementation	libsodium/src/libsodium/randombytes/randombytes.c	/^static const randombytes_implementation *implementation =$/;"	v	file:
implementation_name	libsodium/src/libsodium/include/sodium/randombytes.h	/^    const char *(*implementation_name)(void); \/* required *\/$/;"	m	struct:randombytes_implementation
imulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^imulq  $19,%rbp,%rdx$/;"	l
imulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^imulq  $19,%rdx,%rax$/;"	l
imulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^imulq  $19,%rdx,%rdx$/;"	l
imulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^imulq  $19, %r8,%r8$/;"	l
imulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^imulq  $19, %r9,%r9$/;"	l
imulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^imulq  $19, %rax,%rax$/;"	l
imulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^imulq  $19, %rbp,%rbp$/;"	l
imulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^imulq  $38, %rax,%rax$/;"	l
imulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^imulq  $19, %r12,%r12$/;"	l
in	daemon/cryptopkt.c	/^	struct dir_state in, out;$/;"	m	struct:io_data	typeref:struct:io_data::dir_state	file:
in	daemon/routing.h	/^	struct node_connection **in, **out;$/;"	m	struct:node	typeref:struct:node::node_connection
in	libsodium/test/default/core3.c	/^static unsigned char in[16];$/;"	v	file:
in	libsodium/test/default/core4.c	/^static unsigned char in[16]$/;"	v	file:
in	libsodium/test/default/core5.c	/^static unsigned char in[16]$/;"	v	file:
in	libsodium/test/default/core6.c	/^static unsigned char in[16]$/;"	v	file:
in	lightningd/cryptomsg.c	/^	u8 *out, *in;$/;"	m	struct:crypto_state	file:
in	lightningd/hsm/hsm.c	/^	u8 *in;$/;"	m	struct:conn_info	file:
in_amount	daemon/peer.h	/^	u64 in_amount, out_amount;$/;"	m	struct:anchor_input
in_bounds	ccan/ccan/tal/tal.c	/^static bool in_bounds(const void *p)$/;"	f	file:
in_hex	libsodium/test/default/generichash.c	/^    const char *in_hex;$/;"	m	struct:__anon63	file:
in_order	ccan/ccan/strmap/test/run-order.c	/^static bool in_order(const char *member, char *value, unsigned int *count)$/;"	f	file:
in_order	ccan/ccan/strmap/test/run-prefix.c	/^static bool in_order(const char *index, char *value, unsigned int *count)$/;"	f	file:
in_order_by_2	ccan/ccan/strmap/test/run-order.c	/^static bool in_order_by_2(const char *member, char *value, unsigned int *count)$/;"	f	file:
in_transaction	daemon/db.c	/^	bool in_transaction;$/;"	m	struct:db	file:
inbuf	ccan/ccan/io/test/run-08-read-after-hangup.c	/^static char inbuf[8];$/;"	v	file:
include_HEADERS	secp256k1/Makefile	/^include_HEADERS = include\/secp256k1.h $(am__append_5) $(am__append_8) \\$/;"	m
include_nops	test/test_state_coverage.c	/^static bool include_nops = false;$/;"	v	file:
includedir	libsodium/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	libsodium/dist-build/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	libsodium/msvc-scripts/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	libsodium/src/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	libsodium/src/libsodium/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	libsodium/src/libsodium/include/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	libsodium/test/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	libsodium/test/default/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	secp256k1/Makefile	/^includedir = ${prefix}\/include$/;"	m
includes	tools/generate-wire.py	/^includes = []$/;"	v
incoming_jcon_connected	daemon/jsonrpc.c	/^static struct io_plan *incoming_jcon_connected(struct io_conn *conn,$/;"	f	file:
increase	lightningd/test/run-commit_tx.c	/^static u64 increase(u64 feerate_per_kw)$/;"	f	file:
indent	daemon/json.c	/^	unsigned int indent;$/;"	m	struct:json_result	file:
index	bitcoin/tx.h	/^	u32 index; \/* output number referred to by above *\/$/;"	m	struct:bitcoin_tx_input
index	ccan/ccan/crypto/shachain/shachain.h	/^		shachain_index_t index;$/;"	m	struct:shachain::__anon8
index	daemon/chaintopology.h	/^	u32 index;$/;"	m	struct:txlocator
index	daemon/peer.h	/^		unsigned int index;$/;"	m	struct:peer::__anon47
index	daemon/peer.h	/^	unsigned int index;$/;"	m	struct:anchor_input
index	daemon/watch.h	/^	unsigned int index;$/;"	m	struct:txwatch_output
index	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    uint32_t index;$/;"	m	struct:Argon2_position_t
index_alpha	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^uint32_t index_alpha(const argon2_instance_t *instance,$/;"	f
infd	test/test_protocol.c	/^	int infd, outfd, cmdfd, cmddonefd;$/;"	m	struct:peer	file:
infinity	secp256k1/src/group.h	/^    int infinity; \/* whether this represents the point at infinity *\/$/;"	m	struct:__anon30
infinity	secp256k1/src/group.h	/^    int infinity; \/* whether this represents the point at infinity *\/$/;"	m	struct:__anon31
info	ccan/ccan/crypto/hkdf_sha256/test/api-rfc5869.c	/^	const char *ikm, *salt, *info, *okm;$/;"	m	struct:test	file:
info	lightning.pb-c.h	/^  ProtobufCBinaryData info;$/;"	m	struct:_FailReason
info	lightning.pb-c.h	/^  ProtobufCBinaryData info;$/;"	m	struct:_Routing
info	test/test_protocol.c	/^	char *info;$/;"	m	struct:peer	file:
info5	contrib/pylightning/lightning/lightning.py	/^    info5 = l5.getinfo()$/;"	v
info_base	ccan/ccan/tcon/test/compile_fail-container1.c	/^struct info_base {$/;"	s	file:
info_base	ccan/ccan/tcon/test/compile_fail-container1w.c	/^struct info_base {$/;"	s	file:
info_base	ccan/ccan/tcon/test/compile_fail-container2.c	/^struct info_base {$/;"	s	file:
info_base	ccan/ccan/tcon/test/compile_fail-container2w.c	/^struct info_base {$/;"	s	file:
info_base	ccan/ccan/tcon/test/compile_fail-container3.c	/^struct info_base {$/;"	s	file:
info_base	ccan/ccan/tcon/test/compile_fail-container3w.c	/^struct info_base {$/;"	s	file:
info_base	ccan/ccan/tcon/test/compile_fail-container4.c	/^struct info_base {$/;"	s	file:
info_base	ccan/ccan/tcon/test/compile_fail-container4w.c	/^struct info_base {$/;"	s	file:
info_base	ccan/ccan/tcon/test/compile_ok-container.c	/^struct info_base {$/;"	s	file:
info_base	ccan/ccan/tcon/test/run-container.c	/^struct info_base {$/;"	s	file:
info_tcon	ccan/ccan/tcon/test/compile_fail-container1.c	/^struct info_tcon {$/;"	s	file:
info_tcon	ccan/ccan/tcon/test/compile_fail-container2.c	/^struct info_tcon {$/;"	s	file:
info_tcon	ccan/ccan/tcon/test/compile_fail-container3.c	/^struct info_tcon {$/;"	s	file:
info_tcon	ccan/ccan/tcon/test/compile_fail-container4.c	/^struct info_tcon {$/;"	s	file:
info_tcon	ccan/ccan/tcon/test/compile_ok-container.c	/^struct info_tcon {$/;"	s	file:
info_tcon	ccan/ccan/tcon/test/run-container.c	/^struct info_tcon {$/;"	s	file:
infodir	libsodium/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	libsodium/dist-build/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	libsodium/msvc-scripts/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	libsodium/src/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	libsodium/src/libsodium/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	libsodium/src/libsodium/include/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	libsodium/test/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	libsodium/test/default/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	secp256k1/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infop	ccan/ccan/tcon/test/compile_fail-container1.c	/^	char *infop;$/;"	m	struct:info_base	file:
infop	ccan/ccan/tcon/test/compile_fail-container1w.c	/^	char *infop;$/;"	m	struct:info_base	file:
infop	ccan/ccan/tcon/test/compile_fail-container2.c	/^	char *infop;$/;"	m	struct:info_base	file:
infop	ccan/ccan/tcon/test/compile_fail-container2w.c	/^	char *infop;$/;"	m	struct:info_base	file:
infop	ccan/ccan/tcon/test/compile_fail-container3.c	/^	char *infop;$/;"	m	struct:info_base	file:
infop	ccan/ccan/tcon/test/compile_fail-container3w.c	/^	char *infop;$/;"	m	struct:info_base	file:
infop	ccan/ccan/tcon/test/compile_fail-container4.c	/^	char *infop;$/;"	m	struct:info_base	file:
infop	ccan/ccan/tcon/test/compile_fail-container4w.c	/^	char *infop;$/;"	m	struct:info_base	file:
infop	ccan/ccan/tcon/test/compile_ok-container.c	/^	char *infop;$/;"	m	struct:info_base	file:
infop	ccan/ccan/tcon/test/run-container.c	/^	char *infop;$/;"	m	struct:info_base	file:
inhtlcs	test/test_protocol.c	/^	u32 inhtlcs, outhtlcs;$/;"	m	struct:commit_tx	file:
init	ccan/ccan/io/backend.h	/^	struct io_plan *(*init)(struct io_conn *conn, void *arg);$/;"	m	struct:io_listener	typeref:struct:io_listener::init
init	daemon/dns.c	/^	struct io_plan *(*init)(struct io_conn *, struct lightningd_state *,$/;"	m	struct:dns_async	typeref:struct:dns_async::init	file:
init	libsodium/examples/utils.h	/^init(void)$/;"	f
init	lightning.pb-c.h	/^    Init *init;$/;"	m	union:_Pkt::__anon45
init__descriptor	lightning.pb-c.c	/^const ProtobufCMessageDescriptor init__descriptor =$/;"	v
init__field_descriptors	lightning.pb-c.c	/^static const ProtobufCFieldDescriptor init__field_descriptors[2] =$/;"	v	file:
init__field_indices_by_name	lightning.pb-c.c	/^static const unsigned init__field_indices_by_name[] = {$/;"	v	file:
init__free_unpacked	lightning.pb-c.c	/^void   init__free_unpacked$/;"	f
init__get_packed_size	lightning.pb-c.c	/^size_t init__get_packed_size$/;"	f
init__init	lightning.pb-c.c	/^void   init__init$/;"	f
init__number_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange init__number_ranges[1 + 1] =$/;"	v	file:
init__pack	lightning.pb-c.c	/^size_t init__pack$/;"	f
init__pack_to_buffer	lightning.pb-c.c	/^size_t init__pack_to_buffer$/;"	f
init__unpack	lightning.pb-c.c	/^       init__unpack$/;"	f
init_block_value	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^void init_block_value(block *b, uint8_t in) {$/;"	f
init_conn	ccan/ccan/io/test/run-01-start-finish.c	/^static struct io_plan *init_conn(struct io_conn *conn, int *state)$/;"	f	file:
init_conn	ccan/ccan/io/test/run-02-read.c	/^static struct io_plan *init_conn(struct io_conn *conn, struct data *d)$/;"	f	file:
init_conn	ccan/ccan/io/test/run-03-readpartial.c	/^static struct io_plan *init_conn(struct io_conn *conn, struct data *d)$/;"	f	file:
init_conn	ccan/ccan/io/test/run-04-writepartial.c	/^static struct io_plan *init_conn(struct io_conn *conn, struct data *d)$/;"	f	file:
init_conn	ccan/ccan/io/test/run-05-write.c	/^static struct io_plan *init_conn(struct io_conn *conn, struct data *d)$/;"	f	file:
init_conn	ccan/ccan/io/test/run-07-break.c	/^static struct io_plan *init_conn(struct io_conn *conn, struct data *d)$/;"	f	file:
init_conn	ccan/ccan/io/test/run-09-connect.c	/^static struct io_plan *init_conn(struct io_conn *conn, struct data *d)$/;"	f	file:
init_conn	ccan/ccan/io/test/run-12-bidir.c	/^static struct io_plan *init_conn(struct io_conn *conn, struct data *d)$/;"	f	file:
init_conn	ccan/ccan/io/test/run-14-duplex-both-read.c	/^static struct io_plan *init_conn(struct io_conn *conn, struct data *d)$/;"	f	file:
init_conn	ccan/ccan/io/test/run-15-timeout.c	/^static struct io_plan *init_conn(struct io_conn *conn, struct data *d)$/;"	f	file:
init_conn	ccan/ccan/io/test/run-16-duplex-test.c	/^static struct io_plan *init_conn(struct io_conn *conn, struct data *d)$/;"	f	file:
init_conn	ccan/ccan/io/test/run-17-homemade-io.c	/^static struct io_plan *init_conn(struct io_conn *conn, struct packet *pkt)$/;"	f	file:
init_conn	ccan/ccan/io/test/run-18-errno.c	/^static struct io_plan *init_conn(struct io_conn *conn, int *state)$/;"	f	file:
init_conn	ccan/ccan/io/test/run-19-always.c	/^static struct io_plan *init_conn(struct io_conn *conn, struct data *d)$/;"	f	file:
init_conn	ccan/ccan/io/test/run-20-io_time_override.c	/^static struct io_plan *init_conn(struct io_conn *conn, void *unused)$/;"	f	file:
init_conn	daemon/dns.c	/^static struct io_plan *init_conn(struct io_conn *conn, struct dns_async *d)$/;"	f	file:
init_conn	daemon/peer.c	/^static struct io_plan *init_conn(struct io_conn *conn, struct peer *peer)$/;"	f	file:
init_dns_conn	daemon/dns.c	/^static struct io_plan *init_dns_conn(struct io_conn *conn, struct dns_async *d)$/;"	f	file:
init_eq	wire/test/run-peer-wire.c	/^static bool init_eq(const struct msg_init *a,$/;"	f	file:
init_idle	ccan/ccan/io/test/run-06-idle.c	/^static struct io_plan *init_idle(struct io_conn *conn, struct data *d)$/;"	f	file:
init_if_needed	daemon/pseudorand.c	/^static void init_if_needed(void)$/;"	f	file:
init_pkt_in	daemon/peer.c	/^static struct io_plan *init_pkt_in(struct io_conn *conn, struct peer *peer)$/;"	f	file:
init_property	ccan/ccan/tal/tal.c	/^static void init_property(struct prop_hdr *hdr,$/;"	f	file:
init_region	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c	/^init_region(escrypt_region_t * region)$/;"	f	file:
init_response	lightningd/hsm/hsm.c	/^static u8 *init_response(struct conn_info *control)$/;"	f	file:
init_time	daemon/log.c	/^	struct timeabs init_time;$/;"	m	struct:log_book	typeref:struct:log_book::timeabs	file:
init_topo	daemon/chaintopology.c	/^static void init_topo(struct lightningd_state *dstate,$/;"	f	file:
init_trace	ccan/ccan/likely/likely.c	/^static void init_trace(struct trace *trace,$/;"	f	file:
init_trail	test/test_state_coverage.c	/^static void init_trail(struct trail *t,$/;"	f	file:
init_waiter	ccan/ccan/io/test/run-08-read-after-hangup.c	/^static struct io_plan *init_waiter(struct io_conn *conn, void *unused)$/;"	f	file:
init_waker	ccan/ccan/io/test/run-06-idle.c	/^static struct io_plan *init_waker(struct io_conn *conn, void *unused)$/;"	f	file:
init_writer	ccan/ccan/io/test/run-08-read-after-hangup.c	/^static struct io_plan *init_writer(struct io_conn *conn, struct io_conn *wakeme)$/;"	f	file:
initial	secp256k1/src/ecmult_gen.h	/^    secp256k1_gej initial;$/;"	m	struct:__anon37
initial_cstate	daemon/channel.c	/^struct channel_state *initial_cstate(const tal_t *ctx,$/;"	f
initial_fee_rate	lightning.pb-c.h	/^  uint64_t initial_fee_rate;$/;"	m	struct:_OpenChannel
initial_hash	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^void initial_hash(uint8_t *blockhash, argon2_context *context,$/;"	f
initialize	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^int initialize(argon2_instance_t *instance, argon2_context *context) {$/;"	f
initialized	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^    int           initialized;$/;"	m	struct:Salsa20Random_	file:
initialized	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^    int initialized;$/;"	m	struct:SysRandom_	file:
initialized	libsodium/src/libsodium/sodium/core.c	/^static int initialized;$/;"	v	file:
initialized	libsodium/src/libsodium/sodium/runtime.c	/^    int initialized;$/;"	m	struct:CPUFeatures_	file:
initiator	lightningd/handshake/handshake.c	/^static void initiator(int fd, const struct pubkey *my_id,$/;"	f	file:
inner	ccan/ccan/tcon/test/compile_fail-container1.c	/^	struct inner inner;$/;"	m	struct:outer	typeref:struct:outer::inner	file:
inner	ccan/ccan/tcon/test/compile_fail-container1.c	/^struct inner {$/;"	s	file:
inner	ccan/ccan/tcon/test/compile_fail-container1w.c	/^	struct inner inner;$/;"	m	struct:outer	typeref:struct:outer::inner	file:
inner	ccan/ccan/tcon/test/compile_fail-container1w.c	/^struct inner {$/;"	s	file:
inner	ccan/ccan/tcon/test/compile_fail-container2.c	/^	struct inner inner;$/;"	m	struct:outer	typeref:struct:outer::inner	file:
inner	ccan/ccan/tcon/test/compile_fail-container2.c	/^struct inner {$/;"	s	file:
inner	ccan/ccan/tcon/test/compile_fail-container2w.c	/^	struct inner inner;$/;"	m	struct:outer	typeref:struct:outer::inner	file:
inner	ccan/ccan/tcon/test/compile_fail-container2w.c	/^struct inner {$/;"	s	file:
inner	ccan/ccan/tcon/test/compile_fail-container3.c	/^	struct inner inner;$/;"	m	struct:outer	typeref:struct:outer::inner	file:
inner	ccan/ccan/tcon/test/compile_fail-container3.c	/^struct inner {$/;"	s	file:
inner	ccan/ccan/tcon/test/compile_fail-container3w.c	/^	struct inner inner;$/;"	m	struct:outer	typeref:struct:outer::inner	file:
inner	ccan/ccan/tcon/test/compile_fail-container3w.c	/^struct inner {$/;"	s	file:
inner	ccan/ccan/tcon/test/compile_fail-container4.c	/^	struct inner inner;$/;"	m	struct:outer	typeref:struct:outer::inner	file:
inner	ccan/ccan/tcon/test/compile_fail-container4.c	/^struct inner {$/;"	s	file:
inner	ccan/ccan/tcon/test/compile_fail-container4w.c	/^	struct inner inner;$/;"	m	struct:outer	typeref:struct:outer::inner	file:
inner	ccan/ccan/tcon/test/compile_fail-container4w.c	/^struct inner {$/;"	s	file:
inner	ccan/ccan/tcon/test/compile_ok-container.c	/^	struct inner inner;$/;"	m	struct:outer	typeref:struct:outer::inner	file:
inner	ccan/ccan/tcon/test/compile_ok-container.c	/^struct inner {$/;"	s	file:
inner	ccan/ccan/tcon/test/run-container.c	/^	struct inner inner;$/;"	m	struct:outer	typeref:struct:outer::inner	file:
inner	ccan/ccan/tcon/test/run-container.c	/^	struct inner inner;$/;"	m	struct:outer0	typeref:struct:outer0::inner	file:
inner	ccan/ccan/tcon/test/run-container.c	/^struct inner {$/;"	s	file:
inner	secp256k1/src/hash.h	/^    secp256k1_sha256_t inner, outer;$/;"	m	struct:__anon23
inner_length	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	/^  uint8_t  inner_length;   \/* 18 *\/$/;"	m	struct:blake2b_param_
inner_pkt	lightning.pb-c.h	/^  ProtobufCBinaryData inner_pkt;$/;"	m	struct:_NestedPkt
inner_val	ccan/ccan/tcon/test/compile_fail-container1.c	/^	int inner_val;$/;"	m	struct:inner	file:
inner_val	ccan/ccan/tcon/test/compile_fail-container1w.c	/^	int inner_val;$/;"	m	struct:inner	file:
inner_val	ccan/ccan/tcon/test/compile_fail-container2.c	/^	int inner_val;$/;"	m	struct:inner	file:
inner_val	ccan/ccan/tcon/test/compile_fail-container2w.c	/^	int inner_val;$/;"	m	struct:inner	file:
inner_val	ccan/ccan/tcon/test/compile_fail-container3.c	/^	int inner_val;$/;"	m	struct:inner	file:
inner_val	ccan/ccan/tcon/test/compile_fail-container3w.c	/^	int inner_val;$/;"	m	struct:inner	file:
inner_val	ccan/ccan/tcon/test/compile_fail-container4.c	/^	int inner_val;$/;"	m	struct:inner	file:
inner_val	ccan/ccan/tcon/test/compile_fail-container4w.c	/^	int inner_val;$/;"	m	struct:inner	file:
inner_val	ccan/ccan/tcon/test/compile_ok-container.c	/^	int inner_val;$/;"	m	struct:inner	file:
inner_val	ccan/ccan/tcon/test/run-container.c	/^	int inner_val;$/;"	m	struct:inner	file:
inpkt	daemon/peer.h	/^	Pkt *inpkt;$/;"	m	struct:peer
input	bitcoin/tx.h	/^	struct bitcoin_tx_input *input;$/;"	m	struct:bitcoin_tx	typeref:struct:bitcoin_tx::bitcoin_tx_input
input	daemon/peer.c	/^	struct anchor_input *input;$/;"	m	struct:json_connecting	typeref:struct:json_connecting::anchor_input	file:
input	daemon/peer.h	/^		struct anchor_input *input;$/;"	m	struct:peer::__anon47	typeref:struct:peer::__anon47::anchor_input
input	libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c	/^    uint32_t input[16];$/;"	m	struct:chacha_ctx	file:
input	test/test_state_coverage.c	/^		enum state_input input;$/;"	m	struct:hist::state_dump	typeref:enum:hist::state_dump::state_input	file:
input	test/test_state_coverage.c	/^	enum state_input input;$/;"	m	struct:fail_details	typeref:enum:fail_details::state_input	file:
input	test/test_state_coverage.c	/^	enum state_input input;$/;"	m	struct:trail	typeref:enum:trail::state_input	file:
input_better	permute_tx.c	/^static bool input_better(const struct bitcoin_tx_input *a,$/;"	f	file:
input_by_name	test/test_state_coverage.c	/^static enum state_input input_by_name(const char *name)$/;"	f	file:
inputs_per_state	test/test_state_coverage.c	/^	enum state_input **inputs_per_state;$/;"	m	struct:hist	typeref:enum:hist::state_input	file:
install_sh	libsodium/Makefile	/^install_sh = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/install-sh$/;"	m
install_sh	libsodium/dist-build/Makefile	/^install_sh = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/install-sh$/;"	m
install_sh	libsodium/msvc-scripts/Makefile	/^install_sh = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/install-sh$/;"	m
install_sh	libsodium/src/Makefile	/^install_sh = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/install-sh$/;"	m
install_sh	libsodium/src/libsodium/Makefile	/^install_sh = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/install-sh$/;"	m
install_sh	libsodium/src/libsodium/include/Makefile	/^install_sh = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/install-sh$/;"	m
install_sh	libsodium/test/Makefile	/^install_sh = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/install-sh$/;"	m
install_sh	libsodium/test/default/Makefile	/^install_sh = ${SHELL} \/home\/wen\/work\/lightning\/libsodium\/build-aux\/install-sh$/;"	m
install_sh	secp256k1/Makefile	/^install_sh = ${SHELL} \/home\/wen\/work\/lightning\/secp256k1\/build-aux\/install-sh$/;"	m
install_sh_DATA	libsodium/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	libsodium/dist-build/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	libsodium/msvc-scripts/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	libsodium/src/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	libsodium/src/libsodium/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	libsodium/src/libsodium/include/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	libsodium/test/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	libsodium/test/default/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	secp256k1/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	libsodium/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	libsodium/dist-build/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	libsodium/msvc-scripts/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	libsodium/src/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	libsodium/src/libsodium/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	libsodium/src/libsodium/include/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	libsodium/test/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	libsodium/test/default/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	secp256k1/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	libsodium/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	libsodium/dist-build/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	libsodium/msvc-scripts/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	libsodium/src/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	libsodium/src/libsodium/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	libsodium/src/libsodium/include/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	libsodium/test/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	libsodium/test/default/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	secp256k1/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
instance_ptr	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    argon2_instance_t *instance_ptr;$/;"	m	struct:Argon2_thread_data
int128	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128.h	/^} int128;$/;"	t	typeref:union:__anon67
int2ptr	ccan/ccan/ptrint/ptrint.h	/^CONST_FUNCTION static inline ptrint_t *int2ptr(ptrdiff_t i)$/;"	f
int_and_charp_container	ccan/ccan/tcon/test/compile_fail-tcon_cast.c	/^struct int_and_charp_container {$/;"	s	file:
int_container	ccan/ccan/tcon/test/compile_fail.c	/^struct int_container {$/;"	s	file:
int_container	ccan/ccan/tcon/test/compile_ok-sizeof.c	/^struct int_container {$/;"	s	file:
int_container	ccan/ccan/tcon/test/compile_ok.c	/^struct int_container {$/;"	s	file:
integerify	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c	/^integerify(const void * B, size_t r)$/;"	f	file:
integerify	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	/^integerify(const void * B, size_t r)$/;"	f	file:
intmap	ccan/ccan/intmap/intmap.h	/^struct intmap {$/;"	s
intmap_add_	ccan/ccan/intmap/intmap.c	/^bool intmap_add_(struct intmap *map, intmap_index_t index, const void *value)$/;"	f
intmap_after_	ccan/ccan/intmap/intmap.c	/^void *intmap_after_(const struct intmap *map, intmap_index_t *indexp)$/;"	f
intmap_clear_	ccan/ccan/intmap/intmap.c	/^void intmap_clear_(struct intmap *map)$/;"	f
intmap_del_	ccan/ccan/intmap/intmap.c	/^void *intmap_del_(struct intmap *map, intmap_index_t index)$/;"	f
intmap_empty_	ccan/ccan/intmap/intmap.h	/^static inline bool intmap_empty_(const struct intmap *map)$/;"	f
intmap_first_	ccan/ccan/intmap/intmap.c	/^void *intmap_first_(const struct intmap *map, intmap_index_t *indexp)$/;"	f
intmap_get_	ccan/ccan/intmap/intmap.c	/^void *intmap_get_(const struct intmap *map, intmap_index_t index)$/;"	f
intmap_index_t	ccan/ccan/intmap/intmap.h	13;"	d
intmap_index_t	ccan/ccan/intmap/test/run-order-smallsize.c	1;"	d	file:
intmap_init_	ccan/ccan/intmap/intmap.h	/^static inline void intmap_init_(struct intmap *map)$/;"	f
invalidate_ripemd160	ccan/ccan/crypto/ripemd160/ripemd160.c	/^static void invalidate_ripemd160(struct ripemd160_ctx *ctx)$/;"	f	file:
invalidate_sha256	ccan/ccan/crypto/sha256/sha256.c	/^static void invalidate_sha256(struct sha256_ctx *ctx)$/;"	f	file:
invalidate_siphash24	ccan/ccan/crypto/siphash24/siphash24.c	/^static void invalidate_siphash24(struct siphash24_ctx *ctx)$/;"	f	file:
invoice	contrib/pylightning/lightning/lightning.py	/^    def invoice(self, amount, label, paymentKey=None):$/;"	m	class:LegacyLightningRpc
invoice	contrib/pylightning/lightning/lightning.py	/^    invoice = l5.invoice(100, "lbl{}".format(random.random()))$/;"	v
invoice	daemon/invoice.h	/^struct invoice {$/;"	s
invoice_add	daemon/invoice.c	/^void invoice_add(struct invoices *invs,$/;"	f
invoice_command	daemon/invoice.c	/^static const struct json_command invoice_command = {$/;"	v	typeref:struct:json_command	file:
invoice_waiter	daemon/invoice.c	/^struct invoice_waiter {$/;"	s	file:
invoice_waiters	daemon/invoice.c	/^	struct list_head invoice_waiters;$/;"	m	struct:invoices	typeref:struct:invoices::list_head	file:
invoices	daemon/invoice.c	/^struct invoices {$/;"	s	file:
invoices	daemon/lightningd.h	/^	struct invoices *invoices;$/;"	m	struct:lightningd_state	typeref:struct:lightningd_state::invoices
invoices_completed	daemon/invoice.c	/^	u64 invoices_completed;$/;"	m	struct:invoices	file:
invoices_init	daemon/invoice.c	/^struct invoices *invoices_init(struct lightningd_state *dstate)$/;"	f
invoices_init	lightningd/lightningd.c	/^struct invoices *invoices_init(struct lightningd_state *dstate)$/;"	f
io	ccan/ccan/io/backend.h	/^	int (*io)(int fd, struct io_plan_arg *arg);$/;"	m	struct:io_plan
io_always	ccan/ccan/io/io.h	358;"	d
io_always_	ccan/ccan/io/io.c	/^struct io_plan *io_always_(struct io_conn *conn,$/;"	f
io_always_dir	ccan/ccan/io/io.c	/^static struct io_plan *io_always_dir(struct io_conn *conn,$/;"	f	file:
io_break	ccan/ccan/io/io.c	/^void io_break(const void *ret)$/;"	f
io_close	ccan/ccan/io/io.c	/^struct io_plan *io_close(struct io_conn *conn)$/;"	f
io_close_cb	ccan/ccan/io/io.c	/^struct io_plan *io_close_cb(struct io_conn *conn, void *next_arg)$/;"	f
io_close_listener	ccan/ccan/io/io.c	/^void io_close_listener(struct io_listener *l)$/;"	f
io_close_taken_fd	ccan/ccan/io/io.c	/^struct io_plan *io_close_taken_fd(struct io_conn *conn)$/;"	f
io_conn	ccan/ccan/io/backend.h	/^struct io_conn {$/;"	s
io_conn_fd	ccan/ccan/io/io.c	/^int io_conn_fd(const struct io_conn *conn)$/;"	f
io_conn_freed	ccan/ccan/io/io.c	/^struct io_plan io_conn_freed;$/;"	v	typeref:struct:io_plan
io_connect	ccan/ccan/io/io.h	422;"	d
io_connect_	ccan/ccan/io/io.c	/^struct io_plan *io_connect_(struct io_conn *conn, const struct addrinfo *addr,$/;"	f
io_data	daemon/cryptopkt.c	/^struct io_data {$/;"	s	file:
io_data	daemon/peer.h	/^	struct io_data *io_data;$/;"	m	struct:peer	typeref:struct:peer::io_data
io_direction	ccan/ccan/io/io_plan.h	/^enum io_direction {$/;"	g
io_do_always	ccan/ccan/io/io.c	/^void io_do_always(struct io_conn *conn)$/;"	f
io_do_wakeup	ccan/ccan/io/io.c	/^void io_do_wakeup(struct io_conn *conn, enum io_direction dir)$/;"	f
io_done	ccan/ccan/io/test/run-16-duplex-test.c	/^static struct io_plan *io_done(struct io_conn *conn, struct data *d)$/;"	f	file:
io_duplex	ccan/ccan/io/io.c	/^struct io_plan *io_duplex(struct io_conn *conn,$/;"	f
io_halfclose	ccan/ccan/io/io.c	/^struct io_plan *io_halfclose(struct io_conn *conn)$/;"	f
io_listener	ccan/ccan/io/backend.h	/^struct io_listener {$/;"	s
io_loop	ccan/ccan/io/poll.c	/^void *io_loop(struct timers *timers, struct timer **expired)$/;"	f
io_loop_return	ccan/ccan/io/io.c	/^void *io_loop_return;$/;"	v
io_never	ccan/ccan/io/io.c	/^struct io_plan *io_never(struct io_conn *conn, void *unused)$/;"	f
io_never_called	ccan/ccan/io/io.c	/^static struct io_plan *io_never_called(struct io_conn *conn, void *arg)$/;"	f	file:
io_new_conn	ccan/ccan/io/io.h	57;"	d
io_new_conn_	ccan/ccan/io/io.c	/^struct io_conn *io_new_conn_(const tal_t *ctx, int fd,$/;"	f
io_new_listener	ccan/ccan/io/io.h	157;"	d
io_new_listener_	ccan/ccan/io/io.c	/^struct io_listener *io_new_listener_(const tal_t *ctx, int fd,$/;"	f
io_out_always	ccan/ccan/io/io.h	378;"	d
io_out_always_	ccan/ccan/io/io.c	/^struct io_plan *io_out_always_(struct io_conn *conn,$/;"	f
io_out_wait	ccan/ccan/io/io.h	531;"	d
io_out_wait_	ccan/ccan/io/io.c	/^struct io_plan *io_out_wait_(struct io_conn *conn,$/;"	f
io_plan	ccan/ccan/io/backend.h	/^struct io_plan {$/;"	s
io_plan_arg	ccan/ccan/io/io.c	/^struct io_plan_arg *io_plan_arg(struct io_conn *conn, enum io_direction dir)$/;"	f
io_plan_arg	ccan/ccan/io/io_plan.h	/^struct io_plan_arg {$/;"	s
io_plan_status	ccan/ccan/io/backend.h	/^enum io_plan_status {$/;"	g
io_plan_union	ccan/ccan/io/io_plan.h	/^union io_plan_union {$/;"	u
io_read	ccan/ccan/io/io.h	236;"	d
io_read	lightningd/test/run-cryptomsg.c	22;"	d	file:
io_read	lightningd/test/run-cryptomsg.c	8;"	d	file:
io_read_	ccan/ccan/io/io.c	/^struct io_plan *io_read_(struct io_conn *conn,$/;"	f
io_read_header	ccan/ccan/io/benchmarks/run-length-prefix.c	/^static struct io_plan io_read_header(struct client *client)$/;"	f	file:
io_read_packet	ccan/ccan/io/test/run-17-homemade-io.c	/^static struct io_plan *io_read_packet(struct io_conn *conn,$/;"	f	file:
io_read_partial	ccan/ccan/io/io.h	281;"	d
io_read_partial_	ccan/ccan/io/io.c	/^struct io_plan *io_read_partial_(struct io_conn *conn,$/;"	f
io_read_wire	wire/wire_io.h	14;"	d
io_read_wire_	wire/wire_io.c	/^struct io_plan *io_read_wire_(struct io_conn *conn,$/;"	f
io_ready	ccan/ccan/io/io.c	/^void io_ready(struct io_conn *conn, int pollflags)$/;"	f
io_recv_fd	ccan/ccan/io/fdpass/fdpass.h	59;"	d
io_recv_fd_	ccan/ccan/io/fdpass/fdpass.c	/^struct io_plan *io_recv_fd_(struct io_conn *conn,$/;"	f
io_send_fd	ccan/ccan/io/fdpass/fdpass.h	29;"	d
io_send_fd_	ccan/ccan/io/fdpass/fdpass.c	/^struct io_plan *io_send_fd_(struct io_conn *conn,$/;"	f
io_set_finish	ccan/ccan/io/io.h	93;"	d
io_set_finish_	ccan/ccan/io/io.c	/^void io_set_finish_(struct io_conn *conn,$/;"	f
io_set_plan	ccan/ccan/io/io.c	/^struct io_plan *io_set_plan(struct io_conn *conn, enum io_direction dir,$/;"	f
io_time_override	ccan/ccan/io/poll.c	/^struct timemono (*io_time_override(struct timemono (*now)(void)))(void)$/;"	f
io_wait	ccan/ccan/io/io.h	506;"	d
io_wait_	ccan/ccan/io/io.c	/^struct io_plan *io_wait_(struct io_conn *conn,$/;"	f
io_wait_dir	ccan/ccan/io/io.c	/^static struct io_plan *io_wait_dir(struct io_conn *conn,$/;"	f	file:
io_wake	ccan/ccan/io/io.c	/^void io_wake(const void *wait)$/;"	f
io_write	ccan/ccan/io/io.h	205;"	d
io_write	lightningd/test/run-cryptomsg.c	34;"	d	file:
io_write	lightningd/test/run-cryptomsg.c	9;"	d	file:
io_write_	ccan/ccan/io/io.c	/^struct io_plan *io_write_(struct io_conn *conn, const void *data, size_t len,$/;"	f
io_write_partial	ccan/ccan/io/io.h	329;"	d
io_write_partial_	ccan/ccan/io/io.c	/^struct io_plan *io_write_partial_(struct io_conn *conn,$/;"	f
io_write_wire	wire/wire_io.h	26;"	d
io_write_wire_	wire/wire_io.c	/^struct io_plan *io_write_wire_(struct io_conn *conn,$/;"	f
iod	daemon/cryptopkt.c	/^	struct io_data *iod;$/;"	m	struct:key_negotiate	typeref:struct:key_negotiate::io_data	file:
ipv4	daemon/netaddr.h	/^		struct sockaddr_in ipv4;$/;"	m	union:netaddr::__anon53	typeref:struct:netaddr::__anon53::sockaddr_in
ipv6	daemon/netaddr.h	/^		struct sockaddr_in6 ipv6;$/;"	m	union:netaddr::__anon53	typeref:struct:netaddr::__anon53::sockaddr_in6
ipv6	wire/wire.h	/^struct ipv6 {$/;"	s
irc_command_cb	irc.c	/^void (*irc_command_cb)(struct ircstate *, const struct irccommand *) = NULL;$/;"	v
irc_connect	irc.c	/^void irc_connect(struct ircstate *state)$/;"	f
irc_connect_cb	irc.c	/^void (*irc_connect_cb)(struct ircstate *) = NULL;$/;"	v
irc_connected	irc.c	/^static struct io_plan *irc_connected(struct io_conn *conn, struct lightningd_state *dstate, struct ircstate *state)$/;"	f	file:
irc_disconnect_cb	irc.c	/^void (*irc_disconnect_cb)(struct ircstate *) = NULL;$/;"	v
irc_disconnected	irc.c	/^static void irc_disconnected(struct io_conn *conn, struct ircstate *state)$/;"	f	file:
irc_failed	irc.c	/^static void irc_failed(struct lightningd_state *dstate, struct ircstate *state)$/;"	f	file:
irc_privmsg_cb	irc.c	/^void (*irc_privmsg_cb)(struct ircstate *, const struct privmsg *) = NULL;$/;"	v
irc_read_loop	irc.c	/^static struct io_plan *irc_read_loop(struct io_conn *conn, struct ircstate *state)$/;"	f	file:
irc_send	irc.c	/^bool irc_send(struct ircstate *state, const char *command, const char *fmt, ...)$/;"	f
irc_send_msg	irc.c	/^bool irc_send_msg(struct ircstate *state, struct privmsg *m)$/;"	f
irc_write_loop	irc.c	/^static struct io_plan *irc_write_loop(struct io_conn *conn, struct ircstate *state)$/;"	f	file:
irccommand	irc.h	/^struct irccommand {$/;"	s
ircstate	irc.h	/^struct ircstate {$/;"	s
irrevocably_resolved	daemon/peer.c	/^static const struct bitcoin_tx *irrevocably_resolved(struct peer *peer)$/;"	f	file:
isEnabled	secp256k1/src/java/org/bitcoin/Secp256k1Context.java	/^  public static boolean isEnabled() {$/;"	m	class:Secp256k1Context
is_array	tools/generate-wire.py	/^    def is_array(self):$/;"	m	class:Field
is_assignable	tools/generate-wire.py	/^    def is_assignable(self):$/;"	m	class:Field
is_assignable	tools/generate-wire.py	/^    def is_assignable(self):$/;"	m	class:FieldType
is_dust	remove_dust.h	/^static inline bool is_dust(u64 satoshis)$/;"	f
is_empty_signature	secp256k1/src/tests.c	/^int is_empty_signature(const secp256k1_ecdsa_signature *sig) {$/;"	f
is_literal	ccan/ccan/tal/tal.c	/^static bool is_literal(const struct prop_hdr *prop)$/;"	f	file:
is_mutual_close	daemon/peer.c	/^static bool is_mutual_close(const struct peer *peer,$/;"	f	file:
is_p2pkh	bitcoin/script.c	/^bool is_p2pkh(const u8 *script)$/;"	f
is_p2sh	bitcoin/script.c	/^bool is_p2sh(const u8 *script)$/;"	f
is_p2wpkh	bitcoin/script.c	/^bool is_p2wpkh(const u8 *script)$/;"	f
is_p2wsh	bitcoin/script.c	/^bool is_p2wsh(const u8 *script)$/;"	f
is_padding	tools/generate-wire.py	/^    def is_padding(self):$/;"	m	class:Field
is_reverse_sorted	ccan/ccan/asort/test/run.c	/^static bool is_reverse_sorted(const int arr[], unsigned int size)$/;"	f	file:
is_sorted	ccan/ccan/asort/test/run.c	/^static bool is_sorted(const int arr[], unsigned int size)$/;"	f	file:
is_taken	ccan/ccan/take/take.c	/^bool is_taken(const void *p)$/;"	f
is_variable_size	tools/generate-wire.py	/^    def is_variable_size(self):$/;"	m	class:Field
is_write	ccan/ccan/ptr_valid/ptr_valid.h	/^	bool is_write;$/;"	m	struct:ptr_valid_map
isaac64	daemon/pseudorand.c	/^static struct isaac64_ctx isaac64;$/;"	v	typeref:struct:isaac64_ctx	file:
isaac64_ctx	ccan/ccan/isaac/isaac64.h	/^struct isaac64_ctx{$/;"	s
isaac64_ctx	ccan/ccan/isaac/isaac64.h	/^typedef struct isaac64_ctx isaac64_ctx;$/;"	t	typeref:struct:isaac64_ctx
isaac64_double_bits	ccan/ccan/isaac/isaac64.c	/^static double isaac64_double_bits(isaac64_ctx *_ctx,uint64_t _bits,int _base){$/;"	f	file:
isaac64_float_bits	ccan/ccan/isaac/isaac64.c	/^static float isaac64_float_bits(isaac64_ctx *_ctx,uint64_t _bits,int _base){$/;"	f	file:
isaac64_init	ccan/ccan/isaac/isaac64.c	/^void isaac64_init(isaac64_ctx *_ctx,const unsigned char *_seed,int _nseed){$/;"	f
isaac64_mix	ccan/ccan/isaac/isaac64.c	/^static void isaac64_mix(uint64_t _x[8]){$/;"	f	file:
isaac64_next_double	ccan/ccan/isaac/isaac64.c	/^double isaac64_next_double(isaac64_ctx *_ctx){$/;"	f
isaac64_next_float	ccan/ccan/isaac/isaac64.c	/^float isaac64_next_float(isaac64_ctx *_ctx){$/;"	f
isaac64_next_signed_double	ccan/ccan/isaac/isaac64.c	/^double isaac64_next_signed_double(isaac64_ctx *_ctx){$/;"	f
isaac64_next_signed_float	ccan/ccan/isaac/isaac64.c	/^float isaac64_next_signed_float(isaac64_ctx *_ctx){$/;"	f
isaac64_next_uint	ccan/ccan/isaac/isaac64.c	/^uint64_t isaac64_next_uint(isaac64_ctx *_ctx,uint64_t _n){$/;"	f
isaac64_next_uint64	ccan/ccan/isaac/isaac64.c	/^uint64_t isaac64_next_uint64(isaac64_ctx *_ctx){$/;"	f
isaac64_reseed	ccan/ccan/isaac/isaac64.c	/^void isaac64_reseed(isaac64_ctx *_ctx,const unsigned char *_seed,int _nseed){$/;"	f
isaac64_update	ccan/ccan/isaac/isaac64.c	/^static void isaac64_update(isaac64_ctx *_ctx){$/;"	f	file:
isaac_ctx	ccan/ccan/isaac/isaac.h	/^struct isaac_ctx{$/;"	s
isaac_ctx	ccan/ccan/isaac/isaac.h	/^typedef struct isaac_ctx isaac_ctx;$/;"	t	typeref:struct:isaac_ctx
isaac_double_bits	ccan/ccan/isaac/isaac.c	/^static double isaac_double_bits(isaac_ctx *_ctx,uint32_t _bits,int _base){$/;"	f	file:
isaac_float_bits	ccan/ccan/isaac/isaac.c	/^static float isaac_float_bits(isaac_ctx *_ctx,uint32_t _bits,int _base){$/;"	f	file:
isaac_init	ccan/ccan/isaac/isaac.c	/^void isaac_init(isaac_ctx *_ctx,const unsigned char *_seed,int _nseed){$/;"	f
isaac_mix	ccan/ccan/isaac/isaac.c	/^static void isaac_mix(uint32_t _x[8]){$/;"	f	file:
isaac_next_double	ccan/ccan/isaac/isaac.c	/^double isaac_next_double(isaac_ctx *_ctx){$/;"	f
isaac_next_float	ccan/ccan/isaac/isaac.c	/^float isaac_next_float(isaac_ctx *_ctx){$/;"	f
isaac_next_signed_double	ccan/ccan/isaac/isaac.c	/^double isaac_next_signed_double(isaac_ctx *_ctx){$/;"	f
isaac_next_signed_float	ccan/ccan/isaac/isaac.c	/^float isaac_next_signed_float(isaac_ctx *_ctx){$/;"	f
isaac_next_uint	ccan/ccan/isaac/isaac.c	/^uint32_t isaac_next_uint(isaac_ctx *_ctx,uint32_t _n){$/;"	f
isaac_next_uint32	ccan/ccan/isaac/isaac.c	/^uint32_t isaac_next_uint32(isaac_ctx *_ctx){$/;"	f
isaac_reseed	ccan/ccan/isaac/isaac.c	/^void isaac_reseed(isaac_ctx *_ctx,const unsigned char *_seed,int _nseed){$/;"	f
isaac_update	ccan/ccan/isaac/isaac.c	/^static void isaac_update(isaac_ctx *_ctx){$/;"	f	file:
isalnum	ccan/ccan/str/str.h	172;"	d
isalnum	ccan/ccan/str/str.h	196;"	d
isalpha	ccan/ccan/str/str.h	173;"	d
isalpha	ccan/ccan/str/str.h	197;"	d
isascii	ccan/ccan/str/str.h	174;"	d
isascii	ccan/ccan/str/str.h	198;"	d
isblank	ccan/ccan/str/str.h	175;"	d
isblank	ccan/ccan/str/str.h	200;"	d
iscntrl	ccan/ccan/str/str.h	176;"	d
iscntrl	ccan/ccan/str/str.h	202;"	d
isdigit	ccan/ccan/str/str.h	177;"	d
isdigit	ccan/ccan/str/str.h	203;"	d
isgraph	ccan/ccan/str/str.h	178;"	d
isgraph	ccan/ccan/str/str.h	204;"	d
islower	ccan/ccan/str/str.h	179;"	d
islower	ccan/ccan/str/str.h	205;"	d
isprint	ccan/ccan/str/str.h	180;"	d
isprint	ccan/ccan/str/str.h	206;"	d
ispunct	ccan/ccan/str/str.h	181;"	d
ispunct	ccan/ccan/str/str.h	207;"	d
isspace	ccan/ccan/str/str.h	182;"	d
isspace	ccan/ccan/str/str.h	208;"	d
isupper	ccan/ccan/str/str.h	183;"	d
isupper	ccan/ccan/str/str.h	209;"	d
isxdigit	ccan/ccan/str/str.h	184;"	d
isxdigit	ccan/ccan/str/str.h	210;"	d
item	ccan/ccan/order/test/fancy_cmp.h	/^struct item {$/;"	s
item_t	ccan/ccan/order/test/compile_fail_1.c	/^typedef int item_t;$/;"	t	file:
item_t	ccan/ccan/order/test/compile_fail_1.c	/^typedef struct item item_t;$/;"	t	typeref:struct:item	file:
iterate	ccan/ccan/strmap/strmap.c	/^static bool iterate(struct strmap n,$/;"	f	file:
iters	ccan/ccan/io/benchmarks/run-loop.c	/^	int iters;$/;"	m	struct:buffer	file:
iters	ccan/ccan/io/test/run-10-many.c	/^	int iters;$/;"	m	struct:buffer	file:
itoa64	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c	/^static const char * const itoa64 =$/;"	v	file:
ja	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^ja ._reduceloop$/;"	l
ja	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^ja ._bytesatleast65$/;"	l
ja	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^ja ._mainloop1$/;"	l
ja	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^ja ._mainloop2$/;"	l
jae	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^jae ._bytesatleast256$/;"	l
jae	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^jae ._bytesatleast64$/;"	l
jae	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^jae ._nocopy$/;"	l
jb	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^jb ._bytesbetween1and255$/;"	l
jbe	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^jbe ._done$/;"	l
jcon	daemon/jsonrpc.h	/^	struct json_connection *jcon;$/;"	m	struct:command	typeref:struct:command::json_connection
jcon_connected	daemon/jsonrpc.c	/^static struct io_plan *jcon_connected(struct io_conn *conn,$/;"	f	file:
jmp	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^jmp ._bytesbetween1and255$/;"	l
jmp	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^jmp ._start$/;"	l
jne	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^jne ._loop$/;"	l
jne	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^jne ._ladder_loop$/;"	l
jne	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^jne ._ladder_small_loop$/;"	l
jne	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^jne ._ladder_base_loop$/;"	l
jne	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^jne ._ladder_base_small_loop$/;"	l
jsmn_alloc_token	daemon/jsmn/jsmn.c	/^static jsmntok_t *jsmn_alloc_token(jsmn_parser *parser,$/;"	f	file:
jsmn_alloc_token	daemon/jsmn/jsmn_test.c	550;"	d	file:
jsmn_fill_token	daemon/jsmn/jsmn.c	/^static void jsmn_fill_token(jsmntok_t *token, jsmntype_t type,$/;"	f	file:
jsmn_fill_token	daemon/jsmn/jsmn_test.c	551;"	d	file:
jsmn_init	daemon/jsmn/jsmn.c	/^void jsmn_init(jsmn_parser *parser) {$/;"	f
jsmn_init	daemon/jsmn/jsmn_test.c	547;"	d	file:
jsmn_parse	daemon/jsmn/jsmn.c	/^jsmnerr_t jsmn_parse(jsmn_parser *parser, const char *js, size_t len,$/;"	f
jsmn_parse	daemon/jsmn/jsmn_test.c	548;"	d	file:
jsmn_parse_primitive	daemon/jsmn/jsmn.c	/^static jsmnerr_t jsmn_parse_primitive(jsmn_parser *parser, const char *js,$/;"	f	file:
jsmn_parse_primitive	daemon/jsmn/jsmn_test.c	552;"	d	file:
jsmn_parse_string	daemon/jsmn/jsmn.c	/^static jsmnerr_t jsmn_parse_string(jsmn_parser *parser, const char *js,$/;"	f	file:
jsmn_parse_string	daemon/jsmn/jsmn_test.c	553;"	d	file:
jsmn_parser	daemon/jsmn/jsmn.h	/^} jsmn_parser;$/;"	t	typeref:struct:__anon59
jsmn_parser	daemon/jsmn/jsmn_test.c	549;"	d	file:
jsmnerr_t	daemon/jsmn/jsmn.h	/^} jsmnerr_t;$/;"	t	typeref:enum:__anon57
jsmnerr_t	daemon/jsmn/jsmn_test.c	555;"	d	file:
jsmntok_t	daemon/jsmn/jsmn.h	/^} jsmntok_t;$/;"	t	typeref:struct:__anon58
jsmntok_t	daemon/jsmn/jsmn_test.c	556;"	d	file:
jsmntype_t	daemon/jsmn/jsmn.h	/^} jsmntype_t;$/;"	t	typeref:enum:__anon56
jsmntype_t	daemon/jsmn/jsmn_test.c	554;"	d	file:
json	daemon/jsonrpc.c	/^	const char *json;$/;"	m	struct:json_output	file:
json_add_abstime	daemon/peer.c	/^static void json_add_abstime(struct json_result *response,$/;"	f	file:
json_add_bool	daemon/json.c	/^void json_add_bool(struct json_result *result, const char *fieldname, bool value)$/;"	f
json_add_hex	daemon/json.c	/^void json_add_hex(struct json_result *result, const char *fieldname,$/;"	f
json_add_htlcs	daemon/peer.c	/^static void json_add_htlcs(struct json_result *response,$/;"	f	file:
json_add_invoices	daemon/invoice.c	/^static void json_add_invoices(struct json_result *response,$/;"	f	file:
json_add_literal	daemon/json.c	/^void json_add_literal(struct json_result *result, const char *fieldname,$/;"	f
json_add_null	daemon/json.c	/^void json_add_null(struct json_result *result, const char *fieldname)$/;"	f
json_add_num	daemon/json.c	/^void json_add_num(struct json_result *result, const char *fieldname, unsigned int value)$/;"	f
json_add_object	daemon/json.c	/^void json_add_object(struct json_result *result, ...)$/;"	f
json_add_pubkey	daemon/json.c	/^void json_add_pubkey(struct json_result *response,$/;"	f
json_add_route	daemon/pay.c	/^static void json_add_route(struct json_result *response,$/;"	f	file:
json_add_route	daemon/routingrpc.c	/^static void json_add_route(struct command *cmd,$/;"	f	file:
json_add_string	daemon/json.c	/^void json_add_string(struct json_result *result, const char *fieldname, const char *value)$/;"	f
json_add_time	daemon/jsonrpc.c	/^static void json_add_time(struct json_result *result, const char *fieldname,$/;"	f	file:
json_add_u64	daemon/json.c	/^void json_add_u64(struct json_result *result, const char *fieldname,$/;"	f
json_array_end	daemon/json.c	/^void json_array_end(struct json_result *result)$/;"	f
json_array_start	daemon/json.c	/^void json_array_start(struct json_result *result, const char *fieldname)$/;"	f
json_close	daemon/peer.c	/^static void json_close(struct command *cmd,$/;"	f	file:
json_command	daemon/jsonrpc.h	/^struct json_command {$/;"	s
json_command_malformed	daemon/jsonrpc.c	/^static void json_command_malformed(struct json_connection *jcon,$/;"	f	file:
json_commit	daemon/peer.c	/^static void json_commit(struct command *cmd,$/;"	f	file:
json_connect	daemon/peer.c	/^static void json_connect(struct command *cmd,$/;"	f	file:
json_connect	lightningd/peer_control.c	/^static void json_connect(struct command *cmd,$/;"	f	file:
json_connecting	daemon/peer.c	/^struct json_connecting {$/;"	s	file:
json_connecting	lightningd/peer_control.c	/^struct json_connecting {$/;"	s	file:
json_connection	daemon/jsonrpc.h	/^struct json_connection {$/;"	s
json_crash	daemon/jsonrpc.c	/^static void json_crash(struct command *cmd,$/;"	f	file:
json_delinvoice	daemon/invoice.c	/^static void json_delinvoice(struct command *cmd,$/;"	f	file:
json_delve	daemon/json.c	/^const jsmntok_t *json_delve(const char *buffer,$/;"	f
json_dev_broadcast	daemon/chaintopology.c	/^static void json_dev_broadcast(struct command *cmd,$/;"	f	file:
json_disconnect	daemon/peer.c	/^static void json_disconnect(struct command *cmd,$/;"	f	file:
json_failhtlc	daemon/peer.c	/^static void json_failhtlc(struct command *cmd,$/;"	f	file:
json_feerate	daemon/peer.c	/^static void json_feerate(struct command *cmd,$/;"	f	file:
json_fulfillhtlc	daemon/peer.c	/^static void json_fulfillhtlc(struct command *cmd,$/;"	f	file:
json_get_arr	daemon/json.c	/^const jsmntok_t *json_get_arr(const jsmntok_t tok[], size_t index)$/;"	f
json_get_member	daemon/json.c	/^const jsmntok_t *json_get_member(const char *buffer, const jsmntok_t tok[],$/;"	f
json_get_params	daemon/json.c	/^bool json_get_params(const char *buffer, const jsmntok_t param[], ...)$/;"	f
json_getchannels	daemon/routingrpc.c	/^static void json_getchannels(struct command *cmd,$/;"	f	file:
json_gethtlcs	daemon/peer.c	/^static void json_gethtlcs(struct command *cmd,$/;"	f	file:
json_getinfo	daemon/jsonrpc.c	/^static void json_getinfo(struct command *cmd,$/;"	f	file:
json_getlog	daemon/jsonrpc.c	/^static void json_getlog(struct command *cmd,$/;"	f	file:
json_getnodes	daemon/routingrpc.c	/^static void json_getnodes(struct command *cmd,$/;"	f	file:
json_getpeers	daemon/peer.c	/^static void json_getpeers(struct command *cmd,$/;"	f	file:
json_getpeers	lightningd/peer_control.c	/^static void json_getpeers(struct command *cmd,$/;"	f	file:
json_getroute	daemon/pay.c	/^static void json_getroute(struct command *cmd,$/;"	f	file:
json_help	daemon/jsonrpc.c	/^static void json_help(struct command *cmd,$/;"	f	file:
json_invoice	daemon/invoice.c	/^static void json_invoice(struct command *cmd,$/;"	f	file:
json_listinvoice	daemon/invoice.c	/^static void json_listinvoice(struct command *cmd,$/;"	f	file:
json_newaddr	daemon/wallet.c	/^static void json_newaddr(struct command *cmd,$/;"	f	file:
json_newhtlc	daemon/peer.c	/^static void json_newhtlc(struct command *cmd,$/;"	f	file:
json_next	daemon/json.c	/^const jsmntok_t *json_next(const jsmntok_t *tok)$/;"	f
json_object_end	daemon/json.c	/^void json_object_end(struct json_result *result)$/;"	f
json_object_start	daemon/json.c	/^void json_object_start(struct json_result *result, const char *fieldname)$/;"	f
json_output	daemon/jsonrpc.c	/^struct json_output {$/;"	s	file:
json_output	daemon/peer.c	/^static void json_output(struct command *cmd,$/;"	f	file:
json_parse_input	daemon/json.c	/^jsmntok_t *json_parse_input(const char *input, int len, bool *valid)$/;"	f
json_pay_success	daemon/pay.c	/^static void json_pay_success(struct command *cmd, const struct preimage *rval)$/;"	f	file:
json_reconnect	daemon/peer.c	/^static void json_reconnect(struct command *cmd,$/;"	f	file:
json_restart	daemon/jsonrpc.c	/^static void json_restart(struct command *cmd,$/;"	f	file:
json_result	daemon/json.c	/^struct json_result {$/;"	s	file:
json_result	daemon/jsonrpc.c	/^static void json_result(struct json_connection *jcon,$/;"	f	file:
json_result_string	daemon/json.c	/^const char *json_result_string(const struct json_result *result)$/;"	f
json_rhash	daemon/jsonrpc.c	/^static void json_rhash(struct command *cmd,$/;"	f	file:
json_routefail	daemon/routingrpc.c	/^static void json_routefail(struct command *cmd,$/;"	f	file:
json_sendpay	daemon/pay.c	/^static void json_sendpay(struct command *cmd,$/;"	f	file:
json_signcommit	daemon/peer.c	/^static void json_signcommit(struct command *cmd,$/;"	f	file:
json_start_member	daemon/json.c	/^static void json_start_member(struct json_result *result, const char *fieldname)$/;"	f	file:
json_stop	daemon/jsonrpc.c	/^static void json_stop(struct command *cmd,$/;"	f	file:
json_tok_bitcoin_amount	daemon/json.c	/^bool json_tok_bitcoin_amount(const char *buffer, const jsmntok_t *tok,$/;"	f
json_tok_bool	daemon/json.c	/^bool json_tok_bool(const char *buffer, const jsmntok_t *tok, bool *b)$/;"	f
json_tok_contents	daemon/json.c	/^const char *json_tok_contents(const char *buffer, const jsmntok_t *t)$/;"	f
json_tok_double	daemon/json.c	/^bool json_tok_double(const char *buffer, const jsmntok_t *tok, double *num)$/;"	f
json_tok_is_null	daemon/json.c	/^bool json_tok_is_null(const char *buffer, const jsmntok_t *tok)$/;"	f
json_tok_len	daemon/json.c	/^int json_tok_len(const jsmntok_t *t)$/;"	f
json_tok_number	daemon/json.c	/^bool json_tok_number(const char *buffer, const jsmntok_t *tok,$/;"	f
json_tok_streq	daemon/json.c	/^bool json_tok_streq(const char *buffer, const jsmntok_t *tok, const char *str)$/;"	f
json_tok_u64	daemon/json.c	/^bool json_tok_u64(const char *buffer, const jsmntok_t *tok,$/;"	f
json_waitanyinvoice	daemon/invoice.c	/^static void json_waitanyinvoice(struct command *cmd,$/;"	f	file:
json_waitinvoice	daemon/invoice.c	/^static void json_waitinvoice(struct command *cmd,$/;"	f	file:
jsoneq	daemon/jsmn/example/simple.c	/^static int jsoneq(const char *json, jsmntok_t *tok, const char *s) {$/;"	f	file:
junk1	ccan/ccan/tcon/test/compile_ok-value.c	/^	char junk1;$/;"	m	struct:other_struct	file:
junk2	ccan/ccan/tcon/test/compile_ok-value.c	/^	long junk2;$/;"	m	struct:other_struct	file:
junk3	ccan/ccan/tcon/test/compile_ok-value.c	/^	short junk3;$/;"	m	struct:other_struct	file:
k	daemon/cryptopkt.c	/^	struct sha256 k;$/;"	m	struct:enckey	typeref:struct:enckey::sha256	file:
k	libsodium/test/default/core4.c	/^static unsigned char k[32]$/;"	v	file:
k	libsodium/test/default/core5.c	/^static unsigned char k[32]$/;"	v	file:
k	libsodium/test/default/core6.c	/^static unsigned char k[32]$/;"	v	file:
k	libsodium/test/default/scalarmult5.c	/^static unsigned char k[32];$/;"	v	file:
k	libsodium/test/default/secretbox7.c	/^static unsigned char k[crypto_secretbox_KEYBYTES];$/;"	v	file:
k	libsodium/test/default/secretbox8.c	/^static unsigned char k[crypto_secretbox_KEYBYTES];$/;"	v	file:
k	secp256k1/src/hash.h	/^    unsigned char k[32];$/;"	m	struct:__anon24
k_opad	ccan/ccan/crypto/hmac_sha256/hmac_sha256.h	/^	uint64_t k_opad[HMAC_SHA256_BLOCKSIZE \/ sizeof(uint64_t)];$/;"	m	struct:hmac_sha256_ctx
key	ccan/ccan/crypto/hmac_sha256/test/api-rfc4231.c	/^	const char *key, *data, *hmac;$/;"	m	struct:test	file:
key	ccan/ccan/htable/test/run-type-int.c	/^	unsigned int key;$/;"	m	struct:obj	file:
key	ccan/ccan/htable/test/run-type.c	/^	unsigned int key;$/;"	m	struct:obj	file:
key	ccan/ccan/htable/test/run-zero-hash-first-entry.c	/^	size_t key;$/;"	m	struct:data	file:
key	ccan/ccan/htable/tools/speed.c	/^	unsigned int key;$/;"	m	struct:object	file:
key	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^    unsigned char key[crypto_stream_salsa20_KEYBYTES];$/;"	m	struct:Salsa20Random_	file:
key	libsodium/test/default/auth.c	/^static unsigned char key[32] = "Jefe";$/;"	v	file:
key	libsodium/test/default/auth2.c	/^static unsigned char key[32]$/;"	v	file:
key	libsodium/test/default/auth3.c	/^static unsigned char key[32]$/;"	v	file:
key	libsodium/test/default/auth5.c	/^static unsigned char key[32];$/;"	v	file:
key	libsodium/test/default/auth6.c	/^static unsigned char key[32] = "Jefe";$/;"	v	file:
key	libsodium/test/default/auth7.c	/^static unsigned char key[32];$/;"	v	file:
key	libsodium/test/default/onetimeauth7.c	/^static unsigned char key[32];$/;"	v	file:
key	lightning.pb-c.h	/^  ProtobufCBinaryData key;$/;"	m	struct:_BitcoinPubkey
key	secp256k1/src/bench_schnorr_verify.c	/^    unsigned char key[32];$/;"	m	struct:__anon33	file:
key	secp256k1/src/bench_sign.c	/^    unsigned char key[32];$/;"	m	struct:__anon36	file:
key	secp256k1/src/bench_verify.c	/^    unsigned char key[32];$/;"	m	struct:__anon25	file:
key2	libsodium/test/default/auth.c	/^static unsigned char key2[] = "Another one got caught today, it's all over the papers. \\"Teenager Arrested in Computer Crime Scandal\\", \\"Hacker Arrested after Bank Tampering\\"... Damn kids. They're all alike.";$/;"	v	file:
key_from_base58	bitcoin/base58.c	/^bool key_from_base58(const char *base58, size_t base58_len,$/;"	f
key_hex	libsodium/test/default/aead_aes256gcm.c	/^    const char *key_hex;$/;"	m	struct:__anon62	file:
key_hex	libsodium/test/default/generichash.c	/^    const char *key_hex;$/;"	m	struct:__anon63	file:
key_length	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	/^  uint8_t  key_length;     \/*  2 *\/$/;"	m	struct:blake2b_param_
key_less	bitcoin/script.c	/^static bool key_less(const struct pubkey *a, const struct pubkey *b)$/;"	f	file:
key_negotiate	daemon/cryptopkt.c	/^struct key_negotiate {$/;"	s	file:
key_to_base58	bitcoin/base58.c	/^char *key_to_base58(const tal_t *ctx, bool test_net, const struct privkey *key)$/;"	f
keyexpbs	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common.h	241;"	d
keyexpbs1	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common.h	12;"	d
keyexpbs10	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common.h	116;"	d
keylen	daemon/cryptopkt.c	/^	le32 keylen;$/;"	m	struct:key_negotiate	file:
keyof_block_map	daemon/chaintopology.c	/^static const struct sha256_double *keyof_block_map(const struct block *b)$/;"	f	file:
keypair	lightningd/handshake/handshake.c	/^struct keypair {$/;"	s	file:
keypair_seed	libsodium/test/default/ed25519_convert.c	/^static const unsigned char keypair_seed[crypto_sign_ed25519_SEEDBYTES]$/;"	v	file:
keypair_seed	libsodium/test/default/sign.c	/^static const unsigned char keypair_seed[]$/;"	v	file:
keys_exchanged	daemon/cryptopkt.c	/^static struct io_plan *keys_exchanged(struct io_conn *conn,$/;"	f	file:
keyset	daemon/sphinx.c	/^struct keyset {$/;"	s	file:
killall	tests/test_lightningd.py	/^    def killall(self):$/;"	m	class:NodeFactory
kind	ccan/ccan/cdump/cdump.h	/^	enum cdump_type_kind kind;$/;"	m	struct:cdump_type	typeref:enum:cdump_type::cdump_type_kind
known	ccan/ccan/crypto/shachain/shachain.h	/^	} known[SHACHAIN_BITS + 1];$/;"	m	struct:shachain	typeref:struct:shachain::__anon8
l	ccan/ccan/io/test/run-09-connect.c	/^static struct io_listener *l;$/;"	v	typeref:struct:io_listener	file:
l	ccan/ccan/io/test/run-12-bidir.c	/^	struct io_listener *l;$/;"	m	struct:data	typeref:struct:data::io_listener	file:
l	ccan/ccan/io/test/run-14-duplex-both-read.c	/^	struct io_listener *l;$/;"	m	struct:data	typeref:struct:data::io_listener	file:
l	ccan/ccan/io/test/run-16-duplex-test.c	/^	struct io_listener *l;$/;"	m	struct:data	typeref:struct:data::io_listener	file:
l	ccan/ccan/io/test/run-21-io_close_taken_fd.c	/^static struct io_listener *l;$/;"	v	typeref:struct:io_listener	file:
l1	contrib/pylightning/lightning/lightning.py	/^    l1 = LightningRpc("\/tmp\/lightning1\/lightning-rpc")$/;"	v
l5	contrib/pylightning/lightning/lightning.py	/^    l5 = LightningRpc("\/tmp\/lightning5\/lightning-rpc")$/;"	v
label	daemon/invoice.h	/^	const char *label;$/;"	m	struct:invoice
ladder	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^ladder:$/;"	l
ladder	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_namespace.h	4;"	d
ladder_H	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.h	2;"	d
ladder_base	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^ladder_base:$/;"	l
ladder_base	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base_namespace.h	4;"	d
ladder_base_H	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.h	2;"	d
ladder_base_namespace_H	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base_namespace.h	2;"	d
ladder_namespace_H	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_namespace.h	2;"	d
lane	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    uint32_t lane;$/;"	m	struct:Argon2_position_t
lane_length	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    uint32_t lane_length;$/;"	m	struct:Argon2_instance_t
lanes	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    uint32_t lanes;$/;"	m	struct:Argon2_instance_t
lanes	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint32_t lanes;   \/* number of lanes *\/$/;"	m	struct:Argon2_Context
last	ccan/ccan/ptr_valid/ptr_valid.h	/^	void *last;$/;"	m	struct:ptr_valid_batch
last_block_enter	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^last_block_enter:$/;"	l
last_child	ccan/ccan/list/test/compile_ok-constant.c	/^static const struct child *last_child(const struct list_head *list)$/;"	f	file:
last_node	libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h	/^    uint8_t  last_node;$/;"	m	struct:crypto_generichash_blake2b_state
last_ok	ccan/ccan/ptr_valid/ptr_valid.h	/^	bool last_ok;$/;"	m	struct:ptr_valid_batch
last_recv	test/test_protocol.c	/^	size_t last_recv;$/;"	m	struct:database	file:
last_sent	test/test_protocol.c	/^	size_t last_sent;$/;"	m	struct:database	file:
last_timestamp	daemon/routing.h	/^	u32 last_timestamp;$/;"	m	struct:node
last_timestamp	daemon/routing.h	/^	u32 last_timestamp;$/;"	m	struct:node_connection
last_unrevoked	test/test_protocol.c	/^static struct commit_info *last_unrevoked(struct commit_info *ci)$/;"	f	file:
lastround	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common.h	540;"	d
lcli1	daemon/test/scripts/helpers.sh	/^lcli1()$/;"	f
lcli2	daemon/test/scripts/helpers.sh	/^lcli2()$/;"	f
lcli3	daemon/test/scripts/helpers.sh	/^lcli3()$/;"	f
ld	lightningd/peer_control.h	/^	struct lightningd *ld;$/;"	m	struct:peer	typeref:struct:peer::lightningd
ld	lightningd/subdaemon.h	/^	struct lightningd *ld;$/;"	m	struct:subdaemon	typeref:struct:subdaemon::lightningd
ld_from_dstate	lightningd/lightningd.h	/^ld_from_dstate(const struct lightningd_state *dstate)$/;"	f
le16	ccan/ccan/endian/endian.h	/^typedef leint16_t le16;$/;"	t
le16	ccan/ccan/short_types/short_types.h	/^typedef leint16_t le16;$/;"	t
le16_to_cpu	ccan/ccan/endian/endian.h	/^static inline uint16_t le16_to_cpu(leint16_t le_val)$/;"	f
le32	ccan/ccan/endian/endian.h	/^typedef leint32_t le32;$/;"	t
le32	ccan/ccan/short_types/short_types.h	/^typedef leint32_t le32;$/;"	t
le32_to_cpu	ccan/ccan/endian/endian.h	/^static inline uint32_t le32_to_cpu(leint32_t le_val)$/;"	f
le64	ccan/ccan/endian/endian.h	/^typedef leint64_t le64;$/;"	t
le64	ccan/ccan/short_types/short_types.h	/^typedef leint64_t le64;$/;"	t
le64_nonce	daemon/cryptopkt.c	/^static void le64_nonce(unsigned char *npub, u64 nonce)$/;"	f	file:
le64_nonce	lightningd/cryptomsg.c	/^static void le64_nonce(unsigned char *npub, u64 nonce)$/;"	f	file:
le64_nonce	lightningd/handshake/handshake.c	/^static void le64_nonce(unsigned char *npub, u64 nonce)$/;"	f	file:
le64_to_cpu	ccan/ccan/endian/endian.h	/^static inline uint64_t le64_to_cpu(leint64_t le_val)$/;"	f
lea	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^lea  (%r9,%rbp),%r9$/;"	l
lea	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^lea  (%rax,%r9),%rcx$/;"	l
lea	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^lea  -18(%rax),%r10$/;"	l
leaf_length	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	/^  uint8_t  leaf_length[4]; \/*  8 *\/$/;"	m	struct:blake2b_param_
leaq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^leaq 800(%rsp),%rsi$/;"	l
leaq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^leaq 512(%rsp),%rsi$/;"	l
leaq	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^leaq 0(%rsp),%rdi$/;"	l
leaq	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^leaq 0(%rsp),%rsi$/;"	l
leftover	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	/^        unsigned long long leftover;$/;"	m	struct:poly1305_state_internal_t
leftover	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	/^        unsigned long long leftover;$/;"	m	struct:poly1305_state_internal_t
leftover	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^    unsigned long long leftover; \/* 8 bytes *\/$/;"	m	struct:poly1305_state_internal_t	file:
leint16_t	ccan/ccan/endian/endian.h	/^typedef uint16_t ENDIAN_TYPE leint16_t;$/;"	t
leint32_t	ccan/ccan/endian/endian.h	/^typedef uint32_t ENDIAN_TYPE leint32_t;$/;"	t
leint64_t	ccan/ccan/endian/endian.h	/^typedef uint64_t ENDIAN_TYPE leint64_t;$/;"	t
len	ccan/ccan/cdump/cdump.c	/^	size_t len;$/;"	m	struct:token	file:
len	ccan/ccan/io/benchmarks/run-length-prefix.c	/^	unsigned int len;$/;"	m	struct:client	file:
len	ccan/ccan/io/test/run-17-homemade-io.c	/^	size_t len;$/;"	m	struct:packet	file:
len	ccan/ccan/tal/benchmark/samba-allocs.c	/^	size_t len;$/;"	m	struct:node	file:
len	ccan/ccan/tal/tal.c	/^	size_t len;$/;"	m	struct:length	file:
len_read	daemon/jsonrpc.h	/^	size_t len_read;$/;"	m	struct:json_connection
length	ccan/ccan/tal/tal.c	/^struct length {$/;"	s	file:
length	daemon/cryptopkt.c	/^	le32 length;$/;"	m	struct:crypto_pkt	file:
less_than_8_blocks	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^less_than_8_blocks:$/;"	l
level	ccan/ccan/timer/timer.h	/^	struct timer_level *level[(64 + TIMER_LEVEL_BITS-1) \/ TIMER_LEVEL_BITS];$/;"	m	struct:timers	typeref:struct:timers::timer_level
level	daemon/jsonrpc.c	/^	enum log_level level;$/;"	m	struct:log_info	typeref:enum:log_info::log_level	file:
level	daemon/log.c	/^	enum log_level level;$/;"	m	struct:__anon55	typeref:enum:__anon55::log_level	file:
level	daemon/log.c	/^	enum log_level level;$/;"	m	struct:log_entry	typeref:enum:log_entry::log_level	file:
level	lightningd/peer_control.c	/^	enum log_level level;$/;"	m	struct:log_info	typeref:enum:log_info::log_level	file:
level_may_beat	ccan/ccan/timer/timer.c	/^static bool level_may_beat(const struct timers *timers, size_t level,$/;"	f	file:
level_of	ccan/ccan/timer/timer.c	/^static unsigned int level_of(const struct timers *timers, uint64_t time)$/;"	f	file:
lib_LTLIBRARIES	libsodium/src/libsodium/Makefile	/^lib_LTLIBRARIES = \\$/;"	m
lib_LTLIBRARIES	secp256k1/Makefile	/^lib_LTLIBRARIES = libsecp256k1.la$/;"	m
libaesni_la_CPPFLAGS	libsodium/src/libsodium/Makefile	/^libaesni_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \\$/;"	m
libaesni_la_LDFLAGS	libsodium/src/libsodium/Makefile	/^libaesni_la_LDFLAGS = $(libsodium_la_LDFLAGS)$/;"	m
libaesni_la_LIBADD	libsodium/src/libsodium/Makefile	/^libaesni_la_LIBADD =$/;"	m
libaesni_la_LINK	libsodium/src/libsodium/Makefile	/^libaesni_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
libaesni_la_OBJECTS	libsodium/src/libsodium/Makefile	/^libaesni_la_OBJECTS = $(am_libaesni_la_OBJECTS)$/;"	m
libaesni_la_SOURCES	libsodium/src/libsodium/Makefile	/^libaesni_la_SOURCES = \\$/;"	m
libavx2_la_CPPFLAGS	libsodium/src/libsodium/Makefile	/^libavx2_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \\$/;"	m
libavx2_la_LDFLAGS	libsodium/src/libsodium/Makefile	/^libavx2_la_LDFLAGS = $(libsodium_la_LDFLAGS)$/;"	m
libavx2_la_LIBADD	libsodium/src/libsodium/Makefile	/^libavx2_la_LIBADD =$/;"	m
libavx2_la_LINK	libsodium/src/libsodium/Makefile	/^libavx2_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
libavx2_la_OBJECTS	libsodium/src/libsodium/Makefile	/^libavx2_la_OBJECTS = $(am_libavx2_la_OBJECTS)$/;"	m
libavx2_la_SOURCES	libsodium/src/libsodium/Makefile	/^libavx2_la_SOURCES = \\$/;"	m
libdir	libsodium/Makefile	/^libdir = \/home\/wen\/work\/lightning\/libsodium\/..$/;"	m
libdir	libsodium/dist-build/Makefile	/^libdir = \/home\/wen\/work\/lightning\/libsodium\/..$/;"	m
libdir	libsodium/msvc-scripts/Makefile	/^libdir = \/home\/wen\/work\/lightning\/libsodium\/..$/;"	m
libdir	libsodium/src/Makefile	/^libdir = \/home\/wen\/work\/lightning\/libsodium\/..$/;"	m
libdir	libsodium/src/libsodium/Makefile	/^libdir = \/home\/wen\/work\/lightning\/libsodium\/..$/;"	m
libdir	libsodium/src/libsodium/include/Makefile	/^libdir = \/home\/wen\/work\/lightning\/libsodium\/..$/;"	m
libdir	libsodium/test/Makefile	/^libdir = \/home\/wen\/work\/lightning\/libsodium\/..$/;"	m
libdir	libsodium/test/default/Makefile	/^libdir = \/home\/wen\/work\/lightning\/libsodium\/..$/;"	m
libdir	secp256k1/Makefile	/^libdir = \/home\/wen\/work\/lightning\/secp256k1\/..$/;"	m
libexecdir	libsodium/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	libsodium/dist-build/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	libsodium/msvc-scripts/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	libsodium/src/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	libsodium/src/libsodium/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	libsodium/src/libsodium/include/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	libsodium/test/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	libsodium/test/default/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	secp256k1/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libsecp256k1_common_la_LIBADD	secp256k1/Makefile	/^libsecp256k1_common_la_LIBADD =$/;"	m
libsecp256k1_common_la_OBJECTS	secp256k1/Makefile	/^libsecp256k1_common_la_OBJECTS = $(am_libsecp256k1_common_la_OBJECTS)$/;"	m
libsecp256k1_jni_la_CPPFLAGS	secp256k1/Makefile	/^libsecp256k1_jni_la_CPPFLAGS = -DSECP256K1_BUILD $(JNI_INCLUDES)$/;"	m
libsecp256k1_jni_la_LIBADD	secp256k1/Makefile	/^libsecp256k1_jni_la_LIBADD =$/;"	m
libsecp256k1_jni_la_OBJECTS	secp256k1/Makefile	/^libsecp256k1_jni_la_OBJECTS = $(am_libsecp256k1_jni_la_OBJECTS)$/;"	m
libsecp256k1_jni_la_SOURCES	secp256k1/Makefile	/^libsecp256k1_jni_la_SOURCES = src\/java\/org_bitcoin_NativeSecp256k1.c src\/java\/org_bitcoin_Secp256k1Context.c$/;"	m
libsecp256k1_la_CPPFLAGS	secp256k1/Makefile	/^libsecp256k1_la_CPPFLAGS = -DSECP256K1_BUILD -I$(top_srcdir)\/include -I$(top_srcdir)\/src $(SECP_INCLUDES)$/;"	m
libsecp256k1_la_DEPENDENCIES	secp256k1/Makefile	/^libsecp256k1_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \\$/;"	m
libsecp256k1_la_LIBADD	secp256k1/Makefile	/^libsecp256k1_la_LIBADD = $(JNI_LIB) $(SECP_LIBS) $(COMMON_LIB)$/;"	m
libsecp256k1_la_OBJECTS	secp256k1/Makefile	/^libsecp256k1_la_OBJECTS = $(am_libsecp256k1_la_OBJECTS)$/;"	m
libsecp256k1_la_SOURCES	secp256k1/Makefile	/^libsecp256k1_la_SOURCES = src\/secp256k1.c$/;"	m
libsodium_la_CPPFLAGS	libsodium/src/libsodium/Makefile	/^libsodium_la_CPPFLAGS = \\$/;"	m
libsodium_la_DEPENDENCIES	libsodium/src/libsodium/Makefile	/^libsodium_la_DEPENDENCIES = libaesni.la libsse2.la libssse3.la \\$/;"	m
libsodium_la_LDFLAGS	libsodium/src/libsodium/Makefile	/^libsodium_la_LDFLAGS = $(AM_LDFLAGS) -export-dynamic -no-undefined \\$/;"	m
libsodium_la_LIBADD	libsodium/src/libsodium/Makefile	/^libsodium_la_LIBADD = libaesni.la libsse2.la libssse3.la libsse41.la libavx2.la$/;"	m
libsodium_la_LINK	libsodium/src/libsodium/Makefile	/^libsodium_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
libsodium_la_OBJECTS	libsodium/src/libsodium/Makefile	/^libsodium_la_OBJECTS = $(am_libsodium_la_OBJECTS)$/;"	m
libsodium_la_SOURCES	libsodium/src/libsodium/Makefile	/^libsodium_la_SOURCES =  \\$/;"	m
libsse2_la_CPPFLAGS	libsodium/src/libsodium/Makefile	/^libsse2_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \\$/;"	m
libsse2_la_LDFLAGS	libsodium/src/libsodium/Makefile	/^libsse2_la_LDFLAGS = $(libsodium_la_LDFLAGS)$/;"	m
libsse2_la_LIBADD	libsodium/src/libsodium/Makefile	/^libsse2_la_LIBADD =$/;"	m
libsse2_la_LINK	libsodium/src/libsodium/Makefile	/^libsse2_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
libsse2_la_OBJECTS	libsodium/src/libsodium/Makefile	/^libsse2_la_OBJECTS = $(am_libsse2_la_OBJECTS)$/;"	m
libsse2_la_SOURCES	libsodium/src/libsodium/Makefile	/^libsse2_la_SOURCES = \\$/;"	m
libsse41_la_CPPFLAGS	libsodium/src/libsodium/Makefile	/^libsse41_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \\$/;"	m
libsse41_la_LDFLAGS	libsodium/src/libsodium/Makefile	/^libsse41_la_LDFLAGS = $(libsodium_la_LDFLAGS)$/;"	m
libsse41_la_LIBADD	libsodium/src/libsodium/Makefile	/^libsse41_la_LIBADD =$/;"	m
libsse41_la_LINK	libsodium/src/libsodium/Makefile	/^libsse41_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
libsse41_la_OBJECTS	libsodium/src/libsodium/Makefile	/^libsse41_la_OBJECTS = $(am_libsse41_la_OBJECTS)$/;"	m
libsse41_la_SOURCES	libsodium/src/libsodium/Makefile	/^libsse41_la_SOURCES = \\$/;"	m
libssse3_la_CPPFLAGS	libsodium/src/libsodium/Makefile	/^libssse3_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \\$/;"	m
libssse3_la_LDFLAGS	libsodium/src/libsodium/Makefile	/^libssse3_la_LDFLAGS = $(libsodium_la_LDFLAGS)$/;"	m
libssse3_la_LIBADD	libsodium/src/libsodium/Makefile	/^libssse3_la_LIBADD =$/;"	m
libssse3_la_LINK	libsodium/src/libsodium/Makefile	/^libssse3_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
libssse3_la_OBJECTS	libsodium/src/libsodium/Makefile	/^libssse3_la_OBJECTS = $(am_libssse3_la_OBJECTS)$/;"	m
libssse3_la_SOURCES	libsodium/src/libsodium/Makefile	/^libssse3_la_SOURCES = \\$/;"	m
libtool_options_prep	libsodium/build-aux/ltmain.sh	/^libtool_options_prep ()$/;"	f
libtool_options_prep	libsodium/libtool	/^libtool_options_prep ()$/;"	f
libtool_options_prep	secp256k1/build-aux/ltmain.sh	/^libtool_options_prep ()$/;"	f
libtool_options_prep	secp256k1/libtool	/^libtool_options_prep ()$/;"	f
libtool_parse_options	libsodium/build-aux/ltmain.sh	/^libtool_parse_options ()$/;"	f
libtool_parse_options	libsodium/libtool	/^libtool_parse_options ()$/;"	f
libtool_parse_options	secp256k1/build-aux/ltmain.sh	/^libtool_parse_options ()$/;"	f
libtool_parse_options	secp256k1/libtool	/^libtool_parse_options ()$/;"	f
libtool_validate_options	libsodium/build-aux/ltmain.sh	/^libtool_validate_options ()$/;"	f
libtool_validate_options	libsodium/libtool	/^libtool_validate_options ()$/;"	f
libtool_validate_options	secp256k1/build-aux/ltmain.sh	/^libtool_validate_options ()$/;"	f
libtool_validate_options	secp256k1/libtool	/^libtool_validate_options ()$/;"	f
license	contrib/pylightning/setup.py	/^      license='MIT',$/;"	v
lightningd	lightningd/lightningd.h	/^struct lightningd {$/;"	s
lightningd_state	daemon/lightningd.c	/^static struct lightningd_state *lightningd_state(void)$/;"	f	file:
lightningd_state	daemon/lightningd.h	/^struct lightningd_state {$/;"	s
likely	ccan/ccan/likely/likely.h	32;"	d
likely	ccan/ccan/likely/likely.h	55;"	d
likely	ccan/ccan/likely/likely.h	61;"	d
likely_one_unlikely_two	ccan/ccan/likely/test/run-debug.c	/^static bool likely_one_unlikely_two(unsigned int val1, unsigned int val2)$/;"	f	file:
likely_stats	ccan/ccan/likely/likely.c	/^char *likely_stats(unsigned int min_hits, unsigned int percent)$/;"	f
likely_stats_reset	ccan/ccan/likely/likely.c	/^void likely_stats_reset(void)$/;"	f
limb	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^typedef uint64_t limb;$/;"	t	file:
limbs	secp256k1/src/num_gmp.h	/^    int limbs;$/;"	m	struct:__anon28
line	ccan/ccan/likely/likely.c	/^	unsigned int line;$/;"	m	struct:trace	file:
linearize_shachain	daemon/db.c	/^static const char *linearize_shachain(const tal_t *ctx,$/;"	f	file:
linearize_tx	bitcoin/tx.c	/^u8 *linearize_tx(const tal_t *ctx, const struct bitcoin_tx *tx)$/;"	f
linenum	check-bolt.c	/^static unsigned linenum(const char *raw, const char **pos)$/;"	f	file:
link	ccan/tools/configurator/configurator.c	/^	const char *link;$/;"	m	struct:test	file:
list	ccan/ccan/list/test/compile_ok-constant.c	/^	struct list_node list;$/;"	m	struct:child	typeref:struct:child::list_node	file:
list	ccan/ccan/list/test/helper.c	/^  struct list_node list;$/;"	m	struct:opaque	typeref:struct:opaque::list_node	file:
list	ccan/ccan/list/test/run-check-nonconst.c	/^	struct list_node list;$/;"	m	struct:child	typeref:struct:child::list_node	file:
list	ccan/ccan/list/test/run-list_prev-list_next.c	/^	struct list_node list;$/;"	m	struct:child	typeref:struct:child::list_node	file:
list	ccan/ccan/list/test/run-single-eval.c	/^	struct list_node list;$/;"	m	struct:child	typeref:struct:child::list_node	file:
list	ccan/ccan/list/test/run.c	/^	struct list_node list;$/;"	m	struct:child	typeref:struct:child::list_node	file:
list	ccan/ccan/tal/tal.c	/^	struct list_node list;$/;"	m	struct:tal_hdr	typeref:struct:tal_hdr::list_node	file:
list	ccan/ccan/timer/timer.c	/^	struct list_head list[PER_LEVEL];$/;"	m	struct:timer_level	typeref:struct:timer_level::list_head	file:
list	ccan/ccan/timer/timer.h	/^	struct list_node list;$/;"	m	struct:timer	typeref:struct:timer::list_node
list	daemon/bitcoind.c	/^	struct list_node list;$/;"	m	struct:bitcoin_cli	typeref:struct:bitcoin_cli::list_node	file:
list	daemon/invoice.c	/^	struct list_node list;$/;"	m	struct:invoice_waiter	typeref:struct:invoice_waiter::list_node	file:
list	daemon/invoice.h	/^	struct list_node list;$/;"	m	struct:invoice	typeref:struct:invoice::list_node
list	daemon/jsonrpc.c	/^	struct list_node list;$/;"	m	struct:json_output	typeref:struct:json_output::list_node	file:
list	daemon/log.c	/^	struct list_node list;$/;"	m	struct:log_entry	typeref:struct:log_entry::list_node	file:
list	daemon/pay.c	/^	struct list_node list;$/;"	m	struct:pay_command	typeref:struct:pay_command::list_node	file:
list	daemon/peer.h	/^	struct list_node list;$/;"	m	struct:outgoing_tx	typeref:struct:outgoing_tx::list_node
list	daemon/peer.h	/^	struct list_node list;$/;"	m	struct:peer	typeref:struct:peer::list_node
list	daemon/peer.h	/^	struct list_node list;$/;"	m	struct:peer_address	typeref:struct:peer_address::list_node
list	daemon/peer.h	/^	struct list_node list;$/;"	m	struct:their_commit	typeref:struct:their_commit::list_node
list	daemon/wallet.c	/^	struct list_node list;$/;"	m	struct:wallet	typeref:struct:wallet::list_node	file:
list	irc.h	/^	struct list_node list;$/;"	m	struct:irccommand	typeref:struct:irccommand::list_node
list	lightningd/gossip/gossip.c	/^	struct list_node list;$/;"	m	struct:peer	typeref:struct:peer::list_node	file:
list	lightningd/peer_control.h	/^	struct list_node list;$/;"	m	struct:peer	typeref:struct:peer::list_node
list	lightningd/subdaemon.c	/^	struct list_node list;$/;"	m	struct:subdaemon_req	typeref:struct:subdaemon_req::list_node	file:
list_add	ccan/ccan/list/list.h	203;"	d
list_add_	ccan/ccan/list/list.h	/^static inline void list_add_(struct list_head *h,$/;"	f
list_add_after	ccan/ccan/list/list.h	177;"	d
list_add_after_	ccan/ccan/list/list.h	/^static inline void list_add_after_(struct list_head *h,$/;"	f
list_add_before	ccan/ccan/list/list.h	226;"	d
list_add_before_	ccan/ccan/list/list.h	/^static inline void list_add_before_(struct list_head *h,$/;"	f
list_add_off	ccan/ccan/list/list.h	799;"	d
list_add_tail	ccan/ccan/list/list.h	249;"	d
list_add_tail_	ccan/ccan/list/list.h	/^static inline void list_add_tail_(struct list_head *h,$/;"	f
list_append_list	ccan/ccan/list/list.h	638;"	d
list_append_list_	ccan/ccan/list/list.h	/^static inline void list_append_list_(struct list_head *to,$/;"	f
list_check	ccan/ccan/list/list.c	/^struct list_head *list_check(const struct list_head *h, const char *abortstr)$/;"	f
list_check_node	ccan/ccan/list/list.c	/^struct list_node *list_check_node(const struct list_node *node,$/;"	f
list_debug	ccan/ccan/list/list.h	95;"	d
list_debug	ccan/ccan/list/list.h	98;"	d
list_debug_node	ccan/ccan/list/list.h	96;"	d
list_debug_node	ccan/ccan/list/list.h	99;"	d
list_del	ccan/ccan/list/list.h	323;"	d
list_del_	ccan/ccan/list/list.h	/^static inline void list_del_(struct list_node *n, const char* abortstr)$/;"	f
list_del_from	ccan/ccan/list/list.h	/^static inline void list_del_from(struct list_head *h, struct list_node *n)$/;"	f
list_del_from_off	ccan/ccan/list/list.h	805;"	d
list_del_init	ccan/ccan/list/list.h	349;"	d
list_del_init_	ccan/ccan/list/list.h	/^static inline void list_del_init_(struct list_node *n, const char *abortstr)$/;"	f
list_del_off	ccan/ccan/list/list.h	802;"	d
list_empty	ccan/ccan/list/list.h	266;"	d
list_empty_	ccan/ccan/list/list.h	/^static inline bool list_empty_(const struct list_head *h, const char* abortstr)$/;"	f
list_empty_nocheck	ccan/ccan/list/list.h	/^static inline bool list_empty_nocheck(const struct list_head *h)$/;"	f
list_empty_nodebug	ccan/ccan/list/list.h	/^static inline bool list_empty_nodebug(const struct list_head *h)$/;"	f
list_empty_nodebug	ccan/ccan/list/list.h	286;"	d
list_entry	ccan/ccan/list/list.h	432;"	d
list_entry_off	ccan/ccan/list/list.h	790;"	d
list_entry_or_null	ccan/ccan/list/list.h	/^static inline void *list_entry_or_null(const struct list_head *h,$/;"	f
list_expect	ccan/ccan/list/test/run-prepend_list.c	/^static bool list_expect(struct list_head *h, ...)$/;"	f	file:
list_for_each	ccan/ccan/list/list.h	523;"	d
list_for_each_off	ccan/ccan/list/list.h	737;"	d
list_for_each_off_dir_	ccan/ccan/list/list.h	691;"	d
list_for_each_rev	ccan/ccan/list/list.h	539;"	d
list_for_each_rev_off	ccan/ccan/list/list.h	748;"	d
list_for_each_rev_safe	ccan/ccan/list/list.h	561;"	d
list_for_each_rev_safe_off	ccan/ccan/list/list.h	786;"	d
list_for_each_safe	ccan/ccan/list/list.h	581;"	d
list_for_each_safe_off	ccan/ccan/list/list.h	767;"	d
list_for_each_safe_off_dir_	ccan/ccan/list/list.h	698;"	d
list_head	ccan/ccan/list/list.h	/^struct list_head$/;"	s
list_head_init	ccan/ccan/list/list.h	/^static inline void list_head_init(struct list_head *h)$/;"	f
list_head_off	ccan/ccan/list/list.h	793;"	d
list_next	ccan/ccan/list/list.h	598;"	d
list_node	ccan/ccan/list/list.h	/^struct list_node$/;"	s
list_node_from_off_	ccan/ccan/list/list.h	/^static inline struct list_node *list_node_from_off_(void *ptr, size_t off)$/;"	f
list_node_init	ccan/ccan/list/list.h	/^static inline void list_node_init(struct list_node *n)$/;"	f
list_node_initted	ccan/ccan/timer/timer.c	/^static bool list_node_initted(const struct list_node *n)$/;"	f	file:
list_node_to_off_	ccan/ccan/list/list.h	/^static inline void *list_node_to_off_(struct list_node *node, size_t off)$/;"	f
list_off_	ccan/ccan/list/list.h	819;"	d
list_off_var_	ccan/ccan/list/list.h	823;"	d
list_pop	ccan/ccan/list/list.h	472;"	d
list_pop_	ccan/ccan/list/list.h	/^static inline const void *list_pop_(const struct list_head *h, size_t off)$/;"	f
list_prepend_list	ccan/ccan/list/list.h	671;"	d
list_prepend_list_	ccan/ccan/list/list.h	/^static inline void list_prepend_list_(struct list_head *to,$/;"	f
list_prev	ccan/ccan/list/list.h	617;"	d
list_swap	ccan/ccan/list/list.h	404;"	d
list_swap_	ccan/ccan/list/list.h	/^static inline void list_swap_(struct list_node *o,$/;"	f
list_tail	ccan/ccan/list/list.h	500;"	d
list_tail_	ccan/ccan/list/list.h	/^static inline const void *list_tail_(const struct list_head *h, size_t off)$/;"	f
list_tail_off	ccan/ccan/list/list.h	796;"	d
list_top	ccan/ccan/list/list.h	448;"	d
list_top_	ccan/ccan/list/list.h	/^static inline const void *list_top_(const struct list_head *h, size_t off)$/;"	f
list_typeof	ccan/ccan/list/list.h	828;"	d
list_typeof	ccan/ccan/list/list.h	830;"	d
listener	ccan/ccan/io/backend.h	/^	bool listener;$/;"	m	struct:fd
listinvoice_command	daemon/invoice.c	/^static const struct json_command listinvoice_command = {$/;"	v	typeref:struct:json_command	file:
live_htlcs_to_them	test/test_state_coverage.c	/^	struct htlc live_htlcs_to_them[HTLC_ARRSIZE], live_htlcs_to_us[HTLC_ARRSIZE];$/;"	m	struct:peer	typeref:struct:peer::htlc	file:
live_htlcs_to_us	test/test_state_coverage.c	/^	struct htlc live_htlcs_to_them[HTLC_ARRSIZE], live_htlcs_to_us[HTLC_ARRSIZE];$/;"	m	struct:peer	typeref:struct:peer::	file:
lo	ccan/ccan/asort/asort.c	/^    char *lo;$/;"	m	struct:__anon2	file:
load32_be	libsodium/src/libsodium/include/sodium/private/common.h	/^load32_be(const uint8_t src[4])$/;"	f
load32_le	libsodium/src/libsodium/include/sodium/private/common.h	/^load32_le(const uint8_t src[4])$/;"	f
load64_be	libsodium/src/libsodium/include/sodium/private/common.h	/^load64_be(const uint8_t src[8])$/;"	f
load64_le	libsodium/src/libsodium/include/sodium/private/common.h	/^load64_le(const uint8_t src[8])$/;"	f
load_3	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^static uint64_t load_3(const unsigned char *in)$/;"	f	file:
load_3	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe_frombytes_sandy2x.c	/^static uint64_t load_3(const unsigned char *in)$/;"	f	file:
load_4	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^static uint64_t load_4(const unsigned char *in)$/;"	f	file:
load_4	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe_frombytes_sandy2x.c	/^static uint64_t load_4(const unsigned char *in)$/;"	f	file:
load_block	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^static void load_block(block *dst, const void *input) {$/;"	f	file:
load_hsm	lightningd/hsm/hsm.c	/^static u8 *load_hsm(struct conn_info *control)$/;"	f	file:
load_limb	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^load_limb(const u8 *in) {$/;"	f	file:
load_peer_anchor	daemon/db.c	/^static void load_peer_anchor(struct peer *peer)$/;"	f	file:
load_peer_anchor_input	daemon/db.c	/^static void load_peer_anchor_input(struct peer *peer)$/;"	f	file:
load_peer_closing	daemon/db.c	/^static void load_peer_closing(struct peer *peer)$/;"	f	file:
load_peer_commit_info	daemon/db.c	/^static void load_peer_commit_info(struct peer *peer)$/;"	f	file:
load_peer_htlcs	daemon/db.c	/^static void load_peer_htlcs(struct peer *peer)$/;"	f	file:
load_peer_secrets	daemon/db.c	/^static void load_peer_secrets(struct peer *peer)$/;"	f	file:
load_peer_shachain	daemon/db.c	/^static void load_peer_shachain(struct peer *peer)$/;"	f	file:
load_peer_visible_state	daemon/db.c	/^static void load_peer_visible_state(struct peer *peer)$/;"	f	file:
local	daemon/peer.h	/^	struct peer_visible_state local, remote;$/;"	m	struct:peer	typeref:struct:peer::peer_visible_state
local	test/test_protocol.c	/^	struct commit_info *local, *remote;$/;"	m	struct:peer	typeref:struct:peer::commit_info	file:
local	test/test_protocol.c	/^	struct commit_info local, remote, remote_prev;$/;"	m	struct:database	typeref:struct:database::commit_info	file:
localedir	libsodium/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	libsodium/dist-build/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	libsodium/msvc-scripts/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	libsodium/src/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	libsodium/src/libsodium/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	libsodium/src/libsodium/include/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	libsodium/test/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	libsodium/test/default/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	secp256k1/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localfeatures	wire/test/run-peer-wire.c	/^	u8 *localfeatures;$/;"	m	struct:msg_init	file:
localstatedir	libsodium/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	libsodium/dist-build/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	libsodium/msvc-scripts/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	libsodium/src/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	libsodium/src/libsodium/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	libsodium/src/libsodium/include/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	libsodium/test/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	libsodium/test/default/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	secp256k1/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
locate_tx	daemon/chaintopology.c	/^struct txlocator *locate_tx(const void *ctx, struct lightningd_state *dstate,$/;"	f
lock_time	bitcoin/tx.h	/^	u32 lock_time;$/;"	m	struct:bitcoin_tx
locktime	bitcoin/locktime.h	/^	u32 locktime;$/;"	m	struct:abs_locktime
locktime	bitcoin/locktime.h	/^	u32 locktime;$/;"	m	struct:rel_locktime
locktime	daemon/peer.h	/^	struct rel_locktime locktime;$/;"	m	struct:peer_visible_state	typeref:struct:peer_visible_state::rel_locktime
locktime__descriptor	lightning.pb-c.c	/^const ProtobufCMessageDescriptor locktime__descriptor =$/;"	v
locktime__field_descriptors	lightning.pb-c.c	/^static const ProtobufCFieldDescriptor locktime__field_descriptors[2] =$/;"	v	file:
locktime__field_indices_by_name	lightning.pb-c.c	/^static const unsigned locktime__field_indices_by_name[] = {$/;"	v	file:
locktime__free_unpacked	lightning.pb-c.c	/^void   locktime__free_unpacked$/;"	f
locktime__get_packed_size	lightning.pb-c.c	/^size_t locktime__get_packed_size$/;"	f
locktime__init	lightning.pb-c.c	/^void   locktime__init$/;"	f
locktime__number_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange locktime__number_ranges[1 + 1] =$/;"	v	file:
locktime__pack	lightning.pb-c.c	/^size_t locktime__pack$/;"	f
locktime__pack_to_buffer	lightning.pb-c.c	/^size_t locktime__pack_to_buffer$/;"	f
locktime__unpack	lightning.pb-c.c	/^       locktime__unpack$/;"	f
locktime_blocks	daemon/lightningd.h	/^	u32 locktime_blocks;$/;"	m	struct:config
locktime_case	lightning.pb-c.h	/^  Locktime__LocktimeCase locktime_case;$/;"	m	struct:_Locktime
locktime_max	daemon/lightningd.h	/^	u32 locktime_max;$/;"	m	struct:config
log	daemon/cryptopkt.c	/^	struct log *log;$/;"	m	struct:key_negotiate	typeref:struct:key_negotiate::log	file:
log	daemon/jsonrpc.h	/^	struct log *log;$/;"	m	struct:json_connection	typeref:struct:json_connection::log
log	daemon/log.c	/^	char *log;$/;"	m	struct:log_entry	file:
log	daemon/log.c	/^	struct list_head log;$/;"	m	struct:log_book	typeref:struct:log_book::list_head	file:
log	daemon/log.c	/^struct log {$/;"	s	file:
log	daemon/peer.h	/^	struct log *log;$/;"	m	struct:peer	typeref:struct:peer::log
log	irc.h	/^	struct log *log;$/;"	m	struct:ircstate	typeref:struct:ircstate::log
log	lightningd/lightningd.h	/^	struct log *log;$/;"	m	struct:lightningd	typeref:struct:lightningd::log
log	lightningd/peer_control.h	/^	struct log *log;$/;"	m	struct:peer	typeref:struct:peer::log
log	lightningd/subdaemon.h	/^	struct log *log;$/;"	m	struct:subdaemon	typeref:struct:subdaemon::log
log_	daemon/log.c	/^void log_(struct log *log, enum log_level level, const char *fmt, ...)$/;"	f
log_	daemon/test/run-maxfee.c	/^void log_(struct log *log UNNEEDED, enum log_level level UNNEEDED, const char *fmt UNNEEDED, ...)$/;"	f
log_add	daemon/log.c	/^void log_add(struct log *log, const char *fmt, ...)$/;"	f
log_add_blob	daemon/log.h	51;"	d
log_add_struct	daemon/log.h	70;"	d
log_blob_	daemon/log.c	/^void log_blob_(struct log *log, int level, const char *fmt,$/;"	f
log_book	daemon/lightningd.h	/^	struct log_book *log_book;$/;"	m	struct:lightningd_state	typeref:struct:lightningd_state::log_book
log_book	daemon/log.c	/^struct log_book {$/;"	s	file:
log_book	lightningd/peer_control.h	/^	struct log_book *log_book;$/;"	m	struct:peer	typeref:struct:peer::log_book
log_broken	daemon/log.h	37;"	d
log_broken_blob	daemon/log.h	60;"	d
log_broken_struct	daemon/log.h	79;"	d
log_bufsize	daemon/log.c	/^static size_t log_bufsize(const struct log_entry *e)$/;"	f	file:
log_crash	daemon/log.c	/^static void log_crash(int sig)$/;"	f	file:
log_data	daemon/log.c	/^struct log_data {$/;"	s	file:
log_debug	daemon/log.h	34;"	d
log_debug_blob	daemon/log.h	54;"	d
log_debug_struct	daemon/log.h	73;"	d
log_default_print	daemon/log.c	/^static void log_default_print(const char *prefix,$/;"	f	file:
log_dump_to_file	daemon/log.c	/^void log_dump_to_file(int fd, const struct log_book *lr)$/;"	f
log_each_line	daemon/log.h	108;"	d
log_each_line_	daemon/log.c	/^void log_each_line_(const struct log_book *lr,$/;"	f
log_entry	daemon/log.c	/^struct log_entry {$/;"	s	file:
log_info	daemon/jsonrpc.c	/^struct log_info {$/;"	s	file:
log_info	daemon/log.h	35;"	d
log_info	lightningd/peer_control.c	/^struct log_info {$/;"	s	file:
log_info_blob	daemon/log.h	56;"	d
log_info_struct	daemon/log.h	75;"	d
log_init_time	daemon/log.c	/^const struct timeabs *log_init_time(const struct log_book *lr)$/;"	f
log_io	daemon/log.c	/^void log_io(struct log *log, bool in, const void *data, size_t len)$/;"	f
log_level	daemon/log.h	/^enum log_level {$/;"	g
log_levels	daemon/log.c	/^} log_levels[] = {$/;"	v	typeref:struct:__anon55	file:
log_max_mem	daemon/log.c	/^size_t log_max_mem(const struct log_book *lr)$/;"	f
log_one_line	daemon/log.c	/^static void log_one_line(unsigned int skipped,$/;"	f	file:
log_prefix	daemon/log.c	/^const char *log_prefix(const struct log *log)$/;"	f
log_struct_	daemon/log.c	/^void log_struct_(struct log *log, int level,$/;"	f
log_struct_check_	daemon/log.h	64;"	d
log_to_file	daemon/log.c	/^static void log_to_file(const char *prefix,$/;"	f	file:
log_to_json	daemon/jsonrpc.c	/^static void log_to_json(unsigned int skipped,$/;"	f	file:
log_to_json	lightningd/peer_control.c	/^static void log_to_json(unsigned int skipped,$/;"	f	file:
log_unusual	daemon/log.h	36;"	d
log_unusual_blob	daemon/log.h	58;"	d
log_unusual_struct	daemon/log.h	77;"	d
log_used	daemon/log.c	/^size_t log_used(const struct log_book *lr)$/;"	f
logf	daemon/lightningd.h	/^	FILE *logf;$/;"	m	struct:lightningd_state
logv	daemon/log.c	/^void logv(struct log *log, enum log_level level, const char *fmt, va_list ap)$/;"	f
long_and_short_table	ccan/ccan/opt/test/utils.c	/^struct opt_table long_and_short_table[] = {$/;"	v	typeref:struct:opt_table
long_table	ccan/ccan/opt/test/utils.c	/^struct opt_table long_table[] = {$/;"	v	typeref:struct:opt_table
lookup_and_write	daemon/dns.c	/^static void lookup_and_write(int fd, const char *name, const char *port)$/;"	f	file:
loop0	ccan/ccan/crypto/sha256/benchmarks/sha256_avx1.asm	/^loop0:$/;"	l
loop0	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^loop0:$/;"	l
loop0	ccan/ccan/crypto/sha256/benchmarks/sha256_sse4.asm	/^loop0:$/;"	l
loop1	ccan/ccan/crypto/sha256/benchmarks/sha256_avx1.asm	/^loop1:$/;"	l
loop1	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^loop1:$/;"	l
loop1	ccan/ccan/crypto/sha256/benchmarks/sha256_sse4.asm	/^loop1:$/;"	l
loop2	ccan/ccan/crypto/sha256/benchmarks/sha256_avx1.asm	/^loop2:$/;"	l
loop2	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^loop2:$/;"	l
loop2	ccan/ccan/crypto/sha256/benchmarks/sha256_sse4.asm	/^loop2:$/;"	l
loop3	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^loop3:$/;"	l
lots_of_types	ccan/ccan/alignof/test/run.c	/^struct lots_of_types$/;"	s	file:
lower_bits	ccan/ccan/isaac/isaac.c	/^static inline uint32_t lower_bits(uint32_t x)$/;"	f	file:
lower_bits	ccan/ccan/isaac/isaac64.c	/^static inline uint32_t lower_bits(uint64_t x)$/;"	f	file:
lr	daemon/log.c	/^	struct log_book *lr;$/;"	m	struct:log	typeref:struct:log::log_book	file:
lshift64_littleendian	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128.h	44;"	d
lshift64_littleendian	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128_aes128ctr.c	/^void lshift64_littleendian(int128 *r, const unsigned int n)$/;"	f
m	ccan/ccan/isaac/isaac.h	/^  uint32_t m[ISAAC_SZ];$/;"	m	struct:isaac_ctx
m	ccan/ccan/isaac/isaac64.h	/^  uint64_t m[ISAAC64_SZ];$/;"	m	struct:isaac64_ctx
m	libsodium/test/default/box.c	/^static const unsigned char m[163]$/;"	v	file:
m	libsodium/test/default/box2.c	/^static unsigned char m[163];$/;"	v	file:
m	libsodium/test/default/box_easy.c	/^static unsigned char m[131]$/;"	v	file:
m	libsodium/test/default/secretbox.c	/^static unsigned char m[163]$/;"	v	file:
m	libsodium/test/default/secretbox2.c	/^static unsigned char m[163];$/;"	v	file:
m	libsodium/test/default/secretbox7.c	/^static unsigned char m[10000];$/;"	v	file:
m	libsodium/test/default/secretbox8.c	/^static unsigned char m[10000];$/;"	v	file:
m	libsodium/test/default/secretbox_easy.c	/^static unsigned char m[131]$/;"	v	file:
m	libsodium/test/default/sign.c	/^    const char          *m;$/;"	m	struct:TestData_	file:
m	libsodium/test/default/stream4.c	/^static unsigned char m[163]$/;"	v	file:
m2	libsodium/test/default/secretbox7.c	/^static unsigned char m2[10000];$/;"	v	file:
m2	libsodium/test/default/secretbox8.c	/^static unsigned char m2[10000];$/;"	v	file:
m25	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S	/^m25: .quad 33554431, 33554431$/;"	l
m25	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	13;"	d
m26	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S	/^m26: .quad 67108863, 67108863$/;"	l
m26	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	14;"	d
m_cost	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint32_t m_cost;  \/* amount of memory requested (KB) *\/$/;"	m	struct:Argon2_Context
mac	daemon/sphinx.h	/^	u8 mac[20];$/;"	m	struct:onionpacket
mac_hex	libsodium/test/default/aead_aes256gcm.c	/^    const char *mac_hex;$/;"	m	struct:__anon62	file:
magnitude	secp256k1/src/field_10x26.h	/^    int magnitude;$/;"	m	struct:__anon17
magnitude	secp256k1/src/field_5x52.h	/^    int magnitude;$/;"	m	struct:__anon26
main	bitcoin/libbase58/clitool.c	/^int main(int argc, char **argv)$/;"	f
main	bitcoin/test/run-tx-encode.c	/^int main(void)$/;"	f
main	ccan/ccan/alignof/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/array_size/test/compile_fail-function-param.c	/^int main(void)$/;"	f
main	ccan/ccan/array_size/test/compile_fail.c	/^int main(int argc, char *argv[8])$/;"	f
main	ccan/ccan/array_size/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/asort/test/compile_fail-context-type.c	/^int main(int argc, char **argv)$/;"	f
main	ccan/ccan/asort/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/autodata/test/run-fools.c	/^int main(void)$/;"	f
main	ccan/ccan/autodata/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/breakpoint/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/build_assert/test/compile_fail-expr.c	/^int main(void)$/;"	f
main	ccan/ccan/build_assert/test/compile_fail.c	/^int main(void)$/;"	f
main	ccan/ccan/build_assert/test/compile_ok.c	/^int main(void)$/;"	f
main	ccan/ccan/build_assert/test/run-BUILD_ASSERT_OR_ZERO.c	/^int main(void)$/;"	f
main	ccan/ccan/cast/test/compile_fail-cast_const.c	/^int main(void)$/;"	f
main	ccan/ccan/cast/test/compile_fail-cast_const2.c	/^int main(void)$/;"	f
main	ccan/ccan/cast/test/compile_fail-cast_const3.c	/^int main(void)$/;"	f
main	ccan/ccan/cast/test/compile_fail-cast_signed-const.c	/^int main(void)$/;"	f
main	ccan/ccan/cast/test/compile_fail-cast_signed-sizesame.c	/^int main(void)$/;"	f
main	ccan/ccan/cast/test/compile_fail-cast_signed.c	/^int main(void)$/;"	f
main	ccan/ccan/cast/test/compile_fail-cast_static-2.c	/^int main(void)$/;"	f
main	ccan/ccan/cast/test/compile_fail-cast_static-3.c	/^int main(void)$/;"	f
main	ccan/ccan/cast/test/compile_fail-cast_static.c	/^int main(void)$/;"	f
main	ccan/ccan/cast/test/compile_ok-cast_void.c	/^int main(void)$/;"	f
main	ccan/ccan/cast/test/compile_ok-static.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/cdump/test/run-CDUMP.c	/^int main(void)$/;"	f
main	ccan/ccan/cdump/test/run-arraysize.c	/^int main(void)$/;"	f
main	ccan/ccan/cdump/test/run-attributes.c	/^int main(void)$/;"	f
main	ccan/ccan/cdump/test/run-enum-comma.c	/^int main(void)$/;"	f
main	ccan/ccan/cdump/test/run-forward-decl.c	/^int main(void)$/;"	f
main	ccan/ccan/cdump/test/run-multiline.c	/^int main(void)$/;"	f
main	ccan/ccan/cdump/test/run-qualifiers.c	/^int main(void)$/;"	f
main	ccan/ccan/cdump/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/cdump/tools/cdump-enumstr.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/check_type/test/compile_fail-check_type.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/check_type/test/compile_fail-check_type_unsigned.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/check_type/test/compile_fail-check_types_match.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/check_type/test/run.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/compiler/test/compile_fail-printf.c	/^int main(void)$/;"	f
main	ccan/ccan/compiler/test/run-is_compile_constant.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/container_of/test/compile_fail-bad-type.c	/^int main(void)$/;"	f
main	ccan/ccan/container_of/test/compile_fail-types.c	/^int main(void)$/;"	f
main	ccan/ccan/container_of/test/compile_fail-var-types.c	/^int main(void)$/;"	f
main	ccan/ccan/container_of/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/cppmagic/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/crypto/hkdf_sha256/test/api-rfc5869.c	/^int main(void)$/;"	f
main	ccan/ccan/crypto/hmac_sha256/test/api-rfc4231.c	/^int main(void)$/;"	f
main	ccan/ccan/crypto/ripemd160/test/run-lotsa-data.c	/^int main(void)$/;"	f
main	ccan/ccan/crypto/ripemd160/test/run-test-vectors.c	/^int main(void)$/;"	f
main	ccan/ccan/crypto/ripemd160/test/run-types.c	/^int main(void)$/;"	f
main	ccan/ccan/crypto/sha256/benchmarks/double-sha-bench.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/crypto/sha256/test/run-33-bit-test.c	/^int main(void)$/;"	f
main	ccan/ccan/crypto/sha256/test/run-lotsa-data.c	/^int main(void)$/;"	f
main	ccan/ccan/crypto/sha256/test/run-test-vectors.c	/^int main(void)$/;"	f
main	ccan/ccan/crypto/sha256/test/run-types.c	/^int main(void)$/;"	f
main	ccan/ccan/crypto/shachain/test/run-8bit.c	/^int main(void)$/;"	f
main	ccan/ccan/crypto/shachain/test/run-badhash.c	/^int main(void)$/;"	f
main	ccan/ccan/crypto/shachain/test/run-can_derive.c	/^int main(void)$/;"	f
main	ccan/ccan/crypto/shachain/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/crypto/shachain/tools/shachain48.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/crypto/siphash24/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/endian/test/compile_ok-constant.c	/^int main(void)$/;"	f
main	ccan/ccan/endian/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/err/test/run.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/fdpass/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/htable/test/run-copy.c	/^int main(void)$/;"	f
main	ccan/ccan/htable/test/run-size.c	/^int main(void)$/;"	f
main	ccan/ccan/htable/test/run-type-int.c	/^int main(void)$/;"	f
main	ccan/ccan/htable/test/run-type.c	/^int main(void)$/;"	f
main	ccan/ccan/htable/test/run-zero-hash-first-entry.c	/^int main(void)$/;"	f
main	ccan/ccan/htable/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/htable/tools/hsearchspeed.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/htable/tools/speed.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/htable/tools/stringspeed.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/ilog/test/run-out-of-line.c	/^int main(void){$/;"	f
main	ccan/ccan/ilog/test/run.c	/^int main(void){$/;"	f
main	ccan/ccan/intmap/test/run-order-smallsize.c	/^int main(void)$/;"	f
main	ccan/ccan/intmap/test/run-order.c	/^int main(void)$/;"	f
main	ccan/ccan/intmap/test/run-signed-int.c	/^int main(void)$/;"	f
main	ccan/ccan/intmap/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/io/benchmarks/run-different-speed.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/io/benchmarks/run-length-prefix.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/io/benchmarks/run-loop.c	/^int main(void)$/;"	f
main	ccan/ccan/io/fdpass/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/io/test/run-01-start-finish.c	/^int main(void)$/;"	f
main	ccan/ccan/io/test/run-02-read.c	/^int main(void)$/;"	f
main	ccan/ccan/io/test/run-03-readpartial.c	/^int main(void)$/;"	f
main	ccan/ccan/io/test/run-04-writepartial.c	/^int main(void)$/;"	f
main	ccan/ccan/io/test/run-05-write.c	/^int main(void)$/;"	f
main	ccan/ccan/io/test/run-06-idle.c	/^int main(void)$/;"	f
main	ccan/ccan/io/test/run-07-break.c	/^int main(void)$/;"	f
main	ccan/ccan/io/test/run-08-hangup-on-idle.c	/^int main(void)$/;"	f
main	ccan/ccan/io/test/run-08-read-after-hangup.c	/^int main(void)$/;"	f
main	ccan/ccan/io/test/run-09-connect.c	/^int main(void)$/;"	f
main	ccan/ccan/io/test/run-10-many.c	/^int main(void)$/;"	f
main	ccan/ccan/io/test/run-12-bidir.c	/^int main(void)$/;"	f
main	ccan/ccan/io/test/run-13-all-idle.c	/^int main(void)$/;"	f
main	ccan/ccan/io/test/run-14-duplex-both-read.c	/^int main(void)$/;"	f
main	ccan/ccan/io/test/run-15-timeout.c	/^int main(void)$/;"	f
main	ccan/ccan/io/test/run-16-duplex-test.c	/^int main(void)$/;"	f
main	ccan/ccan/io/test/run-17-homemade-io.c	/^int main(void)$/;"	f
main	ccan/ccan/io/test/run-18-errno.c	/^int main(void)$/;"	f
main	ccan/ccan/io/test/run-19-always.c	/^int main(void)$/;"	f
main	ccan/ccan/io/test/run-20-io_time_override.c	/^int main(void)$/;"	f
main	ccan/ccan/io/test/run-21-io_close_taken_fd.c	/^int main(void)$/;"	f
main	ccan/ccan/io/test/run-22-POLLHUP-on-listening-socket.c	/^int main(void)$/;"	f
main	ccan/ccan/isaac/test/run.c	/^int main(void){$/;"	f
main	ccan/ccan/isaac/test/run64.c	/^int main(void){$/;"	f
main	ccan/ccan/likely/test/run-debug.c	/^int main(void)$/;"	f
main	ccan/ccan/likely/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/list/test/compile_ok-constant.c	/^int main(void)$/;"	f
main	ccan/ccan/list/test/run-CCAN_LIST_DEBUG.c	/^int main(void)$/;"	f
main	ccan/ccan/list/test/run-check-corrupt.c	/^int main(void)$/;"	f
main	ccan/ccan/list/test/run-check-nonconst.c	/^int main(void)$/;"	f
main	ccan/ccan/list/test/run-list_del_from-assert.c	/^int main(void)$/;"	f
main	ccan/ccan/list/test/run-list_prev-list_next.c	/^int main(void)$/;"	f
main	ccan/ccan/list/test/run-prepend_list.c	/^int main(void)$/;"	f
main	ccan/ccan/list/test/run-single-eval.c	/^int main(void)$/;"	f
main	ccan/ccan/list/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/mem/bench/speed.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/mem/test/api-memcheck.c	/^int main(void)$/;"	f
main	ccan/ccan/mem/test/api.c	/^int main(void)$/;"	f
main	ccan/ccan/mem/test/compile_fail-memcheck.c	/^int main(void)$/;"	f
main	ccan/ccan/noerr/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/opt/test/compile_ok-const-arg.c	/^int main(void)$/;"	f
main	ccan/ccan/opt/test/run-add_desc.c	/^int main(void)$/;"	f
main	ccan/ccan/opt/test/run-checkopt.c	/^int main(void)$/;"	f
main	ccan/ccan/opt/test/run-consume_words.c	/^int main(void)$/;"	f
main	ccan/ccan/opt/test/run-correct-reporting.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/opt/test/run-early.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/opt/test/run-helpers.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/opt/test/run-iter.c	/^int main(void)$/;"	f
main	ccan/ccan/opt/test/run-no-options.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/opt/test/run-set_alloc.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/opt/test/run-usage.c	/^int main(void)$/;"	f
main	ccan/ccan/opt/test/run.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/order/test/api.c	/^int main(void)$/;"	f
main	ccan/ccan/order/test/compile_fail_1.c	/^int main(void)$/;"	f
main	ccan/ccan/order/test/compile_fail_2.c	/^int main(void)$/;"	f
main	ccan/ccan/order/test/compile_ok.c	/^int main(void)$/;"	f
main	ccan/ccan/order/test/run-fancy.c	/^int main(void)$/;"	f
main	ccan/ccan/pipecmd/test/run-fdleak.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/pipecmd/test/run.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/ptr_valid/test/run-string.c	/^int main(void)$/;"	f
main	ccan/ccan/ptr_valid/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/ptrint/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/read_write_all/test/run-read_all.c	/^int main(void)$/;"	f
main	ccan/ccan/read_write_all/test/run-write_all.c	/^int main(void)$/;"	f
main	ccan/ccan/short_types/test/run-endian.c	/^int main(void)$/;"	f
main	ccan/ccan/short_types/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/str/hex/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/str/test/compile_fail-STR_MAX_CHARS.c	/^int main(void)$/;"	f
main	ccan/ccan/str/test/compile_fail-isalnum.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/str/test/compile_fail-isalpha.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/str/test/compile_fail-isascii.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/str/test/compile_fail-isblank.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/str/test/compile_fail-iscntrl.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/str/test/compile_fail-isdigit.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/str/test/compile_fail-islower.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/str/test/compile_fail-isprint.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/str/test/compile_fail-ispunct.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/str/test/compile_fail-isspace.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/str/test/compile_fail-isupper.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/str/test/compile_fail-isxdigit.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/str/test/compile_fail-strchr.c	/^int main(void)$/;"	f
main	ccan/ccan/str/test/compile_fail-strrchr.c	/^int main(void)$/;"	f
main	ccan/ccan/str/test/compile_fail-strstr.c	/^int main(void)$/;"	f
main	ccan/ccan/str/test/compile_ok-STR_MAX_CHARS-static.c	/^int main(void)$/;"	f
main	ccan/ccan/str/test/run-STR_MAX_CHARS.c	/^int main(void)$/;"	f
main	ccan/ccan/str/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/strmap/test/run-iterate-const.c	/^int main(void)$/;"	f
main	ccan/ccan/strmap/test/run-order.c	/^int main(void)$/;"	f
main	ccan/ccan/strmap/test/run-prefix.c	/^int main(void)$/;"	f
main	ccan/ccan/strmap/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/structeq/test/compile_fail-different.c	/^int main(void)$/;"	f
main	ccan/ccan/structeq/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/take/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/benchmark/samba-allocs.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/tal/benchmark/speed.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/tal/grab_file/test/run-grab.c	/^main(void)$/;"	f
main	ccan/ccan/tal/path/test/run-basename.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/path/test/run-canon.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/path/test/run-cwd.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/path/test/run-dirname.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/path/test/run-ext_off.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/path/test/run-is_abs.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/path/test/run-is_dir.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/path/test/run-is_file.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/path/test/run-join.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/path/test/run-pushd.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/path/test/run-readlink.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/path/test/run-rel.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/path/test/run-simplify.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/path/test/run-split.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/str/test/run-fmt-terminate.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/str/test/run-string.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/str/test/run-strndup.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/str/test/run-strreg.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/str/test/run-take.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/str/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/test/run-allocfail.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/test/run-array.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/test/run-count.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/test/run-destructor.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/test/run-destructor2.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/test/run-expand.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/test/run-free.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/test/run-groups-grow.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/test/run-iter.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/test/run-named-debug.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/test/run-named-nolabels.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/test/run-named.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/test/run-notifier.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/test/run-overflow.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/test/run-resizez.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/test/run-steal.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/test/run-take.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/test/run-test-backend.c	/^int main(void)$/;"	f
main	ccan/ccan/tal/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/tcon/test/compile_fail-container1.c	/^int main(void)$/;"	f
main	ccan/ccan/tcon/test/compile_fail-container1w.c	/^int main(void)$/;"	f
main	ccan/ccan/tcon/test/compile_fail-container2.c	/^int main(void)$/;"	f
main	ccan/ccan/tcon/test/compile_fail-container2w.c	/^int main(void)$/;"	f
main	ccan/ccan/tcon/test/compile_fail-container3.c	/^int main(void)$/;"	f
main	ccan/ccan/tcon/test/compile_fail-container3w.c	/^int main(void)$/;"	f
main	ccan/ccan/tcon/test/compile_fail-container4.c	/^int main(void)$/;"	f
main	ccan/ccan/tcon/test/compile_fail-container4w.c	/^int main(void)$/;"	f
main	ccan/ccan/tcon/test/compile_fail-tcon_cast.c	/^int main(void)$/;"	f
main	ccan/ccan/tcon/test/compile_fail-tcon_cast_wrap.c	/^int main(void)$/;"	f
main	ccan/ccan/tcon/test/compile_fail-wrap.c	/^int main(void)$/;"	f
main	ccan/ccan/tcon/test/compile_fail.c	/^int main(void)$/;"	f
main	ccan/ccan/tcon/test/compile_ok-container.c	/^int main(void)$/;"	f
main	ccan/ccan/tcon/test/compile_ok-sizeof.c	/^int main(void)$/;"	f
main	ccan/ccan/tcon/test/compile_ok-value.c	/^int main(void)$/;"	f
main	ccan/ccan/tcon/test/compile_ok-void.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/tcon/test/compile_ok.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/tcon/test/run-container.c	/^int main(void)$/;"	f
main	ccan/ccan/tcon/test/run-wrap.c	/^int main(void)$/;"	f
main	ccan/ccan/time/test/run-check.c	/^int main(void)$/;"	f
main	ccan/ccan/time/test/run-monotonic.c	/^int main(void)$/;"	f
main	ccan/ccan/time/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/timer/benchmarks/benchmark.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/timer/benchmarks/expected-usage.c	/^int main(int argc, char *argv[])$/;"	f
main	ccan/ccan/timer/test/run-add.c	/^int main(void)$/;"	f
main	ccan/ccan/timer/test/run-corrupt.c	/^int main(void)$/;"	f
main	ccan/ccan/timer/test/run-corrupt2.c	/^int main(void)$/;"	f
main	ccan/ccan/timer/test/run-expiry.c	/^int main(void)$/;"	f
main	ccan/ccan/timer/test/run-ff.c	/^int main(void)$/;"	f
main	ccan/ccan/timer/test/run-original-corrupt.c	/^int main(void)$/;"	f
main	ccan/ccan/timer/test/run.c	/^int main(void)$/;"	f
main	ccan/ccan/typesafe_cb/test/compile_fail-cast_if_type-promotable.c	/^int main(void)$/;"	f
main	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb-int.c	/^int main(void)$/;"	f
main	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb.c	/^int main(void)$/;"	f
main	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb_cast-multi.c	/^int main(void)$/;"	f
main	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb_cast.c	/^int main(void)$/;"	f
main	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb_postargs.c	/^int main(void)$/;"	f
main	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb_preargs.c	/^int main(void)$/;"	f
main	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb-NULL.c	/^int main(void)$/;"	f
main	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb-undefined.c	/^int main(void)$/;"	f
main	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb-vars.c	/^int main(void)$/;"	f
main	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb_cast.c	/^int main(void)$/;"	f
main	ccan/ccan/typesafe_cb/test/run.c	/^int main(void)$/;"	f
main	ccan/tools/configurator/configurator.c	/^int main(int argc, const char *argv[])$/;"	f
main	check-bolt.c	/^int main(int argc, char *argv[])$/;"	f
main	daemon/jsmn/example/jsondump.c	/^int main() {$/;"	f
main	daemon/jsmn/example/simple.c	/^int main() {$/;"	f
main	daemon/jsmn/jsmn_test.c	/^int main() {$/;"	f
main	daemon/lightning-cli.c	/^int main(int argc, char *argv[])$/;"	f
main	daemon/lightningd.c	/^int main(int argc, char *argv[])$/;"	f
main	daemon/test/run-maxfee.c	/^int main(void)$/;"	f
main	libsodium/build-aux/config.guess	/^		main()$/;"	f
main	libsodium/build-aux/config.guess	/^	main ()$/;"	f
main	libsodium/examples/auth.c	/^main(void)$/;"	f
main	libsodium/examples/box.c	/^main(void)$/;"	f
main	libsodium/examples/box_detached.c	/^main(void)$/;"	f
main	libsodium/examples/generichash.c	/^main(void)$/;"	f
main	libsodium/examples/generichash_stream.c	/^main(void)$/;"	f
main	libsodium/examples/shorthash.c	/^main(void)$/;"	f
main	libsodium/examples/sign.c	/^main(void)$/;"	f
main	libsodium/test/default/aead_aes256gcm.c	/^main(void)$/;"	f
main	libsodium/test/default/aead_chacha20poly1305.c	/^main(void)$/;"	f
main	libsodium/test/default/auth.c	/^int main(void)$/;"	f
main	libsodium/test/default/auth2.c	/^int main(void)$/;"	f
main	libsodium/test/default/auth3.c	/^int main(void)$/;"	f
main	libsodium/test/default/auth5.c	/^int main(void)$/;"	f
main	libsodium/test/default/auth6.c	/^int main(void)$/;"	f
main	libsodium/test/default/auth7.c	/^int main(void)$/;"	f
main	libsodium/test/default/box.c	/^int main(void)$/;"	f
main	libsodium/test/default/box2.c	/^int main(void)$/;"	f
main	libsodium/test/default/box7.c	/^int main(void)$/;"	f
main	libsodium/test/default/box8.c	/^int main(void)$/;"	f
main	libsodium/test/default/box_easy.c	/^int main(void)$/;"	f
main	libsodium/test/default/box_easy2.c	/^int main(void)$/;"	f
main	libsodium/test/default/box_seal.c	/^int main(void)$/;"	f
main	libsodium/test/default/box_seed.c	/^int main(void)$/;"	f
main	libsodium/test/default/chacha20.c	/^main(void)$/;"	f
main	libsodium/test/default/cmptest.h	/^int main(void)$/;"	f
main	libsodium/test/default/cmptest.h	85;"	d
main	libsodium/test/default/core1.c	/^int main(void)$/;"	f
main	libsodium/test/default/core2.c	/^int main(void)$/;"	f
main	libsodium/test/default/core3.c	/^int main(void)$/;"	f
main	libsodium/test/default/core4.c	/^int main(void)$/;"	f
main	libsodium/test/default/core5.c	/^int main(void)$/;"	f
main	libsodium/test/default/core6.c	/^int main(void)$/;"	f
main	libsodium/test/default/ed25519_convert.c	/^int main(void)$/;"	f
main	libsodium/test/default/generichash.c	/^main(void)$/;"	f
main	libsodium/test/default/generichash2.c	/^main(void)$/;"	f
main	libsodium/test/default/generichash3.c	/^main(void)$/;"	f
main	libsodium/test/default/hash.c	/^int main(void)$/;"	f
main	libsodium/test/default/hash3.c	/^int main(void)$/;"	f
main	libsodium/test/default/onetimeauth.c	/^int main(void)$/;"	f
main	libsodium/test/default/onetimeauth2.c	/^int main(void)$/;"	f
main	libsodium/test/default/onetimeauth7.c	/^int main(void)$/;"	f
main	libsodium/test/default/pwhash.c	/^int main(void)$/;"	f
main	libsodium/test/default/pwhash_scrypt.c	/^int main(void)$/;"	f
main	libsodium/test/default/pwhash_scrypt_ll.c	/^int main(void)$/;"	f
main	libsodium/test/default/randombytes.c	/^int main(void)$/;"	f
main	libsodium/test/default/scalarmult.c	/^int main(void)$/;"	f
main	libsodium/test/default/scalarmult2.c	/^int main(void)$/;"	f
main	libsodium/test/default/scalarmult5.c	/^int main(void)$/;"	f
main	libsodium/test/default/scalarmult6.c	/^int main(void)$/;"	f
main	libsodium/test/default/scalarmult7.c	/^int main(void)$/;"	f
main	libsodium/test/default/secretbox.c	/^int main(void)$/;"	f
main	libsodium/test/default/secretbox2.c	/^int main(void)$/;"	f
main	libsodium/test/default/secretbox7.c	/^int main(void)$/;"	f
main	libsodium/test/default/secretbox8.c	/^int main(void)$/;"	f
main	libsodium/test/default/secretbox_easy.c	/^int main(void)$/;"	f
main	libsodium/test/default/secretbox_easy2.c	/^int main(void)$/;"	f
main	libsodium/test/default/shorthash.c	/^int main(void)$/;"	f
main	libsodium/test/default/sign.c	/^int main(void)$/;"	f
main	libsodium/test/default/sodium_core.c	/^int main(void)$/;"	f
main	libsodium/test/default/sodium_utils.c	/^int main(void)$/;"	f
main	libsodium/test/default/sodium_utils2.c	/^int main(void)$/;"	f
main	libsodium/test/default/sodium_utils3.c	/^int main(void)$/;"	f
main	libsodium/test/default/sodium_version.c	/^int main(void)$/;"	f
main	libsodium/test/default/stream.c	/^int main(void)$/;"	f
main	libsodium/test/default/stream2.c	/^int main(void)$/;"	f
main	libsodium/test/default/stream3.c	/^int main(void)$/;"	f
main	libsodium/test/default/stream4.c	/^int main(void)$/;"	f
main	libsodium/test/default/verify1.c	/^int main(void)$/;"	f
main	lightningd/gossip/gossip.c	/^int main(int argc, char *argv[])$/;"	f
main	lightningd/handshake/handshake.c	/^int main(int argc, char *argv[])$/;"	f
main	lightningd/handshake/test/run-handshake.c	/^int main(void)$/;"	f
main	lightningd/hsm/hsm.c	/^int main(int argc, char *argv[])$/;"	f
main	lightningd/lightningd.c	/^int main(int argc, char *argv[])$/;"	f
main	lightningd/test/run-commit_tx.c	/^int main(void)$/;"	f
main	lightningd/test/run-cryptomsg.c	/^int main(void)$/;"	f
main	lightningd/test/run-funding_tx.c	/^int main(void)$/;"	f
main	lightningd/test/run-key_derive.c	/^int main(void)$/;"	f
main	secp256k1/build-aux/config.guess	/^		main()$/;"	f
main	secp256k1/build-aux/config.guess	/^	main ()$/;"	f
main	secp256k1/src/bench_ecdh.c	/^int main(void) {$/;"	f
main	secp256k1/src/bench_internal.c	/^int main(int argc, char **argv) {$/;"	f
main	secp256k1/src/bench_recover.c	/^int main(void) {$/;"	f
main	secp256k1/src/bench_schnorr_verify.c	/^int main(void) {$/;"	f
main	secp256k1/src/bench_sign.c	/^int main(void) {$/;"	f
main	secp256k1/src/bench_verify.c	/^int main(void) {$/;"	f
main	secp256k1/src/gen_context.c	/^int main(int argc, char **argv) {$/;"	f
main	secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void main(String[] args) throws AssertFailException{$/;"	m	class:NativeSecp256k1Test
main	secp256k1/src/tests.c	/^int main(int argc, char **argv) {$/;"	f
main	test/test_protocol.c	/^int main(int argc, char *argv[])$/;"	f
main	test/test_sphinx.c	/^int main(int argc, char **argv)$/;"	f
main	test/test_state_coverage.c	/^int main(int argc, char *argv[])$/;"	f
main	wire/test/run-peer-wire.c	/^int main(void)$/;"	f
mainnet_config	daemon/options.c	/^static const struct config mainnet_config = {$/;"	v	typeref:struct:config	file:
make_commit_tx	test/test_protocol.c	/^static struct commit_tx make_commit_tx(struct htlc **htlcs, int local_or_remote)$/;"	f	file:
make_dummy_depfile	libsodium/build-aux/depcomp	/^make_dummy_depfile ()$/;"	f
make_dummy_depfile	secp256k1/build-aux/depcomp	/^make_dummy_depfile ()$/;"	f
make_duplex	ccan/ccan/io/test/run-14-duplex-both-read.c	/^static struct io_plan *make_duplex(struct io_conn *conn, struct data *d)$/;"	f	file:
make_hval	ccan/ccan/htable/htable.c	/^static inline uintptr_t make_hval(const struct htable *ht,$/;"	f	file:
make_listen_fd	ccan/ccan/io/test/run-01-start-finish.c	/^static int make_listen_fd(const char *port, struct addrinfo **info)$/;"	f	file:
make_listen_fd	ccan/ccan/io/test/run-02-read.c	/^static int make_listen_fd(const char *port, struct addrinfo **info)$/;"	f	file:
make_listen_fd	ccan/ccan/io/test/run-03-readpartial.c	/^static int make_listen_fd(const char *port, struct addrinfo **info)$/;"	f	file:
make_listen_fd	ccan/ccan/io/test/run-04-writepartial.c	/^static int make_listen_fd(const char *port, struct addrinfo **info)$/;"	f	file:
make_listen_fd	ccan/ccan/io/test/run-05-write.c	/^static int make_listen_fd(const char *port, struct addrinfo **info)$/;"	f	file:
make_listen_fd	ccan/ccan/io/test/run-06-idle.c	/^static int make_listen_fd(const char *port, struct addrinfo **info)$/;"	f	file:
make_listen_fd	ccan/ccan/io/test/run-07-break.c	/^static int make_listen_fd(const char *port, struct addrinfo **info)$/;"	f	file:
make_listen_fd	ccan/ccan/io/test/run-09-connect.c	/^static int make_listen_fd(const char *port, struct addrinfo **info)$/;"	f	file:
make_listen_fd	ccan/ccan/io/test/run-12-bidir.c	/^static int make_listen_fd(const char *port, struct addrinfo **info)$/;"	f	file:
make_listen_fd	ccan/ccan/io/test/run-14-duplex-both-read.c	/^static int make_listen_fd(const char *port, struct addrinfo **info)$/;"	f	file:
make_listen_fd	ccan/ccan/io/test/run-15-timeout.c	/^static int make_listen_fd(const char *port, struct addrinfo **info)$/;"	f	file:
make_listen_fd	ccan/ccan/io/test/run-16-duplex-test.c	/^static int make_listen_fd(const char *port, struct addrinfo **info)$/;"	f	file:
make_listen_fd	ccan/ccan/io/test/run-17-homemade-io.c	/^static int make_listen_fd(const char *port, struct addrinfo **info)$/;"	f	file:
make_listen_fd	ccan/ccan/io/test/run-18-errno.c	/^static int make_listen_fd(const char *port, struct addrinfo **info)$/;"	f	file:
make_listen_fd	ccan/ccan/io/test/run-19-always.c	/^static int make_listen_fd(const char *port, struct addrinfo **info)$/;"	f	file:
make_listen_fd	ccan/ccan/io/test/run-20-io_time_override.c	/^static int make_listen_fd(const char *port, struct addrinfo **info)$/;"	f	file:
make_listen_fd	ccan/ccan/io/test/run-21-io_close_taken_fd.c	/^static int make_listen_fd(const char *port, struct addrinfo **info)$/;"	f	file:
make_listen_fd	ccan/ccan/io/test/run-22-POLLHUP-on-listening-socket.c	/^static int make_listen_fd(const char *port, struct addrinfo **info)$/;"	f	file:
make_listen_fd	daemon/peer.c	/^static int make_listen_fd(struct lightningd_state *dstate,$/;"	f	file:
make_listen_fd	lightningd/peer_control.c	/^static int make_listen_fd(struct lightningd *ld,$/;"	f	file:
make_pkt	daemon/packets.c	/^static Pkt *make_pkt(const tal_t *ctx, Pkt__PktCase type, const void *msg)$/;"	f	file:
make_prototal	protobuf_convert.c	/^struct ProtobufCAllocator *make_prototal(const tal_t *ctx)$/;"	f
malloc	ccan/ccan/opt/test/run-set_alloc.c	17;"	d	file:
malloc	ccan/ccan/opt/test/run-set_alloc.c	27;"	d	file:
malloc	ccan/ccan/tal/test/run-test-backend.c	25;"	d	file:
mandir	libsodium/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	libsodium/dist-build/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	libsodium/msvc-scripts/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	libsodium/src/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	libsodium/src/libsodium/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	libsodium/src/libsodium/include/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	libsodium/test/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	libsodium/test/default/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	secp256k1/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
map_inputs	test/test_state_coverage.c	/^static enum state_input **map_inputs(void)$/;"	f	file:
map_onchain_outputs	daemon/peer.c	/^static bool map_onchain_outputs(struct peer *peer,$/;"	f	file:
mapping_inputs	test/test_state_coverage.c	/^static enum state_input *mapping_inputs;$/;"	v	typeref:enum:state_input	file:
maps	ccan/ccan/ptr_valid/ptr_valid.h	/^	struct ptr_valid_map *maps;$/;"	m	struct:ptr_valid_batch	typeref:struct:ptr_valid_batch::ptr_valid_map
match	daemon/opt_time.c	/^static bool match(const char *str, const char *abbrev, const char *full)$/;"	f	file:
max	ccan/ccan/htable/htable.h	/^	size_t elems, deleted, max, max_with_deleted;$/;"	m	struct:htable
max_accepted_htlcs	lightningd/channel_config.h	/^	u16 max_accepted_htlcs;$/;"	m	struct:channel_config
max_accepted_htlcs	wire/test/run-peer-wire.c	/^	u16 max_accepted_htlcs;$/;"	m	struct:msg_accept_channel	file:
max_accepted_htlcs	wire/test/run-peer-wire.c	/^	u16 max_accepted_htlcs;$/;"	m	struct:msg_open_channel	file:
max_fds	ccan/ccan/io/poll.c	/^static size_t num_fds = 0, max_fds = 0, num_waiting = 0;$/;"	v	file:
max_htlc_expiry	daemon/lightningd.h	/^	u32 min_htlc_expiry, max_htlc_expiry;$/;"	m	struct:config
max_htlc_value_in_flight_msat	lightningd/channel_config.h	/^	u64 max_htlc_value_in_flight_msat;$/;"	m	struct:channel_config
max_htlc_value_in_flight_msat	wire/test/run-peer-wire.c	/^	u64 max_htlc_value_in_flight_msat;$/;"	m	struct:msg_accept_channel	file:
max_htlc_value_in_flight_msat	wire/test/run-peer-wire.c	/^	u64 max_htlc_value_in_flight_msat;$/;"	m	struct:msg_open_channel	file:
max_mem	daemon/log.c	/^	size_t max_mem;$/;"	m	struct:log_book	file:
max_taken	ccan/ccan/take/take.c	/^static size_t max_taken, num_taken;$/;"	v	file:
max_with_deleted	ccan/ccan/htable/htable.h	/^	size_t elems, deleted, max, max_with_deleted;$/;"	m	struct:htable
maybe_rotate_key	lightningd/cryptomsg.c	/^static void maybe_rotate_key(u64 *n, struct sha256 *k, struct sha256 *ck)$/;"	f	file:
measure_tx_cost	bitcoin/tx.c	/^size_t measure_tx_cost(const struct bitcoin_tx *tx)$/;"	f
mediantime	daemon/bitcoind.c	/^	u32 mediantime;$/;"	m	struct:normalizing	file:
mediantime	daemon/chaintopology.c	/^	u32 mediantime;$/;"	m	struct:block	file:
mem_used	daemon/log.c	/^	size_t mem_used;$/;"	m	struct:log_book	file:
members	ccan/ccan/cdump/cdump.h	/^		struct cdump_member *members;$/;"	m	union:cdump_type::__anon6	typeref:struct:cdump_type::__anon6::cdump_member
memcchr	ccan/ccan/mem/mem.c	/^void *memcchr(void const *data, int c, size_t data_len)$/;"	f
memcheck	ccan/ccan/mem/mem.h	275;"	d
memcheck	ccan/ccan/mem/mem.h	277;"	d
memcheck_	ccan/ccan/mem/mem.h	/^static inline void *memcheck_(const void *data, size_t len)$/;"	f
memends	ccan/ccan/mem/mem.h	/^static inline bool memends(const void *s, size_t s_len, const void *suffix, size_t suffix_len)$/;"	f
memends_str	ccan/ccan/mem/mem.h	/^static inline bool memends_str(const void *a, size_t al, const char *s)$/;"	f
memeq	ccan/ccan/mem/mem.h	/^static inline bool memeq(const void *a, size_t al, const void *b, size_t bl)$/;"	f
memeqstr	ccan/ccan/mem/mem.h	/^static inline bool memeqstr(const void *data, size_t length, const char *string)$/;"	f
memeqzero	ccan/ccan/mem/mem.c	/^bool memeqzero(const void *data, size_t length)$/;"	f
memmem	ccan/ccan/mem/mem.c	/^void *memmem(const void *haystack, size_t haystacklen,$/;"	f
memory	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    block *memory;$/;"	m	struct:block_region_
memory_blocks	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    uint32_t memory_blocks; \/* Number of blocks in memory *\/$/;"	m	struct:Argon2_instance_t
memoverlaps	ccan/ccan/mem/mem.h	/^static inline bool memoverlaps(const void *a_, size_t al,$/;"	f
mempbrk	ccan/ccan/mem/mem.h	/^static inline char *mempbrk(const void *data, size_t len, const char *accept)$/;"	f
mempbrkm	ccan/ccan/mem/mem.c	/^void *mempbrkm(const void *data_, size_t len, const void *accept_, size_t accept_len)$/;"	f
memrchr	ccan/ccan/mem/mem.c	/^void *memrchr(const void *s, int c, size_t n)$/;"	f
memstarts	ccan/ccan/mem/mem.h	/^static inline bool memstarts(void const *data, size_t data_len,$/;"	f
memstarts_str	ccan/ccan/mem/mem.h	/^static inline bool memstarts_str(const void *a, size_t al, const char *s)$/;"	f
memswap	ccan/ccan/mem/mem.c	/^void memswap(void *a, void *b, size_t n)$/;"	f
memtaint	ccan/ccan/mem/mem.c	/^void memtaint(void *data, size_t len)$/;"	f
merkle_hash	bitcoin/block.h	/^	struct sha256_double merkle_hash;$/;"	m	struct:bitcoin_block_hdr	typeref:struct:bitcoin_block_hdr::sha256_double
message_hex	libsodium/test/default/aead_aes256gcm.c	/^    const char *message_hex;$/;"	m	struct:__anon62	file:
messages	tools/generate-wire.py	/^messages = []$/;"	v
min	ccan/ccan/asort/asort.c	211;"	d	file:
min_blocks	daemon/routing.h	/^	u32 min_blocks;$/;"	m	struct:node_connection
min_depth	daemon/peer.h	/^		unsigned int min_depth;$/;"	m	struct:peer::__anon47
min_depth	lightning.pb-c.h	/^  uint32_t min_depth;$/;"	m	struct:_OpenChannel
min_htlc_expiry	daemon/lightningd.h	/^	u32 min_htlc_expiry, max_htlc_expiry;$/;"	m	struct:config
min_index	ccan/ccan/crypto/shachain/shachain.h	/^	shachain_index_t min_index;$/;"	m	struct:shachain
mindepth	daemon/peer.h	/^	unsigned int mindepth;$/;"	m	struct:peer_visible_state
minimum_depth	lightningd/channel_config.h	/^	u32 minimum_depth;$/;"	m	struct:channel_config
minimum_depth	wire/test/run-peer-wire.c	/^	u32 minimum_depth;$/;"	m	struct:msg_accept_channel	file:
mixcolumns	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common.h	484;"	d
mk_bitcoin_close	daemon/peer.c	/^static const struct bitcoin_tx *mk_bitcoin_close(const tal_t *ctx,$/;"	f	file:
mkdir_p	libsodium/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	libsodium/dist-build/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	libsodium/msvc-scripts/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	libsodium/src/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	libsodium/src/libsodium/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	libsodium/src/libsodium/include/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	libsodium/test/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	libsodium/test/default/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	secp256k1/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkinstalldirs	libsodium/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	libsodium/dist-build/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	libsodium/msvc-scripts/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	libsodium/src/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	libsodium/src/libsodium/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	libsodium/src/libsodium/include/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	libsodium/test/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	libsodium/test/default/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	secp256k1/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov  %r8,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov  %rax,%r10$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov  %rax,%r12$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov  %rax,%r14$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov  %rax,%r8$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov  %rax,%rbx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov  %rdx,%r10$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov  %rdx,%r11$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov  %rdx,%r13$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov  %rdx,%r15$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov  %rdx,%r9$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov  %rdx,%rax$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov  %rdx,%rbp$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov  %rdx,%rcx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov %rdi,%rax$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov %rsi,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov %rsp,%r11$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %r8,%rax$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %r9,%r10$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %r9,%r8$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %r9,%rax$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %rax,%r11$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %rax,%r13$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %rax,%r15$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %rax,%r9$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %rax,%rcx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %rcx,%rax$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %rdx,%r10$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %rdx,%r12$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %rdx,%r14$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %rdx,%rbp$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %rdx,%rbx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %rdx,%rsi$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov %rsp,%r11$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  $1,%r12$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  $3,%r11$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %r8,%r12$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %r8,%rcx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %r8,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %r9,%r12$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %r9,%rcx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %r9,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %rcx,%r12$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %rcx,%rax$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %rcx,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %rdx,%r12$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %rdx,%rax$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %rdx,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %rsi,%r12$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %rsi,%rcx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %rsi,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %rsi,%rsi$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov %rsp,%r11$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^mov  $255,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^mov  $64,%rax$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^mov  %r8,%r12$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^mov  %r9,%r13$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^mov  %rcx,%r11$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^mov  %rdx,%r10$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^mov %rsp,%r11$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^mov  $255,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^mov  $64,%rax$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^mov  %r8,%r12$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^mov  %r9,%r13$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^mov  %rcx,%r11$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^mov  %rdx,%r10$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^mov %rsp,%r11$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^mov  $0,%rax$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^mov  $1634760805,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^mov  $1797285236,%rax$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^mov  $20,%rcx$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^mov  $20,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^mov  $2036477234,%r8$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^mov  $857760878,%rcx$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^mov  %r9,%r10$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^mov  %r9,%rcx$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^mov  %rcx,%r10$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^mov  %rcx,%r8$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^mov  %rcx,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^mov  %rdi,%rdi$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^mov  %rdi,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^mov  %rdi,%rsi$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^mov  %rdx,%r9$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^mov  %rdx,%rcx$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^mov  %rdx,%rdi$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^mov  %rdx,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^mov  %rsi,%r9$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^mov  %rsi,%rsi$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^mov %rsi,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^mov %rsp,%r11$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %al,0(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %al,1(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %al,2(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %al,3(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %al,4(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %al,5(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %al,6(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %cl,12(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %cl,19(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %cl,25(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,10(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,11(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,13(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,14(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,15(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,16(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,17(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,18(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,20(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,21(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,22(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,23(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,24(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,26(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,27(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,28(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,29(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,30(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,7(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,8(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,9(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %sil,31(%rdi)$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movd   %xmm0,%rcx$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movd   %xmm1,%r8$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movd   %xmm10,%r8$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movd   %xmm11,%rcx$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movd   %xmm12,%rdx$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movd   %xmm13,%rdx$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movd   %xmm14,%rdx$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movd   %xmm15,%rdx$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movd   %xmm2,%r9$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movd   %xmm3,%r8$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movd   %xmm3,%rax$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movd   %xmm4,%r9$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movd   %xmm5,%r8$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movd   %xmm6,%r9$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movd   %xmm7,%rcx$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movd   %xmm8,%r9$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movd   %xmm9,%rcx$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm0,112(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm0,128(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm0,144(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm0,448(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm0,64(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm0,752(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm0,768(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm0,96(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm1,%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm1,0(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm1,128(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm1,16(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm1,32(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm1,448(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm1,464(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm1,48(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm1,480(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm1,512(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm1,528(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm1,80(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm10,160(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm10,176(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm10,192(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm10,208(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm10,224(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm10,240(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm10,256(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm10,272(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm10,288(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm10,304(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm10,320(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm10,336(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm10,352(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm10,368(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm10,384(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm10,400(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm10,416(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm10,432(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm10,80(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm11,448(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm13,0(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm13,32(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm13,48(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm13,64(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm14,112(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm14,16(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm14,80(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm14,96(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm2,0(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm2,16(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm2,32(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm2,48(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm2,480(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm2,496(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm2,64(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm2,96(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm3,112(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm3,16(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm3,32(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm3,464(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm3,496(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm3,528(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm3,560(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm3,592(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm3,608(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm3,624(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm3,688(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm4,128(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm4,544(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm4,576(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm4,592(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm4,80(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm5,144(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm5,512(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm5,544(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm5,560(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm5,624(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm5,80(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm5,96(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm6,48(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm6,608(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm6,64(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm6,640(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm6,656(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm6,96(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm7,112(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm7,576(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm7,640(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm7,656(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm7,688(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm8,112(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm8,448(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm8,672(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm8,704(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm8,720(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm9,672(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm9,704(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa %xmm9,736(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 0(%rsp),%xmm11$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 0(%rsp),%xmm3$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 112(%rsp),%xmm14$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 112(%rsp),%xmm5$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 112(%rsp),%xmm9$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 128(%rsp),%xmm14$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 128(%rsp),%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 144(%rsp),%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 144(%rsp),%xmm14$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 16(%rsp),%xmm13$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 16(%rsp),%xmm4$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 16(%rsp),%xmm9$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 32(%rsp),%xmm13$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 32(%rsp),%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 32(%rsp),%xmm3$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 448(%rsp),%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 448(%rsp),%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 448(%rsp),%xmm7$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 464(%rsp),%xmm5$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 464(%rsp),%xmm6$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 48(%rsp),%xmm13$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 48(%rsp),%xmm3$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 48(%rsp),%xmm4$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 480(%rsp),%xmm4$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 496(%rsp),%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 528(%rsp),%xmm8$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 544(%rsp),%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 544(%rsp),%xmm4$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 560(%rsp),%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 592(%rsp),%xmm4$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 608(%rsp),%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 608(%rsp),%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 64(%rsp),%xmm13$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 64(%rsp),%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 64(%rsp),%xmm3$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 640(%rsp),%xmm4$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 656(%rsp),%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 672(%rsp),%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 672(%rsp),%xmm14$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 688(%rsp),%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 80(%rsp),%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 80(%rsp),%xmm12$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 80(%rsp),%xmm4$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 80(%rsp),%xmm9$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 96(%rsp),%xmm14$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 96(%rsp),%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 96(%rsp),%xmm3$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa 96(%rsp),%xmm9$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa v0_0(%rip),%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqa v1_0(%rip),%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm0,112(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm0,128(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm0,144(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm0,16(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm0,160(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm0,208(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm0,32(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm0,464(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm0,48(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm0,480(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm0,64(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm0,96(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm1,%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm1,0(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm1,112(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm1,128(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm1,16(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm1,160(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm1,176(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm1,192(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm1,224(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm1,240(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm1,32(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm1,48(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm1,80(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm10,80(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm13,0(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm13,32(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm13,48(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm13,64(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm14,112(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm14,16(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm14,80(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm14,96(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm2,0(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm2,16(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm2,192(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm2,32(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm2,80(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm2,96(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm3,112(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm3,176(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm3,208(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm3,240(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm3,272(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm3,304(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm3,320(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm3,336(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm3,400(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm4,128(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm4,256(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm4,288(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm4,304(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm5,144(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm5,224(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm5,256(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm5,272(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm5,336(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm5,80(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm5,96(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm6,320(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm6,352(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm6,368(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm6,48(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm6,64(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm7,288(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm7,352(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm7,368(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm7,400(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm8,112(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm8,160(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm8,384(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm8,416(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm8,432(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm9,384(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm9,416(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa %xmm9,448(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 0(%rsp),%xmm11$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 0(%rsp),%xmm3$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 112(%rsp),%xmm14$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 112(%rsp),%xmm5$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 112(%rsp),%xmm9$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 128(%rsp),%xmm14$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 128(%rsp),%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 144(%rsp),%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 144(%rsp),%xmm14$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 16(%rsp),%xmm13$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 16(%rsp),%xmm4$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 16(%rsp),%xmm9$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 160(%rsp),%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 160(%rsp),%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 160(%rsp),%xmm7$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 176(%rsp),%xmm5$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 176(%rsp),%xmm6$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 192(%rsp),%xmm4$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 208(%rsp),%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 240(%rsp),%xmm8$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 256(%rsp),%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 256(%rsp),%xmm4$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 272(%rsp),%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 304(%rsp),%xmm4$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 32(%rsp),%xmm13$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 32(%rsp),%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 32(%rsp),%xmm3$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 320(%rsp),%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 320(%rsp),%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 352(%rsp),%xmm4$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 368(%rsp),%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 384(%rsp),%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 384(%rsp),%xmm14$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 400(%rsp),%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 48(%rsp),%xmm13$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 48(%rsp),%xmm3$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 48(%rsp),%xmm4$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 64(%rsp),%xmm13$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 64(%rsp),%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 64(%rsp),%xmm3$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 80(%rsp),%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 80(%rsp),%xmm12$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 80(%rsp),%xmm4$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 80(%rsp),%xmm9$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 96(%rsp),%xmm14$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 96(%rsp),%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 96(%rsp),%xmm3$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa 96(%rsp),%xmm9$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa v0_0(%rip),%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa v1_0(%rip),%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqa v9_0(%rip),%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm0,%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm0,%xmm12$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm0,%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm0,%xmm5$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm0,176(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm0,240(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm0,288(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm0,336(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm0,384(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm0,400(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm1,%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm1,%xmm12$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm1,%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm1,%xmm4$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm1,128(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm1,192(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm1,256(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm1,304(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm1,384(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm10,%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm10,%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm11,%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm11,%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm12,%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm12,384(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm12,400(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm13,%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm13,%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm14,%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm15,%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm15,%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm2,%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm2,%xmm12$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm2,%xmm5$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm2,144(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm2,208(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm2,272(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm2,320(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm2,400(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm3,%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm3,%xmm4$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm3,160(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm3,224(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm4,%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm4,%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm4,%xmm6$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm5,%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm5,%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm5,%xmm6$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm6,%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm7,%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm8,%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm8,%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm9,%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa %xmm9,%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 112(%rsp),%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 128(%rsp),%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 144(%rsp),%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 160(%rsp),%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 176(%rsp),%xmm12$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 192(%rsp),%xmm5$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 208(%rsp),%xmm6$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 224(%rsp),%xmm13$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 240(%rsp),%xmm7$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 256(%rsp),%xmm8$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 272(%rsp),%xmm9$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 288(%rsp),%xmm10$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 304(%rsp),%xmm14$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 320(%rsp),%xmm3$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 336(%rsp),%xmm4$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 352(%rsp),%xmm15$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 368(%rsp),%xmm11$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 384(%rsp),%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 384(%rsp),%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 384(%rsp),%xmm12$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 400(%rsp),%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 400(%rsp),%xmm12$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 400(%rsp),%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 64(%rsp),%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 64(%rsp),%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 80(%rsp),%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 80(%rsp),%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 96(%rsp),%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movdqa 96(%rsp),%xmm3$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqu   %xmm0,80(%rdi)$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqu   %xmm1,160(%rdi)$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqu   %xmm2,96(%rdi)$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqu   %xmm3,176(%rdi)$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqu   %xmm4,112(%rdi)$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqu   %xmm5,192(%rdi)$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqu   %xmm6,128(%rdi)$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqu   %xmm7,208(%rdi)$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqu   %xmm8,144(%rdi)$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqu   %xmm9,224(%rdi)$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqu   0(%rdi),%xmm10$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqu   0(%rdi),%xmm2$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqu   16(%rdi),%xmm10$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqu   16(%rdi),%xmm2$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqu   24(%rdi),%xmm10$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqu   32(%rdi),%xmm10$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqu   32(%rdi),%xmm2$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqu   40(%rdi),%xmm10$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqu   48(%rdi),%xmm10$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqu   48(%rdi),%xmm2$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqu   56(%rdi),%xmm10$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqu   64(%rdi),%xmm10$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqu   64(%rdi),%xmm11$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqu   64(%rdi),%xmm2$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movdqu   8(%rdi),%xmm10$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqu   %xmm0,0(%rdi)$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqu   %xmm1,80(%rdi)$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqu   %xmm2,16(%rdi)$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqu   %xmm3,96(%rdi)$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqu   %xmm4,32(%rdi)$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqu   %xmm5,112(%rdi)$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqu   %xmm6,48(%rdi)$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqu   %xmm7,128(%rdi)$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqu   %xmm8,64(%rdi)$/;"	l
movdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movdqu   %xmm9,144(%rdi)$/;"	l
move	ccan/ccan/tal/test/run-count.c	/^static bool move;$/;"	v	file:
move_fd	lightningd/subdaemon.c	/^static bool move_fd(int from, int to)$/;"	f	file:
movl	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movl   %r10d,0(%rsi)$/;"	l
movl	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movl   %r11d,256(%rsi)$/;"	l
movl	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movl   %r12d,512(%rsi)$/;"	l
movl	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movl   %r13d,768(%rsi)$/;"	l
movl	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movl   %r10d,0(%rsi)$/;"	l
movl	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movl   %r11d,256(%rsi)$/;"	l
movl	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movl   %r12d,512(%rsi)$/;"	l
movl	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movl   %r13d,768(%rsi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %eax,12(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %eax,16(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %eax,36(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %eax,56(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %ecx,0(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %ecx,100(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %ecx,116(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %ecx,132(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %ecx,148(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %ecx,164(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %ecx,180(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %ecx,196(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %ecx,20(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %ecx,212(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %ecx,228(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %ecx,244(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %ecx,36(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %ecx,4(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %ecx,40(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %ecx,52(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %ecx,60(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %ecx,68(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %ecx,84(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %edx,0(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %edx,112(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %edx,128(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %edx,144(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %edx,16(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %edx,160(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %edx,176(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %edx,192(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %edx,208(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %edx,224(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %edx,240(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %edx,32(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %edx,48(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %edx,64(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %edx,80(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %edx,96(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r8d,104(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r8d,120(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r8d,136(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r8d,152(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r8d,168(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r8d,184(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r8d,200(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r8d,216(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r8d,232(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r8d,24(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r8d,248(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r8d,4(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r8d,40(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r8d,44(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r8d,48(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r8d,56(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r8d,72(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r8d,8(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r8d,88(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r9d,108(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r9d,12(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r9d,124(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r9d,140(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r9d,156(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r9d,172(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r9d,188(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r9d,204(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r9d,220(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r9d,236(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r9d,252(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r9d,28(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r9d,32(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r9d,44(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r9d,52(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r9d,60(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r9d,76(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r9d,8(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   %r9d,92(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   0(%r10),%r8d$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   0(%rdx),%eax$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   12(%r10),%edx$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   16(%r10),%r11d$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   20(%r10),%ecx$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   24(%r10),%r8d$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   28(%r10),%r8d$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   4(%r10),%eax$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   4(%rdx),%edx$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl   8(%r10),%eax$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl %eax,12+112(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl %eax,12+96(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl %eax,8+64(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl %eax,8+80(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl %ecx,12+368(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl %ecx,368(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl %ecx,4+112(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl %ecx,4+368(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl %ecx,4+96(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl %ecx,64(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl %ecx,8+368(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl %ecx,80(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl %edx,112(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl %edx,12+352(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl %edx,12+80(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl %edx,352(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl %edx,4+352(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl %edx,8+352(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl %edx,80(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl %edx,96(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl %r11d,12+64(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl %r8d,4+64(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl %r8d,4+80(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl %r8d,4+96(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl %r8d,8+112(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movl %r8d,8+96(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq   %r10,32(%rdi)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq   %r8,0(%rdi)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq   %r9,16(%rdi)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq   %rax,24(%rdi)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq   %rcx,8(%rdi)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq   0(%rsi),%rax$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq   16(%rsi),%rax$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq   16(%rsi),%rdx$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq   24(%rsi),%rax$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq   24(%rsi),%rdx$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq   32(%rsi),%rax$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq   32(%rsi),%rdx$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq   8(%rsi),%rax$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq   8(%rsi),%rdx$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq %r11,0(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq %r12,8(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq %r13,16(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq %r14,24(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq %r15,32(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq %rax,64(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq %rax,72(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq %rbp,48(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq %rbx,40(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq %rdi,56(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq 0(%rsp),%r11$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq 16(%rsp),%r13$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq 24(%rsp),%r14$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq 32(%rsp),%r15$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq 40(%rsp),%rbx$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq 48(%rsp),%rbp$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq 64(%rsp),%rax$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq 72(%rsp),%rax$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq 8(%rsp),%r12$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq REDMASK51(%rip),%rsi$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   %r10,16(%rdi)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   %r10,24(%rdi)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   %r10,32(%rdi)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   %r8,8(%rdi)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   %r9,16(%rdi)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   %rax,24(%rdi)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   %rcx,0(%rdi)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   %rsi,32(%rdi)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   0(%rsi),%rcx$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   16(%rdi),%rax$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   16(%rsi),%r9$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   24(%rdi),%rax$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   24(%rsi),%rax$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   32(%rdi),%rax$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   32(%rsi),%rsi$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   8(%rsi),%r8$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq %r11,0(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq %r12,8(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq %r13,16(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq %r14,24(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq %r15,32(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq %rbp,48(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq %rbx,40(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq 0(%rsp),%r11$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq 16(%rsp),%r13$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq 24(%rsp),%r14$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq 32(%rsp),%r15$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq 40(%rsp),%rbx$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq 48(%rsp),%rbp$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq 8(%rsp),%r12$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq REDMASK51(%rip),%rdx$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movq   0(%rsi),%rdx$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movq   16(%rsi),%r8$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movq   24(%rsi),%r9$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movq   32(%rsi),%rsi$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movq   8(%rsi),%rcx$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movq %r11,0(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movq %r12,8(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movq 0(%rsp),%r11$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movq 8(%rsp),%r12$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movq REDMASK51(%rip),%rax$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movq   0(%rsi),%rdx$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movq   16(%rsi),%r8$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movq   24(%rsi),%r9$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movq   8(%rsi),%rcx$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movq %r11,1824(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movq %r12,1832(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movq %r13,1840(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movq %r14,1848(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movq 1824(%rsp),%r11$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movq 1832(%rsp),%r12$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movq 1840(%rsp),%r13$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movq 1848(%rsp),%r14$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movq   0(%rsi),%rdx$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movq   16(%rsi),%r8$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movq   24(%rsi),%r9$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movq   8(%rsi),%rcx$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movq %r11,1536(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movq %r12,1544(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movq %r13,1552(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movq 1536(%rsp),%r11$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movq 1544(%rsp),%r12$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movq 1552(%rsp),%r13$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movq $0,472(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movq %r11,416(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movq %r12,424(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movq %r13,432(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movq %r14,440(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movq %r15,448(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movq %r8,472(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movq %r9,480(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movq %rbp,464(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movq %rbx,456(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movq %rcx,472(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movq %rdx,472(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movq 416(%rsp),%r11$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movq 424(%rsp),%r12$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movq 432(%rsp),%r13$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movq 440(%rsp),%r14$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movq 448(%rsp),%r15$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movq 456(%rsp),%rbx$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movq 464(%rsp),%rbp$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movq 472(%rsp),%rcx$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movq 472(%rsp),%rdx$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^movq 480(%rsp),%r9$/;"	l
msatoshi	daemon/htlc.h	/^	u64 msatoshi;$/;"	m	struct:htlc
msatoshi	daemon/invoice.h	/^	u64 msatoshi;$/;"	m	struct:invoice
msatoshi	daemon/pay.c	/^	u64 msatoshi;$/;"	m	struct:pay_command	file:
msg	irc.h	/^	const char *msg;$/;"	m	struct:privmsg
msg	secp256k1/src/bench_recover.c	/^    unsigned char msg[32];$/;"	m	struct:__anon38	file:
msg	secp256k1/src/bench_schnorr_verify.c	/^    unsigned char msg[32];$/;"	m	struct:__anon34	file:
msg	secp256k1/src/bench_sign.c	/^    unsigned char msg[32];$/;"	m	struct:__anon36	file:
msg	secp256k1/src/bench_verify.c	/^    unsigned char msg[32];$/;"	m	struct:__anon25	file:
msg_accept_channel	wire/test/run-peer-wire.c	/^struct msg_accept_channel {$/;"	s	file:
msg_announcement_signatures	wire/test/run-peer-wire.c	/^struct msg_announcement_signatures {$/;"	s	file:
msg_channel_announcement	wire/test/run-peer-wire.c	/^struct msg_channel_announcement {$/;"	s	file:
msg_channel_update	wire/test/run-peer-wire.c	/^struct msg_channel_update {$/;"	s	file:
msg_closing_signed	wire/test/run-peer-wire.c	/^struct msg_closing_signed {$/;"	s	file:
msg_commit_sig	wire/test/run-peer-wire.c	/^struct msg_commit_sig {$/;"	s	file:
msg_error	wire/test/run-peer-wire.c	/^struct msg_error {$/;"	s	file:
msg_funding_created	wire/test/run-peer-wire.c	/^struct msg_funding_created {$/;"	s	file:
msg_funding_locked	wire/test/run-peer-wire.c	/^struct msg_funding_locked {$/;"	s	file:
msg_funding_signed	wire/test/run-peer-wire.c	/^struct msg_funding_signed {$/;"	s	file:
msg_in	lightningd/gossip/gossip.c	/^	u8 *msg_in;$/;"	m	struct:daemon	file:
msg_init	wire/test/run-peer-wire.c	/^struct msg_init {$/;"	s	file:
msg_node_announcement	wire/test/run-peer-wire.c	/^struct msg_node_announcement {$/;"	s	file:
msg_open_channel	wire/test/run-peer-wire.c	/^struct msg_open_channel {$/;"	s	file:
msg_out	lightningd/subdaemon.c	/^	const u8 *msg_out;$/;"	m	struct:subdaemon_req	file:
msg_revoke_and_ack	wire/test/run-peer-wire.c	/^struct msg_revoke_and_ack {$/;"	s	file:
msg_shutdown	wire/test/run-peer-wire.c	/^struct msg_shutdown {$/;"	s	file:
msg_update_add_htlc	wire/test/run-peer-wire.c	/^struct msg_update_add_htlc {$/;"	s	file:
msg_update_fail_htlc	wire/test/run-peer-wire.c	/^struct msg_update_fail_htlc {$/;"	s	file:
msg_update_fee	wire/test/run-peer-wire.c	/^struct msg_update_fee {$/;"	s	file:
msg_update_fulfill_htlc	wire/test/run-peer-wire.c	/^struct msg_update_fulfill_htlc {$/;"	s	file:
mu	daemon/sphinx.c	/^	u8 mu[KEY_LEN];$/;"	m	struct:keyset	file:
mul	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mul  %r8$/;"	l
mul	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mul  %rcx$/;"	l
mul_overflows_s64	overflows.h	/^static inline bool mul_overflows_s64(int64_t a, int64_t b)$/;"	f
muladd	secp256k1/src/scalar_4x64_impl.h	187;"	d
muladd	secp256k1/src/scalar_4x64_impl.h	885;"	d
muladd	secp256k1/src/scalar_8x32_impl.h	266;"	d
muladd	secp256k1/src/scalar_8x32_impl.h	641;"	d
muladd2	secp256k1/src/scalar_4x64_impl.h	216;"	d
muladd2	secp256k1/src/scalar_4x64_impl.h	887;"	d
muladd2	secp256k1/src/scalar_8x32_impl.h	295;"	d
muladd2	secp256k1/src/scalar_8x32_impl.h	643;"	d
muladd_fast	secp256k1/src/scalar_4x64_impl.h	202;"	d
muladd_fast	secp256k1/src/scalar_4x64_impl.h	886;"	d
muladd_fast	secp256k1/src/scalar_8x32_impl.h	281;"	d
muladd_fast	secp256k1/src/scalar_8x32_impl.h	642;"	d
mulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mulq  0(%rcx)$/;"	l
mulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mulq  16(%rcx)$/;"	l
mulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mulq  24(%rcx)$/;"	l
mulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mulq  32(%rcx)$/;"	l
mulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mulq  8(%rcx)$/;"	l
mulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mulq  16(%rdi)$/;"	l
mulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mulq  24(%rdi)$/;"	l
mulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mulq  32(%rdi)$/;"	l
mult	libsodium/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.h	/^    int (*mult)(unsigned char *q, const unsigned char *n,$/;"	m	struct:crypto_scalarmult_curve25519_implementation
mult_base	libsodium/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.h	/^    int (*mult_base)(unsigned char *q, const unsigned char *n);$/;"	m	struct:crypto_scalarmult_curve25519_implementation
mulv	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^mulv(__m128i A, __m128i B)$/;"	f	file:
my_alloc	ccan/ccan/tal/test/run-count.c	/^static void *my_alloc(size_t len)$/;"	f	file:
my_alloc	ccan/ccan/tal/test/run-test-backend.c	/^static void *my_alloc(size_t len)$/;"	f	file:
my_alloc_called	ccan/ccan/tal/test/run-test-backend.c	/^static bool my_alloc_called;$/;"	v	file:
my_allocfail	ccan/ccan/take/test/run.c	/^static void my_allocfail(const void *p UNNEEDED)$/;"	f	file:
my_allocfail_called	ccan/ccan/take/test/run.c	/^static int my_allocfail_called;$/;"	v	file:
my_callback	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb-int.c	/^void my_callback(int something)$/;"	f
my_callback	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb.c	/^static void my_callback(char *p)$/;"	f	file:
my_callback	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb_postargs.c	/^static void my_callback(char *p, int x)$/;"	f	file:
my_callback	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb_preargs.c	/^static void my_callback(int x, char *p)$/;"	f	file:
my_callback	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb-undefined.c	/^static void my_callback(struct undefined *undef)$/;"	f	file:
my_callback	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb-vars.c	/^static void my_callback(struct undefined *undef)$/;"	f	file:
my_callback_onearg	ccan/ccan/typesafe_cb/test/run.c	/^static void my_callback_onearg(char *p)$/;"	f	file:
my_callback_post	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb-undefined.c	/^static void my_callback_post(struct undefined *undef, int x)$/;"	f	file:
my_callback_post	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb-vars.c	/^static void my_callback_post(struct undefined *undef, int x)$/;"	f	file:
my_callback_postargs	ccan/ccan/typesafe_cb/test/run.c	/^static void my_callback_postargs(char *p, int a, int b)$/;"	f	file:
my_callback_pre	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb-undefined.c	/^static void my_callback_pre(int x, struct undefined *undef)$/;"	f	file:
my_callback_pre	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb-vars.c	/^static void my_callback_pre(int x, struct undefined *undef)$/;"	f	file:
my_callback_preargs	ccan/ccan/typesafe_cb/test/run.c	/^static void my_callback_preargs(int a, int b, char *p)$/;"	f	file:
my_cb	ccan/ccan/opt/test/run-usage.c	/^static char *my_cb(void *p UNNEEDED)$/;"	f	file:
my_dblsha256	bitcoin/libbase58/base58.c	/^bool my_dblsha256(void *hash, const void *data, size_t datasz)$/;"	f	file:
my_error	ccan/ccan/tal/test/run-overflow.c	/^static void my_error(const char *msg UNNEEDED)$/;"	f	file:
my_fprintf	ccan/ccan/list/test/run-CCAN_LIST_DEBUG.c	/^static int my_fprintf(FILE *stream, const char *format, ...)$/;"	f	file:
my_fprintf	ccan/ccan/list/test/run-check-corrupt.c	/^static int my_fprintf(FILE *stream, const char *format, ...)$/;"	f	file:
my_free	ccan/ccan/tal/test/run-count.c	/^static void my_free(void *p)$/;"	f	file:
my_free	ccan/ccan/tal/test/run-test-backend.c	/^static void my_free(void *p)$/;"	f	file:
my_printf	ccan/ccan/compiler/test/compile_fail-printf.c	/^static void PRINTF_FMT(2,3) my_printf(int x, const char *fmt, ...)$/;"	f
my_realloc	ccan/ccan/take/test/run.c	/^static void *my_realloc(void *p, size_t len)$/;"	f	file:
my_realloc	ccan/ccan/tal/test/run-count.c	/^static void *my_realloc(void *old, size_t new_size)$/;"	f	file:
my_realloc	ccan/ccan/tal/test/run-notifier.c	/^static void *my_realloc(void *old, size_t size)$/;"	f	file:
my_realloc	ccan/ccan/tal/test/run-test-backend.c	/^static void *my_realloc(void *old, size_t new_size)$/;"	f	file:
my_sha256	bitcoin/base58.c	/^static bool my_sha256(void *digest, const void *data, size_t datasz)$/;"	f	file:
my_sha256	bitcoin/libbase58/clitool.c	/^bool my_sha256(void *digest, const void *data, size_t datasz)$/;"	f	file:
mydata	ccan/ccan/structeq/test/run.c	/^struct mydata {$/;"	s	file:
mydata1	ccan/ccan/structeq/test/compile_fail-different.c	/^struct mydata1 {$/;"	s	file:
mydata2	ccan/ccan/structeq/test/compile_fail-different.c	/^struct mydata2 {$/;"	s	file:
n	ccan/ccan/intmap/intmap.h	/^		struct node *n;$/;"	m	union:intmap::__anon12	typeref:struct:intmap::__anon12::node
n	ccan/ccan/isaac/isaac.h	/^  unsigned n;$/;"	m	struct:isaac_ctx
n	ccan/ccan/isaac/isaac64.h	/^  unsigned n;$/;"	m	struct:isaac64_ctx
n	ccan/ccan/list/list.h	/^	struct list_node n;$/;"	m	struct:list_head	typeref:struct:list_head::list_node
n	ccan/ccan/strmap/strmap.h	/^		struct node *n;$/;"	m	union:strmap::__anon1	typeref:struct:strmap::__anon1::node
n	ccan/ccan/tal/benchmark/samba-allocs.c	/^	void *n;$/;"	m	struct:node	file:
n	ccan/ccan/tal/tal.c	/^	struct notifier n;$/;"	m	struct:notifier_extra_arg	typeref:struct:notifier_extra_arg::notifier	file:
n	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/before_curve25519xsalsa20poly1305.c	/^static const unsigned char n[16] = {0};$/;"	v	file:
n	libsodium/test/default/box7.c	/^static unsigned char n[crypto_box_NONCEBYTES];$/;"	v	file:
n	libsodium/test/default/box8.c	/^static unsigned char n[crypto_box_NONCEBYTES];$/;"	v	file:
n	libsodium/test/default/secretbox7.c	/^static unsigned char n[crypto_secretbox_NONCEBYTES];$/;"	v	file:
n	libsodium/test/default/secretbox8.c	/^static unsigned char n[crypto_secretbox_NONCEBYTES];$/;"	v	file:
n	secp256k1/src/field_10x26.h	/^    uint32_t n[10];$/;"	m	struct:__anon17
n	secp256k1/src/field_10x26.h	/^    uint32_t n[8];$/;"	m	struct:__anon18
n	secp256k1/src/field_5x52.h	/^    uint64_t n[4];$/;"	m	struct:__anon27
n	secp256k1/src/field_5x52.h	/^    uint64_t n[5];$/;"	m	struct:__anon26
n_steps	lightning.pb-c.h	/^  size_t n_steps;$/;"	m	struct:_Route
naive_can_derive	ccan/ccan/crypto/shachain/test/run-can_derive.c	/^static bool naive_can_derive(shachain_index_t from, shachain_index_t to)$/;"	f	file:
name	ccan/ccan/cdump/cdump.h	/^	const char *name;$/;"	m	struct:cdump_enum_val
name	ccan/ccan/cdump/cdump.h	/^	const char *name;$/;"	m	struct:cdump_member
name	ccan/ccan/cdump/cdump.h	/^	const char *name;$/;"	m	struct:cdump_type
name	ccan/ccan/list/test/compile_ok-constant.c	/^	const char *name;$/;"	m	struct:child	file:
name	ccan/ccan/list/test/run-check-nonconst.c	/^	const char *name;$/;"	m	struct:child	file:
name	ccan/ccan/list/test/run-list_prev-list_next.c	/^	const char *name;$/;"	m	struct:child	file:
name	ccan/ccan/list/test/run-list_prev-list_next.c	/^	const char *name;$/;"	m	struct:parent	file:
name	ccan/ccan/list/test/run-single-eval.c	/^	const char *name;$/;"	m	struct:child	file:
name	ccan/ccan/list/test/run-single-eval.c	/^	const char *name;$/;"	m	struct:parent	file:
name	ccan/ccan/list/test/run.c	/^	const char *name;$/;"	m	struct:child	file:
name	ccan/ccan/list/test/run.c	/^	const char *name;$/;"	m	struct:parent	file:
name	ccan/ccan/tal/benchmark/samba-allocs.c	/^	char *name;$/;"	m	struct:node	file:
name	ccan/ccan/tal/tal.c	/^	char name[];$/;"	m	struct:name	file:
name	ccan/ccan/tal/tal.c	/^struct name {$/;"	s	file:
name	ccan/tools/configurator/configurator.c	/^	const char *name;$/;"	m	struct:test	file:
name	daemon/dns.c	/^	const char *name;$/;"	m	struct:dns_async	file:
name	daemon/gen_feechange_state_names.h	/^	const char *name;$/;"	m	struct:__anon46
name	daemon/gen_htlc_state_names.h	/^	const char *name;$/;"	m	struct:__anon60
name	daemon/gen_pkt_names.h	/^	const char *name;$/;"	m	struct:__anon61
name	daemon/gen_state_names.h	/^	const char *name;$/;"	m	struct:__anon51
name	daemon/gen_state_names.h	/^	const char *name;$/;"	m	struct:__anon52
name	daemon/jsonrpc.h	/^	const char *name;$/;"	m	struct:json_command
name	daemon/log.c	/^	const char *name;$/;"	m	struct:__anon55	file:
name	daemon/peer.c	/^	const char *name, *port;$/;"	m	struct:json_connecting	file:
name	lightningd/peer_control.c	/^	const char *name, *port;$/;"	m	struct:json_connecting	file:
name	lightningd/subdaemon.h	/^	const char *name;$/;"	m	struct:subdaemon
name	test/test_protocol.c	/^	const char *name;$/;"	m	struct:peer	file:
name	test/test_state_coverage.c	/^	const char *name;$/;"	m	struct:peer	file:
name	test/test_state_coverage.c	/^	const char *name;$/;"	m	struct:trail	file:
name_to_state	daemon/names.c	/^enum state name_to_state(const char *name)$/;"	f
namelen	ccan/ccan/tal/benchmark/samba-allocs.c	/^static char *namelen(int len)$/;"	f	file:
names	ccan/ccan/opt/opt.h	/^	const char *names; \/* pipe-separated names, --longopt or -s *\/$/;"	m	struct:opt_table
nativeECDSABuffer	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static ThreadLocal<ByteBuffer> nativeECDSABuffer = new ThreadLocal<ByteBuffer>();$/;"	f	class:NativeSecp256k1	file:
nc	daemon/peer.h	/^	struct node_connection *nc;$/;"	m	struct:peer	typeref:struct:peer::node_connection
near_end_of_page	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^near_end_of_page:$/;"	l
near_start_of_page	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^near_start_of_page:$/;"	l
neg	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^neg  %r12$/;"	l
neg	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^neg  %r10$/;"	l
neg	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^neg  %r11$/;"	l
neg	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^neg  %r12$/;"	l
neg	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^neg  %r13$/;"	l
neg	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^neg  %r10$/;"	l
neg	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^neg  %r11$/;"	l
neg	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^neg  %r12$/;"	l
neg	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^neg  %r13$/;"	l
neg	secp256k1/src/num_gmp.h	/^    int neg;$/;"	m	struct:__anon28
negative	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^static unsigned char negative(signed char b)$/;"	f	file:
nested	lightning.pb-c.h	/^    NestedPkt *nested;$/;"	m	union:_Pkt::__anon45
nested_pkt__descriptor	lightning.pb-c.c	/^const ProtobufCMessageDescriptor nested_pkt__descriptor =$/;"	v
nested_pkt__field_descriptors	lightning.pb-c.c	/^static const ProtobufCFieldDescriptor nested_pkt__field_descriptors[2] =$/;"	v	file:
nested_pkt__field_indices_by_name	lightning.pb-c.c	/^static const unsigned nested_pkt__field_indices_by_name[] = {$/;"	v	file:
nested_pkt__free_unpacked	lightning.pb-c.c	/^void   nested_pkt__free_unpacked$/;"	f
nested_pkt__get_packed_size	lightning.pb-c.c	/^size_t nested_pkt__get_packed_size$/;"	f
nested_pkt__init	lightning.pb-c.c	/^void   nested_pkt__init$/;"	f
nested_pkt__number_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange nested_pkt__number_ranges[1 + 1] =$/;"	v	file:
nested_pkt__pack	lightning.pb-c.c	/^size_t nested_pkt__pack$/;"	f
nested_pkt__pack_to_buffer	lightning.pb-c.c	/^size_t nested_pkt__pack_to_buffer$/;"	f
nested_pkt__unpack	lightning.pb-c.c	/^       nested_pkt__unpack$/;"	f
nested_pkt_in	daemon/peer.c	/^static bool nested_pkt_in(struct peer *peer, const u32 type,$/;"	f	file:
netaddr	daemon/netaddr.h	/^struct netaddr {$/;"	s
netaddr	lightningd/peer_control.h	/^	struct netaddr netaddr;$/;"	m	struct:peer	typeref:struct:peer::netaddr
netaddr	type_to_string.h	/^	const struct netaddr *netaddr;$/;"	m	union:printable_types	typeref:struct:printable_types::netaddr
netaddr_from_blob	daemon/netaddr.c	/^bool netaddr_from_blob(const void *linear, size_t len, struct netaddr *a)$/;"	f
netaddr_from_fd	daemon/netaddr.c	/^bool netaddr_from_fd(int fd, int type, int protocol, struct netaddr *a)$/;"	f
netaddr_name	daemon/lightning-cli.c	/^char *netaddr_name(const tal_t *ctx, const struct netaddr *a)$/;"	f
netaddr_name	daemon/netaddr.c	/^char *netaddr_name(const tal_t *ctx, const struct netaddr *a)$/;"	f
netaddr_to_addrinfo	daemon/netaddr.c	/^void netaddr_to_addrinfo(struct addrinfo *ai, const struct netaddr *a)$/;"	f
netaddr_to_hex	daemon/netaddr.c	/^char *netaddr_to_hex(const tal_t *ctx, const struct netaddr *a)$/;"	f
never	ccan/ccan/io/test/run-06-idle.c	/^static struct io_plan *never(struct io_conn *conn, void *arg)$/;"	f	file:
new_block	daemon/chaintopology.c	/^static struct block *new_block(struct lightningd_state *dstate,$/;"	f	file:
new_broadcast_state	daemon/broadcast.c	/^struct broadcast_state *new_broadcast_state(tal_t *ctx)$/;"	f
new_client	lightningd/hsm/hsm.c	/^static struct client *new_client(const tal_t *ctx,$/;"	f	file:
new_commit_info	daemon/peer.c	/^struct commit_info *new_commit_info(const tal_t *ctx, u64 commit_num)$/;"	f
new_commit_info	test/test_protocol.c	/^static struct commit_info *new_commit_info(const struct peer *peer,$/;"	f	file:
new_feechange	daemon/feechange.c	/^struct feechange *new_feechange(struct peer *peer,$/;"	f
new_handshake	lightningd/handshake/handshake.c	/^static struct handshake *new_handshake(const tal_t *ctx,$/;"	f	file:
new_htlc	test/test_protocol.c	/^static struct htlc *new_htlc(struct peer *peer, unsigned int htlc_id, int side)$/;"	f	file:
new_json_result	daemon/json.c	/^struct json_result *new_json_result(const tal_t *ctx)$/;"	f
new_keypair	daemon/secrets.c	/^static void new_keypair(struct lightningd_state *dstate,$/;"	f	file:
new_keypair	daemon/wallet.c	/^static void new_keypair(struct privkey *privkey, struct pubkey *pubkey)$/;"	f	file:
new_lightningd	lightningd/lightningd.c	/^static struct lightningd *new_lightningd(const tal_t *ctx)$/;"	f	file:
new_log	daemon/log.c	/^new_log(const tal_t *ctx, struct log_book *record, const char *fmt, ...)$/;"	f
new_log_book	daemon/log.c	/^struct log_book *new_log_book(const tal_t *ctx,$/;"	f
new_log_entry	daemon/log.c	/^static struct log_entry *new_log_entry(struct log *log, enum log_level level)$/;"	f	file:
new_node	ccan/ccan/tal/benchmark/samba-allocs.c	/^static struct node *new_node(void)$/;"	f	file:
new_node	daemon/routing.c	/^struct node *new_node(struct routing_state *rstate,$/;"	f
new_output	daemon/bitcoind.c	/^	size_t new_output;$/;"	m	struct:bitcoin_cli	file:
new_peer	daemon/peer.c	/^struct peer *new_peer(struct lightningd_state *dstate,$/;"	f
new_peer	lightningd/gossip/gossip.c	/^static struct io_plan *new_peer(struct io_conn *conn, struct daemon *daemon,$/;"	f	file:
new_peer	lightningd/peer_control.c	/^static struct peer *new_peer(struct lightningd *ld,$/;"	f	file:
new_peer	test/test_protocol.c	/^static void new_peer(const char *name,$/;"	f	file:
new_peer_got_fd	lightningd/gossip/gossip.c	/^static struct io_plan *new_peer_got_fd(struct io_conn *conn, struct peer *peer)$/;"	f	file:
new_pkt	test/test_state_coverage.c	/^static Pkt *new_pkt(const tal_t *ctx, enum state_input i)$/;"	f	file:
new_queued_message	daemon/broadcast.c	/^static struct queued_message *new_queued_message(tal_t *ctx,$/;"	f	file:
new_reltimer	daemon/timeout.h	16;"	d
new_reltimer_	daemon/timeout.c	/^struct oneshot *new_reltimer_(struct lightningd_state *dstate,$/;"	f
new_routing_state	daemon/routing.c	/^struct routing_state *new_routing_state(const tal_t *ctx, struct log *base_log)$/;"	f
new_subdaemon	lightningd/subdaemon.c	/^struct subdaemon *new_subdaemon(const tal_t *ctx,$/;"	f
new_timer	ccan/ccan/timer/test/run-corrupt.c	/^static void new_timer(struct timers *timers, unsigned long nsec)$/;"	f	file:
newaddr	contrib/pylightning/lightning/lightning.py	/^    def newaddr(self):$/;"	m	class:LegacyLightningRpc
newaddr_command	daemon/wallet.c	/^static const struct json_command newaddr_command = {$/;"	v	typeref:struct:json_command	file:
newstate	test/test_state_coverage.c	/^	const char *oldstate, *newstate;$/;"	m	struct:dot_edge	file:
next	ccan/ccan/io/backend.h	/^	struct io_plan *(*next)(struct io_conn *, void *next_arg);$/;"	m	struct:io_plan	typeref:struct:io_plan::next
next	ccan/ccan/list/list.h	/^	struct list_node *next, *prev;$/;"	m	struct:list_node	typeref:struct:list_node::list_node
next	ccan/ccan/tal/tal.c	/^	struct prop_hdr *next;$/;"	m	struct:prop_hdr	typeref:struct:prop_hdr::prop_hdr	file:
next	ccan/ccan/timer/test/run-add.c	/^static uint64_t next(uint64_t base)$/;"	f	file:
next	daemon/chaintopology.c	/^	struct block *next;$/;"	m	struct:block	typeref:struct:block::block	file:
next	daemon/sphinx.h	/^	struct onionpacket *next;$/;"	m	struct:route_step	typeref:struct:route_step::onionpacket
next	test/test_state_coverage.c	/^		enum state next;$/;"	m	struct:hist::state_dump	typeref:enum:hist::state_dump::state	file:
next_arg	ccan/ccan/io/backend.h	/^	void *next_arg;$/;"	m	struct:io_plan
next_bcli	daemon/bitcoind.c	/^static void next_bcli(struct lightningd_state *dstate)$/;"	f	file:
next_broadcast_message	daemon/broadcast.c	/^struct queued_message *next_broadcast_message(struct broadcast_state *bstate, u64 *last_index)$/;"	f
next_case	lightning.pb-c.h	/^  RouteStep__NextCase next_case;$/;"	m	struct:_RouteStep
next_htlc_id	test/test_state_coverage.c	/^static unsigned int next_htlc_id(void)$/;"	f	file:
next_in	lightningd/cryptomsg.c	/^	struct io_plan *(*next_in)(struct io_conn *, struct peer *, u8 *);$/;"	m	struct:crypto_state	typeref:struct:crypto_state::next_in	file:
next_index	daemon/broadcast.h	/^u32 next_index;$/;"	m	struct:broadcast_state
next_lopt	ccan/ccan/opt/opt.c	/^const char *next_lopt(const char *p, unsigned *i, unsigned *len)$/;"	f
next_name	ccan/ccan/opt/opt.c	/^static const char *next_name(const char *names, unsigned *len)$/;"	f	file:
next_opt	ccan/ccan/opt/opt.c	/^static const char *next_opt(const char *p, unsigned *i, unsigned *len)$/;"	f	file:
next_out	lightningd/cryptomsg.c	/^	struct io_plan *(*next_out)(struct io_conn *, struct peer *);$/;"	m	struct:crypto_state	typeref:struct:crypto_state::next_out	file:
next_per_commitment_point	wire/test/run-peer-wire.c	/^	struct pubkey next_per_commitment_point;$/;"	m	struct:msg_funding_locked	typeref:struct:msg_funding_locked::pubkey	file:
next_per_commitment_point	wire/test/run-peer-wire.c	/^	struct pubkey next_per_commitment_point;$/;"	m	struct:msg_revoke_and_ack	typeref:struct:msg_revoke_and_ack::pubkey	file:
next_plan	ccan/ccan/io/io.c	/^static bool next_plan(struct io_conn *conn, struct io_plan *plan)$/;"	f	file:
next_req_in	lightningd/gossip/gossip.c	/^static struct io_plan *next_req_in(struct io_conn *conn, struct daemon *daemon)$/;"	f	file:
next_revocation_hash	daemon/peer.h	/^	struct sha256 next_revocation_hash;$/;"	m	struct:peer_visible_state	typeref:struct:peer_visible_state::sha256
next_revocation_hash	lightning.pb-c.h	/^  Sha256Hash *next_revocation_hash;$/;"	m	struct:_OpenChannel
next_revocation_hash	lightning.pb-c.h	/^  Sha256Hash *next_revocation_hash;$/;"	m	struct:_UpdateRevocation
next_sopt	ccan/ccan/opt/opt.c	/^const char *next_sopt(const char *p, unsigned *i)$/;"	f
next_topology_timer	daemon/chaintopology.c	/^static void next_topology_timer(struct lightningd_state *dstate)$/;"	f	file:
nextcase	daemon/sphinx.h	/^	enum route_next_case nextcase;$/;"	m	struct:route_step	typeref:enum:route_step::route_next_case
nexthop	daemon/sphinx.h	/^	u8 nexthop[20];$/;"	m	struct:onionpacket
nick	irc.h	/^	const char *nick;$/;"	m	struct:ircstate
no_children	ccan/ccan/tal/str/test/helper.h	/^static inline bool no_children(const void *ctx)$/;"	f
no_free	ccan/ccan/opt/test/run-set_alloc.c	/^static void no_free(void *p UNNEEDED)$/;"	f	file:
no_malloc	ccan/ccan/opt/test/run-set_alloc.c	/^static void *no_malloc(size_t size UNNEEDED)$/;"	f	file:
no_realloc	ccan/ccan/opt/test/run-set_alloc.c	/^static void *no_realloc(void *p UNNEEDED, size_t size UNNEEDED)$/;"	f	file:
no_timeout	ccan/ccan/io/test/run-15-timeout.c	/^static struct io_plan *no_timeout(struct io_conn *conn, struct data *d)$/;"	f	file:
no_tools	libsodium/builds/msvc/build/buildbase.bat	/^:no_tools$/;"	l
nobase_include_HEADERS	libsodium/src/libsodium/include/Makefile	/^nobase_include_HEADERS = $(SODIUM_EXPORT)$/;"	m
nobase_nodist_include_HEADERS	libsodium/src/libsodium/include/Makefile	/^nobase_nodist_include_HEADERS = \\$/;"	m
node	ccan/ccan/intmap/intmap.c	/^struct node {$/;"	s	file:
node	ccan/ccan/strmap/strmap.c	/^struct node {$/;"	s	file:
node	ccan/ccan/tal/benchmark/samba-allocs.c	/^struct node {$/;"	s	file:
node	daemon/routing.h	/^struct node {$/;"	s
node_announcement	daemon/routing.h	/^	u8 *node_announcement;$/;"	m	struct:node
node_announcement_eq	wire/test/run-peer-wire.c	/^static bool node_announcement_eq(const struct msg_node_announcement *a,$/;"	f	file:
node_connection	daemon/routing.h	/^struct node_connection {$/;"	s
node_count	ccan/ccan/tal/benchmark/samba-allocs.c	/^static int node_count;$/;"	v	file:
node_depth	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	/^  uint8_t  node_depth;     \/* 17 *\/$/;"	m	struct:blake2b_param_
node_id	lightning.pb-c.h	/^  BitcoinPubkey *node_id;$/;"	m	struct:_Authenticate
node_id	wire/test/run-peer-wire.c	/^	struct pubkey node_id;$/;"	m	struct:msg_node_announcement	typeref:struct:msg_node_announcement::pubkey	file:
node_id_1	wire/test/run-peer-wire.c	/^	struct pubkey node_id_1;$/;"	m	struct:msg_channel_announcement	typeref:struct:msg_channel_announcement::pubkey	file:
node_id_2	wire/test/run-peer-wire.c	/^	struct pubkey node_id_2;$/;"	m	struct:msg_channel_announcement	typeref:struct:msg_channel_announcement::pubkey	file:
node_key	lightningd/hsm/hsm.c	/^static void node_key(struct privkey *node_secret, struct pubkey *node_id)$/;"	f	file:
node_map_hash_key	daemon/routing.c	/^size_t node_map_hash_key(const secp256k1_pubkey *key)$/;"	f
node_map_keyof_node	daemon/routing.c	/^const secp256k1_pubkey *node_map_keyof_node(const struct node *n)$/;"	f
node_map_node_eq	daemon/routing.c	/^bool node_map_node_eq(const struct node *n, const secp256k1_pubkey *key)$/;"	f
node_offset	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	/^  uint8_t  node_offset[8]; \/* 16 *\/$/;"	m	struct:blake2b_param_
node_signature_1	wire/test/run-peer-wire.c	/^	secp256k1_ecdsa_signature node_signature_1;$/;"	m	struct:msg_channel_announcement	file:
node_signature_2	wire/test/run-peer-wire.c	/^	secp256k1_ecdsa_signature node_signature_2;$/;"	m	struct:msg_channel_announcement	file:
nodes	daemon/routing.h	/^	struct node_map *nodes;$/;"	m	struct:routing_state	typeref:struct:routing_state::node_map
nofail_on_error	ccan/ccan/tal/test/run-allocfail.c	/^static void nofail_on_error(const char *msg)$/;"	f	file:
noinst_HEADERS	libsodium/src/libsodium/Makefile	/^noinst_HEADERS = \\$/;"	m
noinst_HEADERS	secp256k1/Makefile	/^noinst_HEADERS = src\/scalar.h src\/scalar_4x64.h src\/scalar_8x32.h \\$/;"	m
noinst_LTLIBRARIES	libsodium/src/libsodium/Makefile	/^noinst_LTLIBRARIES = libaesni.la libsse2.la libssse3.la libsse41.la libavx2.la$/;"	m
noinst_PROGRAMS	secp256k1/Makefile	/^noinst_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \\$/;"	m
nonce	bitcoin/block.h	/^	le32 nonce;$/;"	m	struct:bitcoin_block_hdr
nonce	daemon/cryptopkt.c	/^	u64 nonce;$/;"	m	struct:dir_state	file:
nonce	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^    uint64_t      nonce;$/;"	m	struct:Salsa20Random_	file:
nonce	libsodium/test/default/box.c	/^static const unsigned char nonce[24]$/;"	v	file:
nonce	libsodium/test/default/box2.c	/^static unsigned char nonce[24]$/;"	v	file:
nonce	libsodium/test/default/box_easy.c	/^static unsigned char nonce[24]$/;"	v	file:
nonce	libsodium/test/default/secretbox.c	/^static unsigned char nonce[24]$/;"	v	file:
nonce	libsodium/test/default/secretbox2.c	/^static unsigned char nonce[24]$/;"	v	file:
nonce	libsodium/test/default/secretbox_easy.c	/^static unsigned char nonce[24]$/;"	v	file:
nonce	libsodium/test/default/stream.c	/^static unsigned char nonce[24]$/;"	v	file:
nonce	libsodium/test/default/stream3.c	/^static unsigned char nonce[24]$/;"	v	file:
nonce	libsodium/test/default/stream4.c	/^static unsigned char nonce[24]$/;"	v	file:
nonce_function_rfc6979	secp256k1/src/secp256k1.c	/^static int nonce_function_rfc6979(unsigned char *nonce32, const unsigned char *msg32, const unsigned char *key32, const unsigned char *algo16, void *data, unsigned int counter) {$/;"	f	file:
nonce_function_test_fail	secp256k1/src/tests.c	/^static int nonce_function_test_fail(unsigned char *nonce32, const unsigned char *msg32, const unsigned char *key32, const unsigned char *algo16, void *data, unsigned int counter) {$/;"	f	file:
nonce_function_test_retry	secp256k1/src/tests.c	/^static int nonce_function_test_retry(unsigned char *nonce32, const unsigned char *msg32, const unsigned char *key32, const unsigned char *algo16, void *data, unsigned int counter) {$/;"	f	file:
nonce_hex	libsodium/test/default/aead_aes256gcm.c	/^    const char *nonce_hex;$/;"	m	struct:__anon62	file:
nonceprefix	libsodium/test/default/core2.c	/^static unsigned char nonceprefix[16]$/;"	v	file:
noncesuffix	libsodium/test/default/core3.c	/^static unsigned char noncesuffix[8]$/;"	v	file:
noncesuffix	libsodium/test/default/stream2.c	/^static unsigned char noncesuffix[8]$/;"	v	file:
normal_path	test/test_state_coverage.c	/^static bool normal_path(enum state_input i, enum state src, enum state dst)$/;"	f	file:
normal_pkt_in	daemon/peer.c	/^static bool normal_pkt_in(struct peer *peer, const Pkt *pkt)$/;"	f	file:
normalize	ccan/ccan/htable/tools/hsearchspeed.c	/^static size_t normalize(const struct timeabs *start,$/;"	f	file:
normalize	ccan/ccan/htable/tools/speed.c	/^static size_t normalize(const struct timeabs *start,$/;"	f	file:
normalize	ccan/ccan/htable/tools/stringspeed.c	/^static size_t normalize(const struct timeabs *start,$/;"	f	file:
normalized	secp256k1/src/field_10x26.h	/^    int normalized;$/;"	m	struct:__anon17
normalized	secp256k1/src/field_5x52.h	/^    int normalized;$/;"	m	struct:__anon26
normalizing	daemon/bitcoind.c	/^struct normalizing {$/;"	s	file:
not_randomized	ccan/ccan/list/test/helper.c	/^static bool not_randomized = true;$/;"	v	file:
note	ccan/ccan/cdump/cdump.h	/^	const char *note;$/;"	m	struct:cdump_enum_val
note	ccan/ccan/cdump/cdump.h	/^	const char *note;$/;"	m	struct:cdump_member
note	ccan/ccan/cdump/cdump.h	/^	const char *note;$/;"	m	struct:cdump_type
notified1	ccan/ccan/tal/test/run-notifier.c	/^static unsigned int notified1, notified2;$/;"	v	file:
notified2	ccan/ccan/tal/test/run-notifier.c	/^static unsigned int notified1, notified2;$/;"	v	file:
notifier	ccan/ccan/tal/tal.c	/^struct notifier {$/;"	s	file:
notifier_extra_arg	ccan/ccan/tal/tal.c	/^struct notifier_extra_arg {$/;"	s	file:
notifiers	ccan/ccan/tal/tal.c	/^static size_t notifiers = 0;$/;"	v	file:
notify	ccan/ccan/tal/tal.c	/^static void notify(const struct tal_hdr *ctx,$/;"	f	file:
notify1	ccan/ccan/tal/test/run-notifier.c	/^static void notify1(char *p UNNEEDED, enum tal_notify_type notify, void *info)$/;"	f	file:
notify2	ccan/ccan/tal/test/run-notifier.c	/^static void notify2(char *ctx UNNEEDED,$/;"	f	file:
notifyfn	ccan/ccan/tal/tal.c	/^		void (*notifyfn)(tal_t *, enum tal_notify_type, void *);$/;"	m	union:notifier::__anon3	file:
nowfn	ccan/ccan/io/poll.c	/^static struct timemono (*nowfn)(void) = time_mono;$/;"	v	typeref:struct:nowfn	file:
null_parent	ccan/ccan/tal/tal.c	/^} null_parent = { { { &null_parent.hdr.list, &null_parent.hdr.list },$/;"	v	typeref:struct:__anon4	file:
null_response	daemon/jsonrpc.c	/^struct json_result *null_response(const tal_t *ctx)$/;"	f
num_addresses	daemon/dns.c	/^	size_t num_addresses;$/;"	m	struct:dns_async	file:
num_allocated	ccan/ccan/tal/test/run-groups-grow.c	/^static size_t num_allocated;$/;"	v	file:
num_children	ccan/ccan/list/test/run-list_prev-list_next.c	/^	unsigned int num_children;$/;"	m	struct:parent	file:
num_children	ccan/ccan/list/test/run-single-eval.c	/^	unsigned int num_children;$/;"	m	struct:parent	file:
num_children	ccan/ccan/list/test/run.c	/^	unsigned int num_children;$/;"	m	struct:parent	file:
num_children	ccan/ccan/tal/benchmark/samba-allocs.c	/^	unsigned int num_children;$/;"	m	struct:node	file:
num_cmdlist	daemon/jsonrpc.c	/^static size_t num_cmdlist;$/;"	v	file:
num_fds	ccan/ccan/io/poll.c	/^static size_t num_fds = 0, max_fds = 0, num_waiting = 0;$/;"	v	file:
num_htlc_spends_to_them	test/test_state_coverage.c	/^	unsigned int num_htlc_spends_to_them, num_htlc_spends_to_us;$/;"	m	struct:peer	file:
num_htlc_spends_to_us	test/test_state_coverage.c	/^	unsigned int num_htlc_spends_to_them, num_htlc_spends_to_us;$/;"	m	struct:peer	file:
num_htlcs	daemon/channel.h	/^	unsigned int num_htlcs;$/;"	m	struct:channel_oneside
num_htlcs	test/test_protocol.c	/^	size_t num_htlcs;$/;"	m	struct:database	file:
num_htlcs_to_them	test/test_state_coverage.c	/^	unsigned int num_htlcs_to_them, num_htlcs_to_us;$/;"	m	struct:peer	file:
num_htlcs_to_us	test/test_state_coverage.c	/^	unsigned int num_htlcs_to_them, num_htlcs_to_us;$/;"	m	struct:peer	file:
num_live_htlcs_to_them	test/test_state_coverage.c	/^	unsigned int num_live_htlcs_to_them, num_live_htlcs_to_us;$/;"	m	struct:peer	file:
num_live_htlcs_to_us	test/test_state_coverage.c	/^	unsigned int num_live_htlcs_to_them, num_live_htlcs_to_us;$/;"	m	struct:peer	file:
num_maps	ccan/ccan/ptr_valid/ptr_valid.h	/^	unsigned int num_maps;$/;"	m	struct:ptr_valid_batch
num_nondust	daemon/channel.h	/^	unsigned int num_nondust;$/;"	m	struct:channel_state
num_outputs	test/test_state_coverage.c	/^	uint8_t num_outputs;$/;"	m	struct:core_state	file:
num_peer_outputs	test/test_state_coverage.c	/^	unsigned int num_peer_outputs;$/;"	m	struct:trail	file:
num_rvals_known	test/test_state_coverage.c	/^	unsigned int num_rvals_known;$/;"	m	struct:peer	file:
num_skipped	daemon/jsonrpc.c	/^	unsigned int num_skipped;$/;"	m	struct:log_info	file:
num_taken	ccan/ccan/take/take.c	/^static size_t max_taken, num_taken;$/;"	v	file:
num_valid	ccan/ccan/crypto/shachain/shachain.h	/^	unsigned int num_valid;$/;"	m	struct:shachain
num_waiting	ccan/ccan/io/poll.c	/^static size_t num_fds = 0, max_fds = 0, num_waiting = 0;$/;"	v	file:
number	test/test_protocol.c	/^	unsigned int number;$/;"	m	struct:commit_info	file:
numsigs	secp256k1/src/bench_schnorr_verify.c	/^    int numsigs;$/;"	m	struct:__anon34	file:
obj	ccan/ccan/htable/test/run-type-int.c	/^struct obj {$/;"	s	file:
obj	ccan/ccan/htable/test/run-type.c	/^struct obj {$/;"	s	file:
objcmp	ccan/ccan/htable/test/run.c	/^static bool objcmp(const void *htelem, void *cmpdata)$/;"	f	file:
object	ccan/ccan/htable/tools/speed.c	/^struct object {$/;"	s	file:
objhash	ccan/ccan/htable/test/run-type-int.c	/^static size_t objhash(const unsigned int key)$/;"	f	file:
objhash	ccan/ccan/htable/test/run-type.c	/^static size_t objhash(const unsigned int *key)$/;"	f	file:
objkey	ccan/ccan/htable/test/run-type-int.c	/^static const unsigned int objkey(const struct obj *obj)$/;"	f	file:
objkey	ccan/ccan/htable/test/run-type.c	/^static const unsigned int *objkey(const struct obj *obj)$/;"	f	file:
objkey	ccan/ccan/htable/tools/speed.c	/^static const unsigned int *objkey(const struct object *obj)$/;"	f	file:
octx	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha256.h	/^    crypto_hash_sha256_state octx;$/;"	m	struct:crypto_auth_hmacsha256_state
octx	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512.h	/^    crypto_hash_sha512_state octx;$/;"	m	struct:crypto_auth_hmacsha512_state
off	ccan/ccan/htable/htable.h	/^	size_t off;$/;"	m	struct:htable_iter
offer_anchor	daemon/peer.h	/^	bool offer_anchor;$/;"	m	struct:peer_visible_state
offs_container	ccan/ccan/tcon/test/compile_ok-value.c	/^struct offs_container {$/;"	s	file:
offset	ccan/ccan/order/test/fancy_cmp.h	/^	int offset;$/;"	m	struct:cmp_info
ok_depth	daemon/peer.h	/^		int ok_depth;$/;"	m	struct:peer::__anon47
okm	ccan/ccan/crypto/hkdf_sha256/test/api-rfc5869.c	/^	const char *ikm, *salt, *info, *okm;$/;"	m	struct:test	file:
olddir	ccan/ccan/tal/path/path.c	/^	const char *olddir;$/;"	m	struct:path_pushd	file:
oldincludedir	libsodium/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	libsodium/dist-build/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	libsodium/msvc-scripts/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	libsodium/src/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	libsodium/src/libsodium/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	libsodium/src/libsodium/include/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	libsodium/test/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	libsodium/test/default/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	secp256k1/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldstate	test/test_state_coverage.c	/^	const char *oldstate, *newstate;$/;"	m	struct:dot_edge	file:
onchain	daemon/peer.h	/^	} onchain;$/;"	m	struct:peer	typeref:struct:peer::__anon50
one	ccan/ccan/endian/test/compile_ok-constant.c	/^	char one[BSWAP_16(0xFF00)];$/;"	m	struct:foo	file:
one_seems_likely	ccan/ccan/likely/test/run-debug.c	/^static bool one_seems_likely(unsigned int val)$/;"	f	file:
one_seems_likely	ccan/ccan/likely/test/run.c	/^static bool one_seems_likely(unsigned int val)$/;"	f	file:
one_seems_unlikely	ccan/ccan/likely/test/run-debug.c	/^static bool one_seems_unlikely(unsigned int val)$/;"	f	file:
one_seems_unlikely	ccan/ccan/likely/test/run.c	/^static bool one_seems_unlikely(unsigned int val)$/;"	f	file:
oneshot	daemon/timeout.c	/^struct oneshot {$/;"	s	file:
onetimeauth	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h	/^    int (*onetimeauth)(unsigned char *out,$/;"	m	struct:crypto_onetimeauth_poly1305_implementation
onetimeauth2_DEPENDENCIES	libsodium/test/default/Makefile	/^onetimeauth2_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
onetimeauth2_LDADD	libsodium/test/default/Makefile	/^onetimeauth2_LDADD = $(TESTS_LDADD)$/;"	m
onetimeauth2_OBJECTS	libsodium/test/default/Makefile	/^onetimeauth2_OBJECTS = onetimeauth2.$(OBJEXT)$/;"	m
onetimeauth2_SOURCE	libsodium/test/default/Makefile	/^onetimeauth2_SOURCE = cmptest.h onetimeauth2.c$/;"	m
onetimeauth2_SOURCES	libsodium/test/default/Makefile	/^onetimeauth2_SOURCES = onetimeauth2.c$/;"	m
onetimeauth7_DEPENDENCIES	libsodium/test/default/Makefile	/^onetimeauth7_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
onetimeauth7_LDADD	libsodium/test/default/Makefile	/^onetimeauth7_LDADD = $(TESTS_LDADD)$/;"	m
onetimeauth7_OBJECTS	libsodium/test/default/Makefile	/^onetimeauth7_OBJECTS = onetimeauth7.$(OBJEXT)$/;"	m
onetimeauth7_SOURCE	libsodium/test/default/Makefile	/^onetimeauth7_SOURCE = cmptest.h onetimeauth7.c$/;"	m
onetimeauth7_SOURCES	libsodium/test/default/Makefile	/^onetimeauth7_SOURCES = onetimeauth7.c$/;"	m
onetimeauth_DEPENDENCIES	libsodium/test/default/Makefile	/^onetimeauth_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
onetimeauth_LDADD	libsodium/test/default/Makefile	/^onetimeauth_LDADD = $(TESTS_LDADD)$/;"	m
onetimeauth_OBJECTS	libsodium/test/default/Makefile	/^onetimeauth_OBJECTS = onetimeauth.$(OBJEXT)$/;"	m
onetimeauth_SOURCE	libsodium/test/default/Makefile	/^onetimeauth_SOURCE = cmptest.h onetimeauth.c$/;"	m
onetimeauth_SOURCES	libsodium/test/default/Makefile	/^onetimeauth_SOURCES = onetimeauth.c$/;"	m
onetimeauth_final	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h	/^    int (*onetimeauth_final)(crypto_onetimeauth_poly1305_state *state,$/;"	m	struct:crypto_onetimeauth_poly1305_implementation
onetimeauth_init	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h	/^    int (*onetimeauth_init)(crypto_onetimeauth_poly1305_state *state,$/;"	m	struct:crypto_onetimeauth_poly1305_implementation
onetimeauth_poly1305_H	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h	3;"	d
onetimeauth_update	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h	/^    int (*onetimeauth_update)(crypto_onetimeauth_poly1305_state *state,$/;"	m	struct:crypto_onetimeauth_poly1305_implementation
onetimeauth_verify	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h	/^    int (*onetimeauth_verify)(const unsigned char *h,$/;"	m	struct:crypto_onetimeauth_poly1305_implementation
onion_routing_packet	wire/test/run-peer-wire.c	/^	u8 onion_routing_packet[1254];$/;"	m	struct:msg_update_add_htlc	file:
onion_type	wire/gen_onion_wire.h	/^enum onion_type {$/;"	g
onionpacket	daemon/sphinx.h	/^struct onionpacket {$/;"	s
only_one_block	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^only_one_block:$/;"	l
opaque	ccan/ccan/list/test/helper.c	/^struct opaque {$/;"	s	file:
opaque	libsodium/src/libsodium/include/sodium/crypto_onetimeauth_poly1305.h	/^    unsigned char opaque[256];$/;"	m	struct:crypto_onetimeauth_poly1305_state
opaque_t	ccan/ccan/list/test/helper.h	/^typedef struct opaque opaque_t;$/;"	t	typeref:struct:opaque
open	lightning.pb-c.h	/^    OpenChannel *open;$/;"	m	union:_Pkt::__anon45
open_anchor	lightning.pb-c.h	/^    OpenAnchor *open_anchor;$/;"	m	union:_Pkt::__anon45
open_anchor__descriptor	lightning.pb-c.c	/^const ProtobufCMessageDescriptor open_anchor__descriptor =$/;"	v
open_anchor__field_descriptors	lightning.pb-c.c	/^static const ProtobufCFieldDescriptor open_anchor__field_descriptors[3] =$/;"	v	file:
open_anchor__field_indices_by_name	lightning.pb-c.c	/^static const unsigned open_anchor__field_indices_by_name[] = {$/;"	v	file:
open_anchor__free_unpacked	lightning.pb-c.c	/^void   open_anchor__free_unpacked$/;"	f
open_anchor__get_packed_size	lightning.pb-c.c	/^size_t open_anchor__get_packed_size$/;"	f
open_anchor__init	lightning.pb-c.c	/^void   open_anchor__init$/;"	f
open_anchor__number_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange open_anchor__number_ranges[1 + 1] =$/;"	v	file:
open_anchor__pack	lightning.pb-c.c	/^size_t open_anchor__pack$/;"	f
open_anchor__pack_to_buffer	lightning.pb-c.c	/^size_t open_anchor__pack_to_buffer$/;"	f
open_anchor__unpack	lightning.pb-c.c	/^       open_anchor__unpack$/;"	f
open_channel__anchor_offer__descriptor	lightning.pb-c.c	/^const ProtobufCEnumDescriptor open_channel__anchor_offer__descriptor =$/;"	v
open_channel__anchor_offer__enum_values_by_name	lightning.pb-c.c	/^static const ProtobufCEnumValueIndex open_channel__anchor_offer__enum_values_by_name[2] =$/;"	v	file:
open_channel__anchor_offer__enum_values_by_number	lightning.pb-c.c	/^static const ProtobufCEnumValue open_channel__anchor_offer__enum_values_by_number[2] =$/;"	v	file:
open_channel__anchor_offer__value_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange open_channel__anchor_offer__value_ranges[] = {$/;"	v	file:
open_channel__descriptor	lightning.pb-c.c	/^const ProtobufCMessageDescriptor open_channel__descriptor =$/;"	v
open_channel__field_descriptors	lightning.pb-c.c	/^static const ProtobufCFieldDescriptor open_channel__field_descriptors[8] =$/;"	v	file:
open_channel__field_indices_by_name	lightning.pb-c.c	/^static const unsigned open_channel__field_indices_by_name[] = {$/;"	v	file:
open_channel__free_unpacked	lightning.pb-c.c	/^void   open_channel__free_unpacked$/;"	f
open_channel__get_packed_size	lightning.pb-c.c	/^size_t open_channel__get_packed_size$/;"	f
open_channel__init	lightning.pb-c.c	/^void   open_channel__init$/;"	f
open_channel__min_depth__default_value	lightning.pb-c.c	/^static const uint32_t open_channel__min_depth__default_value = 0u;$/;"	v	file:
open_channel__number_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange open_channel__number_ranges[1 + 1] =$/;"	v	file:
open_channel__pack	lightning.pb-c.c	/^size_t open_channel__pack$/;"	f
open_channel__pack_to_buffer	lightning.pb-c.c	/^size_t open_channel__pack_to_buffer$/;"	f
open_channel__unpack	lightning.pb-c.c	/^       open_channel__unpack$/;"	f
open_channel_eq	wire/test/run-peer-wire.c	/^static bool open_channel_eq(const struct msg_open_channel *a,$/;"	f	file:
open_commit_sig	lightning.pb-c.h	/^    OpenCommitSig *open_commit_sig;$/;"	m	union:_Pkt::__anon45
open_commit_sig__descriptor	lightning.pb-c.c	/^const ProtobufCMessageDescriptor open_commit_sig__descriptor =$/;"	v
open_commit_sig__field_descriptors	lightning.pb-c.c	/^static const ProtobufCFieldDescriptor open_commit_sig__field_descriptors[1] =$/;"	v	file:
open_commit_sig__field_indices_by_name	lightning.pb-c.c	/^static const unsigned open_commit_sig__field_indices_by_name[] = {$/;"	v	file:
open_commit_sig__free_unpacked	lightning.pb-c.c	/^void   open_commit_sig__free_unpacked$/;"	f
open_commit_sig__get_packed_size	lightning.pb-c.c	/^size_t open_commit_sig__get_packed_size$/;"	f
open_commit_sig__init	lightning.pb-c.c	/^void   open_commit_sig__init$/;"	f
open_commit_sig__number_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange open_commit_sig__number_ranges[1 + 1] =$/;"	v	file:
open_commit_sig__pack	lightning.pb-c.c	/^size_t open_commit_sig__pack$/;"	f
open_commit_sig__pack_to_buffer	lightning.pb-c.c	/^size_t open_commit_sig__pack_to_buffer$/;"	f
open_commit_sig__unpack	lightning.pb-c.c	/^       open_commit_sig__unpack$/;"	f
open_complete	lightning.pb-c.h	/^    OpenComplete *open_complete;$/;"	m	union:_Pkt::__anon45
open_complete__descriptor	lightning.pb-c.c	/^const ProtobufCMessageDescriptor open_complete__descriptor =$/;"	v
open_complete__field_descriptors	lightning.pb-c.c	/^static const ProtobufCFieldDescriptor open_complete__field_descriptors[1] =$/;"	v	file:
open_complete__field_indices_by_name	lightning.pb-c.c	/^static const unsigned open_complete__field_indices_by_name[] = {$/;"	v	file:
open_complete__free_unpacked	lightning.pb-c.c	/^void   open_complete__free_unpacked$/;"	f
open_complete__get_packed_size	lightning.pb-c.c	/^size_t open_complete__get_packed_size$/;"	f
open_complete__init	lightning.pb-c.c	/^void   open_complete__init$/;"	f
open_complete__number_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange open_complete__number_ranges[1 + 1] =$/;"	v	file:
open_complete__pack	lightning.pb-c.c	/^size_t open_complete__pack$/;"	f
open_complete__pack_to_buffer	lightning.pb-c.c	/^size_t open_complete__pack_to_buffer$/;"	f
open_complete__unpack	lightning.pb-c.c	/^       open_complete__unpack$/;"	f
open_jsoncmd	daemon/peer.h	/^	struct command *open_jsoncmd;$/;"	m	struct:peer	typeref:struct:peer::command
open_ouranchor_pkt_in	daemon/peer.c	/^static bool open_ouranchor_pkt_in(struct peer *peer, const Pkt *pkt)$/;"	f	file:
open_pkt_in	daemon/peer.c	/^static bool open_pkt_in(struct peer *peer, const Pkt *pkt)$/;"	f	file:
open_theiranchor_pkt_in	daemon/peer.c	/^static bool open_theiranchor_pkt_in(struct peer *peer, const Pkt *pkt)$/;"	f	file:
open_wait_pkt_in	daemon/peer.c	/^static bool open_wait_pkt_in(struct peer *peer, const Pkt *pkt)$/;"	f	file:
opt_add_route	daemon/routing.c	/^char *opt_add_route(const char *arg, struct lightningd_state *dstate)$/;"	f
opt_alloc	ccan/ccan/opt/opt.c	/^struct opt_alloc opt_alloc = {$/;"	v	typeref:struct:opt_alloc
opt_alloc	ccan/ccan/opt/private.h	/^struct opt_alloc {$/;"	s
opt_allocfn	daemon/lightning-cli.c	/^static void *opt_allocfn(size_t size)$/;"	f	file:
opt_allocfn	daemon/options.c	/^static void *opt_allocfn(size_t size)$/;"	f	file:
opt_argv0	ccan/ccan/opt/opt.c	/^const char *opt_argv0;$/;"	v
opt_count	ccan/ccan/opt/opt.c	/^unsigned int opt_count, opt_num_short, opt_num_short_arg, opt_num_long;$/;"	v
opt_dec_intval	ccan/ccan/opt/helpers.c	/^char *opt_dec_intval(int *i)$/;"	f
opt_early_parse	ccan/ccan/opt/opt.c	/^bool opt_early_parse(int argc, char *argv[],$/;"	f
opt_free_table	ccan/ccan/opt/opt.c	/^void opt_free_table(void)$/;"	f
opt_hidden	ccan/ccan/opt/usage.c	/^const char opt_hidden[1];$/;"	v
opt_inc_intval	ccan/ccan/opt/helpers.c	/^char *opt_inc_intval(int *i)$/;"	f
opt_invalid_argument	ccan/ccan/opt/opt.c	/^char *opt_invalid_argument(const char *arg)$/;"	f
opt_log_stderr	ccan/ccan/opt/opt.c	/^void opt_log_stderr(const char *fmt, ...)$/;"	f
opt_log_stderr_exit	ccan/ccan/opt/opt.c	/^void opt_log_stderr_exit(const char *fmt, ...)$/;"	f
opt_num_long	ccan/ccan/opt/opt.c	/^unsigned int opt_count, opt_num_short, opt_num_short_arg, opt_num_long;$/;"	v
opt_num_short	ccan/ccan/opt/opt.c	/^unsigned int opt_count, opt_num_short, opt_num_short_arg, opt_num_long;$/;"	v
opt_num_short_arg	ccan/ccan/opt/opt.c	/^unsigned int opt_count, opt_num_short, opt_num_short_arg, opt_num_long;$/;"	v
opt_parse	ccan/ccan/opt/opt.c	/^bool opt_parse(int *argc, char *argv[], void (*errlog)(const char *fmt, ...))$/;"	f
opt_parse_from_config	daemon/options.c	/^static void opt_parse_from_config(struct lightningd_state *dstate)$/;"	f	file:
opt_register_arg	ccan/ccan/opt/opt.h	195;"	d
opt_register_early_arg	ccan/ccan/opt/opt.h	227;"	d
opt_register_early_noarg	ccan/ccan/opt/opt.h	210;"	d
opt_register_logging	daemon/log.c	/^void opt_register_logging(struct log *log)$/;"	f
opt_register_noarg	ccan/ccan/opt/opt.h	164;"	d
opt_register_table	ccan/ccan/opt/opt.c	/^void opt_register_table(const struct opt_table entry[], const char *desc)$/;"	f
opt_register_version	version.h	9;"	d
opt_set_alloc	ccan/ccan/opt/opt.c	/^void opt_set_alloc(void *(*allocfn)(size_t size),$/;"	f
opt_set_bits	opt_bits.c	/^char *opt_set_bits(const char *arg, u64 *satoshi)$/;"	f
opt_set_bool	ccan/ccan/opt/helpers.c	/^char *opt_set_bool(bool *b)$/;"	f
opt_set_bool_arg	ccan/ccan/opt/helpers.c	/^char *opt_set_bool_arg(const char *arg, bool *b)$/;"	f
opt_set_charp	ccan/ccan/opt/helpers.c	/^char *opt_set_charp(const char *arg, char **p)$/;"	f
opt_set_doubleval	ccan/ccan/opt/helpers.c	/^char *opt_set_doubleval(const char *arg, double *d)$/;"	f
opt_set_floatval	ccan/ccan/opt/helpers.c	/^char *opt_set_floatval(const char *arg, float *f)$/;"	f
opt_set_intval	ccan/ccan/opt/helpers.c	/^char *opt_set_intval(const char *arg, int *i)$/;"	f
opt_set_intval_bi	ccan/ccan/opt/helpers.c	/^char * opt_set_intval_bi(const char *arg, int *i)$/;"	f
opt_set_intval_si	ccan/ccan/opt/helpers.c	/^char * opt_set_intval_si(const char *arg, int *i)$/;"	f
opt_set_invbool	ccan/ccan/opt/helpers.c	/^char *opt_set_invbool(bool *b)$/;"	f
opt_set_invbool_arg	ccan/ccan/opt/helpers.c	/^char *opt_set_invbool_arg(const char *arg, bool *b)$/;"	f
opt_set_longlongval_bi	ccan/ccan/opt/helpers.c	/^char * opt_set_longlongval_bi(const char *arg, long long *ll)$/;"	f
opt_set_longlongval_si	ccan/ccan/opt/helpers.c	/^char * opt_set_longlongval_si(const char *arg, long long *ll)$/;"	f
opt_set_longval	ccan/ccan/opt/helpers.c	/^char *opt_set_longval(const char *arg, long *l)$/;"	f
opt_set_longval_bi	ccan/ccan/opt/helpers.c	/^char * opt_set_longval_bi(const char *arg, long *l)$/;"	f
opt_set_longval_si	ccan/ccan/opt/helpers.c	/^char * opt_set_longval_si(const char *arg, long *l)$/;"	f
opt_set_s32	daemon/options.c	/^static char *opt_set_s32(const char *arg, s32 *u)$/;"	f	file:
opt_set_time	daemon/opt_time.c	/^char *opt_set_time(const char *arg, struct timerel *t)$/;"	f
opt_set_timeabs	daemon/opt_time.c	/^char *opt_set_timeabs(const char *arg, struct timeabs *t)$/;"	f
opt_set_u16	daemon/options.c	/^static char *opt_set_u16(const char *arg, u16 *u)$/;"	f	file:
opt_set_u32	daemon/options.c	/^static char *opt_set_u32(const char *arg, u32 *u)$/;"	f	file:
opt_set_u64	daemon/options.c	/^static char *opt_set_u64(const char *arg, u64 *u)$/;"	f	file:
opt_set_uintval	ccan/ccan/opt/helpers.c	/^char *opt_set_uintval(const char *arg, unsigned int *ui)$/;"	f
opt_set_uintval_bi	ccan/ccan/opt/helpers.c	/^char * opt_set_uintval_bi(const char *arg, unsigned int *u)$/;"	f
opt_set_uintval_si	ccan/ccan/opt/helpers.c	/^char * opt_set_uintval_si(const char *arg, unsigned int *u)$/;"	f
opt_set_ulonglongval_bi	ccan/ccan/opt/helpers.c	/^char * opt_set_ulonglongval_bi(const char *arg, unsigned long long *ll)$/;"	f
opt_set_ulonglongval_si	ccan/ccan/opt/helpers.c	/^char * opt_set_ulonglongval_si(const char *arg, unsigned long long *ll)$/;"	f
opt_set_ulongval	ccan/ccan/opt/helpers.c	/^char *opt_set_ulongval(const char *arg, unsigned long *ul)$/;"	f
opt_set_ulongval_bi	ccan/ccan/opt/helpers.c	/^char * opt_set_ulongval_bi(const char *arg, unsigned long *ul)$/;"	f
opt_set_ulongval_si	ccan/ccan/opt/helpers.c	/^char * opt_set_ulongval_si(const char *arg, unsigned long *ul)$/;"	f
opt_show_bits	opt_bits.c	/^void opt_show_bits(char buf[OPT_SHOW_LEN], const u64 *bits)$/;"	f
opt_show_bool	ccan/ccan/opt/helpers.c	/^void opt_show_bool(char buf[OPT_SHOW_LEN], const bool *b)$/;"	f
opt_show_charp	ccan/ccan/opt/helpers.c	/^void opt_show_charp(char buf[OPT_SHOW_LEN], char *const *p)$/;"	f
opt_show_doubleval	ccan/ccan/opt/helpers.c	/^void opt_show_doubleval(char buf[OPT_SHOW_LEN], const double *d)$/;"	f
opt_show_floatval	ccan/ccan/opt/helpers.c	/^void opt_show_floatval(char buf[OPT_SHOW_LEN], const float *f)$/;"	f
opt_show_intval	ccan/ccan/opt/helpers.c	/^void opt_show_intval(char buf[OPT_SHOW_LEN], const int *i)$/;"	f
opt_show_intval_bi	ccan/ccan/opt/helpers.c	/^void opt_show_intval_bi(char buf[OPT_SHOW_LEN], const int *x)$/;"	f
opt_show_intval_si	ccan/ccan/opt/helpers.c	/^void opt_show_intval_si(char buf[OPT_SHOW_LEN], const int *x)$/;"	f
opt_show_invbool	ccan/ccan/opt/helpers.c	/^void opt_show_invbool(char buf[OPT_SHOW_LEN], const bool *b)$/;"	f
opt_show_longlongval_bi	ccan/ccan/opt/helpers.c	/^void opt_show_longlongval_bi(char buf[OPT_SHOW_LEN], const long long *x)$/;"	f
opt_show_longlongval_si	ccan/ccan/opt/helpers.c	/^void opt_show_longlongval_si(char buf[OPT_SHOW_LEN], const long long *x)$/;"	f
opt_show_longval	ccan/ccan/opt/helpers.c	/^void opt_show_longval(char buf[OPT_SHOW_LEN], const long *l)$/;"	f
opt_show_longval_bi	ccan/ccan/opt/helpers.c	/^void opt_show_longval_bi(char buf[OPT_SHOW_LEN], const long *x)$/;"	f
opt_show_longval_si	ccan/ccan/opt/helpers.c	/^void opt_show_longval_si(char buf[OPT_SHOW_LEN], const long *x)$/;"	f
opt_show_s32	daemon/options.c	/^static void opt_show_s32(char buf[OPT_SHOW_LEN], const s32 *u)$/;"	f	file:
opt_show_time	daemon/opt_time.c	/^void opt_show_time(char buf[OPT_SHOW_LEN], const struct timerel *t)$/;"	f
opt_show_timeabs	daemon/opt_time.c	/^void opt_show_timeabs(char buf[OPT_SHOW_LEN], const struct timeabs *t)$/;"	f
opt_show_u16	daemon/options.c	/^static void opt_show_u16(char buf[OPT_SHOW_LEN], const u16 *u)$/;"	f	file:
opt_show_u32	daemon/options.c	/^static void opt_show_u32(char buf[OPT_SHOW_LEN], const u32 *u)$/;"	f	file:
opt_show_u64	daemon/options.c	/^static void opt_show_u64(char buf[OPT_SHOW_LEN], const u64 *u)$/;"	f	file:
opt_show_uintval	ccan/ccan/opt/helpers.c	/^void opt_show_uintval(char buf[OPT_SHOW_LEN], const unsigned int *ui)$/;"	f
opt_show_uintval_bi	ccan/ccan/opt/helpers.c	/^void opt_show_uintval_bi(char buf[OPT_SHOW_LEN], const unsigned int *x)$/;"	f
opt_show_uintval_si	ccan/ccan/opt/helpers.c	/^void opt_show_uintval_si(char buf[OPT_SHOW_LEN], const unsigned int *x)$/;"	f
opt_show_ulonglongval_bi	ccan/ccan/opt/helpers.c	/^void opt_show_ulonglongval_bi(char buf[OPT_SHOW_LEN], const unsigned long long *x)$/;"	f
opt_show_ulonglongval_si	ccan/ccan/opt/helpers.c	/^void opt_show_ulonglongval_si(char buf[OPT_SHOW_LEN], const unsigned long long *x)$/;"	f
opt_show_ulongval	ccan/ccan/opt/helpers.c	/^void opt_show_ulongval(char buf[OPT_SHOW_LEN], const unsigned long *ul)$/;"	f
opt_show_ulongval_bi	ccan/ccan/opt/helpers.c	/^void opt_show_ulongval_bi(char buf[OPT_SHOW_LEN], const unsigned long *x)$/;"	f
opt_show_ulongval_si	ccan/ccan/opt/helpers.c	/^void opt_show_ulongval_si(char buf[OPT_SHOW_LEN], const unsigned long *x)$/;"	f
opt_table	ccan/ccan/opt/opt.c	/^struct opt_table *opt_table;$/;"	v	typeref:struct:opt_table
opt_table	ccan/ccan/opt/opt.h	/^struct opt_table {$/;"	s
opt_type	ccan/ccan/opt/opt.h	/^enum opt_type {$/;"	g
opt_usage	ccan/ccan/opt/usage.c	/^char *opt_usage(const char *argv0, const char *extra)$/;"	f
opt_usage_and_exit	ccan/ccan/opt/helpers.c	/^char *opt_usage_and_exit(const char *extra)$/;"	f
opt_usage_exit_fail	ccan/ccan/opt/usage.c	/^void opt_usage_exit_fail(const char *msg, ...)$/;"	f
opt_version_and_exit	ccan/ccan/opt/helpers.c	/^char *opt_version_and_exit(const char *version)$/;"	f
options	tools/generate-wire.py	/^options = parser.parse_args()$/;"	v
or2	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128.h	26;"	d
or2	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128_aes128ctr.c	/^void or2(int128 *r, const int128 *x)$/;"	f
order	daemon/peer.h	/^	s64 order;$/;"	m	struct:commit_info
order	test/test_protocol.c	/^	size_t order;$/;"	m	struct:commit_info	file:
order_counter	daemon/peer.h	/^	s64 order_counter;$/;"	m	struct:peer
org.bitcoin	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^package org.bitcoin;$/;"	p
org.bitcoin	secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^package org.bitcoin;$/;"	p
org.bitcoin	secp256k1/src/java/org/bitcoin/NativeSecp256k1Util.java	/^package org.bitcoin;$/;"	p
org.bitcoin	secp256k1/src/java/org/bitcoin/Secp256k1Context.java	/^package org.bitcoin;$/;"	p
other	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb_cast-multi.c	/^struct other {$/;"	s	file:
other	test/test_state_coverage.c	/^	struct peer *other;$/;"	m	struct:peer	typeref:struct:peer::peer	file:
other	test/test_state_coverage.c	/^	struct peer us, other;$/;"	m	struct:fail_details	typeref:struct:fail_details::	file:
other_struct	ccan/ccan/tcon/test/compile_ok-value.c	/^struct other_struct {$/;"	s	file:
our_fee	daemon/peer.h	/^		u64 our_fee;$/;"	m	struct:peer::__anon49
our_htlc_depth	daemon/peer.c	/^static enum watch_result our_htlc_depth(struct peer *peer,$/;"	f	file:
our_htlc_depth_ourcommit	daemon/peer.c	/^static enum watch_result our_htlc_depth_ourcommit(struct peer *peer,$/;"	f	file:
our_htlc_depth_theircommit	daemon/peer.c	/^static enum watch_result our_htlc_depth_theircommit(struct peer *peer,$/;"	f	file:
our_htlc_failed	daemon/peer.c	/^static void our_htlc_failed(struct peer *peer, struct htlc *htlc)$/;"	f	file:
our_htlc_fulfilled	daemon/peer.c	/^static void our_htlc_fulfilled(struct peer *peer, struct htlc *htlc)$/;"	f	file:
our_htlc_spent	daemon/peer.c	/^static enum watch_result our_htlc_spent(struct peer *peer,$/;"	f	file:
our_htlc_timeout_depth	daemon/peer.c	/^static enum watch_result our_htlc_timeout_depth(struct peer *peer,$/;"	f	file:
our_main_output_depth	daemon/peer.c	/^static enum watch_result our_main_output_depth(struct peer *peer,$/;"	f	file:
our_script	daemon/peer.h	/^		u8 *our_script, *their_script;$/;"	m	struct:peer::__anon49
our_sessionpubkey	daemon/cryptopkt.c	/^	u8 our_sessionpubkey[33], their_sessionpubkey[33];$/;"	m	struct:key_negotiate	file:
our_unilateral_depth	daemon/peer.c	/^static enum watch_result our_unilateral_depth(struct peer *peer,$/;"	f	file:
ours	daemon/peer.h	/^		bool ours;$/;"	m	struct:peer::__anon47
out	daemon/cryptopkt.c	/^	struct dir_state in, out;$/;"	m	struct:io_data	typeref:struct:io_data::	file:
out	daemon/routing.h	/^	struct node_connection **in, **out;$/;"	m	struct:node	typeref:struct:node::
out	daemon/watch.h	/^	struct txwatch_output out;$/;"	m	struct:txowatch	typeref:struct:txowatch::txwatch_output
out	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint8_t *out;    \/* output array *\/$/;"	m	struct:Argon2_Context
out	libsodium/test/default/core4.c	/^static unsigned char out[64];$/;"	v	file:
out	libsodium/test/default/core5.c	/^unsigned char out[32];$/;"	v
out	libsodium/test/default/core6.c	/^static unsigned char out[64];$/;"	v	file:
out	lightningd/cryptomsg.c	/^	u8 *out, *in;$/;"	m	struct:crypto_state	file:
out	lightningd/hsm/hsm.c	/^	u8 *out;$/;"	m	struct:conn_info	file:
out1	libsodium/test/default/scalarmult7.c	/^static unsigned char out1[32];$/;"	v	file:
out2	libsodium/test/default/scalarmult7.c	/^static unsigned char out2[32];$/;"	v	file:
out_amount	daemon/peer.h	/^	u64 in_amount, out_amount;$/;"	m	struct:anchor_input
out_fd	lightningd/hsm/hsm.c	/^	int out_fd;$/;"	m	struct:conn_info	file:
out_hex	libsodium/test/default/generichash.c	/^    const char *out_hex;$/;"	m	struct:__anon63	file:
outbuf	daemon/jsonrpc.h	/^	const char *outbuf;$/;"	m	struct:json_connection
outer	ccan/ccan/tcon/test/compile_fail-container1.c	/^struct outer {$/;"	s	file:
outer	ccan/ccan/tcon/test/compile_fail-container1w.c	/^struct outer {$/;"	s	file:
outer	ccan/ccan/tcon/test/compile_fail-container2.c	/^struct outer {$/;"	s	file:
outer	ccan/ccan/tcon/test/compile_fail-container2w.c	/^struct outer {$/;"	s	file:
outer	ccan/ccan/tcon/test/compile_fail-container3.c	/^struct outer {$/;"	s	file:
outer	ccan/ccan/tcon/test/compile_fail-container3w.c	/^struct outer {$/;"	s	file:
outer	ccan/ccan/tcon/test/compile_fail-container4.c	/^struct outer {$/;"	s	file:
outer	ccan/ccan/tcon/test/compile_fail-container4w.c	/^struct outer {$/;"	s	file:
outer	ccan/ccan/tcon/test/compile_ok-container.c	/^struct outer {$/;"	s	file:
outer	ccan/ccan/tcon/test/run-container.c	/^struct outer {$/;"	s	file:
outer	secp256k1/src/hash.h	/^    secp256k1_sha256_t inner, outer;$/;"	m	struct:__anon23
outer0	ccan/ccan/tcon/test/run-container.c	/^struct outer0 {$/;"	s	file:
outer0_val	ccan/ccan/tcon/test/run-container.c	/^	int outer0_val;$/;"	m	struct:outer0	file:
outer_val	ccan/ccan/tcon/test/compile_fail-container1.c	/^	int outer_val;$/;"	m	struct:outer	file:
outer_val	ccan/ccan/tcon/test/compile_fail-container1w.c	/^	int outer_val;$/;"	m	struct:outer	file:
outer_val	ccan/ccan/tcon/test/compile_fail-container2.c	/^	int outer_val;$/;"	m	struct:outer	file:
outer_val	ccan/ccan/tcon/test/compile_fail-container2w.c	/^	int outer_val;$/;"	m	struct:outer	file:
outer_val	ccan/ccan/tcon/test/compile_fail-container3.c	/^	int outer_val;$/;"	m	struct:outer	file:
outer_val	ccan/ccan/tcon/test/compile_fail-container3w.c	/^	int outer_val;$/;"	m	struct:outer	file:
outer_val	ccan/ccan/tcon/test/compile_fail-container4.c	/^	int outer_val;$/;"	m	struct:outer	file:
outer_val	ccan/ccan/tcon/test/compile_fail-container4w.c	/^	int outer_val;$/;"	m	struct:outer	file:
outer_val	ccan/ccan/tcon/test/compile_ok-container.c	/^	int outer_val;$/;"	m	struct:outer	file:
outer_val	ccan/ccan/tcon/test/run-container.c	/^	int outer_val;$/;"	m	struct:outer	file:
outfd	test/test_protocol.c	/^	int infd, outfd, cmdfd, cmddonefd;$/;"	m	struct:peer	file:
outgoing_tx	daemon/peer.h	/^struct outgoing_tx {$/;"	s
outgoing_txs	daemon/peer.h	/^	struct list_head outgoing_txs;$/;"	m	struct:peer	typeref:struct:peer::list_head
outhtlcs	test/test_protocol.c	/^	u32 inhtlcs, outhtlcs;$/;"	m	struct:commit_tx	file:
outlen	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint32_t outlen; \/* digest length *\/$/;"	m	struct:Argon2_Context
outnum	wire/wire.h	/^	u8 outnum : 8;$/;"	m	struct:channel_id
outpkt	daemon/peer.h	/^	Pkt **outpkt;$/;"	m	struct:peer
output	bitcoin/tx.h	/^	struct bitcoin_tx_output *output;$/;"	m	struct:bitcoin_tx	typeref:struct:bitcoin_tx::bitcoin_tx_output
output	ccan/ccan/opt/test/run-checkopt.c	/^static char *output = NULL;$/;"	v	file:
output	ccan/ccan/opt/test/run-helpers.c	/^static char *output = NULL;$/;"	v	file:
output	daemon/bitcoind.c	/^	char *output;$/;"	m	struct:bitcoin_cli	file:
output	daemon/jsonrpc.h	/^	struct list_head output;$/;"	m	struct:json_connection	typeref:struct:json_connection::list_head
output	libsodium/test/default/core3.c	/^static unsigned char output[64 * 256 * 256];$/;"	v	file:
output	libsodium/test/default/stream.c	/^static unsigned char output[4194304];$/;"	v	file:
output	libsodium/test/default/stream2.c	/^static unsigned char output[4194304];$/;"	v	file:
output_better	permute_tx.c	/^static bool output_better(const struct bitcoin_tx_output *a,$/;"	f	file:
output_bytes	daemon/bitcoind.c	/^	size_t output_bytes;$/;"	m	struct:bitcoin_cli	file:
output_enabled	daemon/peer.h	/^	bool output_enabled;$/;"	m	struct:peer
output_index	lightning.pb-c.h	/^  uint32_t output_index;$/;"	m	struct:_OpenAnchor
output_index	wire/test/run-peer-wire.c	/^	u8 output_index;$/;"	m	struct:msg_funding_created	file:
output_init	daemon/bitcoind.c	/^static struct io_plan *output_init(struct io_conn *conn, struct bitcoin_cli *bcli)$/;"	f	file:
outputs	test/test_state_coverage.c	/^	enum state_input *outputs;$/;"	m	struct:hist	typeref:enum:hist::state_input	file:
outputs	test/test_state_coverage.c	/^	enum state_input outputs[MAX_OUTQ];$/;"	m	struct:core_state	typeref:enum:core_state::state_input	file:
outputscript_eq	daemon/peer.c	/^static bool outputscript_eq(const struct bitcoin_tx_output *out,$/;"	f	file:
outstanding_htlc_watches	test/test_state_coverage.c	/^static bool outstanding_htlc_watches(const struct peer *peer)$/;"	f	file:
override_fee_rate	daemon/lightningd.h	/^	u64 override_fee_rate;$/;"	m	struct:config
overrides	ccan/tools/configurator/configurator.c	/^	const char *overrides; \/* On success, force this to '1' *\/$/;"	m	struct:test	file:
owner	lightningd/peer_control.h	/^	struct subdaemon *owner;$/;"	m	struct:peer	typeref:struct:peer::subdaemon
p	ccan/ccan/cast/test/compile_ok-static.c	/^static char *p = cast_const(char *, (const char *)"hello");$/;"	v	file:
p	ccan/ccan/cdump/cdump.c	/^	const char *p;$/;"	m	struct:token	file:
p	ccan/ccan/tcon/test/compile_fail-tcon_cast.c	/^	void *p;$/;"	m	struct:container	file:
p	ccan/ccan/tcon/test/compile_fail-tcon_cast_wrap.c	/^	void *p;$/;"	m	struct:container	file:
p	ccan/ccan/tcon/test/compile_fail-wrap.c	/^	void *p;$/;"	m	struct:container	file:
p	ccan/ccan/tcon/test/compile_fail.c	/^	void *p;$/;"	m	struct:container	file:
p	ccan/ccan/tcon/test/compile_ok-sizeof.c	/^	void *p;$/;"	m	struct:container	file:
p	ccan/ccan/tcon/test/compile_ok-value.c	/^	void *p;$/;"	m	struct:container	file:
p	ccan/ccan/tcon/test/compile_ok-void.c	/^	void *p;$/;"	m	struct:container	file:
p	ccan/ccan/tcon/test/compile_ok.c	/^	void *p;$/;"	m	struct:container	file:
p1	libsodium/test/default/pwhash_scrypt_ll.c	/^static uint32_t p1 = 1U;$/;"	v	file:
p1	libsodium/test/default/scalarmult7.c	/^static unsigned char p1[32] = {$/;"	v	file:
p2	libsodium/test/default/pwhash_scrypt_ll.c	/^static uint32_t p2 = 16U;$/;"	v	file:
p2	libsodium/test/default/scalarmult7.c	/^static unsigned char p2[32] = {$/;"	v	file:
p2c	ccan/ccan/read_write_all/test/run-read_all.c	/^static int p2c[2], c2p[2];$/;"	v	file:
p2sh	daemon/wallet.c	/^	struct ripemd160 p2sh;$/;"	m	struct:wallet	typeref:struct:wallet::ripemd160	file:
p2sh_from_base58	bitcoin/base58.c	/^bool p2sh_from_base58(bool *test_net,$/;"	f
p2sh_to_base58	bitcoin/base58.c	/^char *p2sh_to_base58(const tal_t *ctx, bool test_net,$/;"	f
p2wpkh_scriptcode	bitcoin/script.c	/^u8 *p2wpkh_scriptcode(const tal_t *ctx, const struct pubkey *key)$/;"	f
p3	libsodium/test/default/pwhash_scrypt_ll.c	/^static uint32_t p3 = 1U;$/;"	v	file:
packages	contrib/pylightning/setup.py	/^      packages=['lightning'],$/;"	v
packet	ccan/ccan/io/test/run-17-homemade-io.c	/^struct packet {$/;"	s	file:
pad	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	/^        unsigned long pad[4];$/;"	m	struct:poly1305_state_internal_t
pad	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	/^        unsigned long long pad[2];$/;"	m	struct:poly1305_state_internal_t
pad	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^    uint64_t pad[2];         \/*  16 bytes  *\/$/;"	m	struct:poly1305_state_internal_t	file:
pad	test/test_protocol.c	/^	u16 pad;$/;"	m	struct:commit_info	file:
pad	test/test_state_coverage.c	/^	bool pad[5];$/;"	m	struct:core_state	file:
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm0,%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm0,%xmm4$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm1,%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm1,%xmm2$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm1,%xmm5$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm10,%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm10,%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm11,%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm11,%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm12,%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm13,%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm13,%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm14,%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm14,%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm15,%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm15,%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm2,%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm2,%xmm4$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm3,%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm3,%xmm5$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm4,%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm4,%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm5,%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm5,%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm6,%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm6,%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm7,%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm7,%xmm2$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm8,%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm8,%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm9,%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd %xmm9,%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd 112(%rsp),%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd 128(%rsp),%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd 144(%rsp),%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd 160(%rsp),%xmm2$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd 176(%rsp),%xmm12$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd 192(%rsp),%xmm5$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd 208(%rsp),%xmm6$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd 224(%rsp),%xmm13$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd 240(%rsp),%xmm7$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd 256(%rsp),%xmm8$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd 272(%rsp),%xmm9$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd 288(%rsp),%xmm10$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd 304(%rsp),%xmm14$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd 320(%rsp),%xmm3$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd 336(%rsp),%xmm4$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd 352(%rsp),%xmm15$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd 368(%rsp),%xmm11$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd 64(%rsp),%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd 80(%rsp),%xmm2$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^paddd 96(%rsp),%xmm3$/;"	l
padding	wire/test/run-peer-wire.c	/^	u8 padding[1];$/;"	m	struct:msg_revoke_and_ack	file:
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm0,%xmm0$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm0,%xmm1$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm0,%xmm10$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm0,%xmm11$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm0,%xmm12$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm0,%xmm13$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm0,%xmm14$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm0,%xmm2$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm0,%xmm5$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm0,%xmm6$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm0,%xmm7$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm0,%xmm8$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm0,%xmm9$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm1,%xmm0$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm1,%xmm1$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm1,%xmm10$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm1,%xmm11$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm1,%xmm12$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm1,%xmm13$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm1,%xmm14$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm1,%xmm2$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm1,%xmm3$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm1,%xmm4$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm1,%xmm5$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm1,%xmm6$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm1,%xmm7$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm1,%xmm8$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm1,%xmm9$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm10,%xmm0$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm10,%xmm1$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm10,%xmm10$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm10,%xmm11$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm10,%xmm13$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm10,%xmm2$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm10,%xmm3$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm10,%xmm4$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm10,%xmm5$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm10,%xmm6$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm10,%xmm7$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm10,%xmm8$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm10,%xmm9$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm11,%xmm10$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm11,%xmm2$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm11,%xmm7$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm12,%xmm11$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm12,%xmm4$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm12,%xmm6$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm12,%xmm7$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm13,%xmm11$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm13,%xmm12$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm14,%xmm1$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm14,%xmm13$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm14,%xmm2$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm14,%xmm4$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm14,%xmm5$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm14,%xmm6$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm14,%xmm9$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm15,%xmm0$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm15,%xmm1$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm15,%xmm14$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm15,%xmm5$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm2,%xmm0$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm2,%xmm1$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm2,%xmm10$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm2,%xmm11$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm2,%xmm12$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm2,%xmm13$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm2,%xmm14$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm2,%xmm3$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm2,%xmm4$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm2,%xmm5$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm2,%xmm6$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm2,%xmm7$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm2,%xmm8$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm2,%xmm9$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm3,%xmm0$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm3,%xmm1$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm3,%xmm10$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm3,%xmm11$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm3,%xmm12$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm3,%xmm13$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm3,%xmm14$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm3,%xmm2$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm3,%xmm3$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm3,%xmm4$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm3,%xmm5$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm3,%xmm6$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm3,%xmm7$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm3,%xmm8$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm3,%xmm9$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm4,%xmm0$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm4,%xmm1$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm4,%xmm10$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm4,%xmm11$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm4,%xmm12$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm4,%xmm13$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm4,%xmm14$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm4,%xmm3$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm4,%xmm4$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm4,%xmm5$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm4,%xmm7$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm4,%xmm8$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm4,%xmm9$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm5,%xmm1$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm5,%xmm15$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm5,%xmm5$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm6,%xmm11$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm6,%xmm4$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm7,%xmm0$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm7,%xmm10$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm7,%xmm11$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm7,%xmm12$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm7,%xmm15$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm7,%xmm3$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm7,%xmm5$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm7,%xmm6$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm7,%xmm7$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm7,%xmm8$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm7,%xmm9$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm8,%xmm7$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm9,%xmm0$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm9,%xmm1$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm9,%xmm11$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm9,%xmm12$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm9,%xmm3$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm9,%xmm4$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm9,%xmm6$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm9,%xmm7$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm9,%xmm8$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq %xmm9,%xmm9$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq subc0(%rip),%xmm0$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq subc2(%rip),%xmm2$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq subc2(%rip),%xmm4$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq subc2(%rip),%xmm6$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^paddq subc2(%rip),%xmm8$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm0,%xmm0$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm0,%xmm1$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm0,%xmm10$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm0,%xmm11$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm0,%xmm12$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm0,%xmm13$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm0,%xmm14$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm0,%xmm5$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm0,%xmm6$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm0,%xmm7$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm0,%xmm8$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm0,%xmm9$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm1,%xmm0$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm1,%xmm1$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm1,%xmm10$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm1,%xmm11$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm1,%xmm12$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm1,%xmm13$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm1,%xmm14$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm1,%xmm2$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm1,%xmm3$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm1,%xmm4$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm1,%xmm5$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm1,%xmm6$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm1,%xmm7$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm1,%xmm8$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm1,%xmm9$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm10,%xmm0$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm10,%xmm1$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm10,%xmm10$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm10,%xmm11$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm10,%xmm13$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm10,%xmm2$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm10,%xmm3$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm10,%xmm4$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm10,%xmm5$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm10,%xmm6$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm10,%xmm7$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm10,%xmm8$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm10,%xmm9$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm11,%xmm10$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm11,%xmm2$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm12,%xmm11$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm13,%xmm12$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm14,%xmm1$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm14,%xmm13$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm14,%xmm2$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm14,%xmm4$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm14,%xmm5$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm14,%xmm6$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm14,%xmm9$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm15,%xmm0$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm15,%xmm1$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm15,%xmm14$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm15,%xmm5$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm2,%xmm0$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm2,%xmm1$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm2,%xmm10$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm2,%xmm11$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm2,%xmm12$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm2,%xmm13$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm2,%xmm14$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm2,%xmm3$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm2,%xmm4$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm2,%xmm5$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm2,%xmm6$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm2,%xmm7$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm2,%xmm8$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm2,%xmm9$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm3,%xmm0$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm3,%xmm1$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm3,%xmm10$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm3,%xmm11$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm3,%xmm12$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm3,%xmm13$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm3,%xmm14$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm3,%xmm2$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm3,%xmm3$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm3,%xmm4$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm3,%xmm5$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm3,%xmm6$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm3,%xmm7$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm3,%xmm8$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm3,%xmm9$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm4,%xmm0$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm4,%xmm1$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm4,%xmm10$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm4,%xmm11$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm4,%xmm12$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm4,%xmm13$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm4,%xmm14$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm4,%xmm3$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm4,%xmm4$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm4,%xmm5$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm4,%xmm7$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm4,%xmm8$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm4,%xmm9$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm5,%xmm1$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm5,%xmm15$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm5,%xmm5$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm6,%xmm11$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm7,%xmm0$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm7,%xmm10$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm7,%xmm11$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm7,%xmm12$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm7,%xmm15$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm7,%xmm3$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm7,%xmm5$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm7,%xmm7$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm7,%xmm8$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm7,%xmm9$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm8,%xmm7$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm9,%xmm0$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm9,%xmm1$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm9,%xmm11$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm9,%xmm12$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm9,%xmm3$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm9,%xmm6$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm9,%xmm8$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq %xmm9,%xmm9$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq subc0(%rip),%xmm0$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq subc2(%rip),%xmm2$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq subc2(%rip),%xmm4$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq subc2(%rip),%xmm6$/;"	l
paddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^paddq subc2(%rip),%xmm8$/;"	l
page_size	libsodium/src/libsodium/sodium/utils.c	/^static size_t page_size;$/;"	v	file:
paid	daemon/invoice.c	/^	struct list_head paid, unpaid;$/;"	m	struct:invoices	typeref:struct:invoices::list_head	file:
paid_num	daemon/invoice.h	/^	u64 paid_num;$/;"	m	struct:invoice
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand %xmm10,%xmm13$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand %xmm10,%xmm15$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand m25(%rip),%xmm0$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand m25(%rip),%xmm1$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand m25(%rip),%xmm10$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand m25(%rip),%xmm11$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand m25(%rip),%xmm12$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand m25(%rip),%xmm13$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand m25(%rip),%xmm14$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand m25(%rip),%xmm2$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand m25(%rip),%xmm3$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand m25(%rip),%xmm4$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand m25(%rip),%xmm5$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand m25(%rip),%xmm7$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand m25(%rip),%xmm8$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand m25(%rip),%xmm9$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand m26(%rip),%xmm0$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand m26(%rip),%xmm1$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand m26(%rip),%xmm11$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand m26(%rip),%xmm12$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand m26(%rip),%xmm13$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand m26(%rip),%xmm2$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand m26(%rip),%xmm3$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand m26(%rip),%xmm4$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand m26(%rip),%xmm5$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand m26(%rip),%xmm6$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand m26(%rip),%xmm7$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand m26(%rip),%xmm8$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pand m26(%rip),%xmm9$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand %xmm10,%xmm13$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand %xmm10,%xmm15$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand m25(%rip),%xmm0$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand m25(%rip),%xmm1$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand m25(%rip),%xmm10$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand m25(%rip),%xmm11$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand m25(%rip),%xmm12$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand m25(%rip),%xmm13$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand m25(%rip),%xmm14$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand m25(%rip),%xmm2$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand m25(%rip),%xmm3$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand m25(%rip),%xmm4$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand m25(%rip),%xmm5$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand m25(%rip),%xmm7$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand m25(%rip),%xmm8$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand m25(%rip),%xmm9$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand m26(%rip),%xmm0$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand m26(%rip),%xmm1$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand m26(%rip),%xmm11$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand m26(%rip),%xmm12$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand m26(%rip),%xmm13$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand m26(%rip),%xmm2$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand m26(%rip),%xmm3$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand m26(%rip),%xmm4$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand m26(%rip),%xmm5$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand m26(%rip),%xmm6$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand m26(%rip),%xmm7$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand m26(%rip),%xmm8$/;"	l
pand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pand m26(%rip),%xmm9$/;"	l
params	irc.h	/^	const char *params;$/;"	m	struct:irccommand
parent	ccan/ccan/fdpass/test/run.c	/^static void parent(int sockfd)$/;"	f	file:
parent	ccan/ccan/list/test/run-list_prev-list_next.c	/^struct parent {$/;"	s	file:
parent	ccan/ccan/list/test/run-single-eval.c	/^struct parent {$/;"	s	file:
parent	ccan/ccan/list/test/run.c	/^struct parent {$/;"	s	file:
parent	ccan/ccan/tal/benchmark/samba-allocs.c	/^	struct node *parent;$/;"	m	struct:node	typeref:struct:node::node	file:
parent	ccan/ccan/tal/tal.c	/^	struct tal_hdr *parent;$/;"	m	struct:children	typeref:struct:children::tal_hdr	file:
parent	ccan/ccan/tal/test/run-destructor.c	/^static char *parent, *child;$/;"	v	file:
parent	daemon/jsmn/jsmn.h	/^	int parent;$/;"	m	struct:__anon58
parent_child	ccan/ccan/tal/tal.c	/^	struct children *parent_child;$/;"	m	struct:tal_hdr	typeref:struct:tal_hdr::children	file:
parse	ccan/ccan/tal/benchmark/samba-allocs.c	/^static struct node *parse(const char *line)$/;"	f	file:
parse_args	ccan/ccan/opt/test/utils.c	/^bool parse_args(int *argc, char ***argv, ...)$/;"	f
parse_cmdline	daemon/test/scripts/helpers.sh	/^parse_cmdline()$/;"	f
parse_early_args	ccan/ccan/opt/test/utils.c	/^bool parse_early_args(int *argc, char ***argv, ...)$/;"	f
parse_err	ccan/ccan/opt/parse.c	/^static int parse_err(void (*errlog)(const char *fmt, ...),$/;"	f	file:
parse_hoppayload	daemon/sphinx.c	/^static struct hoppayload *parse_hoppayload(const tal_t *ctx, u8 *src)$/;"	f	file:
parse_one	ccan/ccan/opt/parse.c	/^int parse_one(int *argc, char *argv[], enum opt_type is_early, unsigned *offset,$/;"	f
parse_onionpacket	daemon/sphinx.c	/^struct onionpacket *parse_onionpacket($/;"	f
parse_request	daemon/jsonrpc.c	/^static void parse_request(struct json_connection *jcon, const jsmntok_t tok[])$/;"	f	file:
parse_state	ccan/ccan/cdump/cdump.c	/^struct parse_state {$/;"	s	file:
parser	tools/generate-wire.py	/^parser = argparse.ArgumentParser(description='Generate C from from CSV')$/;"	v
parts	tools/generate-wire.py	/^    parts = by_comments[0].split(',')$/;"	v
pass	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    uint32_t pass;$/;"	m	struct:Argon2_position_t
pass_hsmfd_ecdh	lightningd/hsm/hsm.c	/^static u8 *pass_hsmfd_ecdh(struct io_conn *conn,$/;"	f	file:
passes	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    uint32_t passes;        \/* Number of passes *\/$/;"	m	struct:Argon2_instance_t
password1	libsodium/test/default/pwhash_scrypt_ll.c	/^static const char *password1 = "";$/;"	v	file:
password2	libsodium/test/default/pwhash_scrypt_ll.c	/^static const char *password2 = "password";$/;"	v	file:
password3	libsodium/test/default/pwhash_scrypt_ll.c	/^static const char *password3 = "pleaseletmein";$/;"	v	file:
path_basename	ccan/ccan/tal/path/path.c	/^char *path_basename(const tal_t *ctx, const char *path)$/;"	f
path_canon	ccan/ccan/tal/path/path.c	/^char *path_canon(const tal_t *ctx, const char *a)$/;"	f
path_cwd	ccan/ccan/tal/path/path.c	/^char *path_cwd(const tal_t *ctx)$/;"	f
path_dirname	ccan/ccan/tal/path/path.c	/^char *path_dirname(const tal_t *ctx, const char *path)$/;"	f
path_ext_off	ccan/ccan/tal/path/path.c	/^size_t path_ext_off(const char *path)$/;"	f
path_is_abs	ccan/ccan/tal/path/path.c	/^bool path_is_abs(const char *path)$/;"	f
path_is_dir	ccan/ccan/tal/path/path.c	/^bool path_is_dir(const char *path)$/;"	f
path_is_file	ccan/ccan/tal/path/path.c	/^bool path_is_file(const char *path)$/;"	f
path_join	ccan/ccan/tal/path/path.c	/^char *path_join(const tal_t *ctx, const char *base, const char *a)$/;"	f
path_popd	ccan/ccan/tal/path/path.c	/^bool path_popd(struct path_pushd *olddir)$/;"	f
path_pushd	ccan/ccan/tal/path/path.c	/^struct path_pushd *path_pushd(const tal_t *ctx, const char *dir)$/;"	f
path_pushd	ccan/ccan/tal/path/path.c	/^struct path_pushd {$/;"	s	file:
path_readlink	ccan/ccan/tal/path/path.c	/^ char *path_readlink(const tal_t *ctx, const char *linkname)$/;"	f
path_rel	ccan/ccan/tal/path/path.c	/^char *path_rel(const tal_t *ctx, const char *from, const char *to)$/;"	f
path_simplify	ccan/ccan/tal/path/path.c	/^char *path_simplify(const tal_t *ctx, const char *path)$/;"	f
path_split	ccan/ccan/tal/path/path.c	/^char **path_split(const tal_t *ctx, const char *path)$/;"	f
pay	contrib/pylightning/lightning/lightning.py	/^    def pay(self, destination, amount, paymenthash):$/;"	m	class:LegacyLightningRpc
pay_add	daemon/pay.c	/^bool pay_add(struct lightningd_state *dstate,$/;"	f
pay_command	daemon/pay.c	/^struct pay_command {$/;"	s	file:
pay_commands	daemon/lightningd.h	/^	struct list_head pay_commands;$/;"	m	struct:lightningd_state	typeref:struct:lightningd_state::list_head
pay_fee	daemon/channel.c	/^static uint64_t pay_fee(struct channel_oneside *side, uint64_t fee_msat)$/;"	f	file:
pay_msat	daemon/channel.h	/^	uint64_t pay_msat, fee_msat;$/;"	m	struct:channel_oneside
payload	daemon/broadcast.h	/^	u8 *payload;$/;"	m	struct:queued_message
payment_basepoint	wire/test/run-peer-wire.c	/^	struct pubkey payment_basepoint;$/;"	m	struct:msg_accept_channel	typeref:struct:msg_accept_channel::pubkey	file:
payment_basepoint	wire/test/run-peer-wire.c	/^	struct pubkey payment_basepoint;$/;"	m	struct:msg_open_channel	typeref:struct:msg_open_channel::pubkey	file:
payment_hash	wire/test/run-peer-wire.c	/^	struct sha256 payment_hash;$/;"	m	struct:msg_update_add_htlc	typeref:struct:msg_update_add_htlc::sha256	file:
payment_preimage	wire/test/run-peer-wire.c	/^	struct sha256 payment_preimage;$/;"	m	struct:msg_update_fulfill_htlc	typeref:struct:msg_update_fulfill_htlc::sha256	file:
pbkdf2_sha256_H	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.h	29;"	d
pclose	ccan/tools/configurator/configurator.c	38;"	d	file:
pdfdir	libsodium/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	libsodium/dist-build/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	libsodium/msvc-scripts/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	libsodium/src/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	libsodium/src/libsodium/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	libsodium/src/libsodium/include/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	libsodium/test/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	libsodium/test/default/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	secp256k1/Makefile	/^pdfdir = ${docdir}$/;"	m
peer	daemon/cryptopkt.c	/^	struct peer *peer;$/;"	m	struct:io_data	typeref:struct:io_data::peer	file:
peer	daemon/htlc.h	/^	struct peer *peer;$/;"	m	struct:htlc	typeref:struct:htlc::peer
peer	daemon/peer.h	/^	struct peer *peer;$/;"	m	struct:outgoing_tx	typeref:struct:outgoing_tx::peer
peer	daemon/peer.h	/^struct peer {$/;"	s
peer	daemon/watch.h	/^	struct peer *peer;$/;"	m	struct:txowatch	typeref:struct:txowatch::peer
peer	daemon/watch.h	/^	struct peer *peer;$/;"	m	struct:txwatch	typeref:struct:txwatch::peer
peer	lightningd/cryptomsg.c	/^	struct peer *peer;$/;"	m	struct:crypto_state	typeref:struct:crypto_state::peer	file:
peer	lightningd/gossip/gossip.c	/^struct peer {$/;"	s	file:
peer	lightningd/peer_control.h	/^struct peer {$/;"	s
peer	test/test_protocol.c	/^struct peer {$/;"	s	file:
peer	test/test_state_coverage.c	/^struct peer {$/;"	s	file:
peer_add_their_commit	daemon/peer.c	/^void peer_add_their_commit(struct peer *peer,$/;"	f
peer_address	daemon/peer.h	/^struct peer_address {$/;"	s
peer_bad_message	lightningd/gossip_control.c	/^static void peer_bad_message(struct subdaemon *gossip, const u8 *msg)$/;"	f	file:
peer_breakdown	daemon/peer.c	/^static void peer_breakdown(struct peer *peer)$/;"	f	file:
peer_by_unique_id	lightningd/peer_control.c	/^struct peer *peer_by_unique_id(struct lightningd *ld, u64 unique_id)$/;"	f
peer_calculate_close_fee	daemon/peer.c	/^static void peer_calculate_close_fee(struct peer *peer)$/;"	f	file:
peer_close	daemon/peer.c	/^static struct io_plan *peer_close(struct io_conn *conn, struct peer *peer)$/;"	f	file:
peer_commitsigs_received	daemon/peer.c	/^static u64 peer_commitsigs_received(struct peer *peer)$/;"	f	file:
peer_comms_err	daemon/peer.c	/^static bool peer_comms_err(struct peer *peer, Pkt *err)$/;"	f	file:
peer_connected_in	daemon/peer.c	/^static struct io_plan *peer_connected_in(struct io_conn *conn,$/;"	f	file:
peer_connected_out	daemon/peer.c	/^static struct io_plan *peer_connected_out(struct io_conn *conn,$/;"	f	file:
peer_create_close_tx	daemon/peer.c	/^struct bitcoin_tx *peer_create_close_tx(const tal_t *ctx,$/;"	f
peer_crypto_on	daemon/peer.c	/^static struct io_plan *peer_crypto_on(struct io_conn *conn, struct peer *peer)$/;"	f	file:
peer_crypto_setup	daemon/cryptopkt.h	26;"	d
peer_crypto_setup_	daemon/cryptopkt.c	/^struct io_plan *peer_crypto_setup_(struct io_conn *conn,$/;"	f
peer_database_err	daemon/peer.c	/^static bool peer_database_err(struct peer *peer)$/;"	f	file:
peer_decrypt_body	lightningd/cryptomsg.c	/^static struct io_plan *peer_decrypt_body(struct io_conn *conn,$/;"	f	file:
peer_decrypt_header	lightningd/cryptomsg.c	/^static struct io_plan *peer_decrypt_header(struct io_conn *conn,$/;"	f	file:
peer_depth_ok	daemon/peer.c	/^static void peer_depth_ok(struct peer *peer)$/;"	f	file:
peer_disconnect	daemon/peer.c	/^static void peer_disconnect(struct io_conn *conn, struct peer *peer)$/;"	f	file:
peer_dump_gossip	lightningd/gossip/gossip.c	/^static struct io_plan *peer_dump_gossip(struct io_conn *conn, struct peer *peer)$/;"	f	file:
peer_fail	daemon/peer.c	/^void peer_fail(struct peer *peer, const char *caller)$/;"	f
peer_failed	daemon/peer.c	/^static void peer_failed(struct lightningd_state *dstate,$/;"	f	file:
peer_first_connected	daemon/peer.c	/^static bool peer_first_connected(struct peer *peer,$/;"	f	file:
peer_get_revocation_hash	daemon/secrets.c	/^void peer_get_revocation_hash(const struct peer *peer, u64 index,$/;"	f
peer_get_revocation_preimage	daemon/secrets.c	/^void peer_get_revocation_preimage(const struct peer *peer, u64 index,$/;"	f
peer_got_hsmfd	lightningd/peer_control.c	/^static void peer_got_hsmfd(struct subdaemon *hsm, const u8 *msg,$/;"	f	file:
peer_has_connected	daemon/peer.c	/^static void peer_has_connected(struct peer *peer)$/;"	f	file:
peer_htlc_aborted	test/test_state_coverage.c	/^void peer_htlc_aborted(struct peer *peer)$/;"	f
peer_htlc_declined	test/test_state_coverage.c	/^void peer_htlc_declined(struct peer *peer, const Pkt *pkt)$/;"	f
peer_htlc_done	test/test_state_coverage.c	/^void peer_htlc_done(struct peer *peer)$/;"	f
peer_htlc_ours_deferred	test/test_state_coverage.c	/^void peer_htlc_ours_deferred(struct peer *peer)$/;"	f
peer_in	lightningd/peer_control.c	/^static struct io_plan *peer_in(struct io_conn *conn, struct lightningd *ld)$/;"	f	file:
peer_init	test/test_state_coverage.c	/^static void peer_init(struct peer *peer,$/;"	f	file:
peer_init_sent	lightningd/gossip/gossip.c	/^static struct io_plan *peer_init_sent(struct io_conn *conn, struct peer *peer)$/;"	f	file:
peer_msgin	lightningd/gossip/gossip.c	/^static struct io_plan *peer_msgin(struct io_conn *conn,$/;"	f	file:
peer_new_htlc	daemon/peer.c	/^struct htlc *peer_new_htlc(struct peer *peer,$/;"	f
peer_nongossip	lightningd/gossip_control.c	/^static void peer_nongossip(struct subdaemon *gossip, const u8 *msg, int fd)$/;"	f	file:
peer_open_complete	daemon/peer.c	/^static void peer_open_complete(struct peer *peer, const char *problem)$/;"	f	file:
peer_out	lightningd/peer_control.c	/^static struct io_plan *peer_out(struct io_conn *conn,$/;"	f	file:
peer_parse_init	lightningd/gossip/gossip.c	/^static struct io_plan *peer_parse_init(struct io_conn *conn,$/;"	f	file:
peer_read_message	lightningd/cryptomsg.c	/^struct io_plan *peer_read_message(struct io_conn *conn,$/;"	f
peer_read_packet	daemon/cryptopkt.c	/^struct io_plan *peer_read_packet(struct io_conn *conn,$/;"	f
peer_ready	lightningd/gossip_control.c	/^static void peer_ready(struct subdaemon *gossip, const u8 *msg)$/;"	f	file:
peer_received_unexpected_pkt	daemon/peer.c	/^static bool peer_received_unexpected_pkt(struct peer *peer, const Pkt *pkt,$/;"	f	file:
peer_reconnect	daemon/peer.c	/^static struct io_plan *peer_reconnect(struct io_conn *conn, struct peer *peer)$/;"	f	file:
peer_reconnected	daemon/peer.c	/^static bool peer_reconnected(struct peer *peer,$/;"	f	file:
peer_revocations_received	daemon/peer.c	/^static u64 peer_revocations_received(struct peer *peer)$/;"	f	file:
peer_secrets	daemon/secrets.c	/^struct peer_secrets {$/;"	s	file:
peer_secrets_for_db	daemon/secrets.c	/^const char *peer_secrets_for_db(const tal_t *ctx, struct peer *peer)$/;"	f
peer_secrets_init	daemon/secrets.c	/^void peer_secrets_init(struct peer *peer)$/;"	f
peer_send_init	daemon/peer.c	/^static struct io_plan *peer_send_init(struct io_conn *conn, struct peer *peer)$/;"	f	file:
peer_send_init	lightningd/gossip/gossip.c	/^static struct io_plan *peer_send_init(struct io_conn *conn, struct peer *peer)$/;"	f	file:
peer_set_condition	lightningd/peer_control.c	/^void peer_set_condition(struct peer *peer, const char *fmt, ...)$/;"	f
peer_set_secrets_from_db	daemon/secrets.c	/^void peer_set_secrets_from_db(struct peer *peer,$/;"	f
peer_sign_htlc_fulfill	daemon/secrets.c	/^void peer_sign_htlc_fulfill(const struct peer *peer,$/;"	f
peer_sign_htlc_refund	daemon/secrets.c	/^void peer_sign_htlc_refund(const struct peer *peer,$/;"	f
peer_sign_mutual_close	daemon/secrets.c	/^void peer_sign_mutual_close(const struct peer *peer,$/;"	f
peer_sign_ourcommit	daemon/secrets.c	/^void peer_sign_ourcommit(const struct peer *peer,$/;"	f
peer_sign_spend	daemon/secrets.c	/^void peer_sign_spend(const struct peer *peer,$/;"	f
peer_sign_steal_input	daemon/secrets.c	/^void peer_sign_steal_input(const struct peer *peer,$/;"	f
peer_sign_theircommit	daemon/secrets.c	/^void peer_sign_theircommit(const struct peer *peer,$/;"	f
peer_start_shutdown	daemon/peer.c	/^static bool peer_start_shutdown(struct peer *peer)$/;"	f	file:
peer_tx_revealed_r_value	test/test_state_coverage.c	/^const struct htlc *peer_tx_revealed_r_value(struct peer *peer,$/;"	f
peer_uncommitted_changes	daemon/peer.c	/^static bool peer_uncommitted_changes(const struct peer *peer)$/;"	f	file:
peer_unexpected_pkt	test/test_state_coverage.c	/^void peer_unexpected_pkt(struct peer *peer, const Pkt *pkt)$/;"	f
peer_unwatch_all_htlc_outputs	test/test_state_coverage.c	/^void peer_unwatch_all_htlc_outputs(struct peer *peer)$/;"	f
peer_unwatch_anchor_depth	test/test_state_coverage.c	/^void peer_unwatch_anchor_depth(struct peer *peer,$/;"	f
peer_unwatch_close_timeout	test/test_state_coverage.c	/^void peer_unwatch_close_timeout(struct peer *peer, enum state_input timedout)$/;"	f
peer_unwatch_htlc_output	test/test_state_coverage.c	/^void peer_unwatch_htlc_output(struct peer *peer,$/;"	f
peer_unwatch_htlc_spend	test/test_state_coverage.c	/^void peer_unwatch_htlc_spend(struct peer *peer,$/;"	f
peer_update_complete	daemon/peer.c	/^static void peer_update_complete(struct peer *peer)$/;"	f	file:
peer_visible_state	daemon/peer.h	/^struct peer_visible_state {$/;"	s
peer_watch_anchor	daemon/peer.c	/^void peer_watch_anchor(struct peer *peer, int depth)$/;"	f
peer_watch_anchor	test/test_state_coverage.c	/^void peer_watch_anchor(struct peer *peer,$/;"	f
peer_watch_close	test/test_state_coverage.c	/^void peer_watch_close(struct peer *peer,$/;"	f
peer_watch_delayed	test/test_state_coverage.c	/^void peer_watch_delayed(struct peer *peer,$/;"	f
peer_watch_htlc_spend	test/test_state_coverage.c	/^void peer_watch_htlc_spend(struct peer *peer,$/;"	f
peer_watch_our_htlc_outputs	test/test_state_coverage.c	/^bool peer_watch_our_htlc_outputs(struct peer *peer,$/;"	f
peer_watch_their_htlc_outputs	test/test_state_coverage.c	/^bool peer_watch_their_htlc_outputs(struct peer *peer,$/;"	f
peer_watch_tx	test/test_state_coverage.c	/^void peer_watch_tx(struct peer *peer,$/;"	f
peer_write_done	lightningd/cryptomsg.c	/^static struct io_plan *peer_write_done(struct io_conn *conn,$/;"	f	file:
peer_write_message	lightningd/cryptomsg.c	/^struct io_plan *peer_write_message(struct io_conn *conn,$/;"	f
peer_write_packet	daemon/cryptopkt.c	/^struct io_plan *peer_write_packet(struct io_conn *conn,$/;"	f
peercond	test/test_state_coverage.c	/^	uint8_t peercond;$/;"	m	struct:core_state	file:
peers	daemon/lightningd.h	/^	struct list_head peers;$/;"	m	struct:lightningd_state	typeref:struct:lightningd_state::list_head
peers	lightningd/gossip/gossip.c	/^	struct list_head peers;$/;"	m	struct:daemon	typeref:struct:daemon::list_head	file:
peers	lightningd/lightningd.h	/^	struct list_head peers;$/;"	m	struct:lightningd	typeref:struct:lightningd::list_head
peers_new_block	daemon/peer.c	/^void peers_new_block(struct lightningd_state *dstate, unsigned int height)$/;"	f
per_commitment_secret	wire/test/run-peer-wire.c	/^	struct sha256 per_commitment_secret;$/;"	m	struct:msg_revoke_and_ack	typeref:struct:msg_revoke_and_ack::sha256	file:
per_micro_satoshi	lightning.pb-c.h	/^  int32_t per_micro_satoshi;$/;"	m	struct:_Funding
per_state_bits	daemon/feechange.c	/^static const int per_state_bits[] = {$/;"	v	file:
per_state_bits	daemon/htlc_state.c	/^static const int per_state_bits[] = {$/;"	v	file:
perfect	ccan/ccan/htable/tools/speed.c	/^static size_t perfect(const struct htable *ht)$/;"	f	file:
perfect_bit	ccan/ccan/htable/htable.h	/^	uintptr_t perfect_bit;$/;"	m	struct:htable
permute_inputs	permute_tx.c	/^void permute_inputs(struct bitcoin_tx_input *inputs, size_t num_inputs)$/;"	f
permute_outputs	permute_tx.c	/^void permute_outputs(struct bitcoin_tx_output *outputs,$/;"	f
personal	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	/^  uint8_t  personal[BLAKE2B_PERSONALBYTES];  \/* 64 *\/$/;"	m	struct:blake2b_param_
pi	daemon/sphinx.c	/^	u8 pi[KEY_LEN];$/;"	m	struct:keyset	file:
pickparams	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^pickparams(unsigned long long opslimit, const size_t memlimit,$/;"	f	file:
pid	daemon/bitcoind.c	/^	pid_t pid;$/;"	m	struct:bitcoin_cli	file:
pid	daemon/dns.c	/^	int pid;$/;"	m	struct:dns_async	file:
pid	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^    pid_t         pid;$/;"	m	struct:Salsa20Random_	file:
pid	lightningd/subdaemon.h	/^	int pid;$/;"	m	struct:subdaemon
pipecmd	ccan/ccan/pipecmd/pipecmd.c	/^pid_t pipecmd(int *fd_fromchild, int *fd_tochild, int *fd_errfromchild,$/;"	f
pipecmdarr	ccan/ccan/pipecmd/pipecmd.c	/^pid_t pipecmdarr(int *fd_fromchild, int *fd_tochild, int *fd_errfromchild,$/;"	f
pipecmdv	ccan/ccan/pipecmd/pipecmd.c	/^pid_t pipecmdv(int *fd_fromchild, int *fd_tochild, int *fd_errfromchild,$/;"	f
pk	libsodium/test/default/sign.c	/^    const unsigned char  pk[crypto_sign_PUBLICKEYBYTES];$/;"	m	struct:TestData_	file:
pkgconfig_DATA	libsodium/Makefile	/^pkgconfig_DATA = libsodium.pc$/;"	m
pkgconfig_DATA	secp256k1/Makefile	/^pkgconfig_DATA = libsecp256k1.pc$/;"	m
pkgconfigdir	libsodium/Makefile	/^pkgconfigdir = $(libdir)\/pkgconfig$/;"	m
pkgconfigdir	secp256k1/Makefile	/^pkgconfigdir = $(libdir)\/pkgconfig$/;"	m
pkgdatadir	libsodium/Makefile	/^pkgdatadir = $(datadir)\/libsodium$/;"	m
pkgdatadir	libsodium/dist-build/Makefile	/^pkgdatadir = $(datadir)\/libsodium$/;"	m
pkgdatadir	libsodium/msvc-scripts/Makefile	/^pkgdatadir = $(datadir)\/libsodium$/;"	m
pkgdatadir	libsodium/src/Makefile	/^pkgdatadir = $(datadir)\/libsodium$/;"	m
pkgdatadir	libsodium/src/libsodium/Makefile	/^pkgdatadir = $(datadir)\/libsodium$/;"	m
pkgdatadir	libsodium/src/libsodium/include/Makefile	/^pkgdatadir = $(datadir)\/libsodium$/;"	m
pkgdatadir	libsodium/test/Makefile	/^pkgdatadir = $(datadir)\/libsodium$/;"	m
pkgdatadir	libsodium/test/default/Makefile	/^pkgdatadir = $(datadir)\/libsodium$/;"	m
pkgdatadir	secp256k1/Makefile	/^pkgdatadir = $(datadir)\/libsecp256k1$/;"	m
pkgincludedir	libsodium/Makefile	/^pkgincludedir = $(includedir)\/libsodium$/;"	m
pkgincludedir	libsodium/dist-build/Makefile	/^pkgincludedir = $(includedir)\/libsodium$/;"	m
pkgincludedir	libsodium/msvc-scripts/Makefile	/^pkgincludedir = $(includedir)\/libsodium$/;"	m
pkgincludedir	libsodium/src/Makefile	/^pkgincludedir = $(includedir)\/libsodium$/;"	m
pkgincludedir	libsodium/src/libsodium/Makefile	/^pkgincludedir = $(includedir)\/libsodium$/;"	m
pkgincludedir	libsodium/src/libsodium/include/Makefile	/^pkgincludedir = $(includedir)\/libsodium$/;"	m
pkgincludedir	libsodium/test/Makefile	/^pkgincludedir = $(includedir)\/libsodium$/;"	m
pkgincludedir	libsodium/test/default/Makefile	/^pkgincludedir = $(includedir)\/libsodium$/;"	m
pkgincludedir	secp256k1/Makefile	/^pkgincludedir = $(includedir)\/libsecp256k1$/;"	m
pkglibdir	libsodium/Makefile	/^pkglibdir = $(libdir)\/libsodium$/;"	m
pkglibdir	libsodium/dist-build/Makefile	/^pkglibdir = $(libdir)\/libsodium$/;"	m
pkglibdir	libsodium/msvc-scripts/Makefile	/^pkglibdir = $(libdir)\/libsodium$/;"	m
pkglibdir	libsodium/src/Makefile	/^pkglibdir = $(libdir)\/libsodium$/;"	m
pkglibdir	libsodium/src/libsodium/Makefile	/^pkglibdir = $(libdir)\/libsodium$/;"	m
pkglibdir	libsodium/src/libsodium/include/Makefile	/^pkglibdir = $(libdir)\/libsodium$/;"	m
pkglibdir	libsodium/test/Makefile	/^pkglibdir = $(libdir)\/libsodium$/;"	m
pkglibdir	libsodium/test/default/Makefile	/^pkglibdir = $(libdir)\/libsodium$/;"	m
pkglibdir	secp256k1/Makefile	/^pkglibdir = $(libdir)\/libsecp256k1$/;"	m
pkglibexecdir	libsodium/Makefile	/^pkglibexecdir = $(libexecdir)\/libsodium$/;"	m
pkglibexecdir	libsodium/dist-build/Makefile	/^pkglibexecdir = $(libexecdir)\/libsodium$/;"	m
pkglibexecdir	libsodium/msvc-scripts/Makefile	/^pkglibexecdir = $(libexecdir)\/libsodium$/;"	m
pkglibexecdir	libsodium/src/Makefile	/^pkglibexecdir = $(libexecdir)\/libsodium$/;"	m
pkglibexecdir	libsodium/src/libsodium/Makefile	/^pkglibexecdir = $(libexecdir)\/libsodium$/;"	m
pkglibexecdir	libsodium/src/libsodium/include/Makefile	/^pkglibexecdir = $(libexecdir)\/libsodium$/;"	m
pkglibexecdir	libsodium/test/Makefile	/^pkglibexecdir = $(libexecdir)\/libsodium$/;"	m
pkglibexecdir	libsodium/test/default/Makefile	/^pkglibexecdir = $(libexecdir)\/libsodium$/;"	m
pkglibexecdir	secp256k1/Makefile	/^pkglibexecdir = $(libexecdir)\/libsecp256k1$/;"	m
pkt	test/test_state_coverage.c	/^		enum state_input pkt;$/;"	m	struct:hist::state_dump	typeref:enum:hist::state_dump::state_input	file:
pkt	test/test_state_coverage.c	/^	const char *pkt;$/;"	m	struct:dot_edge	file:
pkt__descriptor	lightning.pb-c.c	/^const ProtobufCMessageDescriptor pkt__descriptor =$/;"	v
pkt__field_descriptors	lightning.pb-c.c	/^static const ProtobufCFieldDescriptor pkt__field_descriptors[16] =$/;"	v	file:
pkt__field_indices_by_name	lightning.pb-c.c	/^static const unsigned pkt__field_indices_by_name[] = {$/;"	v	file:
pkt__free_unpacked	lightning.pb-c.c	/^void   pkt__free_unpacked$/;"	f
pkt__get_packed_size	lightning.pb-c.c	/^size_t pkt__get_packed_size$/;"	f
pkt__init	lightning.pb-c.c	/^void   pkt__init$/;"	f
pkt__number_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange pkt__number_ranges[6 + 1] =$/;"	v	file:
pkt__pack	lightning.pb-c.c	/^size_t pkt__pack$/;"	f
pkt__pack_to_buffer	lightning.pb-c.c	/^size_t pkt__pack_to_buffer$/;"	f
pkt__unpack	lightning.pb-c.c	/^       pkt__unpack$/;"	f
pkt_anchor	test/test_state_coverage.c	/^Pkt *pkt_anchor(const tal_t *ctx, const struct peer *peer)$/;"	f
pkt_case	lightning.pb-c.h	/^  Pkt__PktCase pkt_case;$/;"	m	struct:_Pkt
pkt_close	test/test_state_coverage.c	/^Pkt *pkt_close(const tal_t *ctx, const struct peer *peer)$/;"	f
pkt_close_ack	test/test_state_coverage.c	/^Pkt *pkt_close_ack(const tal_t *ctx, const struct peer *peer)$/;"	f
pkt_close_complete	test/test_state_coverage.c	/^Pkt *pkt_close_complete(const tal_t *ctx, const struct peer *peer)$/;"	f
pkt_data	test/test_state_coverage.c	/^	unsigned int pkt_data[MAX_OUTQ];$/;"	m	struct:peer	file:
pkt_err	daemon/packets.c	/^Pkt *pkt_err(struct peer *peer, const char *msg, ...)$/;"	f
pkt_err	test/test_state_coverage.c	/^Pkt *pkt_err(const tal_t *ctx, const char *fmt, ...)$/;"	f
pkt_err_unexpected	daemon/packets.c	/^Pkt *pkt_err_unexpected(struct peer *peer, const Pkt *pkt)$/;"	f
pkt_err_unexpected	test/test_state_coverage.c	/^Pkt *pkt_err_unexpected(const tal_t *ctx, const Pkt *pkt)$/;"	f
pkt_htlc_add	test/test_state_coverage.c	/^Pkt *pkt_htlc_add(const tal_t *ctx, const struct peer *peer,$/;"	f
pkt_htlc_fail	test/test_state_coverage.c	/^Pkt *pkt_htlc_fail(const tal_t *ctx, const struct peer *peer,$/;"	f
pkt_htlc_fulfill	test/test_state_coverage.c	/^Pkt *pkt_htlc_fulfill(const tal_t *ctx, const struct peer *peer,$/;"	f
pkt_in	daemon/peer.c	/^static struct io_plan *pkt_in(struct io_conn *conn, struct peer *peer)$/;"	f	file:
pkt_init	daemon/packets.c	/^Pkt *pkt_init(struct peer *peer, u64 ack)$/;"	f
pkt_len	daemon/cryptopkt.c	/^	size_t pkt_len;$/;"	m	struct:dir_state	file:
pkt_name	daemon/names.c	/^const char *pkt_name(Pkt__PktCase pkt)$/;"	f
pkt_open	test/test_state_coverage.c	/^Pkt *pkt_open(const tal_t *ctx, const struct peer *peer,$/;"	f
pkt_open_commit_sig	test/test_state_coverage.c	/^Pkt *pkt_open_commit_sig(const tal_t *ctx, const struct peer *peer)$/;"	f
pkt_open_complete	test/test_state_coverage.c	/^Pkt *pkt_open_complete(const tal_t *ctx, const struct peer *peer)$/;"	f
pkt_out	daemon/peer.c	/^static struct io_plan *pkt_out(struct io_conn *conn, struct peer *peer)$/;"	f	file:
pkt_out	lightningd/gossip/gossip.c	/^static struct io_plan *pkt_out(struct io_conn *conn, struct peer *peer)$/;"	f	file:
pkt_sent	test/test_state_coverage.c	/^	const char *pkt_sent;$/;"	m	struct:trail	file:
pkt_unwrap	daemon/cryptopkt.c	/^static void *pkt_unwrap(Pkt *inpkt, struct log *log, Pkt__PktCase which)$/;"	f	file:
pkt_update_accept	test/test_state_coverage.c	/^Pkt *pkt_update_accept(const tal_t *ctx, const struct peer *peer)$/;"	f
pkt_update_complete	test/test_state_coverage.c	/^Pkt *pkt_update_complete(const tal_t *ctx, const struct peer *peer)$/;"	f
pkt_update_signature	test/test_state_coverage.c	/^Pkt *pkt_update_signature(const tal_t *ctx, const struct peer *peer)$/;"	f
pkt_wrap	daemon/cryptopkt.c	/^static Pkt *pkt_wrap(const tal_t *ctx, void *w, Pkt__PktCase pkt_case)$/;"	f	file:
plan	ccan/ccan/io/backend.h	/^	struct io_plan plan[2];$/;"	m	struct:io_conn	typeref:struct:io_conn::io_plan
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq 0(%rsp),%xmm2$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq 112(%rsp),%xmm2$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq 448(%rsp),%xmm4$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq 48(%rsp),%xmm2$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq 512(%rsp),%xmm2$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq 576(%rsp),%xmm2$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq 592(%rsp),%xmm2$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq 608(%rsp),%xmm4$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq 624(%rsp),%xmm2$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq 64(%rsp),%xmm4$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq 656(%rsp),%xmm4$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq 672(%rsp),%xmm3$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq 688(%rsp),%xmm4$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq 704(%rsp),%xmm9$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq 752(%rsp),%xmm15$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq 752(%rsp),%xmm2$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq 768(%rsp),%xmm0$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq 768(%rsp),%xmm1$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq 80(%rsp),%xmm2$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq 96(%rsp),%xmm4$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq v121666_121666(%rip),%xmm10$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq v121666_121666(%rip),%xmm3$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq v121666_121666(%rip),%xmm5$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq v121666_121666(%rip),%xmm7$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq v121666_121666(%rip),%xmm9$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq v19_19(%rip),%xmm0$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq v19_19(%rip),%xmm1$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq v19_19(%rip),%xmm10$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq v19_19(%rip),%xmm12$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq v19_19(%rip),%xmm15$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq v19_19(%rip),%xmm2$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq v19_19(%rip),%xmm3$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq v19_19(%rip),%xmm5$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq v19_19(%rip),%xmm6$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq v19_19(%rip),%xmm7$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq v19_19(%rip),%xmm8$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq v19_19(%rip),%xmm9$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq v2_1(%rip),%xmm10$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq v38_1(%rip),%xmm10$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pmuludq v38_38(%rip),%xmm5$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq 0(%rsp),%xmm2$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq 112(%rsp),%xmm2$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq 160(%rsp),%xmm4$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq 224(%rsp),%xmm2$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq 288(%rsp),%xmm2$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq 304(%rsp),%xmm2$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq 320(%rsp),%xmm4$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq 336(%rsp),%xmm2$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq 368(%rsp),%xmm4$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq 384(%rsp),%xmm3$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq 400(%rsp),%xmm4$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq 416(%rsp),%xmm9$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq 464(%rsp),%xmm15$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq 464(%rsp),%xmm2$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq 48(%rsp),%xmm2$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq 480(%rsp),%xmm0$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq 480(%rsp),%xmm1$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq 64(%rsp),%xmm4$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq 80(%rsp),%xmm2$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq 96(%rsp),%xmm4$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq v121666_121666(%rip),%xmm10$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq v121666_121666(%rip),%xmm3$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq v121666_121666(%rip),%xmm5$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq v121666_121666(%rip),%xmm7$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq v121666_121666(%rip),%xmm9$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq v19_19(%rip),%xmm0$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq v19_19(%rip),%xmm1$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq v19_19(%rip),%xmm12$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq v19_19(%rip),%xmm15$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq v19_19(%rip),%xmm2$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq v19_19(%rip),%xmm3$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq v19_19(%rip),%xmm5$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq v19_19(%rip),%xmm6$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq v19_19(%rip),%xmm7$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq v19_19(%rip),%xmm8$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq v19_19(%rip),%xmm9$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq v38_38(%rip),%xmm5$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq v9_9(%rip),%xmm0$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq v9_9(%rip),%xmm1$/;"	l
pmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pmuludq v9_9(%rip),%xmm2$/;"	l
point	secp256k1/src/bench_ecdh.c	/^    secp256k1_pubkey point;$/;"	m	struct:__anon21	file:
poke_reader	ccan/ccan/io/benchmarks/run-loop.c	/^static struct io_plan poke_reader(struct io_conn *conn, struct buffer *buf)$/;"	f	file:
poke_reader	ccan/ccan/io/test/run-10-many.c	/^static struct io_plan *poke_reader(struct io_conn *conn, struct buffer *buf)$/;"	f	file:
poke_writer	ccan/ccan/io/benchmarks/run-loop.c	/^static struct io_plan poke_writer(struct io_conn *conn, struct buffer *buf)$/;"	f	file:
poke_writer	ccan/ccan/io/test/run-10-many.c	/^static struct io_plan *poke_writer(struct io_conn *conn, struct buffer *buf)$/;"	f	file:
poll_time	daemon/lightningd.h	/^	struct timerel poll_time;$/;"	m	struct:config	typeref:struct:config::timerel
pollfds	ccan/ccan/io/poll.c	/^static struct pollfd *pollfds = NULL;$/;"	v	typeref:struct:pollfd	file:
poly1305_block_copy31	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^poly1305_block_copy31(unsigned char *dst, const unsigned char *src, unsigned long long bytes)$/;"	f	file:
poly1305_block_size	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	15;"	d
poly1305_block_size	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	27;"	d
poly1305_block_size	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	32;"	d	file:
poly1305_blocks	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	/^poly1305_blocks(poly1305_state_internal_t *st, const unsigned char *m, unsigned long long bytes)$/;"	f
poly1305_blocks	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	/^poly1305_blocks(poly1305_state_internal_t *st, const unsigned char *m, unsigned long long bytes)$/;"	f
poly1305_blocks	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^poly1305_blocks(poly1305_state_internal_t *st, const unsigned char *m,$/;"	f	file:
poly1305_donna_H	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.h	2;"	d
poly1305_final_r2_r	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^    poly1305_final_r2_r = 16, \/* use [r^2,r] for the final block *\/$/;"	e	enum:poly1305_state_flags_t	file:
poly1305_final_r_1	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^    poly1305_final_r_1 = 32, \/* use [r,1] for the final block *\/$/;"	e	enum:poly1305_state_flags_t	file:
poly1305_final_shift16	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^    poly1305_final_shift16 = 8,$/;"	e	enum:poly1305_state_flags_t	file:
poly1305_final_shift8	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^    poly1305_final_shift8 = 4,$/;"	e	enum:poly1305_state_flags_t	file:
poly1305_finish	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	/^poly1305_finish(poly1305_state_internal_t *st, unsigned char mac[16])$/;"	f
poly1305_finish	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	/^poly1305_finish(poly1305_state_internal_t *st, unsigned char mac[16])$/;"	f
poly1305_finish	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^poly1305_finish(poly1305_state_internal_t *st, unsigned char mac[16])$/;"	f	file:
poly1305_finish_ext	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^poly1305_finish_ext(poly1305_state_internal_t *st, const unsigned char *m,$/;"	f	file:
poly1305_init	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	/^poly1305_init(poly1305_state_internal_t *st, const unsigned char key[32])$/;"	f
poly1305_init	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	/^poly1305_init(poly1305_state_internal_t *st, const unsigned char key[32])$/;"	f
poly1305_init_ext	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^poly1305_init_ext(poly1305_state_internal_t *st,$/;"	f	file:
poly1305_sse2_H	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.h	2;"	d
poly1305_started	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^    poly1305_started = 1,$/;"	e	enum:poly1305_state_flags_t	file:
poly1305_state_flags_t	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^enum poly1305_state_flags_t {$/;"	g	file:
poly1305_state_internal_t	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	/^typedef struct poly1305_state_internal_t {$/;"	s
poly1305_state_internal_t	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	/^} poly1305_state_internal_t;$/;"	t	typeref:struct:poly1305_state_internal_t
poly1305_state_internal_t	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	/^typedef struct poly1305_state_internal_t {$/;"	s
poly1305_state_internal_t	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	/^} poly1305_state_internal_t;$/;"	t	typeref:struct:poly1305_state_internal_t
poly1305_state_internal_t	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^typedef struct poly1305_state_internal_t {$/;"	s	file:
poly1305_state_internal_t	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^} poly1305_state_internal_t;   \/* 164 bytes total *\/$/;"	t	typeref:struct:poly1305_state_internal_t	file:
poly1305_update	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c	/^poly1305_update(poly1305_state_internal_t *st, const unsigned char *m,$/;"	f	file:
poly1305_update	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^poly1305_update(poly1305_state_internal_t *st, const unsigned char *m,$/;"	f	file:
popcount	ccan/ccan/htable/tools/speed.c	/^static unsigned int popcount(unsigned long val)$/;"	f	file:
popen	ccan/tools/configurator/configurator.c	37;"	d	file:
port	daemon/peer.c	/^	const char *name, *port;$/;"	m	struct:json_connecting	file:
port	daemon/routing.h	/^	int port;$/;"	m	struct:node
port	lightningd/peer_control.c	/^	const char *name, *port;$/;"	m	struct:json_connecting	file:
portnum	daemon/lightningd.h	/^	u16 portnum;$/;"	m	struct:lightningd_state
pos	daemon/jsmn/jsmn.h	/^	unsigned int pos; \/* offset in the JSON string *\/$/;"	m	struct:__anon59
pos	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    argon2_position_t pos;$/;"	m	struct:Argon2_thread_data
pre_g	secp256k1/src/ecmult.h	/^    secp256k1_ge_storage (*pre_g)[];    \/* odd multiples of the generator *\/$/;"	m	struct:__anon29
pre_g_128	secp256k1/src/ecmult.h	/^    secp256k1_ge_storage (*pre_g_128)[]; \/* odd multiples of 2^128*generator *\/$/;"	m	struct:__anon29
prec	secp256k1/src/ecmult_gen.h	/^    secp256k1_ge_storage (*prec)[64][16]; \/* prec[j][i] = 16^j * i * G + U_i *\/$/;"	m	struct:__anon37
precomputed_nonce_function	secp256k1/src/tests.c	/^static int precomputed_nonce_function(unsigned char *nonce32, const unsigned char *msg32, const unsigned char *key32, const unsigned char *algo16, void *data, unsigned int counter) {$/;"	f	file:
prefix	check-bolt.c	/^	const char *prefix;$/;"	m	struct:bolt_file	file:
prefix	daemon/log.c	/^	const char *prefix;$/;"	m	struct:log	file:
prefix	daemon/log.c	/^	const char *prefix;$/;"	m	struct:log_data	file:
prefix	daemon/log.c	/^	const char *prefix;$/;"	m	struct:log_entry	file:
prefix	irc.h	/^	const char *prefix;$/;"	m	struct:irccommand
prefix	libsodium/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	libsodium/dist-build/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	libsodium/msvc-scripts/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	libsodium/src/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	libsodium/src/libsodium/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	libsodium/src/libsodium/include/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	libsodium/test/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	libsodium/test/default/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	secp256k1/Makefile	/^prefix = \/usr\/local$/;"	m
preimage	bitcoin/preimage.h	/^struct preimage {$/;"	s
preimage	protobuf_convert.c	/^REGISTER_TYPE_TO_HEXSTR(preimage);$/;"	v
preimage	type_to_string.h	/^	const struct preimage *preimage;$/;"	m	union:printable_types	typeref:struct:printable_types::preimage
preimage__descriptor	lightning.pb-c.c	/^const ProtobufCMessageDescriptor preimage__descriptor =$/;"	v
preimage__field_descriptors	lightning.pb-c.c	/^static const ProtobufCFieldDescriptor preimage__field_descriptors[4] =$/;"	v	file:
preimage__field_indices_by_name	lightning.pb-c.c	/^static const unsigned preimage__field_indices_by_name[] = {$/;"	v	file:
preimage__free_unpacked	lightning.pb-c.c	/^void   preimage__free_unpacked$/;"	f
preimage__get_packed_size	lightning.pb-c.c	/^size_t preimage__get_packed_size$/;"	f
preimage__init	lightning.pb-c.c	/^void   preimage__init$/;"	f
preimage__number_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange preimage__number_ranges[1 + 1] =$/;"	v	file:
preimage__pack	lightning.pb-c.c	/^size_t preimage__pack$/;"	f
preimage__pack_to_buffer	lightning.pb-c.c	/^size_t preimage__pack_to_buffer$/;"	f
preimage__unpack	lightning.pb-c.c	/^       preimage__unpack$/;"	f
preimage_to_proto	protobuf_convert.c	/^Preimage *preimage_to_proto(const tal_t *ctx, const struct preimage *r)$/;"	f
prev	ccan/ccan/list/list.h	/^	struct list_node *next, *prev;$/;"	m	struct:list_node	typeref:struct:list_node::
prev	daemon/chaintopology.c	/^	struct block *prev;$/;"	m	struct:block	typeref:struct:block::block	file:
prev	daemon/routing.h	/^		struct node_connection *prev;$/;"	m	struct:node::__anon54	typeref:struct:node::__anon54::node_connection
prev	test/test_protocol.c	/^	struct commit_info *prev;$/;"	m	struct:commit_info	typeref:struct:commit_info::commit_info	file:
prev	test/test_state_coverage.c	/^	const struct trail *prev;$/;"	m	struct:trail	typeref:struct:trail::trail	file:
prev_hash	bitcoin/block.h	/^	struct sha256_double prev_hash;$/;"	m	struct:bitcoin_block_hdr	typeref:struct:bitcoin_block_hdr::sha256_double
prev_trail	test/test_state_coverage.c	/^	const struct trail *prev_trail;$/;"	m	struct:fail_details	typeref:struct:fail_details::trail	file:
prevblk	daemon/bitcoind.c	/^	struct sha256_double prevblk, blkid;$/;"	m	struct:normalizing	typeref:struct:normalizing::sha256_double	file:
print	daemon/log.c	/^	void (*print)(const char *prefix,$/;"	m	struct:log_book	file:
print	libsodium/test/default/core6.c	/^static void print(unsigned char *x, unsigned char *y)$/;"	f	file:
print_arg	daemon/log.c	/^	void *print_arg;$/;"	m	struct:log_book	file:
print_children	ccan/ccan/list/test/compile_ok-constant.c	/^static void print_children(const struct list_head *list)$/;"	f	file:
print_fromwire	tools/generate-wire.py	/^    def print_fromwire(self,is_header):$/;"	m	class:Message
print_hex	libsodium/examples/utils.h	/^print_hex(const void *bin, const size_t bin_len)$/;"	f
print_internals	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    int print_internals; \/* whether to print the memory blocks *\/$/;"	m	struct:Argon2_instance_t
print_level	daemon/log.c	/^	enum log_level print_level;$/;"	m	struct:log_book	typeref:enum:log_book::log_level	file:
print_number	secp256k1/src/bench.h	/^void print_number(double x) {$/;"	f
print_superverbose	lightningd/test/run-commit_tx.c	/^static bool print_superverbose;$/;"	v	file:
print_towire	tools/generate-wire.py	/^    def print_towire(self,is_header):$/;"	m	class:Message
print_usage	libsodium/build-aux/test-driver	/^print_usage ()$/;"	f
print_usage	secp256k1/build-aux/test-driver	/^print_usage ()$/;"	f
print_verification	libsodium/examples/utils.h	/^print_verification(int ret)$/;"	f
printable_types	type_to_string.h	/^union printable_types {$/;"	u
printf	ccan/ccan/opt/test/run-helpers.c	14;"	d	file:
printf	libsodium/test/default/cmptest.h	65;"	d
printf	libsodium/test/default/cmptest.h	66;"	d
printf_buffer	ccan/ccan/list/test/run-CCAN_LIST_DEBUG.c	/^static char printf_buffer[1000];$/;"	v	file:
printf_buffer	ccan/ccan/list/test/run-check-corrupt.c	/^static char printf_buffer[1000];$/;"	v	file:
priv	ccan/ccan/htable/htable.h	/^	void *priv;$/;"	m	struct:htable
priv	lightningd/handshake/handshake.c	/^	struct privkey priv;$/;"	m	struct:keypair	typeref:struct:keypair::privkey	file:
privKeyTweakAdd	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    public static byte[] privKeyTweakAdd(byte[] privkey, byte[] tweak) throws AssertFailException{$/;"	m	class:NativeSecp256k1
privKeyTweakMul	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    public static byte[] privKeyTweakMul(byte[] privkey, byte[] tweak) throws AssertFailException{$/;"	m	class:NativeSecp256k1
privkey	bitcoin/privkey.h	/^struct privkey {$/;"	s
privkey	daemon/secrets.c	/^	struct privkey privkey;$/;"	m	struct:secret	typeref:struct:secret::privkey	file:
privkey	daemon/wallet.c	/^	struct privkey privkey;$/;"	m	struct:wallet	typeref:struct:wallet::privkey	file:
privkey	lightningd/handshake/test/run-handshake.c	/^static struct privkey privkey;$/;"	v	typeref:struct:privkey	file:
privkey	type_to_string.h	/^	const struct privkey *privkey;$/;"	m	union:printable_types	typeref:struct:printable_types::privkey
privkey_from_hex	lightningd/test/run-commit_tx.c	/^static struct privkey privkey_from_hex(const char *hex)$/;"	f	file:
privkey_from_hex	lightningd/test/run-key_derive.c	/^static struct privkey privkey_from_hex(const char *hex)$/;"	f	file:
privkey_sign	daemon/secrets.c	/^void privkey_sign(struct lightningd_state *dstate, const void *src, size_t len,$/;"	f
privkey_to_hexstr	bitcoin/pubkey.c	/^static char *privkey_to_hexstr(const tal_t *ctx, const struct privkey *secret)$/;"	f	file:
privmsg	irc.h	/^struct privmsg {$/;"	s
problem	lightning.pb-c.h	/^  char *problem;$/;"	m	struct:_Error
process	daemon/bitcoind.c	/^	void (*process)(struct bitcoin_cli *);$/;"	m	struct:bitcoin_cli	file:
process_broadcast_queue	daemon/p2p_announce.c	/^static void process_broadcast_queue(struct lightningd_state *dstate)$/;"	f	file:
process_chaintips	daemon/bitcoind.c	/^static void process_chaintips(struct bitcoin_cli *bcli)$/;"	f	file:
process_donothing	daemon/bitcoind.c	/^static void process_donothing(struct bitcoin_cli *bcli)$/;"	f	file:
process_estimatefee_2	daemon/bitcoind.c	/^static void process_estimatefee_2(struct bitcoin_cli *bcli)$/;"	f	file:
process_estimatefee_6	daemon/bitcoind.c	/^static void process_estimatefee_6(struct bitcoin_cli *bcli)$/;"	f	file:
process_getblockcount	daemon/bitcoind.c	/^static void process_getblockcount(struct bitcoin_cli *bcli)$/;"	f	file:
process_getblockhash	daemon/bitcoind.c	/^static void process_getblockhash(struct bitcoin_cli *bcli)$/;"	f	file:
process_onionpacket	daemon/sphinx.c	/^struct route_step *process_onionpacket($/;"	f
process_output	test/test_protocol.c	/^static bool process_output(char **svg, bool is_a, const char *output,$/;"	f	file:
process_rawblock	daemon/bitcoind.c	/^static void process_rawblock(struct bitcoin_cli *bcli)$/;"	f	file:
process_sendrawtx	daemon/bitcoind.c	/^static void process_sendrawtx(struct bitcoin_cli *bcli)$/;"	f	file:
progname	ccan/ccan/err/err.c	/^static const char *progname = "unknown program";$/;"	v	file:
progname	ccan/tools/configurator/configurator.c	/^static const char *progname = "";$/;"	v	file:
program_details	libsodium/build-aux/missing	/^program_details ()$/;"	f
program_details	secp256k1/build-aux/missing	/^program_details ()$/;"	f
program_transform_name	libsodium/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	libsodium/dist-build/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	libsodium/msvc-scripts/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	libsodium/src/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	libsodium/src/libsodium/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	libsodium/src/libsodium/include/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	libsodium/test/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	libsodium/test/default/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	secp256k1/Makefile	/^program_transform_name = s,x,x,$/;"	m
prompt_input	libsodium/examples/utils.h	/^prompt_input(const char *prompt, char *input, const size_t max_input_len,$/;"	f
prop	ccan/ccan/tal/tal.c	/^	struct prop_hdr *prop;$/;"	m	struct:tal_hdr	typeref:struct:tal_hdr::prop_hdr	file:
prop_hdr	ccan/ccan/tal/tal.c	/^struct prop_hdr {$/;"	s	file:
prop_type	ccan/ccan/tal/tal.c	/^enum prop_type {$/;"	g	file:
proportional_fee	daemon/routing.h	/^	s32 proportional_fee;$/;"	m	struct:node_connection
proto_tal_alloc	daemon/cryptopkt.c	/^static void *proto_tal_alloc(void *allocator_data, size_t size)$/;"	f	file:
proto_tal_alloc	protobuf_convert.c	/^static void *proto_tal_alloc(void *allocator_data, size_t size)$/;"	f	file:
proto_tal_free	daemon/cryptopkt.c	/^static void proto_tal_free(void *allocator_data, void *pointer)$/;"	f	file:
proto_tal_free	protobuf_convert.c	/^static void proto_tal_free(void *allocator_data, void *pointer)$/;"	f	file:
proto_to_abs_locktime	protobuf_convert.c	/^bool proto_to_abs_locktime(const Locktime *l, struct abs_locktime *locktime)$/;"	f
proto_to_preimage	protobuf_convert.c	/^void proto_to_preimage(const Preimage *pb, struct preimage *r)$/;"	f
proto_to_pubkey	protobuf_convert.c	/^bool proto_to_pubkey(const BitcoinPubkey *pb, struct pubkey *key)$/;"	f
proto_to_rel_locktime	protobuf_convert.c	/^bool proto_to_rel_locktime(const Locktime *l, struct rel_locktime *locktime)$/;"	f
proto_to_sha256	protobuf_convert.c	/^void proto_to_sha256(const Sha256Hash *pb, struct sha256 *hash)$/;"	f
proto_to_signature	protobuf_convert.c	/^bool proto_to_signature(const Signature *pb, secp256k1_ecdsa_signature *sig)$/;"	f
protocol	daemon/netaddr.h	/^	int protocol; \/* See socket(2): 0 currently *\/$/;"	m	struct:netaddr
prototypes	libsodium/configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
prototypes	secp256k1/configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
prune_log	daemon/log.c	/^static size_t prune_log(struct log_book *log)$/;"	f	file:
psdir	libsodium/Makefile	/^psdir = ${docdir}$/;"	m
psdir	libsodium/dist-build/Makefile	/^psdir = ${docdir}$/;"	m
psdir	libsodium/msvc-scripts/Makefile	/^psdir = ${docdir}$/;"	m
psdir	libsodium/src/Makefile	/^psdir = ${docdir}$/;"	m
psdir	libsodium/src/libsodium/Makefile	/^psdir = ${docdir}$/;"	m
psdir	libsodium/src/libsodium/include/Makefile	/^psdir = ${docdir}$/;"	m
psdir	libsodium/test/Makefile	/^psdir = ${docdir}$/;"	m
psdir	libsodium/test/default/Makefile	/^psdir = ${docdir}$/;"	m
psdir	secp256k1/Makefile	/^psdir = ${docdir}$/;"	m
pseudorand	daemon/pseudorand.c	/^uint64_t pseudorand(uint64_t max)$/;"	f
pseudorand_initted	daemon/pseudorand.c	/^static bool pseudorand_initted = false;$/;"	v	file:
pshufd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pshufd $0,%xmm0,%xmm0$/;"	l
pshufd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pshufd $0,%xmm1,%xmm1$/;"	l
pshufd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pshufd $0,%xmm10,%xmm1$/;"	l
pshufd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pshufd $0,%xmm11,%xmm3$/;"	l
pshufd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pshufd $0,%xmm12,%xmm3$/;"	l
pshufd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pshufd $0,%xmm14,%xmm3$/;"	l
pshufd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pshufd $0,%xmm3,%xmm2$/;"	l
pshufd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pshufd $0,%xmm5,%xmm1$/;"	l
pshufd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pshufd $0,%xmm8,%xmm0$/;"	l
pshufd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pshufd $0,%xmm9,%xmm9$/;"	l
pshufd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pshufd $2,%xmm10,%xmm10$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0x00,%xmm0,%xmm0$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0x00,%xmm0,%xmm1$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0x00,%xmm0,%xmm3$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0x39,%xmm0,%xmm0$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0x39,%xmm1,%xmm1$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0x39,%xmm10,%xmm10$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0x39,%xmm11,%xmm11$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0x39,%xmm12,%xmm12$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0x39,%xmm13,%xmm13$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0x39,%xmm14,%xmm14$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0x39,%xmm15,%xmm15$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0x39,%xmm2,%xmm2$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0x39,%xmm3,%xmm3$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0x39,%xmm4,%xmm4$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0x39,%xmm5,%xmm5$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0x39,%xmm6,%xmm6$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0x39,%xmm7,%xmm7$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0x39,%xmm8,%xmm8$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0x39,%xmm9,%xmm9$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0x4e,%xmm2,%xmm2$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0x55,%xmm0,%xmm0$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0x55,%xmm0,%xmm1$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0x55,%xmm0,%xmm2$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0x93,%xmm1,%xmm1$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0x93,%xmm3,%xmm3$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0xaa,%xmm0,%xmm0$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0xaa,%xmm0,%xmm1$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0xaa,%xmm0,%xmm2$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0xff,%xmm0,%xmm0$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0xff,%xmm0,%xmm1$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0xff,%xmm0,%xmm2$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pshufd $0xff,%xmm0,%xmm3$/;"	l
pslld	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pslld $13,%xmm0$/;"	l
pslld	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pslld $13,%xmm1$/;"	l
pslld	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pslld $13,%xmm4$/;"	l
pslld	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pslld $18,%xmm0$/;"	l
pslld	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pslld $18,%xmm1$/;"	l
pslld	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pslld $18,%xmm2$/;"	l
pslld	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pslld $18,%xmm5$/;"	l
pslld	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pslld $7,%xmm0$/;"	l
pslld	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pslld $7,%xmm1$/;"	l
pslld	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pslld $7,%xmm2$/;"	l
pslld	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pslld $7,%xmm4$/;"	l
pslld	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pslld $9,%xmm0$/;"	l
pslld	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pslld $9,%xmm1$/;"	l
pslld	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pslld $9,%xmm5$/;"	l
psllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^psllq $1,%xmm0$/;"	l
psllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^psllq $1,%xmm1$/;"	l
psllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^psllq $1,%xmm10$/;"	l
psllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^psllq $1,%xmm2$/;"	l
psllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^psllq $1,%xmm3$/;"	l
psllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^psllq $1,%xmm4$/;"	l
psllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^psllq $1,%xmm6$/;"	l
psllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^psllq $1,%xmm8$/;"	l
psllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^psllq $1,%xmm0$/;"	l
psllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^psllq $1,%xmm1$/;"	l
psllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^psllq $1,%xmm10$/;"	l
psllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^psllq $1,%xmm2$/;"	l
psllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^psllq $1,%xmm3$/;"	l
psllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^psllq $1,%xmm4$/;"	l
psllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^psllq $1,%xmm6$/;"	l
psllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^psllq $1,%xmm8$/;"	l
psrld	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^psrld $14,%xmm12$/;"	l
psrld	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^psrld $14,%xmm2$/;"	l
psrld	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^psrld $14,%xmm6$/;"	l
psrld	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^psrld $19,%xmm12$/;"	l
psrld	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^psrld $19,%xmm2$/;"	l
psrld	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^psrld $19,%xmm6$/;"	l
psrld	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^psrld $23,%xmm12$/;"	l
psrld	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^psrld $23,%xmm2$/;"	l
psrld	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^psrld $23,%xmm6$/;"	l
psrld	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^psrld $25,%xmm12$/;"	l
psrld	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^psrld $25,%xmm2$/;"	l
psrld	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^psrld $25,%xmm6$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^psubq %xmm0,%xmm10$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^psubq %xmm1,%xmm0$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^psubq %xmm1,%xmm3$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^psubq %xmm12,%xmm10$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^psubq %xmm12,%xmm2$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^psubq %xmm14,%xmm4$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^psubq %xmm15,%xmm6$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^psubq %xmm15,%xmm8$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^psubq %xmm3,%xmm10$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^psubq %xmm3,%xmm2$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^psubq %xmm4,%xmm5$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^psubq %xmm5,%xmm4$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^psubq %xmm6,%xmm7$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^psubq %xmm7,%xmm6$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^psubq %xmm8,%xmm9$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^psubq %xmm9,%xmm10$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^psubq %xmm9,%xmm8$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^psubq %xmm0,%xmm10$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^psubq %xmm1,%xmm0$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^psubq %xmm1,%xmm3$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^psubq %xmm12,%xmm10$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^psubq %xmm12,%xmm2$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^psubq %xmm14,%xmm4$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^psubq %xmm15,%xmm6$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^psubq %xmm15,%xmm8$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^psubq %xmm3,%xmm10$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^psubq %xmm3,%xmm2$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^psubq %xmm4,%xmm5$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^psubq %xmm5,%xmm4$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^psubq %xmm6,%xmm7$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^psubq %xmm7,%xmm6$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^psubq %xmm8,%xmm9$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^psubq %xmm9,%xmm10$/;"	l
psubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^psubq %xmm9,%xmm8$/;"	l
psuedo_random_array	ccan/ccan/asort/test/run.c	/^static void psuedo_random_array(int arr[], unsigned int size)$/;"	f	file:
ptr	ccan/ccan/cdump/cdump.h	/^		const struct cdump_type *ptr;$/;"	m	union:cdump_type::__anon6	typeref:struct:cdump_type::__anon6::cdump_type
ptr2int	ccan/ccan/ptrint/ptrint.h	/^CONST_FUNCTION static inline ptrdiff_t ptr2int(const ptrint_t *p)$/;"	f
ptr_of	ccan/ccan/cdump/cdump.c	/^static struct cdump_type *ptr_of(struct parse_state *ps,$/;"	f	file:
ptr_valid	ccan/ccan/ptr_valid/ptr_valid.c	/^bool ptr_valid(const void *p, size_t alignment, size_t size, bool write)$/;"	f
ptr_valid_batch	ccan/ccan/ptr_valid/ptr_valid.c	/^bool ptr_valid_batch(struct ptr_valid_batch *batch,$/;"	f
ptr_valid_batch	ccan/ccan/ptr_valid/ptr_valid.h	/^struct ptr_valid_batch {$/;"	s
ptr_valid_batch_end	ccan/ccan/ptr_valid/ptr_valid.c	/^void ptr_valid_batch_end(struct ptr_valid_batch *batch)$/;"	f
ptr_valid_batch_r	ccan/ccan/ptr_valid/ptr_valid.h	/^static inline bool ptr_valid_batch_r(struct ptr_valid_batch *batch,$/;"	f
ptr_valid_batch_read	ccan/ccan/ptr_valid/ptr_valid.h	146;"	d
ptr_valid_batch_start	ccan/ccan/ptr_valid/ptr_valid.c	/^bool ptr_valid_batch_start(struct ptr_valid_batch *batch)$/;"	f
ptr_valid_batch_string	ccan/ccan/ptr_valid/ptr_valid.c	/^bool ptr_valid_batch_string(struct ptr_valid_batch *batch, const char *p)$/;"	f
ptr_valid_batch_w	ccan/ccan/ptr_valid/ptr_valid.h	/^static inline bool ptr_valid_batch_w(struct ptr_valid_batch *batch,$/;"	f
ptr_valid_batch_write	ccan/ccan/ptr_valid/ptr_valid.h	157;"	d
ptr_valid_map	ccan/ccan/ptr_valid/ptr_valid.h	/^struct ptr_valid_map {$/;"	s
ptr_valid_r	ccan/ccan/ptr_valid/ptr_valid.h	/^static inline bool ptr_valid_r(const void *p, size_t align, size_t size)$/;"	f
ptr_valid_read	ccan/ccan/ptr_valid/ptr_valid.h	20;"	d
ptr_valid_string	ccan/ccan/ptr_valid/ptr_valid.c	/^bool ptr_valid_string(const char *p)$/;"	f
ptr_valid_w	ccan/ccan/ptr_valid/ptr_valid.h	/^static inline bool ptr_valid_w(void *p, size_t align, size_t size)$/;"	f
ptr_valid_write	ccan/ccan/ptr_valid/ptr_valid.h	36;"	d
ptrint_t	ccan/ccan/ptrint/ptrint.h	/^typedef struct ptrint ptrint_t;$/;"	t	typeref:struct:ptrint
ptrs	ccan/ccan/opt/test/run-set_alloc.c	/^static void *ptrs[100];$/;"	v	file:
pub	lightningd/handshake/handshake.c	/^	struct pubkey pub;$/;"	m	struct:keypair	typeref:struct:keypair::pubkey	file:
pubKeyTweakAdd	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    public static byte[] pubKeyTweakAdd(byte[] pubkey, byte[] tweak) throws AssertFailException{$/;"	m	class:NativeSecp256k1
pubKeyTweakMul	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    public static byte[] pubKeyTweakMul(byte[] pubkey, byte[] tweak) throws AssertFailException{$/;"	m	class:NativeSecp256k1
pubkey	bitcoin/pubkey.h	/^	secp256k1_pubkey pubkey;$/;"	m	struct:pubkey
pubkey	bitcoin/pubkey.h	/^struct pubkey {$/;"	s
pubkey	daemon/wallet.c	/^	struct pubkey pubkey;$/;"	m	struct:wallet	typeref:struct:wallet::pubkey	file:
pubkey	lightningd/handshake/handshake.c	/^	u8 pubkey[PUBKEY_DER_LEN];$/;"	m	struct:act_one	file:
pubkey	lightningd/handshake/handshake.c	/^	u8 pubkey[PUBKEY_DER_LEN];$/;"	m	struct:act_two	file:
pubkey	secp256k1/src/bench_schnorr_verify.c	/^    unsigned char pubkey[33];$/;"	m	struct:__anon33	file:
pubkey	secp256k1/src/bench_verify.c	/^    unsigned char pubkey[33];$/;"	m	struct:__anon25	file:
pubkey	type_to_string.h	/^	const struct pubkey *pubkey;$/;"	m	union:printable_types	typeref:struct:printable_types::pubkey
pubkey_cmp	bitcoin/pubkey.c	/^int pubkey_cmp(const struct pubkey *a, const struct pubkey *b)$/;"	f
pubkey_eq	bitcoin/pubkey.c	/^bool pubkey_eq(const struct pubkey *a, const struct pubkey *b)$/;"	f
pubkey_from_der	bitcoin/pubkey.c	/^bool pubkey_from_der(const u8 *der, size_t len, struct pubkey *key)$/;"	f
pubkey_from_hexstr	bitcoin/pubkey.c	/^bool pubkey_from_hexstr(const char *derstr, size_t slen, struct pubkey *key)$/;"	f
pubkey_from_privkey	bitcoin/pubkey.c	/^bool pubkey_from_privkey(const struct privkey *privkey,$/;"	f
pubkey_from_sql	daemon/db.c	/^static void pubkey_from_sql(sqlite3_stmt *stmt, int idx, struct pubkey *pk)$/;"	f	file:
pubkey_hash160	daemon/sphinx.c	/^void pubkey_hash160($/;"	f
pubkey_to_der	bitcoin/pubkey.c	/^void pubkey_to_der(u8 der[PUBKEY_DER_LEN], const struct pubkey *key)$/;"	f
pubkey_to_hexstr	bitcoin/pubkey.c	/^char *pubkey_to_hexstr(const tal_t *ctx, const struct pubkey *key)$/;"	f
pubkey_to_proto	protobuf_convert.c	/^BitcoinPubkey *pubkey_to_proto(const tal_t *ctx, const struct pubkey *key)$/;"	f
pubkeylen	secp256k1/src/bench_schnorr_verify.c	/^    size_t pubkeylen;$/;"	m	struct:__anon33	file:
pubkeylen	secp256k1/src/bench_verify.c	/^    size_t pubkeylen;$/;"	m	struct:__anon25	file:
pubkeys_from_arr	daemon/db.c	/^static struct pubkey *pubkeys_from_arr(const tal_t *ctx,$/;"	f	file:
pubkeys_to_hex	daemon/db.c	/^static const char *pubkeys_to_hex(const tal_t *ctx, const struct pubkey *ids)$/;"	f	file:
pull	bitcoin/pullpush.c	/^const u8 *pull(const u8 **cursor, size_t *max, void *copy, size_t n)$/;"	f
pull_bitcoin_tx	bitcoin/tx.c	/^struct bitcoin_tx *pull_bitcoin_tx(const tal_t *ctx,$/;"	f
pull_input	bitcoin/tx.c	/^static void pull_input(const tal_t *ctx, const u8 **cursor, size_t *max,$/;"	f	file:
pull_le32	bitcoin/pullpush.c	/^u32 pull_le32(const u8 **cursor, size_t *max)$/;"	f
pull_le64	bitcoin/pullpush.c	/^u64 pull_le64(const u8 **cursor, size_t *max)$/;"	f
pull_length	bitcoin/tx.c	/^static u64 pull_length(const u8 **cursor, size_t *max)$/;"	f	file:
pull_output	bitcoin/tx.c	/^static void pull_output(const tal_t *ctx, const u8 **cursor, size_t *max,$/;"	f	file:
pull_sha256_double	bitcoin/tx.c	/^static bool pull_sha256_double(const u8 **cursor, size_t *max,$/;"	f	file:
pull_value	bitcoin/tx.c	/^static u64 pull_value(const u8 **cursor, size_t *max)$/;"	f	file:
pull_varint	bitcoin/pullpush.c	/^u64 pull_varint(const u8 **cursor, size_t *max)$/;"	f
pull_witness	bitcoin/tx.c	/^static void pull_witness(struct bitcoin_tx_input *inputs, size_t i,$/;"	f	file:
pull_witness_item	bitcoin/tx.c	/^static u8 *pull_witness_item(const tal_t *ctx, const u8 **cursor, size_t *max)$/;"	f	file:
pulsar_host	daemon/lightningd.h	/^	char * pulsar_host;$/;"	m	struct:lightningd_state
pulsar_port	daemon/lightningd.h	/^	char * pulsar_port;$/;"	m	struct:lightningd_state
punpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^punpcklqdq %xmm12,%xmm2$/;"	l
punpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^punpcklqdq %xmm14,%xmm4$/;"	l
punpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^punpcklqdq %xmm15,%xmm6$/;"	l
punpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^punpcklqdq %xmm15,%xmm8$/;"	l
punpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^punpcklqdq %xmm3,%xmm10$/;"	l
punpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^punpcklqdq %xmm12,%xmm2$/;"	l
punpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^punpcklqdq %xmm14,%xmm4$/;"	l
punpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^punpcklqdq %xmm15,%xmm6$/;"	l
punpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^punpcklqdq %xmm15,%xmm8$/;"	l
punpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^punpcklqdq %xmm3,%xmm10$/;"	l
push	bitcoin/pullpush.c	/^void push(const void *data, size_t len, void *pptr_)$/;"	f
push_le32	bitcoin/pullpush.c	/^void push_le32(u32 v,$/;"	f
push_le64	bitcoin/pullpush.c	/^void push_le64(u64 v,$/;"	f
push_linearize	bitcoin/tx.c	/^static void push_linearize(const void *data, size_t len, void *pptr_)$/;"	f	file:
push_measure	bitcoin/tx.c	/^static void push_measure(const void *data, size_t len, void *lenp)$/;"	f	file:
push_msat	wire/test/run-peer-wire.c	/^	u64 push_msat;$/;"	m	struct:msg_open_channel	file:
push_sha	bitcoin/tx.c	/^static void push_sha(const void *data, size_t len, void *shactx_)$/;"	f	file:
push_tx	bitcoin/tx.c	/^static void push_tx(const struct bitcoin_tx *tx,$/;"	f	file:
push_tx_input	bitcoin/tx.c	/^static void push_tx_input(const struct bitcoin_tx_input *input,$/;"	f	file:
push_tx_output	bitcoin/tx.c	/^static void push_tx_output(const struct bitcoin_tx_output *output,$/;"	f	file:
push_varint	bitcoin/pullpush.c	/^void push_varint(varint_t v,$/;"	f
push_varint_blob	bitcoin/pullpush.c	/^void push_varint_blob(const tal_t *blob,$/;"	f
push_witness	bitcoin/tx.c	/^static void push_witness(const u8 *witness,$/;"	f	file:
push_witnesses	bitcoin/tx.c	/^static void push_witnesses(const struct bitcoin_tx *tx,$/;"	f	file:
pushd_destroy	ccan/ccan/tal/path/path.c	/^static void pushd_destroy(struct path_pushd *pushd)$/;"	f	file:
pwd	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint8_t *pwd;    \/* password array *\/$/;"	m	struct:Argon2_Context
pwdlen	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint32_t pwdlen; \/* password length *\/$/;"	m	struct:Argon2_Context
pwhash_DEPENDENCIES	libsodium/test/default/Makefile	/^pwhash_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
pwhash_LDADD	libsodium/test/default/Makefile	/^pwhash_LDADD = $(TESTS_LDADD)$/;"	m
pwhash_OBJECTS	libsodium/test/default/Makefile	/^pwhash_OBJECTS = pwhash.$(OBJEXT)$/;"	m
pwhash_SOURCE	libsodium/test/default/Makefile	/^pwhash_SOURCE = cmptest.h pwhash.c$/;"	m
pwhash_SOURCES	libsodium/test/default/Makefile	/^pwhash_SOURCES = pwhash.c$/;"	m
pwhash_scrypt_DEPENDENCIES	libsodium/test/default/Makefile	/^pwhash_scrypt_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
pwhash_scrypt_LDADD	libsodium/test/default/Makefile	/^pwhash_scrypt_LDADD = $(TESTS_LDADD)$/;"	m
pwhash_scrypt_OBJECTS	libsodium/test/default/Makefile	/^pwhash_scrypt_OBJECTS = pwhash_scrypt.$(OBJEXT)$/;"	m
pwhash_scrypt_SOURCE	libsodium/test/default/Makefile	/^pwhash_scrypt_SOURCE = cmptest.h pwhash_scrypt.c$/;"	m
pwhash_scrypt_SOURCES	libsodium/test/default/Makefile	/^pwhash_scrypt_SOURCES = pwhash_scrypt.c$/;"	m
pwhash_scrypt_ll_DEPENDENCIES	libsodium/test/default/Makefile	/^pwhash_scrypt_ll_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
pwhash_scrypt_ll_LDADD	libsodium/test/default/Makefile	/^pwhash_scrypt_ll_LDADD = $(TESTS_LDADD)$/;"	m
pwhash_scrypt_ll_OBJECTS	libsodium/test/default/Makefile	/^pwhash_scrypt_ll_OBJECTS = pwhash_scrypt_ll.$(OBJEXT)$/;"	m
pwhash_scrypt_ll_SOURCE	libsodium/test/default/Makefile	/^pwhash_scrypt_ll_SOURCE = cmptest.h pwhash_scrypt_ll.c$/;"	m
pwhash_scrypt_ll_SOURCES	libsodium/test/default/Makefile	/^pwhash_scrypt_ll_SOURCES = pwhash_scrypt_ll.c$/;"	m
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pxor %xmm1,%xmm1$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pxor %xmm13,%xmm0$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pxor %xmm13,%xmm1$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pxor %xmm13,%xmm11$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pxor %xmm13,%xmm12$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pxor %xmm15,%xmm13$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pxor %xmm15,%xmm14$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pxor %xmm15,%xmm2$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pxor %xmm15,%xmm3$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pxor %xmm15,%xmm4$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pxor %xmm15,%xmm5$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pxor %xmm15,%xmm6$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pxor %xmm15,%xmm7$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pxor %xmm15,%xmm8$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pxor %xmm15,%xmm9$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pxor %xmm2,%xmm2$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pxor %xmm3,%xmm3$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pxor %xmm4,%xmm4$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pxor %xmm5,%xmm5$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pxor %xmm6,%xmm6$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pxor %xmm7,%xmm7$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pxor %xmm8,%xmm8$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^pxor %xmm9,%xmm9$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pxor %xmm1,%xmm1$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pxor %xmm13,%xmm0$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pxor %xmm13,%xmm1$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pxor %xmm13,%xmm11$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pxor %xmm13,%xmm12$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pxor %xmm15,%xmm13$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pxor %xmm15,%xmm14$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pxor %xmm15,%xmm2$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pxor %xmm15,%xmm3$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pxor %xmm15,%xmm4$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pxor %xmm15,%xmm5$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pxor %xmm15,%xmm6$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pxor %xmm15,%xmm7$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pxor %xmm15,%xmm8$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pxor %xmm15,%xmm9$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pxor %xmm2,%xmm2$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pxor %xmm3,%xmm3$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pxor %xmm4,%xmm4$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pxor %xmm5,%xmm5$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pxor %xmm6,%xmm6$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pxor %xmm7,%xmm7$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pxor %xmm8,%xmm8$/;"	l
pxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^pxor %xmm9,%xmm9$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor   %xmm7,%xmm7$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm0,%xmm1$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm0,%xmm10$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm0,%xmm11$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm0,%xmm12$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm0,%xmm13$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm0,%xmm15$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm0,%xmm2$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm0,%xmm3$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm0,%xmm4$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm0,%xmm5$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm0,%xmm6$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm0,%xmm8$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm0,%xmm9$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm1,%xmm0$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm1,%xmm10$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm1,%xmm11$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm1,%xmm12$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm1,%xmm13$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm1,%xmm14$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm1,%xmm15$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm1,%xmm2$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm1,%xmm4$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm1,%xmm5$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm1,%xmm7$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm1,%xmm8$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm1,%xmm9$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm12,%xmm0$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm12,%xmm1$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm12,%xmm10$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm12,%xmm11$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm12,%xmm13$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm12,%xmm15$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm12,%xmm2$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm12,%xmm3$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm12,%xmm4$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm12,%xmm5$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm12,%xmm6$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm12,%xmm7$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm12,%xmm8$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm12,%xmm9$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm2,%xmm0$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm2,%xmm10$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm2,%xmm11$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm2,%xmm12$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm2,%xmm13$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm2,%xmm14$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm2,%xmm15$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm2,%xmm3$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm2,%xmm4$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm2,%xmm5$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm2,%xmm6$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm2,%xmm7$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm2,%xmm8$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm2,%xmm9$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm4,%xmm1$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm4,%xmm3$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm5,%xmm0$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm5,%xmm2$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm6,%xmm0$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm6,%xmm1$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm6,%xmm2$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^pxor  %xmm6,%xmm3$/;"	l
qualifiers	ccan/ccan/cdump/cdump.h	/^	const char *qualifiers;$/;"	m	struct:cdump_member
queue_broadcast	daemon/broadcast.c	/^void queue_broadcast(struct broadcast_state *bstate,$/;"	f
queue_pkt	daemon/packets.c	/^static void queue_pkt(struct peer *peer, Pkt__PktCase type, const void *msg)$/;"	f	file:
queue_pkt_anchor	daemon/packets.c	/^void queue_pkt_anchor(struct peer *peer)$/;"	f
queue_pkt_close_shutdown	daemon/packets.c	/^void queue_pkt_close_shutdown(struct peer *peer)$/;"	f
queue_pkt_close_signature	daemon/packets.c	/^void queue_pkt_close_signature(struct peer *peer)$/;"	f
queue_pkt_commit	daemon/packets.c	/^void queue_pkt_commit(struct peer *peer, const secp256k1_ecdsa_signature *sig)$/;"	f
queue_pkt_err	daemon/packets.c	/^void queue_pkt_err(struct peer *peer, Pkt *err)$/;"	f
queue_pkt_feechange	daemon/packets.c	/^void queue_pkt_feechange(struct peer *peer, u64 feerate)$/;"	f
queue_pkt_htlc_add	daemon/packets.c	/^void queue_pkt_htlc_add(struct peer *peer, struct htlc *htlc)$/;"	f
queue_pkt_htlc_fail	daemon/packets.c	/^void queue_pkt_htlc_fail(struct peer *peer, struct htlc *htlc)$/;"	f
queue_pkt_htlc_fulfill	daemon/packets.c	/^void queue_pkt_htlc_fulfill(struct peer *peer, struct htlc *htlc)$/;"	f
queue_pkt_nested	daemon/packets.c	/^void queue_pkt_nested(struct peer *peer,$/;"	f
queue_pkt_nested	lightningd/lightningd.c	/^void queue_pkt_nested(struct peer *peer,$/;"	f
queue_pkt_open	daemon/packets.c	/^void queue_pkt_open(struct peer *peer, bool offer_anchor)$/;"	f
queue_pkt_open_commit_sig	daemon/packets.c	/^void queue_pkt_open_commit_sig(struct peer *peer)$/;"	f
queue_pkt_open_complete	daemon/packets.c	/^void queue_pkt_open_complete(struct peer *peer)$/;"	f
queue_pkt_revocation	daemon/packets.c	/^void queue_pkt_revocation(struct peer *peer,$/;"	f
queue_raw_pkt	daemon/packets.c	/^static void queue_raw_pkt(struct peer *peer, Pkt *pkt)$/;"	f	file:
queued_message	daemon/broadcast.h	/^struct queued_message {$/;"	s
quick	test/test_state_coverage.c	/^static bool quick = false;$/;"	v	file:
r	bitcoin/preimage.h	/^	u8 r[32];$/;"	m	struct:preimage
r	ccan/ccan/isaac/isaac.h	/^  uint32_t r[ISAAC_SZ];$/;"	m	struct:isaac_ctx
r	ccan/ccan/isaac/isaac64.h	/^  uint64_t r[ISAAC64_SZ];$/;"	m	struct:isaac64_ctx
r	daemon/htlc.h	/^	struct preimage *r;$/;"	m	struct:htlc	typeref:struct:htlc::preimage
r	daemon/invoice.h	/^	struct preimage r;$/;"	m	struct:invoice	typeref:struct:invoice::preimage
r	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	/^        unsigned long r[5];$/;"	m	struct:poly1305_state_internal_t
r	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	/^        unsigned long long r[3];$/;"	m	struct:poly1305_state_internal_t
r	lightning.pb-c.h	/^  Preimage *r;$/;"	m	struct:_UpdateFulfillHtlc
r	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static final Lock r = rwl.readLock();$/;"	f	class:NativeSecp256k1	file:
r1	libsodium/test/default/pwhash_scrypt_ll.c	/^static uint32_t r1 = 1U;$/;"	v	file:
r1	lightning.pb-c.h	/^  uint64_t r1;$/;"	m	struct:_Signature
r16	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ssse3.h	6;"	d
r2	libsodium/test/default/pwhash_scrypt_ll.c	/^static uint32_t r2 = 8U;$/;"	v	file:
r2	lightning.pb-c.h	/^  uint64_t r2;$/;"	m	struct:_Signature
r24	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ssse3.h	8;"	d
r3	libsodium/test/default/pwhash_scrypt_ll.c	/^static uint32_t r3 = 8U;$/;"	v	file:
r3	lightning.pb-c.h	/^  uint64_t r3;$/;"	m	struct:_Signature
r4	lightning.pb-c.h	/^  uint64_t r4;$/;"	m	struct:_Signature
r_ck	lightningd/cryptomsg.c	/^	struct sha256 s_ck, r_ck;$/;"	m	struct:crypto_state	typeref:struct:crypto_state::	file:
r_done	ccan/ccan/io/test/run-12-bidir.c	/^static struct io_plan *r_done(struct io_conn *conn, struct data *d)$/;"	f	file:
r_hash	lightning.pb-c.h	/^  Sha256Hash *r_hash;$/;"	m	struct:_UpdateAddHtlc
rand	libsodium/test/default/cmptest.h	26;"	d
rand	libsodium/test/default/cmptest.h	27;"	d
random	libsodium/src/libsodium/include/sodium/randombytes.h	/^    uint32_t    (*random)(void);              \/* required *\/$/;"	m	struct:randombytes_implementation
random	libsodium/src/libsodium/randombytes/randombytes.c	21;"	d	file:
random	libsodium/test/quirks/quirks.h	/^random(void)$/;"	f
random	libsodium/test/quirks/quirks.h	5;"	d
random_ber_signature	secp256k1/src/tests.c	/^static void random_ber_signature(unsigned char *sig, size_t *len, int* certainly_der, int* certainly_not_der) {$/;"	f	file:
random_data_source_fd	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^    int           random_data_source_fd;$/;"	m	struct:Salsa20Random_	file:
random_data_source_fd	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^    int random_data_source_fd;$/;"	m	struct:SysRandom_	file:
random_fe	secp256k1/src/tests.c	/^void random_fe(secp256k1_fe *x) {$/;"	f
random_fe_non_square	secp256k1/src/tests.c	/^void random_fe_non_square(secp256k1_fe *ns) {$/;"	f
random_fe_non_zero	secp256k1/src/tests.c	/^void random_fe_non_zero(secp256k1_fe *nz) {$/;"	f
random_fe_test	secp256k1/src/tests.c	/^void random_fe_test(secp256k1_fe *x) {$/;"	f
random_field_element_magnitude	secp256k1/src/tests.c	/^void random_field_element_magnitude(secp256k1_fe *fe) {$/;"	f
random_field_element_test	secp256k1/src/tests.c	/^void random_field_element_test(secp256k1_fe *fe) {$/;"	f
random_group_element_jacobian_test	secp256k1/src/tests.c	/^void random_group_element_jacobian_test(secp256k1_gej *gej, const secp256k1_ge *ge) {$/;"	f
random_group_element_test	secp256k1/src/tests.c	/^void random_group_element_test(secp256k1_ge *ge) {$/;"	f
random_num_negate	secp256k1/src/tests.c	/^void random_num_negate(secp256k1_num *num) {$/;"	f
random_num_order	secp256k1/src/tests.c	/^void random_num_order(secp256k1_num *num) {$/;"	f
random_num_order_test	secp256k1/src/tests.c	/^void random_num_order_test(secp256k1_num *num) {$/;"	f
random_scalar_order	secp256k1/src/tests.c	/^void random_scalar_order(secp256k1_scalar *num) {$/;"	f
random_scalar_order_test	secp256k1/src/tests.c	/^void random_scalar_order_test(secp256k1_scalar *num) {$/;"	f
random_sign	secp256k1/src/tests.c	/^void random_sign(secp256k1_scalar *sigr, secp256k1_scalar *sigs, const secp256k1_scalar *key, const secp256k1_scalar *msg, int *recid) {$/;"	f
randombytes	libsodium/src/libsodium/randombytes/randombytes.c	/^randombytes(unsigned char * const buf, const unsigned long long buf_len)$/;"	f
randombytes_DEPENDENCIES	libsodium/test/default/Makefile	/^randombytes_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
randombytes_H	libsodium/src/libsodium/include/sodium/randombytes.h	3;"	d
randombytes_LDADD	libsodium/test/default/Makefile	/^randombytes_LDADD = $(TESTS_LDADD)$/;"	m
randombytes_OBJECTS	libsodium/test/default/Makefile	/^randombytes_OBJECTS = randombytes.$(OBJEXT)$/;"	m
randombytes_SOURCE	libsodium/test/default/Makefile	/^randombytes_SOURCE = cmptest.h randombytes.c$/;"	m
randombytes_SOURCES	libsodium/test/default/Makefile	/^randombytes_SOURCES = randombytes.c$/;"	m
randombytes_buf	libsodium/src/libsodium/randombytes/randombytes.c	/^randombytes_buf(void * const buf, const size_t size)$/;"	f
randombytes_buf	lightningd/handshake/test/run-handshake.c	49;"	d	file:
randombytes_close	libsodium/src/libsodium/randombytes/randombytes.c	/^randombytes_close(void)$/;"	f
randombytes_implementation	libsodium/src/libsodium/include/sodium/randombytes.h	/^typedef struct randombytes_implementation {$/;"	s
randombytes_implementation	libsodium/src/libsodium/include/sodium/randombytes.h	/^} randombytes_implementation;$/;"	t	typeref:struct:randombytes_implementation
randombytes_implementation_name	libsodium/src/libsodium/randombytes/randombytes.c	/^randombytes_implementation_name(void)$/;"	f
randombytes_linux_getrandom	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^randombytes_linux_getrandom(void * const buf_, size_t size)$/;"	f	file:
randombytes_linux_getrandom	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^randombytes_linux_getrandom(void * const buf_, size_t size)$/;"	f	file:
randombytes_nativeclient_H	libsodium/src/libsodium/include/sodium/randombytes_nativeclient.h	3;"	d
randombytes_nativeclient_buf	libsodium/src/libsodium/randombytes/nativeclient/randombytes_nativeclient.c	/^randombytes_nativeclient_buf(void * const buf, const size_t size)$/;"	f	file:
randombytes_nativeclient_implementation	libsodium/src/libsodium/randombytes/nativeclient/randombytes_nativeclient.c	/^struct randombytes_implementation randombytes_nativeclient_implementation = {$/;"	v	typeref:struct:randombytes_implementation
randombytes_nativeclient_implementation_name	libsodium/src/libsodium/randombytes/nativeclient/randombytes_nativeclient.c	/^randombytes_nativeclient_implementation_name(void)$/;"	f	file:
randombytes_nativeclient_random	libsodium/src/libsodium/randombytes/nativeclient/randombytes_nativeclient.c	/^randombytes_nativeclient_random(void)$/;"	f	file:
randombytes_random	libsodium/src/libsodium/randombytes/randombytes.c	/^randombytes_random(void)$/;"	f
randombytes_salsa20_implementation	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^struct randombytes_implementation randombytes_salsa20_implementation = {$/;"	v	typeref:struct:randombytes_implementation
randombytes_salsa20_implementation_name	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^randombytes_salsa20_implementation_name(void)$/;"	f	file:
randombytes_salsa20_random	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^randombytes_salsa20_random(void)$/;"	f	file:
randombytes_salsa20_random_H	libsodium/src/libsodium/include/sodium/randombytes_salsa20_random.h	3;"	d
randombytes_salsa20_random_buf	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^randombytes_salsa20_random_buf(void * const buf, const size_t size)$/;"	f	file:
randombytes_salsa20_random_close	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^randombytes_salsa20_random_close(void)$/;"	f	file:
randombytes_salsa20_random_getword	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^randombytes_salsa20_random_getword(void)$/;"	f	file:
randombytes_salsa20_random_init	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^randombytes_salsa20_random_init(void)$/;"	f	file:
randombytes_salsa20_random_random_dev_open	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^randombytes_salsa20_random_random_dev_open(void)$/;"	f	file:
randombytes_salsa20_random_rekey	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^randombytes_salsa20_random_rekey(const unsigned char * const mix)$/;"	f	file:
randombytes_salsa20_random_stir	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^randombytes_salsa20_random_stir(void)$/;"	f	file:
randombytes_salsa20_random_stir_if_needed	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^randombytes_salsa20_random_stir_if_needed(void)$/;"	f	file:
randombytes_set_implementation	libsodium/src/libsodium/randombytes/randombytes.c	/^randombytes_set_implementation(randombytes_implementation *impl)$/;"	f
randombytes_stir	libsodium/src/libsodium/randombytes/randombytes.c	/^randombytes_stir(void)$/;"	f
randombytes_sysrandom	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^randombytes_sysrandom(void)$/;"	f	file:
randombytes_sysrandom_H	libsodium/src/libsodium/include/sodium/randombytes_sysrandom.h	3;"	d
randombytes_sysrandom_buf	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^randombytes_sysrandom_buf(void * const buf, const size_t size)$/;"	f	file:
randombytes_sysrandom_close	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^randombytes_sysrandom_close(void)$/;"	f	file:
randombytes_sysrandom_implementation	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^struct randombytes_implementation randombytes_sysrandom_implementation = {$/;"	v	typeref:struct:randombytes_implementation
randombytes_sysrandom_implementation_name	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^randombytes_sysrandom_implementation_name(void)$/;"	f	file:
randombytes_sysrandom_init	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^randombytes_sysrandom_init(void)$/;"	f	file:
randombytes_sysrandom_random_dev_open	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^randombytes_sysrandom_random_dev_open(void)$/;"	f	file:
randombytes_sysrandom_stir	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^randombytes_sysrandom_stir(void)$/;"	f	file:
randombytes_sysrandom_stir_if_needed	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^randombytes_sysrandom_stir_if_needed(void)$/;"	f	file:
randombytes_tests	libsodium/test/default/randombytes.c	/^static int randombytes_tests(void)$/;"	f	file:
randombytes_uniform	libsodium/src/libsodium/randombytes/randombytes.c	/^randombytes_uniform(const uint32_t upper_bound)$/;"	f
randombytes_uniform_impl	libsodium/test/default/randombytes.c	/^static uint32_t randombytes_uniform_impl(const uint32_t upper_bound)$/;"	f	file:
randomize	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    public static synchronized boolean randomize(byte[] seed) throws AssertFailException{$/;"	m	class:NativeSecp256k1
raw	ccan/ccan/tcon/test/compile_fail-tcon_cast.c	/^	struct container raw;$/;"	m	struct:int_and_charp_container	typeref:struct:int_and_charp_container::container	file:
raw	ccan/ccan/tcon/test/compile_fail.c	/^	struct container raw;$/;"	m	struct:int_container	typeref:struct:int_container::container	file:
raw	ccan/ccan/tcon/test/compile_ok-sizeof.c	/^	struct container raw;$/;"	m	struct:charp_and_int_container	typeref:struct:charp_and_int_container::container	file:
raw	ccan/ccan/tcon/test/compile_ok-sizeof.c	/^	struct container raw;$/;"	m	struct:int_container	typeref:struct:int_container::container	file:
raw	ccan/ccan/tcon/test/compile_ok-value.c	/^	struct container raw;$/;"	m	struct:offs_container	typeref:struct:offs_container::container	file:
raw	ccan/ccan/tcon/test/compile_ok-value.c	/^	struct container raw;$/;"	m	struct:val_container	typeref:struct:val_container::container	file:
raw	ccan/ccan/tcon/test/compile_ok-void.c	/^	struct container raw;$/;"	m	struct:void_container	typeref:struct:void_container::container	file:
raw	ccan/ccan/tcon/test/compile_ok.c	/^	struct container raw;$/;"	m	struct:charp_and_int_container	typeref:struct:charp_and_int_container::container	file:
raw	ccan/ccan/tcon/test/compile_ok.c	/^	struct container raw;$/;"	m	struct:int_container	typeref:struct:int_container::container	file:
read_addresses	daemon/dns.c	/^static struct io_plan *read_addresses(struct io_conn *conn, struct dns_async *d)$/;"	f	file:
read_all	ccan/ccan/read_write_all/read_write_all.c	/^bool read_all(int fd, void *data, size_t size)$/;"	f
read_all	lightningd/handshake/test/run-handshake.c	42;"	d	file:
read_body	ccan/ccan/io/benchmarks/run-length-prefix.c	/^static struct io_plan read_body(struct io_conn *conn, struct client *client)$/;"	f	file:
read_buf	ccan/ccan/io/test/run-06-idle.c	/^static struct io_plan *read_buf(struct io_conn *conn, struct data *d)$/;"	f	file:
read_buf	ccan/ccan/io/test/run-08-read-after-hangup.c	/^static struct io_plan *read_buf(struct io_conn *conn, void *unused)$/;"	f	file:
read_buf	ccan/ccan/io/test/run-10-many.c	/^static struct io_plan *read_buf(struct io_conn *conn, struct buffer *buf)$/;"	f	file:
read_buf	lightningd/test/run-cryptomsg.c	/^static char *read_buf;$/;"	v	file:
read_buf_len	lightningd/test/run-cryptomsg.c	/^static size_t read_buf_len;$/;"	v	file:
read_buffer	daemon/sphinx.c	/^static void read_buffer(void *dst, const u8 *src, const size_t len, int *pos)$/;"	f	file:
read_done	ccan/ccan/io/test/run-06-idle.c	/^static struct io_plan *read_done(struct io_conn *conn, struct data *d)$/;"	f	file:
read_done	ccan/ccan/io/test/run-07-break.c	/^static struct io_plan *read_done(struct io_conn *conn, struct data *d)$/;"	f	file:
read_fd	lightningd/handshake/test/run-handshake.c	/^static int read_fd, write_fd;$/;"	v	file:
read_from_client	test/test_protocol.c	/^static void read_from_client(const char *desc, int fd, void *dst, size_t len)$/;"	f	file:
read_from_socket	ccan/ccan/io/test/run-04-writepartial.c	/^static void read_from_socket(const char *str, const struct addrinfo *addrinfo)$/;"	f	file:
read_from_socket	ccan/ccan/io/test/run-05-write.c	/^static void read_from_socket(size_t bytes, const struct addrinfo *addrinfo)$/;"	f	file:
read_from_socket	ccan/ccan/io/test/run-19-always.c	/^static void read_from_socket(size_t bytes, const struct addrinfo *addrinfo)$/;"	f	file:
read_in	ccan/ccan/io/test/run-08-hangup-on-idle.c	/^static struct io_plan *read_in(struct io_conn *conn, char *buf)$/;"	f	file:
read_in	test/test_protocol.c	/^static void read_in(int fd, void *p, size_t len)$/;"	f	file:
read_init_pkt	daemon/peer.c	/^static struct io_plan *read_init_pkt(struct io_conn *conn,$/;"	f	file:
read_ip	daemon/routing.c	/^bool read_ip(const tal_t *ctx, const u8 *addresses, char **hostname,$/;"	f
read_json	daemon/jsonrpc.c	/^static struct io_plan *read_json(struct io_conn *conn,$/;"	f	file:
read_more	daemon/bitcoind.c	/^static struct io_plan *read_more(struct io_conn *conn, struct bitcoin_cli *bcli)$/;"	f	file:
read_nodes	ccan/ccan/tal/benchmark/samba-allocs.c	/^static struct node *read_nodes(FILE *f)$/;"	f	file:
read_peer	test/test_protocol.c	/^static void read_peer(struct peer *peer, const char *str, const char *cmd)$/;"	f	file:
read_request	ccan/ccan/io/benchmarks/run-different-speed.c	/^static struct io_plan read_request(struct io_conn *conn, struct client *client)$/;"	f	file:
reader	ccan/ccan/io/benchmarks/run-loop.c	/^	struct io_conn *reader, *writer;$/;"	m	struct:buffer	typeref:struct:buffer::io_conn	file:
reader	ccan/ccan/io/test/run-10-many.c	/^	struct io_conn *reader, *writer;$/;"	m	struct:buffer	typeref:struct:buffer::io_conn	file:
readlen	irc.h	/^	size_t readlen;$/;"	m	struct:ircstate
realloc	ccan/ccan/opt/private.h	/^	void *(*realloc)(void *ptr, size_t size);$/;"	m	struct:opt_alloc
realloc	ccan/ccan/opt/test/run-set_alloc.c	18;"	d	file:
realloc	ccan/ccan/opt/test/run-set_alloc.c	28;"	d	file:
realloc	ccan/ccan/take/test/run.c	11;"	d	file:
realloc	ccan/ccan/tal/test/run-test-backend.c	26;"	d	file:
realloc_count	ccan/ccan/opt/test/run-set_alloc.c	/^static unsigned int alloc_count, realloc_count, free_count;$/;"	v	file:
reallocfn	ccan/ccan/opt/test/run-set_alloc.c	/^static void *reallocfn(void *ptr, size_t size)$/;"	f	file:
realm	daemon/sphinx.h	/^	u8 realm;$/;"	m	struct:hoppayload
reason	lightning.pb-c.h	/^  FailReason *reason;$/;"	m	struct:_UpdateFailHtlc
reason	lightning.pb-c.h	/^  char *reason;$/;"	m	struct:_FailInfo
reason	wire/test/run-peer-wire.c	/^	u8 *reason;$/;"	m	struct:msg_update_fail_htlc	file:
rebroadcast_anchors	daemon/peer.c	/^void rebroadcast_anchors(struct lightningd_state *dstate)$/;"	f
rebroadcast_txs	daemon/chaintopology.c	/^static void rebroadcast_txs(struct lightningd_state *dstate,$/;"	f	file:
recalculate_fees	daemon/channel.c	/^static void recalculate_fees(struct channel_oneside *a,$/;"	f	file:
receive_commit	test/test_protocol.c	/^static void receive_commit(struct peer *peer, const struct signature *sig)$/;"	f	file:
receive_feechange	test/test_protocol.c	/^static void receive_feechange(struct peer *peer)$/;"	f	file:
receive_offer	test/test_protocol.c	/^static void receive_offer(struct peer *peer, unsigned int htlc)$/;"	f	file:
receive_proof	daemon/cryptopkt.c	/^static struct io_plan *receive_proof(struct io_conn *conn,$/;"	f	file:
receive_remove	test/test_protocol.c	/^static void receive_remove(struct peer *peer, unsigned int htlc)$/;"	f	file:
receive_revoke	test/test_protocol.c	/^static void receive_revoke(struct peer *peer, u32 number)$/;"	f	file:
received_req	lightningd/hsm/hsm.c	/^	struct io_plan *(*received_req)(struct io_conn *, struct conn_info *);$/;"	m	struct:conn_info	typeref:struct:conn_info::received_req	file:
reconnect_failed	daemon/peer.c	/^static void reconnect_failed(struct io_conn *conn, struct peer *peer)$/;"	f	file:
reconnect_peers	daemon/peer.c	/^void reconnect_peers(struct lightningd_state *dstate)$/;"	f
reconnect_timeout	irc.h	/^	struct timerel reconnect_timeout;$/;"	m	struct:ircstate	typeref:struct:ircstate::timerel
record_input_mapping	test/test_state_coverage.c	/^static bool record_input_mapping(int b)$/;"	f	file:
record_output	test/test_state_coverage.c	/^static void record_output(enum state_input **outputs, enum state_input out)$/;"	f	file:
record_recv	test/test_protocol.c	/^static void PRINTF_FMT(2,3) record_recv(struct peer *peer, const char *fmt, ...)$/;"	f
record_send	test/test_protocol.c	/^static void PRINTF_FMT(2,3) record_send(struct peer *peer, const char *fmt, ...)$/;"	f
record_state	test/test_state_coverage.c	/^static void record_state(struct state_dump **sd,$/;"	f	file:
recurse	ccan/ccan/take/test/run.c	/^static void recurse(const char *takeme, int count)$/;"	f	file:
recv_body	daemon/cryptopkt.c	/^static struct io_plan *recv_body(struct io_conn *conn, struct peer *peer)$/;"	f	file:
recv_body_negotiate	daemon/cryptopkt.c	/^static struct io_plan *recv_body_negotiate(struct io_conn *conn,$/;"	f	file:
recv_header	daemon/cryptopkt.c	/^static struct io_plan *recv_header(struct io_conn *conn, struct peer *peer)$/;"	f	file:
recv_header_negotiate	daemon/cryptopkt.c	/^static struct io_plan *recv_header_negotiate(struct io_conn *conn,$/;"	f	file:
recv_req	lightningd/gossip/gossip.c	/^static struct io_plan *recv_req(struct io_conn *conn, struct daemon *daemon)$/;"	f	file:
recv_req	lightningd/hsm/hsm.c	/^static struct io_plan *recv_req(struct io_conn *conn, struct conn_info *ci)$/;"	f	file:
reexec	daemon/lightningd.h	/^	char **reexec;$/;"	m	struct:lightningd_state
ref	ccan/ccan/list/test/run-single-eval.c	20;"	d	file:
region	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    block_region *region;   \/* Memory region pointer *\/$/;"	m	struct:Argon2_instance_t
register_callback	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb.c	10;"	d	file:
register_callback	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb_postargs.c	9;"	d	file:
register_callback	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb_preargs.c	10;"	d	file:
register_callback	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb-NULL.c	12;"	d	file:
register_callback	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb-undefined.c	12;"	d	file:
register_callback	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb-vars.c	12;"	d	file:
register_callback_post	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb-undefined.c	30;"	d	file:
register_callback_post	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb-vars.c	30;"	d	file:
register_callback_pre	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb-undefined.c	21;"	d	file:
register_callback_pre	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb-vars.c	21;"	d	file:
regtest	daemon/lightningd.h	/^	bool regtest;$/;"	m	struct:config
rehash	ccan/ccan/htable/htable.h	/^	size_t (*rehash)(const void *elem, void *priv);$/;"	m	struct:htable
rehash_table	ccan/ccan/htable/htable.c	/^static COLD void rehash_table(struct htable *ht)$/;"	f	file:
rel_locktime	bitcoin/locktime.h	/^struct rel_locktime {$/;"	s
rel_locktime	type_to_string.h	/^	const struct rel_locktime *rel_locktime;$/;"	m	union:printable_types	typeref:struct:printable_types::rel_locktime
rel_locktime_is_seconds	bitcoin/locktime.c	/^bool rel_locktime_is_seconds(const struct rel_locktime *rel)$/;"	f
rel_locktime_to_blocks	bitcoin/locktime.c	/^u32 rel_locktime_to_blocks(const struct rel_locktime *rel)$/;"	f
rel_locktime_to_proto	protobuf_convert.c	/^Locktime *rel_locktime_to_proto(const tal_t *ctx,$/;"	f
rel_locktime_to_seconds	bitcoin/locktime.c	/^u32 rel_locktime_to_seconds(const struct rel_locktime *rel)$/;"	f
release_peer	lightningd/gossip/gossip.c	/^static struct io_plan *release_peer(struct io_conn *conn, struct daemon *daemon,$/;"	f	file:
release_peer_fd	lightningd/gossip/gossip.c	/^static struct io_plan *release_peer_fd(struct io_conn *conn, struct peer *peer)$/;"	f	file:
remainder	daemon/sphinx.h	/^	u8 remainder[11];$/;"	m	struct:hoppayload
remote	daemon/peer.h	/^	struct peer_visible_state local, remote;$/;"	m	struct:peer	typeref:struct:peer::
remote	test/test_protocol.c	/^	struct commit_info *local, *remote;$/;"	m	struct:peer	typeref:struct:peer::	file:
remote	test/test_protocol.c	/^	struct commit_info local, remote, remote_prev;$/;"	m	struct:database	typeref:struct:database::	file:
remote_changes_pending	daemon/peer.c	/^static void remote_changes_pending(struct peer *peer)$/;"	f	file:
remote_prev	test/test_protocol.c	/^	struct commit_info local, remote, remote_prev;$/;"	m	struct:database	typeref:struct:database::	file:
remove_cmd_from_pc	daemon/pay.c	/^static void remove_cmd_from_pc(struct command *cmd)$/;"	f	file:
remove_conn_from_array	daemon/routing.c	/^static bool remove_conn_from_array(struct node_connection ***conns,$/;"	f	file:
remove_connection	daemon/routing.c	/^void remove_connection(struct routing_state *rstate,$/;"	f
remove_event	test/test_state_coverage.c	/^static void remove_event(struct peer *peer, enum state_input input)$/;"	f	file:
remove_event_	test/test_state_coverage.c	/^static bool remove_event_(uint64_t *events, enum state_input input)$/;"	f	file:
remove_from_always	ccan/ccan/io/poll.c	/^void remove_from_always(struct io_conn *conn)$/;"	f
remove_from_map	ccan/ccan/cdump/cdump.c	/^static bool remove_from_map(const char *name,$/;"	f	file:
remove_htlc	daemon/channel.c	/^static void remove_htlc(struct channel_state *cstate,$/;"	f	file:
remove_htlc	test/test_state_coverage.c	/^static void remove_htlc(struct htlc *to_us, unsigned int *num_to_us,$/;"	f	file:
remove_htlc_id	test/test_state_coverage.c	/^static void remove_htlc_id(struct peer *peer, unsigned int id)$/;"	f	file:
remove_stopper	daemon/bitcoind.c	/^static void remove_stopper(struct bitcoin_cli *bcli)$/;"	f	file:
remove_timer	daemon/timeout.c	/^static void remove_timer(struct oneshot *t)$/;"	f	file:
remove_undefined	ccan/ccan/cdump/cdump.c	/^static void remove_undefined(cdump_map_t *map)$/;"	f	file:
remove_void	ccan/ccan/cast/test/compile_ok-cast_void.c	/^static void *remove_void(const void *p)$/;"	f	file:
rep	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^rep movsb$/;"	l
rep	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^rep stosb$/;"	l
repetitions	ccan/ccan/crypto/ripemd160/test/run-test-vectors.c	/^	size_t repetitions;$/;"	m	struct:test	file:
repetitions	ccan/ccan/crypto/sha256/test/run-test-vectors.c	/^	size_t repetitions;$/;"	m	struct:test	file:
reply_buffer	ccan/ccan/io/benchmarks/run-different-speed.c	/^	char reply_buffer[REPLY_SIZE];$/;"	m	struct:client	file:
report	lightningd/test/run-commit_tx.c	/^static void report(struct bitcoin_tx *tx,$/;"	f	file:
report_htlcs	lightningd/test/run-commit_tx.c	/^static void report_htlcs(const struct bitcoin_tx *tx,$/;"	f	file:
report_trail	test/test_state_coverage.c	/^static void report_trail(const struct trail *t, const char *problem)$/;"	f	file:
report_trail_rev	test/test_state_coverage.c	/^static void report_trail_rev(const struct trail *t)$/;"	f	file:
req	lightningd/subdaemon.c	/^	void (*req)(struct subdaemon *, const u8 *msg_in, void *req_data);$/;"	m	struct:subdaemon_req	file:
req_close_fd_out	lightningd/subdaemon.c	/^static struct io_plan *req_close_fd_out(struct io_conn *conn,$/;"	f	file:
req_conn	lightningd/subdaemon.h	/^	struct io_conn *req_conn;$/;"	m	struct:subdaemon	typeref:struct:subdaemon::io_conn
req_data	lightningd/subdaemon.c	/^	void *req_data;$/;"	m	struct:subdaemon_req	file:
req_finished_reply	lightningd/subdaemon.c	/^static struct io_plan *req_finished_reply(struct io_conn *conn,$/;"	f	file:
req_in	lightningd/subdaemon.c	/^	u8 *req_in;$/;"	m	struct:subdaemon_req	file:
req_next	lightningd/subdaemon.c	/^static struct io_plan *req_next(struct io_conn *conn, struct subdaemon *sd)$/;"	f	file:
req_process_replymsg	lightningd/subdaemon.c	/^static struct io_plan *req_process_replymsg(struct io_conn *conn,$/;"	f	file:
req_read_reply	lightningd/subdaemon.c	/^static struct io_plan *req_read_reply(struct io_conn *conn,$/;"	f	file:
req_sent_msg	lightningd/subdaemon.c	/^static struct io_plan *req_sent_msg(struct io_conn *conn,$/;"	f	file:
reqname	lightningd/subdaemon.h	/^	const char *(*reqname)(int req);$/;"	m	struct:subdaemon
reqs	lightningd/subdaemon.h	/^	struct list_head reqs;$/;"	m	struct:subdaemon	typeref:struct:subdaemon::list_head
request_buffer	ccan/ccan/io/benchmarks/run-different-speed.c	/^	char request_buffer[REQUEST_SIZE];$/;"	m	struct:client	file:
request_buffer	ccan/ccan/io/benchmarks/run-length-prefix.c	/^	char *request_buffer;$/;"	m	struct:client	file:
resend_updates	test/test_protocol.c	/^static void resend_updates(struct peer *peer)$/;"	f	file:
reserved	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	/^  uint8_t  reserved[14];   \/* 32 *\/$/;"	m	struct:blake2b_param_
reset	ccan/ccan/opt/test/run-checkopt.c	/^static void reset(void)$/;"	f	file:
reset_onchain_closing	daemon/peer.c	/^static void reset_onchain_closing(struct peer *peer)$/;"	f	file:
reset_options	ccan/ccan/opt/test/utils.c	/^void reset_options(void)$/;"	f
reset_sends	test/test_protocol.c	/^static void reset_sends(char **svg, bool is_a, struct sent **sent, int *y)$/;"	f	file:
resize_notifier	ccan/ccan/tal/test/run-notifier.c	/^static void resize_notifier(char *p, enum tal_notify_type notify, void *info)$/;"	f	file:
resizefn	ccan/ccan/tal/tal.c	/^static void *(*resizefn)(void *, size_t size) = realloc;$/;"	v	file:
resolve_invoice	daemon/invoice.c	/^void resolve_invoice(struct lightningd_state *dstate, struct invoice *invoice)$/;"	f
resolve_mutual_close	daemon/peer.c	/^static void resolve_mutual_close(struct peer *peer)$/;"	f	file:
resolve_our_htlc	daemon/peer.c	/^static void resolve_our_htlc(struct peer *peer,$/;"	f	file:
resolve_our_unilateral	daemon/peer.c	/^static void resolve_our_unilateral(struct peer *peer)$/;"	f	file:
resolve_their_htlc	daemon/peer.c	/^static void resolve_their_htlc(struct peer *peer, unsigned int out_num)$/;"	f	file:
resolve_their_steal	daemon/peer.c	/^static void resolve_their_steal(struct peer *peer,$/;"	f	file:
resolve_their_unilateral	daemon/peer.c	/^static void resolve_their_unilateral(struct peer *peer)$/;"	f	file:
resolved	daemon/peer.h	/^		const struct bitcoin_tx **resolved;$/;"	m	struct:peer::__anon50	typeref:struct:peer::__anon50::bitcoin_tx
responder	lightningd/handshake/handshake.c	/^static void responder(int fd,$/;"	f	file:
response	daemon/jsonrpc.c	/^	struct json_result *response;$/;"	m	struct:log_info	typeref:struct:log_info::json_result	file:
response	lightningd/peer_control.c	/^	struct json_result *response;$/;"	m	struct:log_info	typeref:struct:log_info::json_result	file:
restore_peer_local_visible_state	daemon/db.c	/^static void restore_peer_local_visible_state(struct peer *peer)$/;"	f	file:
restore_state	test/test_protocol.c	/^static void restore_state(struct peer *peer)$/;"	f	file:
restore_wallet_address	daemon/wallet.c	/^bool restore_wallet_address(struct lightningd_state *dstate,$/;"	f
result	ccan/ccan/crypto/ripemd160/test/run-test-vectors.c	/^	beint32_t result[5];$/;"	m	struct:test	file:
result	ccan/ccan/crypto/sha256/test/run-test-vectors.c	/^	const char *result;$/;"	m	struct:test	file:
result_append	daemon/json.c	/^static void result_append(struct json_result *res, const char *str)$/;"	f	file:
result_append_fmt	daemon/json.c	/^result_append_fmt(struct json_result *res, const char *fmt, ...)$/;"	f
result_ends_with	daemon/json.c	/^static bool result_ends_with(struct json_result *res, const char *str)$/;"	f	file:
ret	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^ret$/;"	l
ret	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^ret$/;"	l
ret	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^ret$/;"	l
ret	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^ret$/;"	l
ret	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^ret$/;"	l
ret	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^ret$/;"	l
retransmit_pkts	daemon/peer.c	/^static void retransmit_pkts(struct peer *peer, s64 ack)$/;"	f	file:
retransmit_updates	daemon/peer.c	/^static void retransmit_updates(struct peer *peer)$/;"	f	file:
retry	secp256k1/src/hash.h	/^    int retry;$/;"	m	struct:__anon24
retry_all_routing	daemon/peer.c	/^static void retry_all_routing(struct peer *restarted_peer)$/;"	f	file:
reverse_bytes	bitcoin/tx.c	/^static void reverse_bytes(u8 *arr, size_t len)$/;"	f	file:
revocation_basepoint	wire/test/run-peer-wire.c	/^	struct pubkey revocation_basepoint;$/;"	m	struct:msg_accept_channel	typeref:struct:msg_accept_channel::pubkey	file:
revocation_basepoint	wire/test/run-peer-wire.c	/^	struct pubkey revocation_basepoint;$/;"	m	struct:msg_open_channel	typeref:struct:msg_open_channel::pubkey	file:
revocation_hash	daemon/peer.h	/^	struct sha256 revocation_hash;$/;"	m	struct:commit_info	typeref:struct:commit_info::sha256
revocation_hash	lightning.pb-c.h	/^  Sha256Hash *revocation_hash;$/;"	m	struct:_OpenChannel
revocation_preimage	lightning.pb-c.h	/^  Sha256Hash *revocation_preimage;$/;"	m	struct:_UpdateRevocation
revocation_seed	daemon/secrets.c	/^	struct sha256 revocation_seed;$/;"	m	struct:peer_secrets	typeref:struct:peer_secrets::sha256	file:
revoke_and_ack_eq	wire/test/run-peer-wire.c	/^static bool revoke_and_ack_eq(const struct msg_revoke_and_ack *a,$/;"	f	file:
revoked	test/test_protocol.c	/^	bool revoked;$/;"	m	struct:commit_info	file:
rgb_color	daemon/routing.h	/^	u8 rgb_color[3];$/;"	m	struct:node
rgb_color	wire/test/run-peer-wire.c	/^	u8 rgb_color[3];$/;"	m	struct:msg_node_announcement	file:
rhash	daemon/htlc.h	/^	struct sha256 rhash;$/;"	m	struct:htlc	typeref:struct:htlc::sha256
rhash	daemon/invoice.h	/^	struct sha256 rhash;$/;"	m	struct:invoice	typeref:struct:invoice::sha256
rhash	daemon/pay.c	/^	struct sha256 rhash;$/;"	m	struct:pay_command	typeref:struct:pay_command::sha256	file:
rho	daemon/sphinx.c	/^	u8 rho[KEY_LEN];$/;"	m	struct:keyset	file:
right	ccan/ccan/likely/likely.c	/^	unsigned long count, right;$/;"	m	struct:trace	file:
right_ratio	ccan/ccan/likely/likely.c	/^static double right_ratio(const struct trace *t)$/;"	f	file:
ripemd160	ccan/ccan/crypto/ripemd160/ripemd160.c	/^void ripemd160(struct ripemd160 *ripemd, const void *p, size_t size)$/;"	f
ripemd160	ccan/ccan/crypto/ripemd160/ripemd160.h	/^struct ripemd160 {$/;"	s
ripemd160_be16	ccan/ccan/crypto/ripemd160/ripemd160.c	/^void ripemd160_be16(struct ripemd160_ctx *ctx, uint16_t v)$/;"	f
ripemd160_be32	ccan/ccan/crypto/ripemd160/ripemd160.c	/^void ripemd160_be32(struct ripemd160_ctx *ctx, uint32_t v)$/;"	f
ripemd160_be64	ccan/ccan/crypto/ripemd160/ripemd160.c	/^void ripemd160_be64(struct ripemd160_ctx *ctx, uint64_t v)$/;"	f
ripemd160_ctx	ccan/ccan/crypto/ripemd160/ripemd160.h	/^struct ripemd160_ctx {$/;"	s
ripemd160_done	ccan/ccan/crypto/ripemd160/ripemd160.c	/^void ripemd160_done(struct ripemd160_ctx *ctx, struct ripemd160 *res)$/;"	f
ripemd160_init	ccan/ccan/crypto/ripemd160/ripemd160.c	/^void ripemd160_init(struct ripemd160_ctx *ctx)$/;"	f
ripemd160_le16	ccan/ccan/crypto/ripemd160/ripemd160.c	/^void ripemd160_le16(struct ripemd160_ctx *ctx, uint16_t v)$/;"	f
ripemd160_le32	ccan/ccan/crypto/ripemd160/ripemd160.c	/^void ripemd160_le32(struct ripemd160_ctx *ctx, uint32_t v)$/;"	f
ripemd160_le64	ccan/ccan/crypto/ripemd160/ripemd160.c	/^void ripemd160_le64(struct ripemd160_ctx *ctx, uint64_t v)$/;"	f
ripemd160_u16	ccan/ccan/crypto/ripemd160/ripemd160.c	/^void ripemd160_u16(struct ripemd160_ctx *ctx, uint16_t v)$/;"	f
ripemd160_u32	ccan/ccan/crypto/ripemd160/ripemd160.c	/^void ripemd160_u32(struct ripemd160_ctx *ctx, uint32_t v)$/;"	f
ripemd160_u64	ccan/ccan/crypto/ripemd160/ripemd160.c	/^void ripemd160_u64(struct ripemd160_ctx *ctx, uint64_t v)$/;"	f
ripemd160_u8	ccan/ccan/crypto/ripemd160/ripemd160.c	/^void ripemd160_u8(struct ripemd160_ctx *ctx, uint8_t v)$/;"	f
ripemd160_update	ccan/ccan/crypto/ripemd160/ripemd160.c	/^void ripemd160_update(struct ripemd160_ctx *ctx, const void *p, size_t size)$/;"	f
ripemd_from_base58	bitcoin/base58.c	/^bool ripemd_from_base58(u8 *version,$/;"	f
risk	daemon/routing.h	/^		u64 risk;$/;"	m	struct:node::__anon54
risk_fee	daemon/routing.c	/^static u64 risk_fee(s64 amount, u32 delay, double riskfactor)$/;"	f	file:
rk	lightningd/cryptomsg.c	/^	struct sha256 sk, rk;$/;"	m	struct:crypto_state	typeref:struct:crypto_state::	file:
rkeys	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^    __m128i          rkeys[16];$/;"	m	struct:context	file:
rn	lightningd/cryptomsg.c	/^	u64 rn, sn;$/;"	m	struct:crypto_state	file:
rnd32	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^    unsigned char rnd32[16U * SALSA20_RANDOM_BLOCK_SIZE];$/;"	m	struct:Salsa20Random_	file:
rnd32_outleft	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^    size_t        rnd32_outleft;$/;"	m	struct:Salsa20Random_	file:
rol	ccan/ccan/crypto/ripemd160/ripemd160.c	/^static uint32_t inline rol(uint32_t x, int i) { return (x << i) | (x >> (32 - i)); }$/;"	f	file:
root	daemon/chaintopology.c	/^	struct block *root;$/;"	m	struct:topology	typeref:struct:topology::block	file:
rotate	libsodium/src/libsodium/crypto_core/hsalsa20/ref2/core_hsalsa20.c	/^static uint32_t rotate(uint32_t u,int c)$/;"	f	file:
rotate	libsodium/src/libsodium/crypto_core/salsa20/ref/core_salsa20.c	/^static uint32_t rotate(uint32_t u,int c)$/;"	f	file:
rotate	libsodium/src/libsodium/crypto_core/salsa2012/ref/core_salsa2012.c	/^static uint32_t rotate(uint32_t u,int c)$/;"	f	file:
rotate	libsodium/src/libsodium/crypto_core/salsa208/ref/core_salsa208.c	/^static uint32_t rotate(uint32_t u,int c)$/;"	f	file:
rotate_Xs	ccan/ccan/crypto/sha256/benchmarks/sha256_avx1.asm	/^rotate_Xs$/;"	l
rotate_Xs	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^rotate_Xs$/;"	l
rotate_Xs	ccan/ccan/crypto/sha256/benchmarks/sha256_sse4.asm	/^rotate_Xs$/;"	l
rotbyte	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common.h	459;"	d
rotl32	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2-impl.h	/^static inline uint32_t rotl32( const uint32_t w, const unsigned c )$/;"	f
rotl32	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-impl.h	/^static inline uint32_t rotl32( const uint32_t w, const unsigned c )$/;"	f
rotl64	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2-impl.h	/^static inline uint64_t rotl64( const uint64_t w, const unsigned c )$/;"	f
rotl64	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-impl.h	/^static inline uint64_t rotl64( const uint64_t w, const unsigned c )$/;"	f
rotr32	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2-impl.h	/^static inline uint32_t rotr32( const uint32_t w, const unsigned c )$/;"	f
rotr32	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-impl.h	/^static inline uint32_t rotr32( const uint32_t w, const unsigned c )$/;"	f
rotr64	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2-impl.h	/^static inline uint64_t rotr64( const uint64_t w, const unsigned c )$/;"	f
rotr64	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-impl.h	/^static inline uint64_t rotr64( const uint64_t w, const unsigned c )$/;"	f
route	contrib/pylightning/lightning/lightning.py	/^    route = l1.getroute(info5['id'], 100, 1)$/;"	v
route	lightning.pb-c.h	/^  Routing *route;$/;"	m	struct:_UpdateAddHtlc
route__descriptor	lightning.pb-c.c	/^const ProtobufCMessageDescriptor route__descriptor =$/;"	v
route__field_descriptors	lightning.pb-c.c	/^static const ProtobufCFieldDescriptor route__field_descriptors[1] =$/;"	v	file:
route__field_indices_by_name	lightning.pb-c.c	/^static const unsigned route__field_indices_by_name[] = {$/;"	v	file:
route__free_unpacked	lightning.pb-c.c	/^void   route__free_unpacked$/;"	f
route__get_packed_size	lightning.pb-c.c	/^size_t route__get_packed_size$/;"	f
route__init	lightning.pb-c.c	/^void   route__init$/;"	f
route__number_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange route__number_ranges[1 + 1] =$/;"	v	file:
route__pack	lightning.pb-c.c	/^size_t route__pack$/;"	f
route__pack_to_buffer	lightning.pb-c.c	/^size_t route__pack_to_buffer$/;"	f
route__unpack	lightning.pb-c.c	/^       route__unpack$/;"	f
route_htlc_onwards	daemon/peer.c	/^static void route_htlc_onwards(struct peer *peer,$/;"	f	file:
route_next_case	daemon/sphinx.h	/^enum route_next_case {$/;"	g
route_step	daemon/sphinx.h	/^struct route_step {$/;"	s
route_step__descriptor	lightning.pb-c.c	/^const ProtobufCMessageDescriptor route_step__descriptor =$/;"	v
route_step__field_descriptors	lightning.pb-c.c	/^static const ProtobufCFieldDescriptor route_step__field_descriptors[3] =$/;"	v	file:
route_step__field_indices_by_name	lightning.pb-c.c	/^static const unsigned route_step__field_indices_by_name[] = {$/;"	v	file:
route_step__free_unpacked	lightning.pb-c.c	/^void   route_step__free_unpacked$/;"	f
route_step__get_packed_size	lightning.pb-c.c	/^size_t route_step__get_packed_size$/;"	f
route_step__init	lightning.pb-c.c	/^void   route_step__init$/;"	f
route_step__number_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange route_step__number_ranges[2 + 1] =$/;"	v	file:
route_step__pack	lightning.pb-c.c	/^size_t route_step__pack$/;"	f
route_step__pack_to_buffer	lightning.pb-c.c	/^size_t route_step__pack_to_buffer$/;"	f
route_step__unpack	lightning.pb-c.c	/^       route_step__unpack$/;"	f
routing	daemon/htlc.h	/^	const u8 *routing;$/;"	m	struct:htlc
routing__descriptor	lightning.pb-c.c	/^const ProtobufCMessageDescriptor routing__descriptor =$/;"	v
routing__field_descriptors	lightning.pb-c.c	/^static const ProtobufCFieldDescriptor routing__field_descriptors[1] =$/;"	v	file:
routing__field_indices_by_name	lightning.pb-c.c	/^static const unsigned routing__field_indices_by_name[] = {$/;"	v	file:
routing__free_unpacked	lightning.pb-c.c	/^void   routing__free_unpacked$/;"	f
routing__get_packed_size	lightning.pb-c.c	/^size_t routing__get_packed_size$/;"	f
routing__init	lightning.pb-c.c	/^void   routing__init$/;"	f
routing__number_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange routing__number_ranges[1 + 1] =$/;"	v	file:
routing__pack	lightning.pb-c.c	/^size_t routing__pack$/;"	f
routing__pack_to_buffer	lightning.pb-c.c	/^size_t routing__pack_to_buffer$/;"	f
routing__unpack	lightning.pb-c.c	/^       routing__unpack$/;"	f
routing_state	daemon/routing.h	/^struct routing_state {$/;"	s
routinginfo	daemon/sphinx.h	/^	u8 routinginfo[ROUTING_INFO_SIZE];$/;"	m	struct:onionpacket
rpc_filename	daemon/lightningd.h	/^	char *rpc_filename;$/;"	m	struct:lightningd_state
rs	libsodium/test/default/onetimeauth.c	/^static unsigned char rs[32]$/;"	v	file:
rs	libsodium/test/default/onetimeauth2.c	/^static unsigned char rs[32]$/;"	v	file:
rs	libsodium/test/default/stream3.c	/^static unsigned char rs[32];$/;"	v	file:
rshift32_littleendian	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128.h	38;"	d
rshift32_littleendian	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128_aes128ctr.c	/^void rshift32_littleendian(int128 *r, const unsigned int n)$/;"	f
rshift64_littleendian	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128.h	41;"	d
rshift64_littleendian	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128_aes128ctr.c	/^void rshift64_littleendian(int128 *r, const unsigned int n)$/;"	f
rstate	daemon/lightningd.h	/^	struct routing_state *rstate;$/;"	m	struct:lightningd_state	typeref:struct:lightningd_state::routing_state
rstate	lightningd/gossip/gossip.c	/^	struct routing_state *rstate;$/;"	m	struct:daemon	typeref:struct:daemon::routing_state	file:
run	ccan/tools/configurator/configurator.c	/^static char *run(const char *cmd, int *exitstatus)$/;"	f	file:
run_benchmark	secp256k1/src/bench.h	/^void run_benchmark(char *name, void (*benchmark)(void*), void (*setup)(void*), void (*teardown)(void*), void* data, int count, int iter) {$/;"	f
run_child	ccan/ccan/ptr_valid/ptr_valid.c	/^static void run_child(int infd, int outfd)$/;"	f	file:
run_context_tests	secp256k1/src/tests.c	/^void run_context_tests(void) {$/;"	f
run_ec_combine	secp256k1/src/tests.c	/^void run_ec_combine(void) {$/;"	f
run_ec_pubkey_parse_test	secp256k1/src/tests.c	/^void run_ec_pubkey_parse_test(void) {$/;"	f
run_ecdh_tests	secp256k1/src/modules/ecdh/tests_impl.h	/^void run_ecdh_tests(void) {$/;"	f
run_ecdsa_der_parse	secp256k1/src/tests.c	/^void run_ecdsa_der_parse(void) {$/;"	f
run_ecdsa_edge_cases	secp256k1/src/tests.c	/^void run_ecdsa_edge_cases(void) {$/;"	f
run_ecdsa_end_to_end	secp256k1/src/tests.c	/^void run_ecdsa_end_to_end(void) {$/;"	f
run_ecdsa_openssl	secp256k1/src/tests.c	/^void run_ecdsa_openssl(void) {$/;"	f
run_ecdsa_sign_verify	secp256k1/src/tests.c	/^void run_ecdsa_sign_verify(void) {$/;"	f
run_eckey_edge_case_test	secp256k1/src/tests.c	/^void run_eckey_edge_case_test(void) {$/;"	f
run_ecmult_chain	secp256k1/src/tests.c	/^void run_ecmult_chain(void) {$/;"	f
run_ecmult_const_tests	secp256k1/src/tests.c	/^void run_ecmult_const_tests(void) {$/;"	f
run_ecmult_constants	secp256k1/src/tests.c	/^void run_ecmult_constants(void) {$/;"	f
run_ecmult_gen_blind	secp256k1/src/tests.c	/^void run_ecmult_gen_blind(void) {$/;"	f
run_endomorphism_tests	secp256k1/src/tests.c	/^void run_endomorphism_tests(void) {$/;"	f
run_field_convert	secp256k1/src/tests.c	/^void run_field_convert(void) {$/;"	f
run_field_inv	secp256k1/src/tests.c	/^void run_field_inv(void) {$/;"	f
run_field_inv_all_var	secp256k1/src/tests.c	/^void run_field_inv_all_var(void) {$/;"	f
run_field_inv_var	secp256k1/src/tests.c	/^void run_field_inv_var(void) {$/;"	f
run_field_misc	secp256k1/src/tests.c	/^void run_field_misc(void) {$/;"	f
run_ge	secp256k1/src/tests.c	/^void run_ge(void) {$/;"	f
run_group_decompress	secp256k1/src/tests.c	/^void run_group_decompress(void) {$/;"	f
run_hmac_sha256_tests	secp256k1/src/tests.c	/^void run_hmac_sha256_tests(void) {$/;"	f
run_num_smalltests	secp256k1/src/tests.c	/^void run_num_smalltests(void) {$/;"	f
run_peer	test/test_state_coverage.c	/^static void run_peer(const struct peer *peer,$/;"	f	file:
run_point_times_order	secp256k1/src/tests.c	/^void run_point_times_order(void) {$/;"	f
run_rand_bits	secp256k1/src/tests.c	/^void run_rand_bits(void) {$/;"	f
run_rand_int	secp256k1/src/tests.c	/^void run_rand_int(void) {$/;"	f
run_random_pubkeys	secp256k1/src/tests.c	/^void run_random_pubkeys(void) {$/;"	f
run_recovery_tests	secp256k1/src/modules/recovery/tests_impl.h	/^void run_recovery_tests(void) {$/;"	f
run_rfc6979_hmac_sha256_tests	secp256k1/src/tests.c	/^void run_rfc6979_hmac_sha256_tests(void) {$/;"	f
run_scalar_tests	secp256k1/src/tests.c	/^void run_scalar_tests(void) {$/;"	f
run_schnorr_tests	secp256k1/src/modules/schnorr/tests_impl.h	/^void run_schnorr_tests(void) {$/;"	f
run_sha256_tests	secp256k1/src/tests.c	/^void run_sha256_tests(void) {$/;"	f
run_sqr	secp256k1/src/tests.c	/^void run_sqr(void) {$/;"	f
run_sqrt	secp256k1/src/tests.c	/^void run_sqrt(void) {$/;"	f
run_test	ccan/tools/configurator/configurator.c	/^static bool run_test(const char *cmd, struct test *test)$/;"	f	file:
run_wnaf	secp256k1/src/tests.c	/^void run_wnaf(void) {$/;"	f
runstatedir	libsodium/Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
runstatedir	libsodium/dist-build/Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
runstatedir	libsodium/msvc-scripts/Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
runstatedir	libsodium/src/Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
runstatedir	libsodium/src/libsodium/Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
runstatedir	libsodium/src/libsodium/include/Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
runstatedir	libsodium/test/Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
runstatedir	libsodium/test/default/Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
runstatedir	secp256k1/Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
rval	daemon/pay.c	/^	const struct preimage *rval;$/;"	m	struct:pay_command	typeref:struct:pay_command::preimage	file:
rval_known	test/test_state_coverage.c	/^static bool rval_known(const struct peer *peer, unsigned int id)$/;"	f	file:
rvals_known	test/test_state_coverage.c	/^	unsigned int rvals_known[HTLC_ARRSIZE];$/;"	m	struct:peer	file:
rwl	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static final ReentrantReadWriteLock rwl = new ReentrantReadWriteLock();$/;"	f	class:NativeSecp256k1	file:
s	ccan/ccan/alignof/test/run.c	/^	short s;$/;"	m	struct:lots_of_types	file:
s	ccan/ccan/io/io_plan.h	/^	size_t s;$/;"	m	union:io_plan_union
s	ccan/ccan/str/test/compile_fail-STR_MAX_CHARS.c	/^struct s {$/;"	s	file:
s	ccan/ccan/strmap/strmap.h	/^		const char *s;$/;"	m	union:strmap::__anon1
s	daemon/json.c	/^	char *s;$/;"	m	struct:json_result	file:
s	daemon/netaddr.h	/^		struct sockaddr s;$/;"	m	union:netaddr::__anon53	typeref:struct:netaddr::__anon53::sockaddr
s	lightningd/handshake/handshake.c	/^	struct sha256 s;$/;"	m	struct:secret	typeref:struct:secret::sha256	file:
s	secp256k1/src/hash.h	/^    uint32_t s[8];$/;"	m	struct:__anon22
s	test/test_state_coverage.c	/^		struct core_state s;$/;"	m	union:situation::__anon39	typeref:struct:situation::__anon39::core_state	file:
s0	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256.c	66;"	d	file:
s0	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512.c	66;"	d	file:
s1	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256.c	67;"	d	file:
s1	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512.c	67;"	d	file:
s1	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	/^    vec s1;$/;"	m	struct:chacha_ctx	file:
s1	lightning.pb-c.h	/^  uint64_t s1;$/;"	m	struct:_Signature
s16	ccan/ccan/short_types/short_types.h	/^typedef int16_t s16;$/;"	t
s2	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	/^    vec s2;$/;"	m	struct:chacha_ctx	file:
s2	lightning.pb-c.h	/^  uint64_t s2;$/;"	m	struct:_Signature
s3	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	/^    vec s3;$/;"	m	struct:chacha_ctx	file:
s3	lightning.pb-c.h	/^  uint64_t s3;$/;"	m	struct:_Signature
s32	ccan/ccan/short_types/short_types.h	/^typedef int32_t s32;$/;"	t
s4	lightning.pb-c.h	/^  uint64_t s4;$/;"	m	struct:_Signature
s64	ccan/ccan/short_types/short_types.h	/^typedef int64_t s64;$/;"	t
s8	ccan/ccan/short_types/short_types.h	/^typedef int8_t s8;$/;"	t
s_ck	lightningd/cryptomsg.c	/^	struct sha256 s_ck, r_ck;$/;"	m	struct:crypto_state	typeref:struct:crypto_state::sha256	file:
saddr	daemon/netaddr.h	/^	} saddr;$/;"	m	struct:netaddr	typeref:union:netaddr::__anon53
safe_read	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^safe_read(const int fd, void * const buf_, size_t size)$/;"	f	file:
safe_read	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^safe_read(const int fd, void * const buf_, size_t size)$/;"	f	file:
salsa20_8	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c	/^salsa20_8(uint32_t B[16])$/;"	f	file:
salt	ccan/ccan/crypto/hkdf_sha256/test/api-rfc5869.c	/^	const char *ikm, *salt, *info, *okm;$/;"	m	struct:test	file:
salt	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h	/^  uint8_t  salt[BLAKE2B_SALTBYTES]; \/* 48 *\/$/;"	m	struct:blake2b_param_
salt	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint8_t *salt;    \/* salt array *\/$/;"	m	struct:Argon2_Context
salt1	libsodium/test/default/pwhash_scrypt_ll.c	/^static const char *salt1 = "";$/;"	v	file:
salt2	libsodium/test/default/pwhash_scrypt_ll.c	/^static const char *salt2 = "NaCl";$/;"	v	file:
salt3	libsodium/test/default/pwhash_scrypt_ll.c	/^static const char *salt3 = "SodiumChloride";$/;"	v	file:
saltlen	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint32_t saltlen; \/* salt length *\/$/;"	m	struct:Argon2_Context
sanity_check	test/test_state_coverage.c	/^static void sanity_check(const struct peer *peer)$/;"	f	file:
satoshis	daemon/peer.h	/^		u64 satoshis;$/;"	m	struct:peer::__anon47
save_and_jump	ccan/ccan/opt/test/run-checkopt.c	/^static void save_and_jump(const char *fmt, ...)$/;"	f	file:
save_err_output	ccan/ccan/opt/test/utils.c	/^void save_err_output(const char *fmt, ...)$/;"	f
saved_fprintf	ccan/ccan/opt/test/run-helpers.c	/^static int saved_fprintf(FILE *ignored UNNEEDED, const char *fmt, ...)$/;"	f	file:
saved_printf	ccan/ccan/opt/test/run-helpers.c	/^static int saved_printf(const char *fmt, ...)$/;"	f	file:
saved_vprintf	ccan/ccan/opt/test/run-checkopt.c	/^static int saved_vprintf(const char *fmt, va_list ap)$/;"	f	file:
saved_vprintf	ccan/ccan/opt/test/run-helpers.c	/^static int saved_vprintf(const char *fmt, va_list ap)$/;"	f	file:
sbindir	libsodium/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	libsodium/dist-build/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	libsodium/msvc-scripts/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	libsodium/src/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	libsodium/src/libsodium/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	libsodium/src/libsodium/include/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	libsodium/test/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	libsodium/test/default/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	secp256k1/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbox	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common.h	553;"	d
sc_muladd	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void sc_muladd(unsigned char *s,const unsigned char *a,const unsigned char *b,const unsigned char *c)$/;"	f
sc_muladd	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	155;"	d
sc_reduce	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^void sc_reduce(unsigned char *s)$/;"	f
sc_reduce	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	154;"	d
scalar	libsodium/test/default/scalarmult7.c	/^static unsigned char scalar[32];$/;"	v	file:
scalar	secp256k1/src/bench_ecdh.c	/^    unsigned char scalar[32];$/;"	m	struct:__anon21	file:
scalar_test	secp256k1/src/tests.c	/^void scalar_test(void) {$/;"	f
scalar_x	secp256k1/src/bench_internal.c	/^    secp256k1_scalar scalar_x, scalar_y;$/;"	m	struct:__anon19	file:
scalar_y	secp256k1/src/bench_internal.c	/^    secp256k1_scalar scalar_x, scalar_y;$/;"	m	struct:__anon19	file:
scalarmult2_DEPENDENCIES	libsodium/test/default/Makefile	/^scalarmult2_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
scalarmult2_LDADD	libsodium/test/default/Makefile	/^scalarmult2_LDADD = $(TESTS_LDADD)$/;"	m
scalarmult2_OBJECTS	libsodium/test/default/Makefile	/^scalarmult2_OBJECTS = scalarmult2.$(OBJEXT)$/;"	m
scalarmult2_SOURCE	libsodium/test/default/Makefile	/^scalarmult2_SOURCE = cmptest.h scalarmult2.c$/;"	m
scalarmult2_SOURCES	libsodium/test/default/Makefile	/^scalarmult2_SOURCES = scalarmult2.c$/;"	m
scalarmult5_DEPENDENCIES	libsodium/test/default/Makefile	/^scalarmult5_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
scalarmult5_LDADD	libsodium/test/default/Makefile	/^scalarmult5_LDADD = $(TESTS_LDADD)$/;"	m
scalarmult5_OBJECTS	libsodium/test/default/Makefile	/^scalarmult5_OBJECTS = scalarmult5.$(OBJEXT)$/;"	m
scalarmult5_SOURCE	libsodium/test/default/Makefile	/^scalarmult5_SOURCE = cmptest.h scalarmult5.c$/;"	m
scalarmult5_SOURCES	libsodium/test/default/Makefile	/^scalarmult5_SOURCES = scalarmult5.c$/;"	m
scalarmult6_DEPENDENCIES	libsodium/test/default/Makefile	/^scalarmult6_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
scalarmult6_LDADD	libsodium/test/default/Makefile	/^scalarmult6_LDADD = $(TESTS_LDADD)$/;"	m
scalarmult6_OBJECTS	libsodium/test/default/Makefile	/^scalarmult6_OBJECTS = scalarmult6.$(OBJEXT)$/;"	m
scalarmult6_SOURCE	libsodium/test/default/Makefile	/^scalarmult6_SOURCE = cmptest.h scalarmult6.c$/;"	m
scalarmult6_SOURCES	libsodium/test/default/Makefile	/^scalarmult6_SOURCES = scalarmult6.c$/;"	m
scalarmult7_DEPENDENCIES	libsodium/test/default/Makefile	/^scalarmult7_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
scalarmult7_LDADD	libsodium/test/default/Makefile	/^scalarmult7_LDADD = $(TESTS_LDADD)$/;"	m
scalarmult7_OBJECTS	libsodium/test/default/Makefile	/^scalarmult7_OBJECTS = scalarmult7.$(OBJEXT)$/;"	m
scalarmult7_SOURCE	libsodium/test/default/Makefile	/^scalarmult7_SOURCE = cmptest.h scalarmult7.c$/;"	m
scalarmult7_SOURCES	libsodium/test/default/Makefile	/^scalarmult7_SOURCES = scalarmult7.c$/;"	m
scalarmult_DEPENDENCIES	libsodium/test/default/Makefile	/^scalarmult_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
scalarmult_LDADD	libsodium/test/default/Makefile	/^scalarmult_LDADD = $(TESTS_LDADD)$/;"	m
scalarmult_OBJECTS	libsodium/test/default/Makefile	/^scalarmult_OBJECTS = scalarmult.$(OBJEXT)$/;"	m
scalarmult_SOURCE	libsodium/test/default/Makefile	/^scalarmult_SOURCE = cmptest.h scalarmult.c$/;"	m
scalarmult_SOURCES	libsodium/test/default/Makefile	/^scalarmult_SOURCES = scalarmult.c$/;"	m
scalarmult_poly1305_H	libsodium/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.h	3;"	d
schnorrSign	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    public static byte[] schnorrSign(byte[] data, byte[] sec) throws AssertFailException {$/;"	m	class:NativeSecp256k1
script	bitcoin/tx.h	/^	u8 *script;$/;"	m	struct:bitcoin_tx_input
script	bitcoin/tx.h	/^	u8 *script;$/;"	m	struct:bitcoin_tx_output
scripteq	bitcoin/script.c	/^bool scripteq(const tal_t *s1, const tal_t *s2)$/;"	f
scriptpubkey	lightning.pb-c.h	/^  ProtobufCBinaryData scriptpubkey;$/;"	m	struct:_CloseShutdown
scriptpubkey	wire/test/run-peer-wire.c	/^	u8 *scriptpubkey;$/;"	m	struct:msg_shutdown	file:
scriptpubkey_p2pkh	bitcoin/script.c	/^u8 *scriptpubkey_p2pkh(const tal_t *ctx, const struct pubkey *pubkey)$/;"	f
scriptpubkey_p2sh	bitcoin/script.c	/^u8 *scriptpubkey_p2sh(const tal_t *ctx, const u8 *redeemscript)$/;"	f
scriptpubkey_p2wpkh	bitcoin/script.c	/^u8 *scriptpubkey_p2wpkh(const tal_t *ctx, const struct pubkey *key)$/;"	f
scriptpubkey_p2wsh	bitcoin/script.c	/^u8 *scriptpubkey_p2wsh(const tal_t *ctx, const u8 *witnessscript)$/;"	f
sd	lightningd/subdaemon.c	/^	struct subdaemon *sd;$/;"	m	struct:subdaemon_req	typeref:struct:subdaemon_req::subdaemon	file:
secKeyVerify	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    public static boolean secKeyVerify(byte[] seckey) {$/;"	m	class:NativeSecp256k1
seckey	daemon/cryptopkt.c	/^	u8 seckey[32];$/;"	m	struct:key_negotiate	file:
secondkey	libsodium/test/default/core2.c	/^static unsigned char secondkey[32];$/;"	v	file:
secondkey	libsodium/test/default/core3.c	/^static unsigned char secondkey[32]$/;"	v	file:
secondkey	libsodium/test/default/stream2.c	/^static unsigned char secondkey[32]$/;"	v	file:
seconds	lightning.pb-c.h	/^    uint32_t seconds;$/;"	m	union:_Locktime::__anon41
seconds_to_abs_locktime	bitcoin/locktime.c	/^bool seconds_to_abs_locktime(u32 seconds, struct abs_locktime *abs)$/;"	f
seconds_to_rel_locktime	bitcoin/locktime.c	/^bool seconds_to_rel_locktime(u32 seconds, struct rel_locktime *rel)$/;"	f
secp256k1_callback	secp256k1/src/util.h	/^} secp256k1_callback;$/;"	t	typeref:struct:__anon20
secp256k1_callback_call	secp256k1/src/util.h	/^static SECP256K1_INLINE void secp256k1_callback_call(const secp256k1_callback * const cb, const char * const text) {$/;"	f
secp256k1_context	secp256k1/include/secp256k1.h	/^typedef struct secp256k1_context_struct secp256k1_context;$/;"	t	typeref:struct:secp256k1_context_struct
secp256k1_context_clone	secp256k1/src/secp256k1.c	/^secp256k1_context* secp256k1_context_clone(const secp256k1_context* ctx) {$/;"	f
secp256k1_context_create	secp256k1/src/secp256k1.c	/^secp256k1_context* secp256k1_context_create(unsigned int flags) {$/;"	f
secp256k1_context_destroy	secp256k1/src/secp256k1.c	/^void secp256k1_context_destroy(secp256k1_context* ctx) {$/;"	f
secp256k1_context_randomize	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static native int secp256k1_context_randomize(ByteBuffer byteBuff, long context);$/;"	m	class:NativeSecp256k1	file:
secp256k1_context_randomize	secp256k1/src/secp256k1.c	/^int secp256k1_context_randomize(secp256k1_context* ctx, const unsigned char *seed32) {$/;"	f
secp256k1_context_set_error_callback	secp256k1/src/secp256k1.c	/^void secp256k1_context_set_error_callback(secp256k1_context* ctx, void (*fun)(const char* message, void* data), const void* data) {$/;"	f
secp256k1_context_set_illegal_callback	secp256k1/src/secp256k1.c	/^void secp256k1_context_set_illegal_callback(secp256k1_context* ctx, void (*fun)(const char* message, void* data), const void* data) {$/;"	f
secp256k1_context_struct	secp256k1/src/secp256k1.c	/^struct secp256k1_context_struct {$/;"	s	file:
secp256k1_ctx	lightningd/handshake/test/run-handshake.c	/^secp256k1_context *secp256k1_ctx;$/;"	v
secp256k1_ctx	utils.c	/^secp256k1_context *secp256k1_ctx;$/;"	v
secp256k1_ctx	wire/test/run-peer-wire.c	/^secp256k1_context *secp256k1_ctx;$/;"	v
secp256k1_ctx_clone	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static native long secp256k1_ctx_clone(long context);$/;"	m	class:NativeSecp256k1	file:
secp256k1_der_parse_integer	secp256k1/src/ecdsa_impl.h	/^static int secp256k1_der_parse_integer(secp256k1_scalar *r, const unsigned char **sig, const unsigned char *sigend) {$/;"	f
secp256k1_der_read_len	secp256k1/src/ecdsa_impl.h	/^static int secp256k1_der_read_len(const unsigned char **sigp, const unsigned char *sigend) {$/;"	f
secp256k1_destroy_context	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static native void secp256k1_destroy_context(long context);$/;"	m	class:NativeSecp256k1	file:
secp256k1_ec_privkey_tweak_add	secp256k1/src/secp256k1.c	/^int secp256k1_ec_privkey_tweak_add(const secp256k1_context* ctx, unsigned char *seckey, const unsigned char *tweak) {$/;"	f
secp256k1_ec_privkey_tweak_mul	secp256k1/src/secp256k1.c	/^int secp256k1_ec_privkey_tweak_mul(const secp256k1_context* ctx, unsigned char *seckey, const unsigned char *tweak) {$/;"	f
secp256k1_ec_pubkey_combine	secp256k1/src/secp256k1.c	/^int secp256k1_ec_pubkey_combine(const secp256k1_context* ctx, secp256k1_pubkey *pubnonce, const secp256k1_pubkey * const *pubnonces, size_t n) {$/;"	f
secp256k1_ec_pubkey_create	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static native byte[][] secp256k1_ec_pubkey_create(ByteBuffer byteBuff, long context);$/;"	m	class:NativeSecp256k1	file:
secp256k1_ec_pubkey_create	secp256k1/src/secp256k1.c	/^int secp256k1_ec_pubkey_create(const secp256k1_context* ctx, secp256k1_pubkey *pubkey, const unsigned char *seckey) {$/;"	f
secp256k1_ec_pubkey_parse	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static native byte[][] secp256k1_ec_pubkey_parse(ByteBuffer byteBuff, long context, int inputLen);$/;"	m	class:NativeSecp256k1	file:
secp256k1_ec_pubkey_parse	secp256k1/src/secp256k1.c	/^int secp256k1_ec_pubkey_parse(const secp256k1_context* ctx, secp256k1_pubkey* pubkey, const unsigned char *input, size_t inputlen) {$/;"	f
secp256k1_ec_pubkey_serialize	secp256k1/src/secp256k1.c	/^int secp256k1_ec_pubkey_serialize(const secp256k1_context* ctx, unsigned char *output, size_t *outputlen, const secp256k1_pubkey* pubkey, unsigned int flags) {$/;"	f
secp256k1_ec_pubkey_tweak_add	secp256k1/src/secp256k1.c	/^int secp256k1_ec_pubkey_tweak_add(const secp256k1_context* ctx, secp256k1_pubkey *pubkey, const unsigned char *tweak) {$/;"	f
secp256k1_ec_pubkey_tweak_mul	secp256k1/src/secp256k1.c	/^int secp256k1_ec_pubkey_tweak_mul(const secp256k1_context* ctx, secp256k1_pubkey *pubkey, const unsigned char *tweak) {$/;"	f
secp256k1_ec_seckey_verify	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static native int secp256k1_ec_seckey_verify(ByteBuffer byteBuff, long context);$/;"	m	class:NativeSecp256k1	file:
secp256k1_ec_seckey_verify	secp256k1/src/secp256k1.c	/^int secp256k1_ec_seckey_verify(const secp256k1_context* ctx, const unsigned char *seckey) {$/;"	f
secp256k1_ecdh	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static native byte[][] secp256k1_ecdh(ByteBuffer byteBuff, long context, int inputLen);$/;"	m	class:NativeSecp256k1	file:
secp256k1_ecdh	secp256k1/src/modules/ecdh/main_impl.h	/^int secp256k1_ecdh(const secp256k1_context* ctx, unsigned char *result, const secp256k1_pubkey *point, const unsigned char *scalar) {$/;"	f
secp256k1_ecdsa_const_order_as_fe	secp256k1/src/ecdsa_impl.h	/^static const secp256k1_fe secp256k1_ecdsa_const_order_as_fe = SECP256K1_FE_CONST($/;"	v
secp256k1_ecdsa_const_p_minus_order	secp256k1/src/ecdsa_impl.h	/^static const secp256k1_fe secp256k1_ecdsa_const_p_minus_order = SECP256K1_FE_CONST($/;"	v
secp256k1_ecdsa_recover	secp256k1/src/modules/recovery/main_impl.h	/^int secp256k1_ecdsa_recover(const secp256k1_context* ctx, secp256k1_pubkey *pubkey, const secp256k1_ecdsa_recoverable_signature *signature, const unsigned char *msg32) {$/;"	f
secp256k1_ecdsa_recoverable_signature	secp256k1/include/secp256k1_recovery.h	/^} secp256k1_ecdsa_recoverable_signature;$/;"	t	typeref:struct:__anon13
secp256k1_ecdsa_recoverable_signature_convert	secp256k1/src/modules/recovery/main_impl.h	/^int secp256k1_ecdsa_recoverable_signature_convert(const secp256k1_context* ctx, secp256k1_ecdsa_signature* sig, const secp256k1_ecdsa_recoverable_signature* sigin) {$/;"	f
secp256k1_ecdsa_recoverable_signature_load	secp256k1/src/modules/recovery/main_impl.h	/^static void secp256k1_ecdsa_recoverable_signature_load(const secp256k1_context* ctx, secp256k1_scalar* r, secp256k1_scalar* s, int* recid, const secp256k1_ecdsa_recoverable_signature* sig) {$/;"	f
secp256k1_ecdsa_recoverable_signature_parse_compact	secp256k1/src/modules/recovery/main_impl.h	/^int secp256k1_ecdsa_recoverable_signature_parse_compact(const secp256k1_context* ctx, secp256k1_ecdsa_recoverable_signature* sig, const unsigned char *input64, int recid) {$/;"	f
secp256k1_ecdsa_recoverable_signature_save	secp256k1/src/modules/recovery/main_impl.h	/^static void secp256k1_ecdsa_recoverable_signature_save(secp256k1_ecdsa_recoverable_signature* sig, const secp256k1_scalar* r, const secp256k1_scalar* s, int recid) {$/;"	f
secp256k1_ecdsa_recoverable_signature_serialize_compact	secp256k1/src/modules/recovery/main_impl.h	/^int secp256k1_ecdsa_recoverable_signature_serialize_compact(const secp256k1_context* ctx, unsigned char *output64, int *recid, const secp256k1_ecdsa_recoverable_signature* sig) {$/;"	f
secp256k1_ecdsa_sig_parse	secp256k1/src/ecdsa_impl.h	/^static int secp256k1_ecdsa_sig_parse(secp256k1_scalar *rr, secp256k1_scalar *rs, const unsigned char *sig, size_t size) {$/;"	f
secp256k1_ecdsa_sig_recover	secp256k1/src/modules/recovery/main_impl.h	/^static int secp256k1_ecdsa_sig_recover(const secp256k1_ecmult_context *ctx, const secp256k1_scalar *sigr, const secp256k1_scalar* sigs, secp256k1_ge *pubkey, const secp256k1_scalar *message, int recid) {$/;"	f
secp256k1_ecdsa_sig_serialize	secp256k1/src/ecdsa_impl.h	/^static int secp256k1_ecdsa_sig_serialize(unsigned char *sig, size_t *size, const secp256k1_scalar* ar, const secp256k1_scalar* as) {$/;"	f
secp256k1_ecdsa_sig_sign	secp256k1/src/ecdsa_impl.h	/^static int secp256k1_ecdsa_sig_sign(const secp256k1_ecmult_gen_context *ctx, secp256k1_scalar *sigr, secp256k1_scalar *sigs, const secp256k1_scalar *seckey, const secp256k1_scalar *message, const secp256k1_scalar *nonce, int *recid) {$/;"	f
secp256k1_ecdsa_sig_verify	secp256k1/src/ecdsa_impl.h	/^static int secp256k1_ecdsa_sig_verify(const secp256k1_ecmult_context *ctx, const secp256k1_scalar *sigr, const secp256k1_scalar *sigs, const secp256k1_ge *pubkey, const secp256k1_scalar *message) {$/;"	f
secp256k1_ecdsa_sign	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static native byte[][] secp256k1_ecdsa_sign(ByteBuffer byteBuff, long context);$/;"	m	class:NativeSecp256k1	file:
secp256k1_ecdsa_sign	secp256k1/src/secp256k1.c	/^int secp256k1_ecdsa_sign(const secp256k1_context* ctx, secp256k1_ecdsa_signature *signature, const unsigned char *msg32, const unsigned char *seckey, secp256k1_nonce_function noncefp, const void* noncedata) {$/;"	f
secp256k1_ecdsa_sign_recoverable	secp256k1/src/modules/recovery/main_impl.h	/^int secp256k1_ecdsa_sign_recoverable(const secp256k1_context* ctx, secp256k1_ecdsa_recoverable_signature *signature, const unsigned char *msg32, const unsigned char *seckey, secp256k1_nonce_function noncefp, const void* noncedata) {$/;"	f
secp256k1_ecdsa_signature	secp256k1/include/secp256k1.h	/^} secp256k1_ecdsa_signature;$/;"	t	typeref:struct:__anon15
secp256k1_ecdsa_signature	type_to_string.h	/^	const secp256k1_ecdsa_signature *secp256k1_ecdsa_signature;$/;"	m	union:printable_types
secp256k1_ecdsa_signature_load	secp256k1/src/secp256k1.c	/^static void secp256k1_ecdsa_signature_load(const secp256k1_context* ctx, secp256k1_scalar* r, secp256k1_scalar* s, const secp256k1_ecdsa_signature* sig) {$/;"	f	file:
secp256k1_ecdsa_signature_normalize	secp256k1/src/secp256k1.c	/^int secp256k1_ecdsa_signature_normalize(const secp256k1_context* ctx, secp256k1_ecdsa_signature *sigout, const secp256k1_ecdsa_signature *sigin) {$/;"	f
secp256k1_ecdsa_signature_parse_compact	secp256k1/src/secp256k1.c	/^int secp256k1_ecdsa_signature_parse_compact(const secp256k1_context* ctx, secp256k1_ecdsa_signature* sig, const unsigned char *input64) {$/;"	f
secp256k1_ecdsa_signature_parse_der	secp256k1/src/secp256k1.c	/^int secp256k1_ecdsa_signature_parse_der(const secp256k1_context* ctx, secp256k1_ecdsa_signature* sig, const unsigned char *input, size_t inputlen) {$/;"	f
secp256k1_ecdsa_signature_save	secp256k1/src/secp256k1.c	/^static void secp256k1_ecdsa_signature_save(secp256k1_ecdsa_signature* sig, const secp256k1_scalar* r, const secp256k1_scalar* s) {$/;"	f	file:
secp256k1_ecdsa_signature_serialize_compact	secp256k1/src/secp256k1.c	/^int secp256k1_ecdsa_signature_serialize_compact(const secp256k1_context* ctx, unsigned char *output64, const secp256k1_ecdsa_signature* sig) {$/;"	f
secp256k1_ecdsa_signature_serialize_der	secp256k1/src/secp256k1.c	/^int secp256k1_ecdsa_signature_serialize_der(const secp256k1_context* ctx, unsigned char *output, size_t *outputlen, const secp256k1_ecdsa_signature* sig) {$/;"	f
secp256k1_ecdsa_verify	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static native int secp256k1_ecdsa_verify(ByteBuffer byteBuff, long context, int sigLen, int pubLen);$/;"	m	class:NativeSecp256k1	file:
secp256k1_ecdsa_verify	secp256k1/src/secp256k1.c	/^int secp256k1_ecdsa_verify(const secp256k1_context* ctx, const secp256k1_ecdsa_signature *sig, const unsigned char *msg32, const secp256k1_pubkey *pubkey) {$/;"	f
secp256k1_eckey_privkey_tweak_add	secp256k1/src/eckey_impl.h	/^static int secp256k1_eckey_privkey_tweak_add(secp256k1_scalar *key, const secp256k1_scalar *tweak) {$/;"	f
secp256k1_eckey_privkey_tweak_mul	secp256k1/src/eckey_impl.h	/^static int secp256k1_eckey_privkey_tweak_mul(secp256k1_scalar *key, const secp256k1_scalar *tweak) {$/;"	f
secp256k1_eckey_pubkey_parse	secp256k1/src/eckey_impl.h	/^static int secp256k1_eckey_pubkey_parse(secp256k1_ge *elem, const unsigned char *pub, size_t size) {$/;"	f
secp256k1_eckey_pubkey_serialize	secp256k1/src/eckey_impl.h	/^static int secp256k1_eckey_pubkey_serialize(secp256k1_ge *elem, unsigned char *pub, size_t *size, int compressed) {$/;"	f
secp256k1_eckey_pubkey_tweak_add	secp256k1/src/eckey_impl.h	/^static int secp256k1_eckey_pubkey_tweak_add(const secp256k1_ecmult_context *ctx, secp256k1_ge *key, const secp256k1_scalar *tweak) {$/;"	f
secp256k1_eckey_pubkey_tweak_mul	secp256k1/src/eckey_impl.h	/^static int secp256k1_eckey_pubkey_tweak_mul(const secp256k1_ecmult_context *ctx, secp256k1_ge *key, const secp256k1_scalar *tweak) {$/;"	f
secp256k1_ecmult	secp256k1/src/ecmult_impl.h	/^static void secp256k1_ecmult(const secp256k1_ecmult_context *ctx, secp256k1_gej *r, const secp256k1_gej *a, const secp256k1_scalar *na, const secp256k1_scalar *ng) {$/;"	f
secp256k1_ecmult_const	secp256k1/src/ecmult_const_impl.h	/^static void secp256k1_ecmult_const(secp256k1_gej *r, const secp256k1_ge *a, const secp256k1_scalar *scalar) {$/;"	f
secp256k1_ecmult_context	secp256k1/src/ecmult.h	/^} secp256k1_ecmult_context;$/;"	t	typeref:struct:__anon29
secp256k1_ecmult_context_build	secp256k1/src/ecmult_impl.h	/^static void secp256k1_ecmult_context_build(secp256k1_ecmult_context *ctx, const secp256k1_callback *cb) {$/;"	f
secp256k1_ecmult_context_clear	secp256k1/src/ecmult_impl.h	/^static void secp256k1_ecmult_context_clear(secp256k1_ecmult_context *ctx) {$/;"	f
secp256k1_ecmult_context_clone	secp256k1/src/ecmult_impl.h	/^static void secp256k1_ecmult_context_clone(secp256k1_ecmult_context *dst,$/;"	f
secp256k1_ecmult_context_init	secp256k1/src/ecmult_impl.h	/^static void secp256k1_ecmult_context_init(secp256k1_ecmult_context *ctx) {$/;"	f
secp256k1_ecmult_context_is_built	secp256k1/src/ecmult_impl.h	/^static int secp256k1_ecmult_context_is_built(const secp256k1_ecmult_context *ctx) {$/;"	f
secp256k1_ecmult_gen	secp256k1/src/ecmult_gen_impl.h	/^static void secp256k1_ecmult_gen(const secp256k1_ecmult_gen_context *ctx, secp256k1_gej *r, const secp256k1_scalar *gn) {$/;"	f
secp256k1_ecmult_gen_blind	secp256k1/src/ecmult_gen_impl.h	/^static void secp256k1_ecmult_gen_blind(secp256k1_ecmult_gen_context *ctx, const unsigned char *seed32) {$/;"	f
secp256k1_ecmult_gen_context	secp256k1/src/ecmult_gen.h	/^} secp256k1_ecmult_gen_context;$/;"	t	typeref:struct:__anon37
secp256k1_ecmult_gen_context_build	secp256k1/src/ecmult_gen_impl.h	/^static void secp256k1_ecmult_gen_context_build(secp256k1_ecmult_gen_context *ctx, const secp256k1_callback* cb) {$/;"	f
secp256k1_ecmult_gen_context_clear	secp256k1/src/ecmult_gen_impl.h	/^static void secp256k1_ecmult_gen_context_clear(secp256k1_ecmult_gen_context *ctx) {$/;"	f
secp256k1_ecmult_gen_context_clone	secp256k1/src/ecmult_gen_impl.h	/^static void secp256k1_ecmult_gen_context_clone(secp256k1_ecmult_gen_context *dst,$/;"	f
secp256k1_ecmult_gen_context_init	secp256k1/src/ecmult_gen_impl.h	/^static void secp256k1_ecmult_gen_context_init(secp256k1_ecmult_gen_context *ctx) {$/;"	f
secp256k1_ecmult_gen_context_is_built	secp256k1/src/ecmult_gen_impl.h	/^static int secp256k1_ecmult_gen_context_is_built(const secp256k1_ecmult_gen_context* ctx) {$/;"	f
secp256k1_ecmult_odd_multiples_table	secp256k1/src/ecmult_impl.h	/^static void secp256k1_ecmult_odd_multiples_table(int n, secp256k1_gej *prej, secp256k1_fe *zr, const secp256k1_gej *a) {$/;"	f
secp256k1_ecmult_odd_multiples_table_globalz_windowa	secp256k1/src/ecmult_impl.h	/^static void secp256k1_ecmult_odd_multiples_table_globalz_windowa(secp256k1_ge *pre, secp256k1_fe *globalz, const secp256k1_gej *a) {$/;"	f
secp256k1_ecmult_odd_multiples_table_storage_var	secp256k1/src/ecmult_impl.h	/^static void secp256k1_ecmult_odd_multiples_table_storage_var(int n, secp256k1_ge_storage *pre, const secp256k1_gej *a, const secp256k1_callback *cb) {$/;"	f
secp256k1_ecmult_static_context	secp256k1/src/ecmult_static_context.h	/^static const secp256k1_ge_storage secp256k1_ecmult_static_context[64][16] = {$/;"	v
secp256k1_ecmult_wnaf	secp256k1/src/ecmult_impl.h	/^static int secp256k1_ecmult_wnaf(int *wnaf, int len, const secp256k1_scalar *a, int w) {$/;"	f
secp256k1_fe	secp256k1/src/field_10x26.h	/^} secp256k1_fe;$/;"	t	typeref:struct:__anon17
secp256k1_fe	secp256k1/src/field_5x52.h	/^} secp256k1_fe;$/;"	t	typeref:struct:__anon26
secp256k1_fe_add	secp256k1/src/field_10x26_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_add(secp256k1_fe *r, const secp256k1_fe *a) {$/;"	f
secp256k1_fe_add	secp256k1/src/field_5x52_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_add(secp256k1_fe *r, const secp256k1_fe *a) {$/;"	f
secp256k1_fe_clear	secp256k1/src/field_10x26_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_clear(secp256k1_fe *a) {$/;"	f
secp256k1_fe_clear	secp256k1/src/field_5x52_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_clear(secp256k1_fe *a) {$/;"	f
secp256k1_fe_cmov	secp256k1/src/field_10x26_impl.h	/^static SECP256K1_INLINE void secp256k1_fe_cmov(secp256k1_fe *r, const secp256k1_fe *a, int flag) {$/;"	f
secp256k1_fe_cmov	secp256k1/src/field_5x52_impl.h	/^static SECP256K1_INLINE void secp256k1_fe_cmov(secp256k1_fe *r, const secp256k1_fe *a, int flag) {$/;"	f
secp256k1_fe_cmp_var	secp256k1/src/field_10x26_impl.h	/^static int secp256k1_fe_cmp_var(const secp256k1_fe *a, const secp256k1_fe *b) {$/;"	f
secp256k1_fe_cmp_var	secp256k1/src/field_5x52_impl.h	/^static int secp256k1_fe_cmp_var(const secp256k1_fe *a, const secp256k1_fe *b) {$/;"	f
secp256k1_fe_equal_var	secp256k1/src/field_impl.h	/^SECP256K1_INLINE static int secp256k1_fe_equal_var(const secp256k1_fe *a, const secp256k1_fe *b) {$/;"	f
secp256k1_fe_from_storage	secp256k1/src/field_10x26_impl.h	/^static SECP256K1_INLINE void secp256k1_fe_from_storage(secp256k1_fe *r, const secp256k1_fe_storage *a) {$/;"	f
secp256k1_fe_from_storage	secp256k1/src/field_5x52_impl.h	/^static SECP256K1_INLINE void secp256k1_fe_from_storage(secp256k1_fe *r, const secp256k1_fe_storage *a) {$/;"	f
secp256k1_fe_get_b32	secp256k1/src/field_10x26_impl.h	/^static void secp256k1_fe_get_b32(unsigned char *r, const secp256k1_fe *a) {$/;"	f
secp256k1_fe_get_b32	secp256k1/src/field_5x52_impl.h	/^static void secp256k1_fe_get_b32(unsigned char *r, const secp256k1_fe *a) {$/;"	f
secp256k1_fe_inv	secp256k1/src/field_impl.h	/^static void secp256k1_fe_inv(secp256k1_fe *r, const secp256k1_fe *a) {$/;"	f
secp256k1_fe_inv_all_var	secp256k1/src/field_impl.h	/^static void secp256k1_fe_inv_all_var(size_t len, secp256k1_fe *r, const secp256k1_fe *a) {$/;"	f
secp256k1_fe_inv_var	secp256k1/src/field_impl.h	/^static void secp256k1_fe_inv_var(secp256k1_fe *r, const secp256k1_fe *a) {$/;"	f
secp256k1_fe_is_odd	secp256k1/src/field_10x26_impl.h	/^SECP256K1_INLINE static int secp256k1_fe_is_odd(const secp256k1_fe *a) {$/;"	f
secp256k1_fe_is_odd	secp256k1/src/field_5x52_impl.h	/^SECP256K1_INLINE static int secp256k1_fe_is_odd(const secp256k1_fe *a) {$/;"	f
secp256k1_fe_is_zero	secp256k1/src/field_10x26_impl.h	/^SECP256K1_INLINE static int secp256k1_fe_is_zero(const secp256k1_fe *a) {$/;"	f
secp256k1_fe_is_zero	secp256k1/src/field_5x52_impl.h	/^SECP256K1_INLINE static int secp256k1_fe_is_zero(const secp256k1_fe *a) {$/;"	f
secp256k1_fe_mul	secp256k1/src/field_10x26_impl.h	/^static void secp256k1_fe_mul(secp256k1_fe *r, const secp256k1_fe *a, const secp256k1_fe * SECP256K1_RESTRICT b) {$/;"	f
secp256k1_fe_mul	secp256k1/src/field_5x52_impl.h	/^static void secp256k1_fe_mul(secp256k1_fe *r, const secp256k1_fe *a, const secp256k1_fe * SECP256K1_RESTRICT b) {$/;"	f
secp256k1_fe_mul_inner	secp256k1/src/asm/field_10x26_arm.s	/^secp256k1_fe_mul_inner:$/;"	l
secp256k1_fe_mul_inner	secp256k1/src/field_10x26_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_mul_inner(uint32_t *r, const uint32_t *a, const uint32_t * SECP256K1_RESTRICT b) {$/;"	f
secp256k1_fe_mul_inner	secp256k1/src/field_5x52_asm_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_mul_inner(uint64_t *r, const uint64_t *a, const uint64_t * SECP256K1_RESTRICT b) {$/;"	f
secp256k1_fe_mul_inner	secp256k1/src/field_5x52_int128_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_mul_inner(uint64_t *r, const uint64_t *a, const uint64_t * SECP256K1_RESTRICT b) {$/;"	f
secp256k1_fe_mul_int	secp256k1/src/field_10x26_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_mul_int(secp256k1_fe *r, int a) {$/;"	f
secp256k1_fe_mul_int	secp256k1/src/field_5x52_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_mul_int(secp256k1_fe *r, int a) {$/;"	f
secp256k1_fe_negate	secp256k1/src/field_10x26_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_negate(secp256k1_fe *r, const secp256k1_fe *a, int m) {$/;"	f
secp256k1_fe_negate	secp256k1/src/field_5x52_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_negate(secp256k1_fe *r, const secp256k1_fe *a, int m) {$/;"	f
secp256k1_fe_normalize	secp256k1/src/field_10x26_impl.h	/^static void secp256k1_fe_normalize(secp256k1_fe *r) {$/;"	f
secp256k1_fe_normalize	secp256k1/src/field_5x52_impl.h	/^static void secp256k1_fe_normalize(secp256k1_fe *r) {$/;"	f
secp256k1_fe_normalize_var	secp256k1/src/field_10x26_impl.h	/^static void secp256k1_fe_normalize_var(secp256k1_fe *r) {$/;"	f
secp256k1_fe_normalize_var	secp256k1/src/field_5x52_impl.h	/^static void secp256k1_fe_normalize_var(secp256k1_fe *r) {$/;"	f
secp256k1_fe_normalize_weak	secp256k1/src/field_10x26_impl.h	/^static void secp256k1_fe_normalize_weak(secp256k1_fe *r) {$/;"	f
secp256k1_fe_normalize_weak	secp256k1/src/field_5x52_impl.h	/^static void secp256k1_fe_normalize_weak(secp256k1_fe *r) {$/;"	f
secp256k1_fe_normalizes_to_zero	secp256k1/src/field_10x26_impl.h	/^static int secp256k1_fe_normalizes_to_zero(secp256k1_fe *r) {$/;"	f
secp256k1_fe_normalizes_to_zero	secp256k1/src/field_5x52_impl.h	/^static int secp256k1_fe_normalizes_to_zero(secp256k1_fe *r) {$/;"	f
secp256k1_fe_normalizes_to_zero_var	secp256k1/src/field_10x26_impl.h	/^static int secp256k1_fe_normalizes_to_zero_var(secp256k1_fe *r) {$/;"	f
secp256k1_fe_normalizes_to_zero_var	secp256k1/src/field_5x52_impl.h	/^static int secp256k1_fe_normalizes_to_zero_var(secp256k1_fe *r) {$/;"	f
secp256k1_fe_set_b32	secp256k1/src/field_10x26_impl.h	/^static int secp256k1_fe_set_b32(secp256k1_fe *r, const unsigned char *a) {$/;"	f
secp256k1_fe_set_b32	secp256k1/src/field_5x52_impl.h	/^static int secp256k1_fe_set_b32(secp256k1_fe *r, const unsigned char *a) {$/;"	f
secp256k1_fe_set_int	secp256k1/src/field_10x26_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_set_int(secp256k1_fe *r, int a) {$/;"	f
secp256k1_fe_set_int	secp256k1/src/field_5x52_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_set_int(secp256k1_fe *r, int a) {$/;"	f
secp256k1_fe_sqr	secp256k1/src/field_10x26_impl.h	/^static void secp256k1_fe_sqr(secp256k1_fe *r, const secp256k1_fe *a) {$/;"	f
secp256k1_fe_sqr	secp256k1/src/field_5x52_impl.h	/^static void secp256k1_fe_sqr(secp256k1_fe *r, const secp256k1_fe *a) {$/;"	f
secp256k1_fe_sqr_inner	secp256k1/src/asm/field_10x26_arm.s	/^secp256k1_fe_sqr_inner:$/;"	l
secp256k1_fe_sqr_inner	secp256k1/src/field_10x26_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_sqr_inner(uint32_t *r, const uint32_t *a) {$/;"	f
secp256k1_fe_sqr_inner	secp256k1/src/field_5x52_asm_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_sqr_inner(uint64_t *r, const uint64_t *a) {$/;"	f
secp256k1_fe_sqr_inner	secp256k1/src/field_5x52_int128_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_sqr_inner(uint64_t *r, const uint64_t *a) {$/;"	f
secp256k1_fe_sqrt_var	secp256k1/src/field_impl.h	/^static int secp256k1_fe_sqrt_var(secp256k1_fe *r, const secp256k1_fe *a) {$/;"	f
secp256k1_fe_storage	secp256k1/src/field_10x26.h	/^} secp256k1_fe_storage;$/;"	t	typeref:struct:__anon18
secp256k1_fe_storage	secp256k1/src/field_5x52.h	/^} secp256k1_fe_storage;$/;"	t	typeref:struct:__anon27
secp256k1_fe_storage_cmov	secp256k1/src/field_10x26_impl.h	/^static SECP256K1_INLINE void secp256k1_fe_storage_cmov(secp256k1_fe_storage *r, const secp256k1_fe_storage *a, int flag) {$/;"	f
secp256k1_fe_storage_cmov	secp256k1/src/field_5x52_impl.h	/^static SECP256K1_INLINE void secp256k1_fe_storage_cmov(secp256k1_fe_storage *r, const secp256k1_fe_storage *a, int flag) {$/;"	f
secp256k1_fe_to_storage	secp256k1/src/field_10x26_impl.h	/^static void secp256k1_fe_to_storage(secp256k1_fe_storage *r, const secp256k1_fe *a) {$/;"	f
secp256k1_fe_to_storage	secp256k1/src/field_5x52_impl.h	/^static void secp256k1_fe_to_storage(secp256k1_fe_storage *r, const secp256k1_fe *a) {$/;"	f
secp256k1_fe_verify	secp256k1/src/field_10x26_impl.h	/^static void secp256k1_fe_verify(const secp256k1_fe *a) {$/;"	f
secp256k1_fe_verify	secp256k1/src/field_5x52_impl.h	/^static void secp256k1_fe_verify(const secp256k1_fe *a) {$/;"	f
secp256k1_ge	secp256k1/src/group.h	/^} secp256k1_ge;$/;"	t	typeref:struct:__anon30
secp256k1_ge_clear	secp256k1/src/group_impl.h	/^static void secp256k1_ge_clear(secp256k1_ge *r) {$/;"	f
secp256k1_ge_const_g	secp256k1/src/group_impl.h	/^static const secp256k1_ge secp256k1_ge_const_g = SECP256K1_GE_CONST($/;"	v
secp256k1_ge_from_storage	secp256k1/src/group_impl.h	/^static void secp256k1_ge_from_storage(secp256k1_ge *r, const secp256k1_ge_storage *a) {$/;"	f
secp256k1_ge_globalz_set_table_gej	secp256k1/src/group_impl.h	/^static void secp256k1_ge_globalz_set_table_gej(size_t len, secp256k1_ge *r, secp256k1_fe *globalz, const secp256k1_gej *a, const secp256k1_fe *zr) {$/;"	f
secp256k1_ge_is_infinity	secp256k1/src/group_impl.h	/^static int secp256k1_ge_is_infinity(const secp256k1_ge *a) {$/;"	f
secp256k1_ge_is_valid_var	secp256k1/src/group_impl.h	/^static int secp256k1_ge_is_valid_var(const secp256k1_ge *a) {$/;"	f
secp256k1_ge_mul_lambda	secp256k1/src/group_impl.h	/^static void secp256k1_ge_mul_lambda(secp256k1_ge *r, const secp256k1_ge *a) {$/;"	f
secp256k1_ge_neg	secp256k1/src/group_impl.h	/^static void secp256k1_ge_neg(secp256k1_ge *r, const secp256k1_ge *a) {$/;"	f
secp256k1_ge_set_all_gej_var	secp256k1/src/group_impl.h	/^static void secp256k1_ge_set_all_gej_var(size_t len, secp256k1_ge *r, const secp256k1_gej *a, const secp256k1_callback *cb) {$/;"	f
secp256k1_ge_set_gej	secp256k1/src/group_impl.h	/^static void secp256k1_ge_set_gej(secp256k1_ge *r, secp256k1_gej *a) {$/;"	f
secp256k1_ge_set_gej_var	secp256k1/src/group_impl.h	/^static void secp256k1_ge_set_gej_var(secp256k1_ge *r, secp256k1_gej *a) {$/;"	f
secp256k1_ge_set_gej_zinv	secp256k1/src/group_impl.h	/^static void secp256k1_ge_set_gej_zinv(secp256k1_ge *r, const secp256k1_gej *a, const secp256k1_fe *zi) {$/;"	f
secp256k1_ge_set_table_gej_var	secp256k1/src/group_impl.h	/^static void secp256k1_ge_set_table_gej_var(size_t len, secp256k1_ge *r, const secp256k1_gej *a, const secp256k1_fe *zr) {$/;"	f
secp256k1_ge_set_xo_var	secp256k1/src/group_impl.h	/^static int secp256k1_ge_set_xo_var(secp256k1_ge *r, const secp256k1_fe *x, int odd) {$/;"	f
secp256k1_ge_set_xquad_var	secp256k1/src/group_impl.h	/^static int secp256k1_ge_set_xquad_var(secp256k1_ge *r, const secp256k1_fe *x) {$/;"	f
secp256k1_ge_set_xy	secp256k1/src/group_impl.h	/^static void secp256k1_ge_set_xy(secp256k1_ge *r, const secp256k1_fe *x, const secp256k1_fe *y) {$/;"	f
secp256k1_ge_storage	secp256k1/src/group.h	/^} secp256k1_ge_storage;$/;"	t	typeref:struct:__anon32
secp256k1_ge_storage_cmov	secp256k1/src/group_impl.h	/^static SECP256K1_INLINE void secp256k1_ge_storage_cmov(secp256k1_ge_storage *r, const secp256k1_ge_storage *a, int flag) {$/;"	f
secp256k1_ge_to_storage	secp256k1/src/group_impl.h	/^static void secp256k1_ge_to_storage(secp256k1_ge_storage *r, const secp256k1_ge *a) {$/;"	f
secp256k1_gej	secp256k1/src/group.h	/^} secp256k1_gej;$/;"	t	typeref:struct:__anon31
secp256k1_gej_add_ge	secp256k1/src/group_impl.h	/^static void secp256k1_gej_add_ge(secp256k1_gej *r, const secp256k1_gej *a, const secp256k1_ge *b) {$/;"	f
secp256k1_gej_add_ge_var	secp256k1/src/group_impl.h	/^static void secp256k1_gej_add_ge_var(secp256k1_gej *r, const secp256k1_gej *a, const secp256k1_ge *b, secp256k1_fe *rzr) {$/;"	f
secp256k1_gej_add_var	secp256k1/src/group_impl.h	/^static void secp256k1_gej_add_var(secp256k1_gej *r, const secp256k1_gej *a, const secp256k1_gej *b, secp256k1_fe *rzr) {$/;"	f
secp256k1_gej_add_zinv_var	secp256k1/src/group_impl.h	/^static void secp256k1_gej_add_zinv_var(secp256k1_gej *r, const secp256k1_gej *a, const secp256k1_ge *b, const secp256k1_fe *bzinv) {$/;"	f
secp256k1_gej_clear	secp256k1/src/group_impl.h	/^static void secp256k1_gej_clear(secp256k1_gej *r) {$/;"	f
secp256k1_gej_double_nonzero	secp256k1/src/group_impl.h	/^static SECP256K1_INLINE void secp256k1_gej_double_nonzero(secp256k1_gej *r, const secp256k1_gej *a, secp256k1_fe *rzr) {$/;"	f
secp256k1_gej_double_var	secp256k1/src/group_impl.h	/^static void secp256k1_gej_double_var(secp256k1_gej *r, const secp256k1_gej *a, secp256k1_fe *rzr) {$/;"	f
secp256k1_gej_eq_x_var	secp256k1/src/group_impl.h	/^static int secp256k1_gej_eq_x_var(const secp256k1_fe *x, const secp256k1_gej *a) {$/;"	f
secp256k1_gej_is_infinity	secp256k1/src/group_impl.h	/^static int secp256k1_gej_is_infinity(const secp256k1_gej *a) {$/;"	f
secp256k1_gej_is_valid_var	secp256k1/src/group_impl.h	/^static int secp256k1_gej_is_valid_var(const secp256k1_gej *a) {$/;"	f
secp256k1_gej_neg	secp256k1/src/group_impl.h	/^static void secp256k1_gej_neg(secp256k1_gej *r, const secp256k1_gej *a) {$/;"	f
secp256k1_gej_rescale	secp256k1/src/group_impl.h	/^static void secp256k1_gej_rescale(secp256k1_gej *r, const secp256k1_fe *s) {$/;"	f
secp256k1_gej_set_ge	secp256k1/src/group_impl.h	/^static void secp256k1_gej_set_ge(secp256k1_gej *r, const secp256k1_ge *a) {$/;"	f
secp256k1_gej_set_infinity	secp256k1/src/group_impl.h	/^static void secp256k1_gej_set_infinity(secp256k1_gej *r) {$/;"	f
secp256k1_hmac_sha256_finalize	secp256k1/src/hash_impl.h	/^static void secp256k1_hmac_sha256_finalize(secp256k1_hmac_sha256_t *hash, unsigned char *out32) {$/;"	f
secp256k1_hmac_sha256_initialize	secp256k1/src/hash_impl.h	/^static void secp256k1_hmac_sha256_initialize(secp256k1_hmac_sha256_t *hash, const unsigned char *key, size_t keylen) {$/;"	f
secp256k1_hmac_sha256_t	secp256k1/src/hash.h	/^} secp256k1_hmac_sha256_t;$/;"	t	typeref:struct:__anon23
secp256k1_hmac_sha256_write	secp256k1/src/hash_impl.h	/^static void secp256k1_hmac_sha256_write(secp256k1_hmac_sha256_t *hash, const unsigned char *data, size_t size) {$/;"	f
secp256k1_init_context	secp256k1/src/java/org/bitcoin/Secp256k1Context.java	/^  private static native long secp256k1_init_context();$/;"	m	class:Secp256k1Context	file:
secp256k1_nonce_function	secp256k1/include/secp256k1.h	/^typedef int (*secp256k1_nonce_function)($/;"	t
secp256k1_nonce_function_default	secp256k1/src/secp256k1.c	/^const secp256k1_nonce_function secp256k1_nonce_function_default = nonce_function_rfc6979;$/;"	v
secp256k1_nonce_function_rfc6979	secp256k1/src/secp256k1.c	/^const secp256k1_nonce_function secp256k1_nonce_function_rfc6979 = nonce_function_rfc6979;$/;"	v
secp256k1_num	secp256k1/src/num_gmp.h	/^} secp256k1_num;$/;"	t	typeref:struct:__anon28
secp256k1_num_add	secp256k1/src/num_gmp_impl.h	/^static void secp256k1_num_add(secp256k1_num *r, const secp256k1_num *a, const secp256k1_num *b) {$/;"	f
secp256k1_num_add_abs	secp256k1/src/num_gmp_impl.h	/^static void secp256k1_num_add_abs(secp256k1_num *r, const secp256k1_num *a, const secp256k1_num *b) {$/;"	f
secp256k1_num_cmp	secp256k1/src/num_gmp_impl.h	/^static int secp256k1_num_cmp(const secp256k1_num *a, const secp256k1_num *b) {$/;"	f
secp256k1_num_copy	secp256k1/src/num_gmp_impl.h	/^static void secp256k1_num_copy(secp256k1_num *r, const secp256k1_num *a) {$/;"	f
secp256k1_num_eq	secp256k1/src/num_gmp_impl.h	/^static int secp256k1_num_eq(const secp256k1_num *a, const secp256k1_num *b) {$/;"	f
secp256k1_num_get_bin	secp256k1/src/num_gmp_impl.h	/^static void secp256k1_num_get_bin(unsigned char *r, unsigned int rlen, const secp256k1_num *a) {$/;"	f
secp256k1_num_is_neg	secp256k1/src/num_gmp_impl.h	/^static int secp256k1_num_is_neg(const secp256k1_num *a) {$/;"	f
secp256k1_num_is_zero	secp256k1/src/num_gmp_impl.h	/^static int secp256k1_num_is_zero(const secp256k1_num *a) {$/;"	f
secp256k1_num_mod	secp256k1/src/num_gmp_impl.h	/^static void secp256k1_num_mod(secp256k1_num *r, const secp256k1_num *m) {$/;"	f
secp256k1_num_mod_inverse	secp256k1/src/num_gmp_impl.h	/^static void secp256k1_num_mod_inverse(secp256k1_num *r, const secp256k1_num *a, const secp256k1_num *m) {$/;"	f
secp256k1_num_mul	secp256k1/src/num_gmp_impl.h	/^static void secp256k1_num_mul(secp256k1_num *r, const secp256k1_num *a, const secp256k1_num *b) {$/;"	f
secp256k1_num_negate	secp256k1/src/num_gmp_impl.h	/^static void secp256k1_num_negate(secp256k1_num *r) {$/;"	f
secp256k1_num_sanity	secp256k1/src/num_gmp_impl.h	/^static void secp256k1_num_sanity(const secp256k1_num *a) {$/;"	f
secp256k1_num_sanity	secp256k1/src/num_gmp_impl.h	22;"	d
secp256k1_num_set_bin	secp256k1/src/num_gmp_impl.h	/^static void secp256k1_num_set_bin(secp256k1_num *r, const unsigned char *a, unsigned int alen) {$/;"	f
secp256k1_num_shift	secp256k1/src/num_gmp_impl.h	/^static void secp256k1_num_shift(secp256k1_num *r, int bits) {$/;"	f
secp256k1_num_sub	secp256k1/src/num_gmp_impl.h	/^static void secp256k1_num_sub(secp256k1_num *r, const secp256k1_num *a, const secp256k1_num *b) {$/;"	f
secp256k1_num_sub_abs	secp256k1/src/num_gmp_impl.h	/^static void secp256k1_num_sub_abs(secp256k1_num *r, const secp256k1_num *a, const secp256k1_num *b) {$/;"	f
secp256k1_num_subadd	secp256k1/src/num_gmp_impl.h	/^static void secp256k1_num_subadd(secp256k1_num *r, const secp256k1_num *a, const secp256k1_num *b, int bneg) {$/;"	f
secp256k1_privkey_tweak_add	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static native byte[][] secp256k1_privkey_tweak_add(ByteBuffer byteBuff, long context);$/;"	m	class:NativeSecp256k1	file:
secp256k1_privkey_tweak_mul	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static native byte[][] secp256k1_privkey_tweak_mul(ByteBuffer byteBuff, long context);$/;"	m	class:NativeSecp256k1	file:
secp256k1_pubkey	secp256k1/include/secp256k1.h	/^} secp256k1_pubkey;$/;"	t	typeref:struct:__anon14
secp256k1_pubkey	type_to_string.h	/^	const secp256k1_pubkey *secp256k1_pubkey;$/;"	m	union:printable_types
secp256k1_pubkey_load	secp256k1/src/secp256k1.c	/^static int secp256k1_pubkey_load(const secp256k1_context* ctx, secp256k1_ge* ge, const secp256k1_pubkey* pubkey) {$/;"	f	file:
secp256k1_pubkey_save	secp256k1/src/secp256k1.c	/^static void secp256k1_pubkey_save(secp256k1_pubkey* pubkey, secp256k1_ge* ge) {$/;"	f	file:
secp256k1_pubkey_to_hexstr	bitcoin/pubkey.c	/^char *secp256k1_pubkey_to_hexstr(const tal_t *ctx, const secp256k1_pubkey *key)$/;"	f
secp256k1_pubkey_tweak_add	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static native byte[][] secp256k1_pubkey_tweak_add(ByteBuffer byteBuff, long context, int pubLen);$/;"	m	class:NativeSecp256k1	file:
secp256k1_pubkey_tweak_mul	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static native byte[][] secp256k1_pubkey_tweak_mul(ByteBuffer byteBuff, long context, int pubLen);$/;"	m	class:NativeSecp256k1	file:
secp256k1_rand256	secp256k1/src/testrand_impl.h	/^static void secp256k1_rand256(unsigned char *b32) {$/;"	f
secp256k1_rand256_test	secp256k1/src/testrand_impl.h	/^static void secp256k1_rand256_test(unsigned char *b32) {$/;"	f
secp256k1_rand32	secp256k1/src/testrand_impl.h	/^SECP256K1_INLINE static uint32_t secp256k1_rand32(void) {$/;"	f
secp256k1_rand_bits	secp256k1/src/testrand_impl.h	/^static uint32_t secp256k1_rand_bits(int bits) {$/;"	f
secp256k1_rand_bytes_test	secp256k1/src/testrand_impl.h	/^static void secp256k1_rand_bytes_test(unsigned char *bytes, size_t len) {$/;"	f
secp256k1_rand_int	secp256k1/src/testrand_impl.h	/^static uint32_t secp256k1_rand_int(uint32_t range) {$/;"	f
secp256k1_rand_seed	secp256k1/src/testrand_impl.h	/^SECP256K1_INLINE static void secp256k1_rand_seed(const unsigned char *seed16) {$/;"	f
secp256k1_rfc6979_hmac_sha256_finalize	secp256k1/src/hash_impl.h	/^static void secp256k1_rfc6979_hmac_sha256_finalize(secp256k1_rfc6979_hmac_sha256_t *rng) {$/;"	f
secp256k1_rfc6979_hmac_sha256_generate	secp256k1/src/hash_impl.h	/^static void secp256k1_rfc6979_hmac_sha256_generate(secp256k1_rfc6979_hmac_sha256_t *rng, unsigned char *out, size_t outlen) {$/;"	f
secp256k1_rfc6979_hmac_sha256_initialize	secp256k1/src/hash_impl.h	/^static void secp256k1_rfc6979_hmac_sha256_initialize(secp256k1_rfc6979_hmac_sha256_t *rng, const unsigned char *key, size_t keylen) {$/;"	f
secp256k1_rfc6979_hmac_sha256_t	secp256k1/src/hash.h	/^} secp256k1_rfc6979_hmac_sha256_t;$/;"	t	typeref:struct:__anon24
secp256k1_scalar	secp256k1/src/scalar_4x64.h	/^} secp256k1_scalar;$/;"	t	typeref:struct:__anon35
secp256k1_scalar	secp256k1/src/scalar_8x32.h	/^} secp256k1_scalar;$/;"	t	typeref:struct:__anon16
secp256k1_scalar_add	secp256k1/src/scalar_4x64_impl.h	/^static int secp256k1_scalar_add(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b) {$/;"	f
secp256k1_scalar_add	secp256k1/src/scalar_8x32_impl.h	/^static int secp256k1_scalar_add(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b) {$/;"	f
secp256k1_scalar_cadd_bit	secp256k1/src/scalar_4x64_impl.h	/^static void secp256k1_scalar_cadd_bit(secp256k1_scalar *r, unsigned int bit, int flag) {$/;"	f
secp256k1_scalar_cadd_bit	secp256k1/src/scalar_8x32_impl.h	/^static void secp256k1_scalar_cadd_bit(secp256k1_scalar *r, unsigned int bit, int flag) {$/;"	f
secp256k1_scalar_check_overflow	secp256k1/src/scalar_4x64_impl.h	/^SECP256K1_INLINE static int secp256k1_scalar_check_overflow(const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_check_overflow	secp256k1/src/scalar_8x32_impl.h	/^SECP256K1_INLINE static int secp256k1_scalar_check_overflow(const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_clear	secp256k1/src/scalar_4x64_impl.h	/^SECP256K1_INLINE static void secp256k1_scalar_clear(secp256k1_scalar *r) {$/;"	f
secp256k1_scalar_clear	secp256k1/src/scalar_8x32_impl.h	/^SECP256K1_INLINE static void secp256k1_scalar_clear(secp256k1_scalar *r) {$/;"	f
secp256k1_scalar_cond_negate	secp256k1/src/scalar_4x64_impl.h	/^static int secp256k1_scalar_cond_negate(secp256k1_scalar *r, int flag) {$/;"	f
secp256k1_scalar_cond_negate	secp256k1/src/scalar_8x32_impl.h	/^static int secp256k1_scalar_cond_negate(secp256k1_scalar *r, int flag) {$/;"	f
secp256k1_scalar_eq	secp256k1/src/scalar_4x64_impl.h	/^SECP256K1_INLINE static int secp256k1_scalar_eq(const secp256k1_scalar *a, const secp256k1_scalar *b) {$/;"	f
secp256k1_scalar_eq	secp256k1/src/scalar_8x32_impl.h	/^SECP256K1_INLINE static int secp256k1_scalar_eq(const secp256k1_scalar *a, const secp256k1_scalar *b) {$/;"	f
secp256k1_scalar_get_b32	secp256k1/src/scalar_4x64_impl.h	/^static void secp256k1_scalar_get_b32(unsigned char *bin, const secp256k1_scalar* a) {$/;"	f
secp256k1_scalar_get_b32	secp256k1/src/scalar_8x32_impl.h	/^static void secp256k1_scalar_get_b32(unsigned char *bin, const secp256k1_scalar* a) {$/;"	f
secp256k1_scalar_get_bits	secp256k1/src/scalar_4x64_impl.h	/^SECP256K1_INLINE static unsigned int secp256k1_scalar_get_bits(const secp256k1_scalar *a, unsigned int offset, unsigned int count) {$/;"	f
secp256k1_scalar_get_bits	secp256k1/src/scalar_8x32_impl.h	/^SECP256K1_INLINE static unsigned int secp256k1_scalar_get_bits(const secp256k1_scalar *a, unsigned int offset, unsigned int count) {$/;"	f
secp256k1_scalar_get_bits_var	secp256k1/src/scalar_4x64_impl.h	/^SECP256K1_INLINE static unsigned int secp256k1_scalar_get_bits_var(const secp256k1_scalar *a, unsigned int offset, unsigned int count) {$/;"	f
secp256k1_scalar_get_bits_var	secp256k1/src/scalar_8x32_impl.h	/^SECP256K1_INLINE static unsigned int secp256k1_scalar_get_bits_var(const secp256k1_scalar *a, unsigned int offset, unsigned int count) {$/;"	f
secp256k1_scalar_get_num	secp256k1/src/scalar_impl.h	/^static void secp256k1_scalar_get_num(secp256k1_num *r, const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_inverse	secp256k1/src/scalar_impl.h	/^static void secp256k1_scalar_inverse(secp256k1_scalar *r, const secp256k1_scalar *x) {$/;"	f
secp256k1_scalar_inverse_var	secp256k1/src/scalar_impl.h	/^static void secp256k1_scalar_inverse_var(secp256k1_scalar *r, const secp256k1_scalar *x) {$/;"	f
secp256k1_scalar_is_even	secp256k1/src/scalar_impl.h	/^SECP256K1_INLINE static int secp256k1_scalar_is_even(const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_is_high	secp256k1/src/scalar_4x64_impl.h	/^static int secp256k1_scalar_is_high(const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_is_high	secp256k1/src/scalar_8x32_impl.h	/^static int secp256k1_scalar_is_high(const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_is_one	secp256k1/src/scalar_4x64_impl.h	/^SECP256K1_INLINE static int secp256k1_scalar_is_one(const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_is_one	secp256k1/src/scalar_8x32_impl.h	/^SECP256K1_INLINE static int secp256k1_scalar_is_one(const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_is_zero	secp256k1/src/scalar_4x64_impl.h	/^SECP256K1_INLINE static int secp256k1_scalar_is_zero(const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_is_zero	secp256k1/src/scalar_8x32_impl.h	/^SECP256K1_INLINE static int secp256k1_scalar_is_zero(const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_mul	secp256k1/src/scalar_4x64_impl.h	/^static void secp256k1_scalar_mul(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b) {$/;"	f
secp256k1_scalar_mul	secp256k1/src/scalar_8x32_impl.h	/^static void secp256k1_scalar_mul(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b) {$/;"	f
secp256k1_scalar_mul_512	secp256k1/src/scalar_4x64_impl.h	/^static void secp256k1_scalar_mul_512(uint64_t l[8], const secp256k1_scalar *a, const secp256k1_scalar *b) {$/;"	f
secp256k1_scalar_mul_512	secp256k1/src/scalar_8x32_impl.h	/^static void secp256k1_scalar_mul_512(uint32_t *l, const secp256k1_scalar *a, const secp256k1_scalar *b) {$/;"	f
secp256k1_scalar_mul_shift_var	secp256k1/src/scalar_4x64_impl.h	/^SECP256K1_INLINE static void secp256k1_scalar_mul_shift_var(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b, unsigned int shift) {$/;"	f
secp256k1_scalar_mul_shift_var	secp256k1/src/scalar_8x32_impl.h	/^SECP256K1_INLINE static void secp256k1_scalar_mul_shift_var(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b, unsigned int shift) {$/;"	f
secp256k1_scalar_negate	secp256k1/src/scalar_4x64_impl.h	/^static void secp256k1_scalar_negate(secp256k1_scalar *r, const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_negate	secp256k1/src/scalar_8x32_impl.h	/^static void secp256k1_scalar_negate(secp256k1_scalar *r, const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_order_get_num	secp256k1/src/scalar_impl.h	/^static void secp256k1_scalar_order_get_num(secp256k1_num *r) {$/;"	f
secp256k1_scalar_reduce	secp256k1/src/scalar_4x64_impl.h	/^SECP256K1_INLINE static int secp256k1_scalar_reduce(secp256k1_scalar *r, unsigned int overflow) {$/;"	f
secp256k1_scalar_reduce	secp256k1/src/scalar_8x32_impl.h	/^SECP256K1_INLINE static int secp256k1_scalar_reduce(secp256k1_scalar *r, uint32_t overflow) {$/;"	f
secp256k1_scalar_reduce_512	secp256k1/src/scalar_4x64_impl.h	/^static void secp256k1_scalar_reduce_512(secp256k1_scalar *r, const uint64_t *l) {$/;"	f
secp256k1_scalar_reduce_512	secp256k1/src/scalar_8x32_impl.h	/^static void secp256k1_scalar_reduce_512(secp256k1_scalar *r, const uint32_t *l) {$/;"	f
secp256k1_scalar_set_b32	secp256k1/src/scalar_4x64_impl.h	/^static void secp256k1_scalar_set_b32(secp256k1_scalar *r, const unsigned char *b32, int *overflow) {$/;"	f
secp256k1_scalar_set_b32	secp256k1/src/scalar_8x32_impl.h	/^static void secp256k1_scalar_set_b32(secp256k1_scalar *r, const unsigned char *b32, int *overflow) {$/;"	f
secp256k1_scalar_set_int	secp256k1/src/scalar_4x64_impl.h	/^SECP256K1_INLINE static void secp256k1_scalar_set_int(secp256k1_scalar *r, unsigned int v) {$/;"	f
secp256k1_scalar_set_int	secp256k1/src/scalar_8x32_impl.h	/^SECP256K1_INLINE static void secp256k1_scalar_set_int(secp256k1_scalar *r, unsigned int v) {$/;"	f
secp256k1_scalar_shr_int	secp256k1/src/scalar_4x64_impl.h	/^static int secp256k1_scalar_shr_int(secp256k1_scalar *r, int n) {$/;"	f
secp256k1_scalar_shr_int	secp256k1/src/scalar_8x32_impl.h	/^static int secp256k1_scalar_shr_int(secp256k1_scalar *r, int n) {$/;"	f
secp256k1_scalar_split_128	secp256k1/src/scalar_4x64_impl.h	/^static void secp256k1_scalar_split_128(secp256k1_scalar *r1, secp256k1_scalar *r2, const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_split_128	secp256k1/src/scalar_8x32_impl.h	/^static void secp256k1_scalar_split_128(secp256k1_scalar *r1, secp256k1_scalar *r2, const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_split_lambda	secp256k1/src/scalar_impl.h	/^static void secp256k1_scalar_split_lambda(secp256k1_scalar *r1, secp256k1_scalar *r2, const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_sqr	secp256k1/src/scalar_4x64_impl.h	/^static void secp256k1_scalar_sqr(secp256k1_scalar *r, const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_sqr	secp256k1/src/scalar_8x32_impl.h	/^static void secp256k1_scalar_sqr(secp256k1_scalar *r, const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_sqr_512	secp256k1/src/scalar_4x64_impl.h	/^static void secp256k1_scalar_sqr_512(uint64_t l[8], const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_sqr_512	secp256k1/src/scalar_8x32_impl.h	/^static void secp256k1_scalar_sqr_512(uint32_t *l, const secp256k1_scalar *a) {$/;"	f
secp256k1_schnorr_algo16	secp256k1/src/modules/schnorr/main_impl.h	/^static const unsigned char secp256k1_schnorr_algo16[17] = "Schnorr+SHA256  ";$/;"	v
secp256k1_schnorr_generate_nonce_pair	secp256k1/src/modules/schnorr/main_impl.h	/^int secp256k1_schnorr_generate_nonce_pair(const secp256k1_context* ctx, secp256k1_pubkey *pubnonce, unsigned char *privnonce32, const unsigned char *sec32, const unsigned char *msg32, secp256k1_nonce_function noncefp, const void* noncedata) {$/;"	f
secp256k1_schnorr_msghash	secp256k1/src/modules/schnorr/schnorr.h	/^typedef void (*secp256k1_schnorr_msghash)(unsigned char *h32, const unsigned char *r32, const unsigned char *msg32);$/;"	t
secp256k1_schnorr_msghash_sha256	secp256k1/src/modules/schnorr/main_impl.h	/^static void secp256k1_schnorr_msghash_sha256(unsigned char *h32, const unsigned char *r32, const unsigned char *msg32) {$/;"	f
secp256k1_schnorr_partial_combine	secp256k1/src/modules/schnorr/main_impl.h	/^int secp256k1_schnorr_partial_combine(const secp256k1_context* ctx, unsigned char *sig64, const unsigned char * const *sig64sin, size_t n) {$/;"	f
secp256k1_schnorr_partial_sign	secp256k1/src/modules/schnorr/main_impl.h	/^int secp256k1_schnorr_partial_sign(const secp256k1_context* ctx, unsigned char *sig64, const unsigned char *msg32, const unsigned char *sec32, const secp256k1_pubkey *pubnonce_others, const unsigned char *secnonce32) {$/;"	f
secp256k1_schnorr_recover	secp256k1/src/modules/schnorr/main_impl.h	/^int secp256k1_schnorr_recover(const secp256k1_context* ctx, secp256k1_pubkey *pubkey, const unsigned char *sig64, const unsigned char *msg32) {$/;"	f
secp256k1_schnorr_sig_combine	secp256k1/src/modules/schnorr/schnorr_impl.h	/^static int secp256k1_schnorr_sig_combine(unsigned char *sig64, size_t n, const unsigned char * const *sig64ins) {$/;"	f
secp256k1_schnorr_sig_recover	secp256k1/src/modules/schnorr/schnorr_impl.h	/^static int secp256k1_schnorr_sig_recover(const secp256k1_ecmult_context* ctx, const unsigned char *sig64, secp256k1_ge *pubkey, secp256k1_schnorr_msghash hash, const unsigned char *msg32) {$/;"	f
secp256k1_schnorr_sig_sign	secp256k1/src/modules/schnorr/schnorr_impl.h	/^static int secp256k1_schnorr_sig_sign(const secp256k1_ecmult_gen_context* ctx, unsigned char *sig64, const secp256k1_scalar *key, const secp256k1_scalar *nonce, const secp256k1_ge *pubnonce, secp256k1_schnorr_msghash hash, const unsigned char *msg32) {$/;"	f
secp256k1_schnorr_sig_verify	secp256k1/src/modules/schnorr/schnorr_impl.h	/^static int secp256k1_schnorr_sig_verify(const secp256k1_ecmult_context* ctx, const unsigned char *sig64, const secp256k1_ge *pubkey, secp256k1_schnorr_msghash hash, const unsigned char *msg32) {$/;"	f
secp256k1_schnorr_sign	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static native byte[][] secp256k1_schnorr_sign(ByteBuffer byteBuff, long context);$/;"	m	class:NativeSecp256k1	file:
secp256k1_schnorr_sign	secp256k1/src/modules/schnorr/main_impl.h	/^int secp256k1_schnorr_sign(const secp256k1_context* ctx, unsigned char *sig64, const unsigned char *msg32, const unsigned char *seckey, secp256k1_nonce_function noncefp, const void* noncedata) {$/;"	f
secp256k1_schnorr_verify	secp256k1/src/modules/schnorr/main_impl.h	/^int secp256k1_schnorr_verify(const secp256k1_context* ctx, const unsigned char *sig64, const unsigned char *msg32, const secp256k1_pubkey *pubkey) {$/;"	f
secp256k1_sha256_finalize	secp256k1/src/hash_impl.h	/^static void secp256k1_sha256_finalize(secp256k1_sha256_t *hash, unsigned char *out32) {$/;"	f
secp256k1_sha256_initialize	secp256k1/src/hash_impl.h	/^static void secp256k1_sha256_initialize(secp256k1_sha256_t *hash) {$/;"	f
secp256k1_sha256_t	secp256k1/src/hash.h	/^} secp256k1_sha256_t;$/;"	t	typeref:struct:__anon22
secp256k1_sha256_transform	secp256k1/src/hash_impl.h	/^static void secp256k1_sha256_transform(uint32_t* s, const uint32_t* chunk) {$/;"	f
secp256k1_sha256_write	secp256k1/src/hash_impl.h	/^static void secp256k1_sha256_write(secp256k1_sha256_t *hash, const unsigned char *data, size_t len) {$/;"	f
secp256k1_test_rng	secp256k1/src/testrand_impl.h	/^static secp256k1_rfc6979_hmac_sha256_t secp256k1_test_rng;$/;"	v
secp256k1_test_rng_integer	secp256k1/src/testrand_impl.h	/^static uint64_t secp256k1_test_rng_integer;$/;"	v
secp256k1_test_rng_integer_bits_left	secp256k1/src/testrand_impl.h	/^static int secp256k1_test_rng_integer_bits_left = 0;$/;"	v
secp256k1_test_rng_precomputed	secp256k1/src/testrand_impl.h	/^static uint32_t secp256k1_test_rng_precomputed[8];$/;"	v
secp256k1_test_rng_precomputed_used	secp256k1/src/testrand_impl.h	/^static int secp256k1_test_rng_precomputed_used = 8;$/;"	v
secp256k1_wnaf_const	secp256k1/src/ecmult_const_impl.h	/^static int secp256k1_wnaf_const(int *wnaf, secp256k1_scalar s, int w) {$/;"	f
secret	bitcoin/privkey.h	/^	u8 secret[32];$/;"	m	struct:privkey
secret	daemon/lightningd.h	/^	struct secret *secret;$/;"	m	struct:lightningd_state	typeref:struct:lightningd_state::secret
secret	daemon/secrets.c	/^struct secret {$/;"	s	file:
secret	daemon/sphinx.c	/^	u8 secret[SHARED_SECRET_SIZE];$/;"	m	struct:hop_params	file:
secret	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint8_t *secret;    \/* key array *\/$/;"	m	struct:Argon2_Context
secret	lightningd/handshake/handshake.c	/^struct secret {$/;"	s	file:
secret_drawer	ccan/ccan/list/test/helper.c	/^  char   secret_drawer[42];$/;"	m	struct:opaque	file:
secret_offset	ccan/ccan/list/test/helper.c	/^  size_t secret_offset;$/;"	m	struct:opaque	file:
secretbox2_DEPENDENCIES	libsodium/test/default/Makefile	/^secretbox2_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
secretbox2_LDADD	libsodium/test/default/Makefile	/^secretbox2_LDADD = $(TESTS_LDADD)$/;"	m
secretbox2_OBJECTS	libsodium/test/default/Makefile	/^secretbox2_OBJECTS = secretbox2.$(OBJEXT)$/;"	m
secretbox2_SOURCE	libsodium/test/default/Makefile	/^secretbox2_SOURCE = cmptest.h secretbox2.c$/;"	m
secretbox2_SOURCES	libsodium/test/default/Makefile	/^secretbox2_SOURCES = secretbox2.c$/;"	m
secretbox7_DEPENDENCIES	libsodium/test/default/Makefile	/^secretbox7_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
secretbox7_LDADD	libsodium/test/default/Makefile	/^secretbox7_LDADD = $(TESTS_LDADD)$/;"	m
secretbox7_OBJECTS	libsodium/test/default/Makefile	/^secretbox7_OBJECTS = secretbox7.$(OBJEXT)$/;"	m
secretbox7_SOURCE	libsodium/test/default/Makefile	/^secretbox7_SOURCE = cmptest.h secretbox7.c$/;"	m
secretbox7_SOURCES	libsodium/test/default/Makefile	/^secretbox7_SOURCES = secretbox7.c$/;"	m
secretbox8_DEPENDENCIES	libsodium/test/default/Makefile	/^secretbox8_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
secretbox8_LDADD	libsodium/test/default/Makefile	/^secretbox8_LDADD = $(TESTS_LDADD)$/;"	m
secretbox8_OBJECTS	libsodium/test/default/Makefile	/^secretbox8_OBJECTS = secretbox8.$(OBJEXT)$/;"	m
secretbox8_SOURCE	libsodium/test/default/Makefile	/^secretbox8_SOURCE = cmptest.h secretbox8.c$/;"	m
secretbox8_SOURCES	libsodium/test/default/Makefile	/^secretbox8_SOURCES = secretbox8.c$/;"	m
secretbox_DEPENDENCIES	libsodium/test/default/Makefile	/^secretbox_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
secretbox_LDADD	libsodium/test/default/Makefile	/^secretbox_LDADD = $(TESTS_LDADD)$/;"	m
secretbox_OBJECTS	libsodium/test/default/Makefile	/^secretbox_OBJECTS = secretbox.$(OBJEXT)$/;"	m
secretbox_SOURCE	libsodium/test/default/Makefile	/^secretbox_SOURCE = cmptest.h secretbox.c$/;"	m
secretbox_SOURCES	libsodium/test/default/Makefile	/^secretbox_SOURCES = secretbox.c$/;"	m
secretbox_easy2_DEPENDENCIES	libsodium/test/default/Makefile	/^secretbox_easy2_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
secretbox_easy2_LDADD	libsodium/test/default/Makefile	/^secretbox_easy2_LDADD = $(TESTS_LDADD)$/;"	m
secretbox_easy2_OBJECTS	libsodium/test/default/Makefile	/^secretbox_easy2_OBJECTS = secretbox_easy2.$(OBJEXT)$/;"	m
secretbox_easy2_SOURCE	libsodium/test/default/Makefile	/^secretbox_easy2_SOURCE = cmptest.h secretbox_easy2.c$/;"	m
secretbox_easy2_SOURCES	libsodium/test/default/Makefile	/^secretbox_easy2_SOURCES = secretbox_easy2.c$/;"	m
secretbox_easy_DEPENDENCIES	libsodium/test/default/Makefile	/^secretbox_easy_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
secretbox_easy_LDADD	libsodium/test/default/Makefile	/^secretbox_easy_LDADD = $(TESTS_LDADD)$/;"	m
secretbox_easy_OBJECTS	libsodium/test/default/Makefile	/^secretbox_easy_OBJECTS = secretbox_easy.$(OBJEXT)$/;"	m
secretbox_easy_SOURCE	libsodium/test/default/Makefile	/^secretbox_easy_SOURCE = cmptest.h secretbox_easy.c$/;"	m
secretbox_easy_SOURCES	libsodium/test/default/Makefile	/^secretbox_easy_SOURCES = secretbox_easy.c$/;"	m
secretlen	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint32_t secretlen; \/* key length *\/$/;"	m	struct:Argon2_Context
secrets	daemon/peer.h	/^	struct peer_secrets *secrets;$/;"	m	struct:peer	typeref:struct:peer::peer_secrets
secrets_init	daemon/secrets.c	/^void secrets_init(struct lightningd_state *dstate)$/;"	f
section	ccan/ccan/crypto/sha256/benchmarks/sha256_avx1.asm	/^section .data$/;"	l
section	ccan/ccan/crypto/sha256/benchmarks/sha256_avx1.asm	/^section .text$/;"	l
section	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^section .data$/;"	l
section	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^section .text$/;"	l
section	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^section .data$/;"	l
section	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^section .text$/;"	l
section	ccan/ccan/crypto/sha256/benchmarks/sha256_sse4.asm	/^section .data$/;"	l
section	ccan/ccan/crypto/sha256/benchmarks/sha256_sse4.asm	/^section .text$/;"	l
secure_zero_memory	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2-impl.h	/^static inline void secure_zero_memory( void *v, size_t n )$/;"	f
seed	libsodium/test/default/box_seed.c	/^static unsigned char seed[32]$/;"	v	file:
seen_move	ccan/ccan/tal/test/run-notifier.c	/^static bool seen_move, seen_resize;$/;"	v	file:
seen_resize	ccan/ccan/tal/test/run-notifier.c	/^static bool seen_move, seen_resize;$/;"	v	file:
segment_length	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    uint32_t segment_length;$/;"	m	struct:Argon2_instance_t
segv_handler	libsodium/test/default/sodium_utils2.c	/^__attribute__ ((noreturn)) static void segv_handler(int sig)$/;"	f	file:
segv_handler	libsodium/test/default/sodium_utils3.c	/^__attribute__ ((noreturn)) static void segv_handler(int sig)$/;"	f	file:
self	ccan/ccan/htable/tools/speed.c	/^	struct object *self;$/;"	m	struct:object	typeref:struct:object::object	file:
send_commit	test/test_protocol.c	/^static void send_commit(struct peer *peer)$/;"	f	file:
send_fd	ccan/ccan/io/fdpass/test/run.c	/^static struct io_plan *send_fd(struct io_conn *conn, int *pfd)$/;"	f	file:
send_feechange	test/test_protocol.c	/^static void send_feechange(struct peer *peer)$/;"	f	file:
send_offer	test/test_protocol.c	/^static void send_offer(struct peer *peer, unsigned int htlc)$/;"	f	file:
send_remove	test/test_protocol.c	/^static void send_remove(struct peer *peer, unsigned int htlc)$/;"	f	file:
send_revoke	test/test_protocol.c	/^static void send_revoke(struct peer *peer, struct commit_info *ci)$/;"	f	file:
sender	irc.h	/^	const char *sender;$/;"	m	struct:privmsg
sendpay	contrib/pylightning/lightning/lightning.py	/^    def sendpay(self, route, paymenthash):$/;"	m	class:LegacyLightningRpc
sendpay_command	daemon/pay.c	/^static const struct json_command sendpay_command = {$/;"	v	typeref:struct:json_command	file:
sent	test/test_protocol.c	/^struct sent {$/;"	s	file:
sent_out_fd	lightningd/hsm/hsm.c	/^static struct io_plan *sent_out_fd(struct io_conn *conn, struct conn_info *ci)$/;"	f	file:
sent_resp	lightningd/hsm/hsm.c	/^static struct io_plan *sent_resp(struct io_conn *conn, struct conn_info *ci)$/;"	f	file:
sequence_number	bitcoin/tx.h	/^	u32 sequence_number;$/;"	m	struct:bitcoin_tx_input
serialize_hoppayload	daemon/sphinx.c	/^static void serialize_hoppayload(u8 *dst, struct hoppayload *hp)$/;"	f	file:
serialize_onionpacket	daemon/sphinx.c	/^u8 *serialize_onionpacket($/;"	f
server	irc.h	/^	const char *server;$/;"	m	struct:ircstate
session_key_len_receive	daemon/cryptopkt.c	/^static struct io_plan *session_key_len_receive(struct io_conn *conn,$/;"	f	file:
session_key_receive	daemon/cryptopkt.c	/^static struct io_plan *session_key_receive(struct io_conn *conn,$/;"	f	file:
session_sig	lightning.pb-c.h	/^  Signature *session_sig;$/;"	m	struct:_Authenticate
setUp	tests/test_lightningd.py	/^    def setUp(self):$/;"	m	class:BaseLightningDTests
setUpModule	tests/test_lightningd.py	/^def setUpModule():$/;"	f
set_always	ccan/ccan/io/io.c	/^static struct io_plan *set_always(struct io_conn *conn,$/;"	f	file:
set_args	ccan/ccan/opt/test/run-helpers.c	/^static void set_args(int *argc, char ***argv, ...)$/;"	f	file:
set_base_from	libsodium/build-aux/depcomp	/^set_base_from ()$/;"	f
set_base_from	secp256k1/build-aux/depcomp	/^set_base_from ()$/;"	f
set_blocking	ccan/ccan/io/io.c	/^static void set_blocking(int fd, bool block)$/;"	f	file:
set_children	ccan/ccan/tal/test/run-iter.c	/^static int set_children(const tal_t *parent, char val)$/;"	f	file:
set_current_htlc	test/test_state_coverage.c	/^static void set_current_htlc(struct peer *peer,$/;"	f	file:
set_destroying_bit	ccan/ccan/tal/tal.c	/^static void set_destroying_bit(struct children **parent_child)$/;"	f	file:
set_dir_from	libsodium/build-aux/depcomp	/^set_dir_from ()$/;"	f
set_dir_from	secp256k1/build-aux/depcomp	/^set_dir_from ()$/;"	f
set_feechange	daemon/peer.c	/^static void set_feechange(struct peer *peer, u64 fee_rate,$/;"	f	file:
set_htlc_fail	daemon/peer.c	/^static void set_htlc_fail(struct peer *peer,$/;"	f	file:
set_htlc_rval	daemon/peer.c	/^static void set_htlc_rval(struct peer *peer,$/;"	f	file:
set_int_with_suffix	ccan/ccan/opt/helpers.c	/^static char * set_int_with_suffix(const char *arg, int *i, const long base)$/;"	f	file:
set_llong_with_suffix	ccan/ccan/opt/helpers.c	/^static char *set_llong_with_suffix(const char *arg, long long *ll,$/;"	f	file:
set_log_level	daemon/log.c	/^void set_log_level(struct log_book *lr, enum log_level level)$/;"	f
set_log_outfn	daemon/log.h	89;"	d
set_log_outfn_	daemon/log.c	/^void set_log_outfn_(struct log_book *lr,$/;"	f
set_log_prefix	daemon/log.c	/^void set_log_prefix(struct log *log, const char *prefix)$/;"	f
set_long_with_suffix	ccan/ccan/opt/helpers.c	/^static char * set_long_with_suffix(const char *arg, long *l, const long base)$/;"	f	file:
set_peer_state	daemon/peer.c	/^static void set_peer_state(struct peer *peer, enum state newstate,$/;"	f	file:
set_pubkey	wire/test/run-peer-wire.c	/^static void set_pubkey(struct pubkey *key)$/;"	f	file:
set_some_value	ccan/ccan/typesafe_cb/test/compile_fail-cast_if_type-promotable.c	9;"	d	file:
set_some_value	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb_cast.c	10;"	d	file:
set_some_value	ccan/ccan/typesafe_cb/test/run.c	14;"	d	file:
set_uint_with_suffix	ccan/ccan/opt/helpers.c	/^static char * set_uint_with_suffix(const char *arg, unsigned int *u, const long base)$/;"	f	file:
set_ulong_with_suffix	ccan/ccan/opt/helpers.c	/^static char * set_ulong_with_suffix(const char *arg, unsigned long *ul, const long base)$/;"	f	file:
set_ulonglong_with_suffix	ccan/ccan/opt/helpers.c	/^static char * set_ulonglong_with_suffix(const char *arg, unsigned long long *ull,$/;"	f	file:
setupBitcoind	tests/test_lightningd.py	/^def setupBitcoind():$/;"	f
setup_connect	ccan/ccan/io/test/run-09-connect.c	/^static struct io_plan *setup_connect(struct io_conn *conn,$/;"	f	file:
setup_crypto	daemon/cryptopkt.c	/^static void setup_crypto(struct dir_state *dir,$/;"	f	file:
setup_default_config	daemon/options.c	/^static void setup_default_config(struct lightningd_state *dstate)$/;"	f	file:
setup_first_commit	daemon/peer.c	/^bool setup_first_commit(struct peer *peer)$/;"	f
setup_htlcs	lightningd/test/run-commit_tx.c	/^static const struct htlc **setup_htlcs(const tal_t *ctx)$/;"	f	file:
setup_irc_connection	daemon/irc_announce.c	/^void setup_irc_connection(struct lightningd_state *dstate)$/;"	f
setup_jsonrpc	daemon/jsonrpc.c	/^void setup_jsonrpc(struct lightningd_state *dstate, const char *rpc_filename)$/;"	f
setup_lightning	daemon/test/scripts/helpers.sh	/^setup_lightning()$/;"	f
setup_listeners	daemon/peer.c	/^void setup_listeners(struct lightningd_state *dstate)$/;"	f
setup_listeners	lightningd/peer_control.c	/^void setup_listeners(struct lightningd *ld)$/;"	f
setup_new_peer	lightningd/gossip/gossip.c	/^static struct peer *setup_new_peer(struct daemon *daemon, const u8 *msg)$/;"	f	file:
setup_p2p_announce	daemon/p2p_announce.c	/^void setup_p2p_announce(struct lightningd_state *dstate)$/;"	f
setup_reader	ccan/ccan/io/test/run-10-many.c	/^static struct io_plan *setup_reader(struct io_conn *conn, struct buffer *buf)$/;"	f	file:
setup_topology	daemon/chaintopology.c	/^void setup_topology(struct lightningd_state *dstate)$/;"	f
setup_waiter	ccan/ccan/io/test/run-08-hangup-on-idle.c	/^static struct io_plan *setup_waiter(struct io_conn *conn, char *buf)$/;"	f	file:
setup_waiter	ccan/ccan/io/test/run-13-all-idle.c	/^static struct io_plan *setup_waiter(struct io_conn *conn, int *status)$/;"	f	file:
setup_waker	ccan/ccan/io/test/run-08-hangup-on-idle.c	/^static struct io_plan *setup_waker(struct io_conn *conn, char *buf)$/;"	f	file:
sha	bitcoin/shadouble.h	/^	struct sha256 sha;$/;"	m	struct:sha256_double	typeref:struct:sha256_double::sha256
sha	ccan/ccan/crypto/hmac_sha256/hmac_sha256.h	/^	struct sha256 sha;$/;"	m	struct:hmac_sha256	typeref:struct:hmac_sha256::sha256
sha	ccan/ccan/crypto/hmac_sha256/hmac_sha256.h	/^	struct sha256_ctx sha;$/;"	m	struct:hmac_sha256_ctx	typeref:struct:hmac_sha256_ctx::sha256_ctx
sha256	ccan/ccan/crypto/sha256/sha256.c	/^void sha256(struct sha256 *sha, const void *p, size_t size)$/;"	f
sha256	ccan/ccan/crypto/sha256/sha256.h	/^struct sha256 {$/;"	s
sha256	type_to_string.c	/^REGISTER_TYPE_TO_HEXSTR(sha256);$/;"	v
sha256	type_to_string.h	/^	const struct sha256 *sha256;$/;"	m	union:printable_types	typeref:struct:printable_types::sha256
sha256_avx	ccan/ccan/crypto/sha256/benchmarks/sha256_avx1.asm	/^sha256_avx:$/;"	l
sha256_be16	ccan/ccan/crypto/sha256/sha256.c	/^void sha256_be16(struct sha256_ctx *ctx, uint16_t v)$/;"	f
sha256_be32	ccan/ccan/crypto/sha256/sha256.c	/^void sha256_be32(struct sha256_ctx *ctx, uint32_t v)$/;"	f
sha256_be64	ccan/ccan/crypto/sha256/sha256.c	/^void sha256_be64(struct sha256_ctx *ctx, uint64_t v)$/;"	f
sha256_ctx	ccan/ccan/crypto/sha256/sha256.h	/^struct sha256_ctx {$/;"	s
sha256_done	ccan/ccan/crypto/sha256/sha256.c	/^void sha256_done(struct sha256_ctx *ctx, struct sha256 *res)$/;"	f
sha256_double	bitcoin/shadouble.c	/^REGISTER_TYPE_TO_HEXSTR(sha256_double);$/;"	v
sha256_double	bitcoin/shadouble.c	/^void sha256_double(struct sha256_double *shadouble, const void *p, size_t len)$/;"	f
sha256_double	bitcoin/shadouble.h	/^struct sha256_double {$/;"	s
sha256_double	type_to_string.h	/^	const struct sha256_double *sha256_double;$/;"	m	union:printable_types	typeref:struct:printable_types::sha256_double
sha256_double_done	bitcoin/shadouble.c	/^void sha256_double_done(struct sha256_ctx *shactx, struct sha256_double *res)$/;"	f
sha256_from_hex	lightningd/test/run-commit_tx.c	/^static struct sha256 sha256_from_hex(const char *hex)$/;"	f	file:
sha256_from_hex	lightningd/test/run-cryptomsg.c	/^static struct sha256 sha256_from_hex(const char *hex)$/;"	f	file:
sha256_from_sql	daemon/db.c	/^static void sha256_from_sql(sqlite3_stmt *stmt, int idx, struct sha256 *sha)$/;"	f	file:
sha256_hash__descriptor	lightning.pb-c.c	/^const ProtobufCMessageDescriptor sha256_hash__descriptor =$/;"	v
sha256_hash__field_descriptors	lightning.pb-c.c	/^static const ProtobufCFieldDescriptor sha256_hash__field_descriptors[4] =$/;"	v	file:
sha256_hash__field_indices_by_name	lightning.pb-c.c	/^static const unsigned sha256_hash__field_indices_by_name[] = {$/;"	v	file:
sha256_hash__free_unpacked	lightning.pb-c.c	/^void   sha256_hash__free_unpacked$/;"	f
sha256_hash__get_packed_size	lightning.pb-c.c	/^size_t sha256_hash__get_packed_size$/;"	f
sha256_hash__init	lightning.pb-c.c	/^void   sha256_hash__init$/;"	f
sha256_hash__number_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange sha256_hash__number_ranges[1 + 1] =$/;"	v	file:
sha256_hash__pack	lightning.pb-c.c	/^size_t sha256_hash__pack$/;"	f
sha256_hash__pack_to_buffer	lightning.pb-c.c	/^size_t sha256_hash__pack_to_buffer$/;"	f
sha256_hash__unpack	lightning.pb-c.c	/^       sha256_hash__unpack$/;"	f
sha256_init	ccan/ccan/crypto/sha256/sha256.c	/^void sha256_init(struct sha256_ctx *ctx)$/;"	f
sha256_le16	ccan/ccan/crypto/sha256/sha256.c	/^void sha256_le16(struct sha256_ctx *ctx, uint16_t v)$/;"	f
sha256_le32	ccan/ccan/crypto/sha256/sha256.c	/^void sha256_le32(struct sha256_ctx *ctx, uint32_t v)$/;"	f
sha256_le64	ccan/ccan/crypto/sha256/sha256.c	/^void sha256_le64(struct sha256_ctx *ctx, uint64_t v)$/;"	f
sha256_rorx	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx2.asm	/^sha256_rorx:$/;"	l
sha256_rorx_x8ms	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^sha256_rorx_x8ms:$/;"	l
sha256_sse4	ccan/ccan/crypto/sha256/benchmarks/sha256_sse4.asm	/^sha256_sse4:$/;"	l
sha256_to_proto	protobuf_convert.c	/^Sha256Hash *sha256_to_proto(const tal_t *ctx, const struct sha256 *hash)$/;"	f
sha256_tx_for_sig	bitcoin/tx.c	/^void sha256_tx_for_sig(struct sha256_double *h, const struct bitcoin_tx *tx,$/;"	f
sha256_tx_one_input	bitcoin/signature.c	/^static void sha256_tx_one_input(struct bitcoin_tx *tx,$/;"	f	file:
sha256_u16	ccan/ccan/crypto/sha256/sha256.c	/^void sha256_u16(struct sha256_ctx *ctx, uint16_t v)$/;"	f
sha256_u32	ccan/ccan/crypto/sha256/sha256.c	/^void sha256_u32(struct sha256_ctx *ctx, uint32_t v)$/;"	f
sha256_u64	ccan/ccan/crypto/sha256/sha256.c	/^void sha256_u64(struct sha256_ctx *ctx, uint64_t v)$/;"	f
sha256_u8	ccan/ccan/crypto/sha256/sha256.c	/^void sha256_u8(struct sha256_ctx *ctx, uint8_t v)$/;"	f
sha256_update	ccan/ccan/crypto/sha256/sha256.c	/^void sha256_update(struct sha256_ctx *ctx, const void *p, size_t size)$/;"	f
sha256_x8ms_8rnds_loop	ccan/ccan/crypto/sha256/benchmarks/sha256_avx2_rorx8.asm	/^sha256_x8ms_8rnds_loop:$/;"	l
sha_mix_in	lightningd/handshake/handshake.c	/^static void sha_mix_in(struct sha256 *h, const void *data, size_t len)$/;"	f	file:
sha_mix_in_key	lightningd/handshake/handshake.c	/^static void sha_mix_in_key(struct sha256 *h, const struct pubkey *key)$/;"	f	file:
shachain	ccan/ccan/crypto/shachain/shachain.h	/^struct shachain {$/;"	s
shachain_add_hash	ccan/ccan/crypto/shachain/shachain.c	/^bool shachain_add_hash(struct shachain *chain,$/;"	f
shachain_from_seed	ccan/ccan/crypto/shachain/shachain.c	/^void shachain_from_seed(const struct sha256 *seed, shachain_index_t index,$/;"	f
shachain_get_hash	ccan/ccan/crypto/shachain/shachain.c	/^bool shachain_get_hash(const struct shachain *chain,$/;"	f
shachain_index_t	ccan/ccan/crypto/shachain/shachain.h	11;"	d
shachain_index_t	ccan/ccan/crypto/shachain/test/run-8bit.c	1;"	d	file:
shachain_index_t	ccan/ccan/crypto/shachain/test/run-can_derive.c	1;"	d	file:
shachain_init	ccan/ccan/crypto/shachain/shachain.c	/^void shachain_init(struct shachain *chain)$/;"	f
shared	libsodium/test/default/core1.c	/^static unsigned char shared[32]$/;"	v	file:
sharedstatedir	libsodium/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	libsodium/dist-build/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	libsodium/msvc-scripts/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	libsodium/src/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	libsodium/src/libsodium/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	libsodium/src/libsodium/include/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	libsodium/test/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	libsodium/test/default/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	secp256k1/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
shiftrows	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common.h	465;"	d
shl	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shl  $1,%rcx$/;"	l
shl	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shl  $3,%rax$/;"	l
shl	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shl  $4,%rcx$/;"	l
shl	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shl  $6,%rcx$/;"	l
shld	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^shld $13,%r10,%r11$/;"	l
shld	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^shld $13,%r12,%r13$/;"	l
shld	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^shld $13,%r14,%r15$/;"	l
shld	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^shld $13,%r8,%r9$/;"	l
shld	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^shld $13,%rbx,%rbp$/;"	l
shld	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^shld $13,%r11,%r12$/;"	l
shld	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^shld $13,%r13,%r14$/;"	l
shld	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^shld $13,%r15,%rbx$/;"	l
shld	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^shld $13,%r9,%r10$/;"	l
shld	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^shld $13,%rcx,%rbp$/;"	l
short_table	ccan/ccan/opt/test/utils.c	/^struct opt_table short_table[] = {$/;"	v	typeref:struct:opt_table
shorthash	libsodium/examples/shorthash.c	/^shorthash(void)$/;"	f
shorthash_DEPENDENCIES	libsodium/test/default/Makefile	/^shorthash_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
shorthash_LDADD	libsodium/test/default/Makefile	/^shorthash_LDADD = $(TESTS_LDADD)$/;"	m
shorthash_OBJECTS	libsodium/test/default/Makefile	/^shorthash_OBJECTS = shorthash.$(OBJEXT)$/;"	m
shorthash_SOURCE	libsodium/test/default/Makefile	/^shorthash_SOURCE = cmptest.h shorthash.c$/;"	m
shorthash_SOURCES	libsodium/test/default/Makefile	/^shorthash_SOURCES = shorthash.c$/;"	m
show	ccan/ccan/opt/opt.h	/^	void (*show)(char buf[OPT_SHOW_LEN], const void *arg);$/;"	m	struct:opt_table
show_10	ccan/ccan/opt/test/run-add_desc.c	/^static void show_10(char buf[OPT_SHOW_LEN], const void *arg UNNEEDED)$/;"	f	file:
show_arg	ccan/ccan/opt/test/utils.c	/^void show_arg(char buf[OPT_SHOW_LEN], const char *arg)$/;"	f
show_llong_with_suffix	ccan/ccan/opt/helpers.c	/^static void show_llong_with_suffix(char buf[OPT_SHOW_LEN], long long ll,$/;"	f	file:
show_max	ccan/ccan/opt/test/run-add_desc.c	/^static void show_max(char buf[OPT_SHOW_LEN], const void *arg UNNEEDED)$/;"	f	file:
show_ullong_with_suffix	ccan/ccan/opt/helpers.c	/^static void show_ullong_with_suffix(char buf[OPT_SHOW_LEN], unsigned long long ull,$/;"	f	file:
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^shr  $51,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^shr  $51,%r9$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $10,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $12,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $13,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $15,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $16,%rax$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $18,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $2,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $20,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $21,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $23,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $24,%rax$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $26,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $28,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $29,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $31,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $32,%rax$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $34,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $36,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $37,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $39,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $4,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $40,%rax$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $42,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $44,%rsi$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $45,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $47,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $48,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $5,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $50,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $51,%r12$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $7,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $8,%rax$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^shr  $1,%r8$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^shr  $1,%r9$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^shr  $1,%rcx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^shr  $1,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^shr  $1,%r8$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^shr  $1,%r9$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^shr  $1,%rcx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^shr  $1,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^shr  $32,%r8$/;"	l
shr	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^shr  $32,%rcx$/;"	l
shrd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^shrd $1,%r8,%rcx$/;"	l
shrd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^shrd $1,%r9,%r8$/;"	l
shrd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^shrd $1,%rcx,%rdx$/;"	l
shrd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^shrd $1,%r8,%rcx$/;"	l
shrd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^shrd $1,%r9,%r8$/;"	l
shrd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^shrd $1,%rcx,%rdx$/;"	l
shufb	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128.h	32;"	d
shufb	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128_aes128ctr.c	/^void shufb(int128 *r, const unsigned char *l)$/;"	f
shufd	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128.h	35;"	d
shufd	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128_aes128ctr.c	/^void shufd(int128 *r, const int128 *x, const unsigned int c)$/;"	f
shutdown_eq	wire/test/run-peer-wire.c	/^static bool shutdown_eq(const struct msg_shutdown *a,$/;"	f	file:
shutdown_order	daemon/peer.h	/^		s64 shutdown_order, closing_order;$/;"	m	struct:peer::__anon49
shutdown_pkt_in	daemon/peer.c	/^static bool shutdown_pkt_in(struct peer *peer, const Pkt *pkt)$/;"	f	file:
side	daemon/channel.h	/^	struct channel_oneside side[2];$/;"	m	struct:channel_state	typeref:struct:channel_state::channel_oneside
side	daemon/htlc.h	/^enum side {$/;"	g
side_to_str	daemon/htlc.h	/^static inline const char *side_to_str(enum side side)$/;"	f
sig	daemon/peer.h	/^	secp256k1_ecdsa_signature *sig;$/;"	m	struct:commit_info
sig	libsodium/test/default/sign.c	/^    const unsigned char  sig[crypto_sign_BYTES];$/;"	m	struct:TestData_	file:
sig	lightning.pb-c.h	/^  Signature *sig;$/;"	m	struct:_CloseSignature
sig	lightning.pb-c.h	/^  Signature *sig;$/;"	m	struct:_OpenCommitSig
sig	lightning.pb-c.h	/^  Signature *sig;$/;"	m	struct:_UpdateCommit
sig	secp256k1/src/bench_recover.c	/^    unsigned char sig[64];$/;"	m	struct:__anon38	file:
sig	secp256k1/src/bench_schnorr_verify.c	/^    unsigned char sig[64];$/;"	m	struct:__anon33	file:
sig	secp256k1/src/bench_verify.c	/^    unsigned char sig[72];$/;"	m	struct:__anon25	file:
sig_from_sql	daemon/db.c	/^static void sig_from_sql(sqlite3_stmt *stmt, int idx,$/;"	f	file:
sig_to_sql	daemon/db.c	/^static char *sig_to_sql(const tal_t *ctx,$/;"	f	file:
sig_valid	bitcoin/signature.c	/^bool sig_valid(const secp256k1_ecdsa_signature *sig)$/;"	f
sigalarm	ccan/ccan/io/benchmarks/run-different-speed.c	/^static void sigalarm(int sig)$/;"	f	file:
sigalarm	ccan/ccan/io/benchmarks/run-length-prefix.c	/^static void sigalarm(int sig)$/;"	f	file:
sigcount	ccan/ccan/read_write_all/test/run-read_all.c	/^static volatile int sigcount;$/;"	v	file:
sighash_type	bitcoin/signature.h	/^enum sighash_type {$/;"	g
siglen	secp256k1/src/bench_verify.c	/^    size_t siglen;$/;"	m	struct:__anon25	file:
sigma0	ccan/ccan/crypto/sha256/sha256.c	/^static uint32_t sigma0(uint32_t x)$/;"	f	file:
sigma0	secp256k1/src/hash_impl.h	20;"	d
sigma0	secp256k1/src/hash_impl.h	275;"	d
sigma1	ccan/ccan/crypto/sha256/sha256.c	/^static uint32_t sigma1(uint32_t x)$/;"	f	file:
sigma1	secp256k1/src/hash_impl.h	21;"	d
sigma1	secp256k1/src/hash_impl.h	274;"	d
sign	libsodium/examples/sign.c	/^sign(void)$/;"	f	file:
sign	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    public static byte[] sign(byte[] data, byte[] sec) throws AssertFailException{$/;"	m	class:NativeSecp256k1
sign_DEPENDENCIES	libsodium/test/default/Makefile	/^sign_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
sign_LDADD	libsodium/test/default/Makefile	/^sign_LDADD = $(TESTS_LDADD)$/;"	m
sign_OBJECTS	libsodium/test/default/Makefile	/^sign_OBJECTS = sign.$(OBJEXT)$/;"	m
sign_SOURCE	libsodium/test/default/Makefile	/^sign_SOURCE = cmptest.h sign.c$/;"	m
sign_SOURCES	libsodium/test/default/Makefile	/^sign_SOURCES = sign.c$/;"	m
sign_commit_tx	daemon/peer.c	/^static void sign_commit_tx(struct peer *peer)$/;"	f	file:
sign_funding_tx	lightningd/funding_tx.c	/^void sign_funding_tx(struct bitcoin_tx *funding,$/;"	f
sign_hash	bitcoin/signature.c	/^void sign_hash(const struct privkey *privkey,$/;"	f
sign_privmsg	daemon/irc_announce.c	/^static void sign_privmsg(struct ircstate *state, struct privmsg *msg)$/;"	f	file:
sign_tx_input	bitcoin/signature.c	/^void sign_tx_input(struct bitcoin_tx *tx,$/;"	f
signature	test/test_protocol.c	/^struct signature {$/;"	s	file:
signature	wire/test/run-peer-wire.c	/^	secp256k1_ecdsa_signature signature;$/;"	m	struct:msg_channel_update	file:
signature	wire/test/run-peer-wire.c	/^	secp256k1_ecdsa_signature signature;$/;"	m	struct:msg_closing_signed	file:
signature	wire/test/run-peer-wire.c	/^	secp256k1_ecdsa_signature signature;$/;"	m	struct:msg_commit_sig	file:
signature	wire/test/run-peer-wire.c	/^	secp256k1_ecdsa_signature signature;$/;"	m	struct:msg_funding_created	file:
signature	wire/test/run-peer-wire.c	/^	secp256k1_ecdsa_signature signature;$/;"	m	struct:msg_funding_signed	file:
signature	wire/test/run-peer-wire.c	/^	secp256k1_ecdsa_signature signature;$/;"	m	struct:msg_node_announcement	file:
signature__descriptor	lightning.pb-c.c	/^const ProtobufCMessageDescriptor signature__descriptor =$/;"	v
signature__field_descriptors	lightning.pb-c.c	/^static const ProtobufCFieldDescriptor signature__field_descriptors[8] =$/;"	v	file:
signature__field_indices_by_name	lightning.pb-c.c	/^static const unsigned signature__field_indices_by_name[] = {$/;"	v	file:
signature__free_unpacked	lightning.pb-c.c	/^void   signature__free_unpacked$/;"	f
signature__get_packed_size	lightning.pb-c.c	/^size_t signature__get_packed_size$/;"	f
signature__init	lightning.pb-c.c	/^void   signature__init$/;"	f
signature__number_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange signature__number_ranges[1 + 1] =$/;"	v	file:
signature__pack	lightning.pb-c.c	/^size_t signature__pack$/;"	f
signature__pack_to_buffer	lightning.pb-c.c	/^size_t signature__pack_to_buffer$/;"	f
signature__unpack	lightning.pb-c.c	/^       signature__unpack$/;"	f
signature_from_der	bitcoin/signature.c	/^bool signature_from_der(const u8 *der, size_t len, secp256k1_ecdsa_signature *sig)$/;"	f
signature_to_der	bitcoin/signature.c	/^size_t signature_to_der(u8 der[72], const secp256k1_ecdsa_signature *sig)$/;"	f
signature_to_hexstr	bitcoin/signature.c	/^static char *signature_to_hexstr(const tal_t *ctx,$/;"	f	file:
signature_to_proto	protobuf_convert.c	/^Signature *signature_to_proto(const tal_t *ctx, const secp256k1_ecdsa_signature *sig)$/;"	f
sigs	secp256k1/src/bench_schnorr_verify.c	/^    benchmark_schnorr_sig_t sigs[64];$/;"	m	struct:__anon34	file:
sigs_in	daemon/peer.h	/^		u32 sigs_in;$/;"	m	struct:peer::__anon49
simplify_state	test/test_state_coverage.c	/^static const char *simplify_state(enum state s)$/;"	f	file:
single_child	ccan/ccan/tal/str/test/helper.h	/^static inline bool single_child(const void *ctx, const void *child)$/;"	f
sintmap_add	ccan/ccan/intmap/intmap.h	195;"	d
sintmap_after	ccan/ccan/intmap/intmap.h	308;"	d
sintmap_after_	ccan/ccan/intmap/intmap.h	/^static inline void *sintmap_after_(const struct intmap *map,$/;"	f
sintmap_clear	ccan/ccan/intmap/intmap.h	256;"	d
sintmap_del	ccan/ccan/intmap/intmap.h	230;"	d
sintmap_empty	ccan/ccan/intmap/intmap.h	115;"	d
sintmap_first	ccan/ccan/intmap/intmap.h	282;"	d
sintmap_first_	ccan/ccan/intmap/intmap.h	/^static inline void *sintmap_first_(const struct intmap *map,$/;"	f
sintmap_get	ccan/ccan/intmap/intmap.h	150;"	d
sintmap_index_t	ccan/ccan/intmap/intmap.h	14;"	d
sintmap_index_t	ccan/ccan/intmap/test/run-order-smallsize.c	2;"	d	file:
sintmap_init	ccan/ccan/intmap/intmap.h	89;"	d
sintmap_unwrap_	ccan/ccan/intmap/intmap.h	316;"	d
siphash24	ccan/ccan/crypto/siphash24/siphash24.c	/^uint64_t siphash24(const struct siphash_seed *seed, const void *p, size_t size)$/;"	f
siphash24_be16	ccan/ccan/crypto/siphash24/siphash24.c	/^void siphash24_be16(struct siphash24_ctx *ctx, uint16_t v)$/;"	f
siphash24_be32	ccan/ccan/crypto/siphash24/siphash24.c	/^void siphash24_be32(struct siphash24_ctx *ctx, uint32_t v)$/;"	f
siphash24_be64	ccan/ccan/crypto/siphash24/siphash24.c	/^void siphash24_be64(struct siphash24_ctx *ctx, uint64_t v)$/;"	f
siphash24_ctx	ccan/ccan/crypto/siphash24/siphash24.h	/^struct siphash24_ctx {$/;"	s
siphash24_done	ccan/ccan/crypto/siphash24/siphash24.c	/^uint64_t siphash24_done(struct siphash24_ctx *ctx)$/;"	f
siphash24_init	ccan/ccan/crypto/siphash24/siphash24.c	/^void siphash24_init(struct siphash24_ctx *ctx, const struct siphash_seed *seed)$/;"	f
siphash24_le16	ccan/ccan/crypto/siphash24/siphash24.c	/^void siphash24_le16(struct siphash24_ctx *ctx, uint16_t v)$/;"	f
siphash24_le32	ccan/ccan/crypto/siphash24/siphash24.c	/^void siphash24_le32(struct siphash24_ctx *ctx, uint32_t v)$/;"	f
siphash24_le64	ccan/ccan/crypto/siphash24/siphash24.c	/^void siphash24_le64(struct siphash24_ctx *ctx, uint64_t v)$/;"	f
siphash24_u16	ccan/ccan/crypto/siphash24/siphash24.c	/^void siphash24_u16(struct siphash24_ctx *ctx, uint16_t v)$/;"	f
siphash24_u32	ccan/ccan/crypto/siphash24/siphash24.c	/^void siphash24_u32(struct siphash24_ctx *ctx, uint32_t v)$/;"	f
siphash24_u64	ccan/ccan/crypto/siphash24/siphash24.c	/^void siphash24_u64(struct siphash24_ctx *ctx, uint64_t v)$/;"	f
siphash24_u8	ccan/ccan/crypto/siphash24/siphash24.c	/^void siphash24_u8(struct siphash24_ctx *ctx, uint8_t v)$/;"	f
siphash24_update	ccan/ccan/crypto/siphash24/siphash24.c	/^void siphash24_update(struct siphash24_ctx *ctx, const void *p, size_t size)$/;"	f
siphash_seed	ccan/ccan/crypto/siphash24/siphash24.h	/^struct siphash_seed {$/;"	s
siphash_seed	daemon/pseudorand.c	/^const struct siphash_seed *siphash_seed(void)$/;"	f
siphashseed	daemon/pseudorand.c	/^static struct siphash_seed siphashseed;$/;"	v	typeref:struct:siphash_seed	file:
sit	test/test_state_coverage.c	/^	struct situation sit;$/;"	m	struct:failpoint	typeref:struct:failpoint::situation	file:
sithash	test/test_state_coverage.c	/^	struct sithash sithash;$/;"	m	struct:hist	typeref:struct:hist::sithash	file:
sithash_update	test/test_state_coverage.c	/^static bool sithash_update(struct sithash *sithash,$/;"	f	file:
situation	test/test_state_coverage.c	/^struct situation {$/;"	s	file:
situation_eq	test/test_state_coverage.c	/^static bool situation_eq(const struct situation *a, const struct situation *b)$/;"	f	file:
situation_hash	test/test_state_coverage.c	/^static size_t situation_hash(const struct situation *situation)$/;"	f	file:
situation_init	test/test_state_coverage.c	/^static void situation_init(struct situation *sit,$/;"	f	file:
situation_keyof	test/test_state_coverage.c	/^static const struct situation *situation_keyof(const struct situation *situation)$/;"	f	file:
size	ccan/ccan/cdump/cdump.h	/^	const char *size;$/;"	m	struct:cdump_array
size	daemon/jsmn/jsmn.h	/^	int size;$/;"	m	struct:__anon58
size	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    size_t size;$/;"	m	struct:block_region_
size	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	/^    size_t size;$/;"	m	struct:__anon64
sk	libsodium/test/default/sign.c	/^    const unsigned char  sk[crypto_sign_SEEDBYTES];$/;"	m	struct:TestData_	file:
sk	lightningd/cryptomsg.c	/^	struct sha256 sk, rk;$/;"	m	struct:crypto_state	typeref:struct:crypto_state::sha256	file:
skip_line	ccan/ccan/ptr_valid/ptr_valid.c	/^static char *skip_line(char *p)$/;"	f	file:
skipped	daemon/log.c	/^	unsigned int skipped;$/;"	m	struct:log_entry	file:
slice	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    uint8_t slice;$/;"	m	struct:Argon2_position_t
slide	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^static void slide(signed char *r,const unsigned char *a)$/;"	f	file:
small_order	libsodium/src/libsodium/crypto_sign/ed25519/ref10/open.c	/^small_order(const unsigned char R[32])$/;"	f	file:
small_order_p	libsodium/test/default/box.c	/^static const unsigned char small_order_p[crypto_box_PUBLICKEYBYTES]$/;"	v	file:
small_order_p	libsodium/test/default/box2.c	/^static const unsigned char small_order_p[crypto_box_PUBLICKEYBYTES]$/;"	v	file:
small_order_p	libsodium/test/default/box_easy2.c	/^static const unsigned char small_order_p[crypto_box_PUBLICKEYBYTES]$/;"	v	file:
small_order_p	libsodium/test/default/scalarmult.c	/^static const unsigned char small_order_p[crypto_scalarmult_BYTES]$/;"	v	file:
smap	ccan/ccan/intmap/test/run-order-smallsize.c	/^typedef SINTMAP(int8_t *) smap;$/;"	t	file:
smap	ccan/ccan/intmap/test/run-order.c	/^typedef SINTMAP(int *) smap;$/;"	t	file:
smix	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c	/^smix(uint8_t * B, size_t r, uint64_t N, uint32_t * V, uint32_t * XY)$/;"	f	file:
smix	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	/^smix(uint8_t * B, size_t r, uint32_t N, void * V, void * XY)$/;"	f	file:
sn	lightningd/cryptomsg.c	/^	u64 rn, sn;$/;"	m	struct:crypto_state	file:
sodium_H	libsodium/src/libsodium/include/sodium.h	3;"	d
sodium_add	libsodium/src/libsodium/sodium/utils.c	/^sodium_add(unsigned char *a, const unsigned char *b, const size_t len)$/;"	f
sodium_allocarray	libsodium/src/libsodium/sodium/utils.c	/^sodium_allocarray(size_t count, size_t size)$/;"	f
sodium_bin2hex	libsodium/src/libsodium/sodium/utils.c	/^sodium_bin2hex(char * const hex, const size_t hex_maxlen,$/;"	f
sodium_compare	libsodium/src/libsodium/sodium/utils.c	/^sodium_compare(const unsigned char *b1_, const unsigned char *b2_, size_t len)$/;"	f
sodium_core_DEPENDENCIES	libsodium/test/default/Makefile	/^sodium_core_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
sodium_core_H	libsodium/src/libsodium/include/sodium/core.h	3;"	d
sodium_core_LDADD	libsodium/test/default/Makefile	/^sodium_core_LDADD = $(TESTS_LDADD)$/;"	m
sodium_core_OBJECTS	libsodium/test/default/Makefile	/^sodium_core_OBJECTS = sodium_core.$(OBJEXT)$/;"	m
sodium_core_SOURCE	libsodium/test/default/Makefile	/^sodium_core_SOURCE = cmptest.h sodium_core.c$/;"	m
sodium_core_SOURCES	libsodium/test/default/Makefile	/^sodium_core_SOURCES = sodium_core.c$/;"	m
sodium_export_H	libsodium/src/libsodium/include/sodium/export.h	3;"	d
sodium_free	libsodium/src/libsodium/sodium/utils.c	/^sodium_free(void *ptr)$/;"	f
sodium_hex2bin	libsodium/src/libsodium/sodium/utils.c	/^sodium_hex2bin(unsigned char * const bin, const size_t bin_maxlen,$/;"	f
sodium_hrtime	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^sodium_hrtime(void)$/;"	f	file:
sodium_increment	libsodium/src/libsodium/sodium/utils.c	/^sodium_increment(unsigned char *n, const size_t nlen)$/;"	f
sodium_init	libsodium/src/libsodium/sodium/core.c	/^sodium_init(void)$/;"	f
sodium_is_zero	libsodium/src/libsodium/sodium/utils.c	/^sodium_is_zero(const unsigned char *n, const size_t nlen)$/;"	f
sodium_library_version_major	libsodium/src/libsodium/sodium/version.c	/^sodium_library_version_major(void)$/;"	f
sodium_library_version_minor	libsodium/src/libsodium/sodium/version.c	/^sodium_library_version_minor(void)$/;"	f
sodium_malloc	libsodium/src/libsodium/sodium/utils.c	/^sodium_malloc(const size_t size)$/;"	f
sodium_memcmp	libsodium/src/libsodium/sodium/utils.c	/^sodium_memcmp(const void * const b1_, const void * const b2_, size_t len)$/;"	f
sodium_memzero	libsodium/src/libsodium/sodium/utils.c	/^sodium_memzero(void * const pnt, const size_t len)$/;"	f
sodium_mlock	libsodium/src/libsodium/sodium/utils.c	/^sodium_mlock(void * const addr, const size_t len)$/;"	f
sodium_mprotect_noaccess	libsodium/src/libsodium/sodium/utils.c	/^sodium_mprotect_noaccess(void *ptr)$/;"	f
sodium_mprotect_readonly	libsodium/src/libsodium/sodium/utils.c	/^sodium_mprotect_readonly(void *ptr)$/;"	f
sodium_mprotect_readwrite	libsodium/src/libsodium/sodium/utils.c	/^sodium_mprotect_readwrite(void *ptr)$/;"	f
sodium_munlock	libsodium/src/libsodium/sodium/utils.c	/^sodium_munlock(void * const addr, const size_t len)$/;"	f
sodium_runtime_H	libsodium/src/libsodium/include/sodium/runtime.h	3;"	d
sodium_runtime_has_aesni	libsodium/src/libsodium/sodium/runtime.c	/^sodium_runtime_has_aesni(void) {$/;"	f
sodium_runtime_has_avx	libsodium/src/libsodium/sodium/runtime.c	/^sodium_runtime_has_avx(void) {$/;"	f
sodium_runtime_has_avx2	libsodium/src/libsodium/sodium/runtime.c	/^sodium_runtime_has_avx2(void) {$/;"	f
sodium_runtime_has_neon	libsodium/src/libsodium/sodium/runtime.c	/^sodium_runtime_has_neon(void) {$/;"	f
sodium_runtime_has_pclmul	libsodium/src/libsodium/sodium/runtime.c	/^sodium_runtime_has_pclmul(void) {$/;"	f
sodium_runtime_has_sse2	libsodium/src/libsodium/sodium/runtime.c	/^sodium_runtime_has_sse2(void) {$/;"	f
sodium_runtime_has_sse3	libsodium/src/libsodium/sodium/runtime.c	/^sodium_runtime_has_sse3(void) {$/;"	f
sodium_runtime_has_sse41	libsodium/src/libsodium/sodium/runtime.c	/^sodium_runtime_has_sse41(void) {$/;"	f
sodium_runtime_has_ssse3	libsodium/src/libsodium/sodium/runtime.c	/^sodium_runtime_has_ssse3(void) {$/;"	f
sodium_utils2_DEPENDENCIES	libsodium/test/default/Makefile	/^sodium_utils2_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
sodium_utils2_LDADD	libsodium/test/default/Makefile	/^sodium_utils2_LDADD = $(TESTS_LDADD)$/;"	m
sodium_utils2_OBJECTS	libsodium/test/default/Makefile	/^sodium_utils2_OBJECTS = sodium_utils2.$(OBJEXT)$/;"	m
sodium_utils2_SOURCE	libsodium/test/default/Makefile	/^sodium_utils2_SOURCE = cmptest.h sodium_utils2.c$/;"	m
sodium_utils2_SOURCES	libsodium/test/default/Makefile	/^sodium_utils2_SOURCES = sodium_utils2.c$/;"	m
sodium_utils3_DEPENDENCIES	libsodium/test/default/Makefile	/^sodium_utils3_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
sodium_utils3_LDADD	libsodium/test/default/Makefile	/^sodium_utils3_LDADD = $(TESTS_LDADD)$/;"	m
sodium_utils3_OBJECTS	libsodium/test/default/Makefile	/^sodium_utils3_OBJECTS = sodium_utils3.$(OBJEXT)$/;"	m
sodium_utils3_SOURCE	libsodium/test/default/Makefile	/^sodium_utils3_SOURCE = cmptest.h sodium_utils3.c$/;"	m
sodium_utils3_SOURCES	libsodium/test/default/Makefile	/^sodium_utils3_SOURCES = sodium_utils3.c$/;"	m
sodium_utils_DEPENDENCIES	libsodium/test/default/Makefile	/^sodium_utils_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
sodium_utils_H	libsodium/src/libsodium/include/sodium/utils.h	3;"	d
sodium_utils_LDADD	libsodium/test/default/Makefile	/^sodium_utils_LDADD = $(TESTS_LDADD)$/;"	m
sodium_utils_OBJECTS	libsodium/test/default/Makefile	/^sodium_utils_OBJECTS = sodium_utils.$(OBJEXT)$/;"	m
sodium_utils_SOURCE	libsodium/test/default/Makefile	/^sodium_utils_SOURCE = cmptest.h sodium_utils.c$/;"	m
sodium_utils_SOURCES	libsodium/test/default/Makefile	/^sodium_utils_SOURCES = sodium_utils.c$/;"	m
sodium_version_DEPENDENCIES	libsodium/test/default/Makefile	/^sodium_version_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
sodium_version_H	libsodium/src/libsodium/include/sodium/version.h	3;"	d
sodium_version_LDADD	libsodium/test/default/Makefile	/^sodium_version_LDADD = $(TESTS_LDADD)$/;"	m
sodium_version_OBJECTS	libsodium/test/default/Makefile	/^sodium_version_OBJECTS = sodium_version.$(OBJEXT)$/;"	m
sodium_version_SOURCE	libsodium/test/default/Makefile	/^sodium_version_SOURCE = cmptest.h sodium_version.c$/;"	m
sodium_version_SOURCES	libsodium/test/default/Makefile	/^sodium_version_SOURCES = sodium_version.c$/;"	m
sodium_version_string	libsodium/src/libsodium/sodium/version.c	/^sodium_version_string(void)$/;"	f
some_early_table	ccan/ccan/opt/test/run-early.c	/^struct opt_table some_early_table[] = {$/;"	v	typeref:struct:opt_table
sql	daemon/db.c	/^	sqlite3 *sql;$/;"	m	struct:db	file:
sql_bool	daemon/db.c	/^static const char *sql_bool(bool b)$/;"	f	file:
sql_hex_or_null	daemon/db.c	/^static char *sql_hex_or_null(const tal_t *ctx, const void *buf, size_t len)$/;"	f	file:
sqlite3_column_str	daemon/db.c	/^static const char *sqlite3_column_str(sqlite3_stmt *stmt, int iCol)$/;"	f	file:
sqrtm1	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^static const fe sqrtm1 = {$/;"	v	file:
srandom	libsodium/test/quirks/quirks.h	/^srandom(unsigned seed)$/;"	f
src	daemon/htlc.h	/^	struct htlc *src;$/;"	m	struct:htlc	typeref:struct:htlc::htlc
src	daemon/routing.h	/^	struct node *src, *dst;$/;"	m	struct:node_connection	typeref:struct:node_connection::node
srcdir	libsodium/Makefile	/^srcdir = .$/;"	m
srcdir	libsodium/dist-build/Makefile	/^srcdir = .$/;"	m
srcdir	libsodium/msvc-scripts/Makefile	/^srcdir = .$/;"	m
srcdir	libsodium/src/Makefile	/^srcdir = .$/;"	m
srcdir	libsodium/src/libsodium/Makefile	/^srcdir = .$/;"	m
srcdir	libsodium/src/libsodium/include/Makefile	/^srcdir = .$/;"	m
srcdir	libsodium/test/Makefile	/^srcdir = .$/;"	m
srcdir	libsodium/test/default/Makefile	/^srcdir = .$/;"	m
srcdir	secp256k1/Makefile	/^srcdir = .$/;"	m
ss	lightningd/handshake/handshake.c	/^	struct secret ss;$/;"	m	struct:handshake	typeref:struct:handshake::secret	file:
stack_key	bitcoin/script.c	/^static u8 *stack_key(const tal_t *ctx, const struct pubkey *key)$/;"	f	file:
stack_node	ccan/ccan/asort/asort.c	/^  } stack_node;$/;"	t	typeref:struct:__anon2	file:
stack_number	bitcoin/script.c	/^static u8 *stack_number(const tal_t *ctx, unsigned int num)$/;"	f	file:
stack_preimage	bitcoin/script.c	/^static u8 *stack_preimage(const tal_t *ctx, const struct preimage *preimage)$/;"	f	file:
stack_sig	bitcoin/script.c	/^static u8 *stack_sig(const tal_t *ctx, const secp256k1_ecdsa_signature *sig)$/;"	f	file:
staging_cstate	daemon/peer.h	/^	struct channel_state *staging_cstate;$/;"	m	struct:peer_visible_state	typeref:struct:peer_visible_state::channel_state
start	ccan/ccan/ptr_valid/ptr_valid.h	/^	const char *start, *end;$/;"	m	struct:ptr_valid_map
start	ccan/ccan/structeq/test/compile_fail-different.c	/^	int start, end;$/;"	m	struct:mydata1	file:
start	ccan/ccan/structeq/test/compile_fail-different.c	/^	int start, end;$/;"	m	struct:mydata2	file:
start	ccan/ccan/structeq/test/run.c	/^	int start, end;$/;"	m	struct:mydata	file:
start	daemon/jsmn/jsmn.h	/^	int start;$/;"	m	struct:__anon58
start	tests/utils.py	/^    def start(self):$/;"	m	class:BitcoinD
start	tests/utils.py	/^    def start(self):$/;"	m	class:LegacyLightningD
start	tests/utils.py	/^    def start(self):$/;"	m	class:LightningD
start	tests/utils.py	/^    def start(self):$/;"	m	class:TailableProc
start_bitcoin_cli	daemon/bitcoind.c	/^start_bitcoin_cli(struct lightningd_state *dstate,$/;"	f	file:
start_clients	test/test_protocol.c	/^static void start_clients(int a_to_b[2],$/;"	f	file:
start_closing_in_transaction	daemon/peer.c	/^static void start_closing_in_transaction(struct peer *peer)$/;"	f	file:
start_connecting	daemon/dns.c	/^static struct io_plan *start_connecting(struct io_conn *conn,$/;"	f	file:
start_lightningd	daemon/test/scripts/helpers.sh	/^start_lightningd()$/;"	f
start_one_lightningd	daemon/test/scripts/helpers.sh	/^start_one_lightningd()$/;"	f
start_poll_chaintip	daemon/chaintopology.c	/^static void start_poll_chaintip(struct lightningd_state *dstate)$/;"	f	file:
startup	daemon/chaintopology.c	/^	bool startup;$/;"	m	struct:topology	file:
state	ccan/ccan/io/test/run-02-read.c	/^	int state;$/;"	m	struct:data	file:
state	ccan/ccan/io/test/run-03-readpartial.c	/^	int state;$/;"	m	struct:data	file:
state	ccan/ccan/io/test/run-04-writepartial.c	/^	int state;$/;"	m	struct:data	file:
state	ccan/ccan/io/test/run-05-write.c	/^	int state;$/;"	m	struct:data	file:
state	ccan/ccan/io/test/run-06-idle.c	/^	int state;$/;"	m	struct:data	file:
state	ccan/ccan/io/test/run-07-break.c	/^	int state;$/;"	m	struct:data	file:
state	ccan/ccan/io/test/run-09-connect.c	/^	int state;$/;"	m	struct:data	file:
state	ccan/ccan/io/test/run-12-bidir.c	/^	int state;$/;"	m	struct:data	file:
state	ccan/ccan/io/test/run-14-duplex-both-read.c	/^	int state;$/;"	m	struct:data	file:
state	ccan/ccan/io/test/run-15-timeout.c	/^	int state;$/;"	m	struct:data	file:
state	ccan/ccan/io/test/run-16-duplex-test.c	/^	int state;$/;"	m	struct:data	file:
state	ccan/ccan/io/test/run-17-homemade-io.c	/^	int state;$/;"	m	struct:packet	file:
state	ccan/ccan/io/test/run-19-always.c	/^	int state;$/;"	m	struct:data	file:
state	daemon/feechange.h	/^	enum feechange_state state;$/;"	m	struct:feechange	typeref:enum:feechange::feechange_state
state	daemon/htlc.h	/^	enum htlc_state state;$/;"	m	struct:htlc	typeref:enum:htlc::htlc_state
state	daemon/peer.h	/^	enum state state;$/;"	m	struct:peer	typeref:enum:peer::state
state	daemon/state_types.h	/^enum state {$/;"	g
state	libsodium/src/libsodium/include/sodium/crypto_hash_sha256.h	/^    uint32_t      state[8];$/;"	m	struct:crypto_hash_sha256_state
state	libsodium/src/libsodium/include/sodium/crypto_hash_sha512.h	/^    uint64_t      state[8];$/;"	m	struct:crypto_hash_sha512_state
state	test/test_protocol.c	/^	enum htlc_state state;$/;"	m	struct:htlc	typeref:enum:htlc::htlc_state	file:
state	test/test_state_coverage.c	/^	enum state state;$/;"	m	struct:peer	typeref:enum:peer::state	file:
state	test/test_state_coverage.c	/^	uint8_t state;$/;"	m	struct:core_state	file:
state_can_add_htlc	daemon/state.h	/^static inline bool state_can_add_htlc(enum state s)$/;"	f
state_can_commit	daemon/state.h	/^static inline bool state_can_commit(enum state s)$/;"	f
state_can_io	daemon/state.h	/^static inline bool state_can_io(enum state s)$/;"	f
state_can_remove_htlc	daemon/state.h	/^static inline bool state_can_remove_htlc(enum state s)$/;"	f
state_dump	test/test_state_coverage.c	/^	struct state_dump {$/;"	s	struct:hist	file:
state_dump	test/test_state_coverage.c	/^	} **state_dump;$/;"	m	struct:hist	typeref:struct:hist::state_dump	file:
state_dump_cmp	test/test_state_coverage.c	/^static int state_dump_cmp(const struct state_dump *a,$/;"	f	file:
state_input	daemon/state_types.h	/^enum state_input {$/;"	g
state_is_error	daemon/state.h	/^static inline bool state_is_error(enum state s)$/;"	f
state_is_normal	daemon/state.h	/^static inline bool state_is_normal(enum state s)$/;"	f
state_is_onchain	daemon/state.h	/^static inline bool state_is_onchain(enum state s)$/;"	f
state_is_opening	daemon/state.h	/^static inline bool state_is_opening(enum state s)$/;"	f
state_is_openwait	daemon/state.h	/^static inline bool state_is_openwait(enum state s)$/;"	f
state_is_shutdown	daemon/state.h	/^static inline bool state_is_shutdown(enum state s)$/;"	f
state_is_waiting_for_anchor	daemon/state.h	/^static inline bool state_is_waiting_for_anchor(enum state s)$/;"	f
state_name	daemon/names.c	/^const char *state_name(enum state s)$/;"	f
state_table	test/test_protocol.c	/^struct state_table {$/;"	s	file:
status	ccan/ccan/io/backend.h	/^	enum io_plan_status status;$/;"	m	struct:io_plan	typeref:enum:io_plan::io_plan_status
status_conn	lightningd/subdaemon.h	/^	struct io_conn *status_conn;$/;"	m	struct:subdaemon	typeref:struct:subdaemon::io_conn
status_failed	lightningd/handshake/test/run-handshake.c	37;"	d	file:
status_failed	status.c	/^void status_failed(u16 code, const char *fmt, ...)$/;"	f
status_fd	status.c	/^static int status_fd = -1;$/;"	v	file:
status_fd_in	lightningd/subdaemon.h	/^	int status_fd_in;$/;"	m	struct:subdaemon
status_in	lightningd/subdaemon.h	/^	u8 *status_in;$/;"	m	struct:subdaemon
status_prefix	lightningd/handshake/test/run-handshake.c	/^static const char *status_prefix;$/;"	v	file:
status_process	lightningd/subdaemon.c	/^static struct io_plan *status_process(struct io_conn *conn, struct subdaemon *sd)$/;"	f	file:
status_process_fd	lightningd/subdaemon.c	/^static struct io_plan *status_process_fd(struct io_conn *conn,$/;"	f	file:
status_read	lightningd/subdaemon.c	/^static struct io_plan *status_read(struct io_conn *conn, struct subdaemon *sd)$/;"	f	file:
status_send	lightningd/handshake/test/run-handshake.c	28;"	d	file:
status_send	status.c	/^void status_send(const u8 *p)$/;"	f
status_send_fd	status.c	/^void status_send_fd(int fd)$/;"	f
status_send_with_hdr	status.c	/^static void status_send_with_hdr(u16 type, const void *p, size_t len)$/;"	f	file:
status_setup	status.c	/^void status_setup(int fd)$/;"	f
status_trace	lightningd/handshake/test/run-handshake.c	39;"	d	file:
status_trace	lightningd/test/run-cryptomsg.c	37;"	d	file:
status_trace	status.c	/^void status_trace(const char *fmt, ...)$/;"	f
statuscb	lightningd/subdaemon.h	/^	enum subdaemon_status (*statuscb)(struct subdaemon *, const u8 *, int);$/;"	m	struct:subdaemon	typeref:enum:subdaemon::statuscb
statusname	lightningd/subdaemon.h	/^	const char *(*statusname)(int status);$/;"	m	struct:subdaemon
steal_fd	ccan/ccan/io/test/run-21-io_close_taken_fd.c	/^static struct io_plan *steal_fd(struct io_conn *conn, int *fd)$/;"	f	file:
steal_from_prototal	protobuf_convert.c	/^void steal_from_prototal(const tal_t *ctx, struct ProtobufCAllocator *prototal,$/;"	f
stealing	ccan/ccan/tal/test/run-allocfail.c	/^static bool stealing;$/;"	v	file:
steps	lightning.pb-c.h	/^  RouteStep **steps;$/;"	m	struct:_Route
stir	libsodium/src/libsodium/include/sodium/randombytes.h	/^    void        (*stir)(void);                \/* optional *\/$/;"	m	struct:randombytes_implementation
stop	contrib/pylightning/lightning/lightning.py	/^    def stop(self):$/;"	m	class:LightningRpc
stop	daemon/jsonrpc.h	/^	bool stop;$/;"	m	struct:json_connection
stop	tests/utils.py	/^    def stop(self):$/;"	m	class:LightningD
stop	tests/utils.py	/^    def stop(self):$/;"	m	class:TailableProc
stop_clients	test/test_protocol.c	/^static void stop_clients(int acmd[2],$/;"	f	file:
stop_command	daemon/jsonrpc.c	/^static const struct json_command stop_command = {$/;"	v	typeref:struct:json_command	file:
stop_process_bcli	daemon/bitcoind.c	/^static void stop_process_bcli(struct bitcoin_cli **stopper)$/;"	f	file:
stopper	daemon/bitcoind.c	/^	struct bitcoin_cli **stopper;$/;"	m	struct:bitcoin_cli	typeref:struct:bitcoin_cli::bitcoin_cli	file:
store32_be	libsodium/src/libsodium/include/sodium/private/common.h	/^store32_be(uint8_t dst[4], uint32_t w)$/;"	f
store32_le	libsodium/src/libsodium/include/sodium/private/common.h	/^store32_le(uint8_t dst[4], uint32_t w)$/;"	f
store64_be	libsodium/src/libsodium/include/sodium/private/common.h	/^store64_be(uint8_t dst[8], uint64_t w)$/;"	f
store64_le	libsodium/src/libsodium/include/sodium/private/common.h	/^store64_le(uint8_t dst[8], uint64_t w)$/;"	f
store_block	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^static void store_block(void *output, const block *src) {$/;"	f	file:
store_limb	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^store_limb(u8 *out, limb in) {$/;"	f	file:
str	ccan/ccan/order/test/fancy_cmp.h	/^	const char *str;$/;"	m	struct:item
str_check_arg_	ccan/ccan/str/str.h	188;"	d
str_check_arg_	ccan/ccan/str/str.h	193;"	d
str_isalnum	ccan/ccan/str/debug.c	/^int str_isalnum(int i)$/;"	f
str_isalpha	ccan/ccan/str/debug.c	/^int str_isalpha(int i)$/;"	f
str_isascii	ccan/ccan/str/debug.c	/^int str_isascii(int i)$/;"	f
str_isblank	ccan/ccan/str/debug.c	/^int str_isblank(int i)$/;"	f
str_iscntrl	ccan/ccan/str/debug.c	/^int str_iscntrl(int i)$/;"	f
str_isdigit	ccan/ccan/str/debug.c	/^int str_isdigit(int i)$/;"	f
str_isgraph	ccan/ccan/str/debug.c	/^int str_isgraph(int i)$/;"	f
str_islower	ccan/ccan/str/debug.c	/^int str_islower(int i)$/;"	f
str_isprint	ccan/ccan/str/debug.c	/^int str_isprint(int i)$/;"	f
str_ispunct	ccan/ccan/str/debug.c	/^int str_ispunct(int i)$/;"	f
str_isspace	ccan/ccan/str/debug.c	/^int str_isspace(int i)$/;"	f
str_isupper	ccan/ccan/str/debug.c	/^int str_isupper(int i)$/;"	f
str_isxdigit	ccan/ccan/str/debug.c	/^int str_isxdigit(int i)$/;"	f
str_strchr	ccan/ccan/str/debug.c	/^char *str_strchr(const char *haystack, int c)$/;"	f
str_strrchr	ccan/ccan/str/debug.c	/^char *str_strrchr(const char *haystack, int c)$/;"	f
str_strstr	ccan/ccan/str/debug.c	/^char *str_strstr(const char *haystack, const char *needle)$/;"	f
str_to_side	daemon/htlc.h	/^static inline enum side str_to_side(const char *str)$/;"	f
strchr	ccan/ccan/str/debug.c	91;"	d	file:
strchr	ccan/ccan/str/str.h	215;"	d
strchr	ccan/ccan/str/str.h	221;"	d
strcmp	libsodium/test/quirks/quirks.h	/^strcmp(const char *s1, const char *s2) {$/;"	f
strcmp	libsodium/test/quirks/quirks.h	8;"	d
strcount	ccan/ccan/str/str.c	/^size_t strcount(const char *haystack, const char *needle)$/;"	f
strdup_rev	ccan/ccan/str/test/run.c	/^static char *strdup_rev(const char *s)$/;"	f	file:
stream	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.h	/^    int (*stream)(unsigned char *c, unsigned long long clen,$/;"	m	struct:crypto_stream_chacha20_implementation
stream	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^static Salsa20Random stream = {$/;"	v	file:
stream	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^static SysRandom stream = {$/;"	v	file:
stream2_DEPENDENCIES	libsodium/test/default/Makefile	/^stream2_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
stream2_LDADD	libsodium/test/default/Makefile	/^stream2_LDADD = $(TESTS_LDADD)$/;"	m
stream2_OBJECTS	libsodium/test/default/Makefile	/^stream2_OBJECTS = stream2.$(OBJEXT)$/;"	m
stream2_SOURCE	libsodium/test/default/Makefile	/^stream2_SOURCE = cmptest.h stream2.c$/;"	m
stream2_SOURCES	libsodium/test/default/Makefile	/^stream2_SOURCES = stream2.c$/;"	m
stream3_DEPENDENCIES	libsodium/test/default/Makefile	/^stream3_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
stream3_LDADD	libsodium/test/default/Makefile	/^stream3_LDADD = $(TESTS_LDADD)$/;"	m
stream3_OBJECTS	libsodium/test/default/Makefile	/^stream3_OBJECTS = stream3.$(OBJEXT)$/;"	m
stream3_SOURCE	libsodium/test/default/Makefile	/^stream3_SOURCE = cmptest.h stream3.c$/;"	m
stream3_SOURCES	libsodium/test/default/Makefile	/^stream3_SOURCES = stream3.c$/;"	m
stream4_DEPENDENCIES	libsodium/test/default/Makefile	/^stream4_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
stream4_LDADD	libsodium/test/default/Makefile	/^stream4_LDADD = $(TESTS_LDADD)$/;"	m
stream4_OBJECTS	libsodium/test/default/Makefile	/^stream4_OBJECTS = stream4.$(OBJEXT)$/;"	m
stream4_SOURCE	libsodium/test/default/Makefile	/^stream4_SOURCE = cmptest.h stream4.c$/;"	m
stream4_SOURCES	libsodium/test/default/Makefile	/^stream4_SOURCES = stream4.c$/;"	m
stream_DEPENDENCIES	libsodium/test/default/Makefile	/^stream_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
stream_LDADD	libsodium/test/default/Makefile	/^stream_LDADD = $(TESTS_LDADD)$/;"	m
stream_OBJECTS	libsodium/test/default/Makefile	/^stream_OBJECTS = stream.$(OBJEXT)$/;"	m
stream_SOURCE	libsodium/test/default/Makefile	/^stream_SOURCE = cmptest.h stream.c$/;"	m
stream_SOURCES	libsodium/test/default/Makefile	/^stream_SOURCES = stream.c$/;"	m
stream_chacha20_H	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.h	3;"	d
stream_ietf	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.h	/^    int (*stream_ietf)(unsigned char *c, unsigned long long clen,$/;"	m	struct:crypto_stream_chacha20_implementation
stream_ietf_ref	libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c	/^stream_ietf_ref(unsigned char *c, unsigned long long clen,$/;"	f	file:
stream_ietf_ref_xor_ic	libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c	/^stream_ietf_ref_xor_ic(unsigned char *c, const unsigned char *m,$/;"	f	file:
stream_ietf_vec	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	/^stream_ietf_vec(unsigned char *c, unsigned long long clen,$/;"	f	file:
stream_ietf_vec_xor_ic	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	/^stream_ietf_vec_xor_ic(unsigned char *c, const unsigned char *m,$/;"	f	file:
stream_ietf_xor_ic	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.h	/^    int (*stream_ietf_xor_ic)(unsigned char *c, const unsigned char *m,$/;"	m	struct:crypto_stream_chacha20_implementation
stream_ref	libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c	/^stream_ref(unsigned char *c, unsigned long long clen,$/;"	f	file:
stream_ref_xor_ic	libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c	/^stream_ref_xor_ic(unsigned char *c, const unsigned char *m,$/;"	f	file:
stream_vec	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	/^stream_vec(unsigned char *c, unsigned long long clen,$/;"	f	file:
stream_vec_xor_ic	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	/^stream_vec_xor_ic(unsigned char *c, const unsigned char *m,$/;"	f	file:
stream_xor_ic	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.h	/^    int (*stream_xor_ic)(unsigned char *c, const unsigned char *m,$/;"	m	struct:crypto_stream_chacha20_implementation
strends	ccan/ccan/str/str.h	/^static inline bool strends(const char *str, const char *postfix)$/;"	f
streq	ccan/ccan/str/str.h	21;"	d
string	ccan/ccan/array_size/test/run.c	/^	char string[100];$/;"	m	struct:foo	file:
string_of_toks	ccan/ccan/cdump/cdump.c	/^static char *string_of_toks(const tal_t *ctx,$/;"	f	file:
stringify	ccan/ccan/str/str.h	59;"	d
stringify_1	ccan/ccan/str/str.h	61;"	d
strjoin	ccan/ccan/tal/str/str.h	/^enum strjoin {$/;"	g
strkey	ccan/ccan/htable/tools/stringspeed.c	/^static const char *strkey(const char *str)$/;"	f	file:
strmap	ccan/ccan/strmap/strmap.h	/^struct strmap {$/;"	s
strmap_add	ccan/ccan/strmap/strmap.h	106;"	d
strmap_add_	ccan/ccan/strmap/strmap.c	/^bool strmap_add_(struct strmap *map, const char *member, const void *value)$/;"	f
strmap_clear	ccan/ccan/strmap/strmap.h	143;"	d
strmap_clear_	ccan/ccan/strmap/strmap.c	/^void strmap_clear_(struct strmap *map)$/;"	f
strmap_del	ccan/ccan/strmap/strmap.h	129;"	d
strmap_del_	ccan/ccan/strmap/strmap.c	/^char *strmap_del_(struct strmap *map, const char *member, void **valuep)$/;"	f
strmap_empty	ccan/ccan/strmap/strmap.h	65;"	d
strmap_empty_	ccan/ccan/strmap/strmap.h	/^static inline bool strmap_empty_(const struct strmap *map)$/;"	f
strmap_get	ccan/ccan/strmap/strmap.h	84;"	d
strmap_get_	ccan/ccan/strmap/strmap.c	/^void *strmap_get_(const struct strmap *map, const char *member)$/;"	f
strmap_init	ccan/ccan/strmap/strmap.h	50;"	d
strmap_init_	ccan/ccan/strmap/strmap.h	/^static inline void strmap_init_(struct strmap *map)$/;"	f
strmap_iterate	ccan/ccan/strmap/strmap.h	178;"	d
strmap_iterate_	ccan/ccan/strmap/strmap.c	/^void strmap_iterate_(const struct strmap *map,$/;"	f
strmap_prefix	ccan/ccan/strmap/strmap.h	211;"	d
strmap_prefix	ccan/ccan/strmap/strmap.h	214;"	d
strmap_prefix_	ccan/ccan/strmap/strmap.c	/^const struct strmap *strmap_prefix_(const struct strmap *map,$/;"	f
strrchr	ccan/ccan/str/debug.c	92;"	d	file:
strrchr	ccan/ccan/str/str.h	216;"	d
strrchr	ccan/ccan/str/str.h	223;"	d
strsplit	ccan/ccan/tal/str/str.h	/^enum strsplit {$/;"	g
strstarts	ccan/ccan/str/str.h	32;"	d
strstr	ccan/ccan/str/debug.c	90;"	d	file:
strstr	ccan/ccan/str/str.h	214;"	d
strstr	ccan/ccan/str/str.h	219;"	d
structeq	ccan/ccan/structeq/structeq.h	15;"	d
structs	ccan/ccan/cdump/cdump.h	/^	cdump_map_t structs;$/;"	m	struct:cdump_definitions
style	ccan/tools/configurator/configurator.c	/^	enum test_style style;$/;"	m	struct:test	typeref:enum:test::test_style	file:
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^sub %r11,%rsp$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^sub  $1,%rsi$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^sub %r11,%rsp$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^sub  $1,%r11$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^sub  %r10,%rdx$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^sub  %rax,%r8$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^sub  %rax,%r9$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^sub  %rax,%rcx$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^sub  %rax,%rsi$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^sub %r11,%rsp$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^sub  $1,%rax$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^sub  $1,%rdx$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^sub  $4,%rsi$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^sub %r11,%rsp$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^sub  $1,%rax$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^sub  $1,%rdx$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^sub  $4,%rsi$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^sub %r11,%rsp$/;"	l
sub	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^sub  $2,%rdx$/;"	l
sub	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^sub  $256,%r9$/;"	l
sub	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^sub  $4,%rcx$/;"	l
sub	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^sub  $64,%r9$/;"	l
sub	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^sub  %r9,%rdi$/;"	l
sub	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^sub %r11,%rsp$/;"	l
subc0	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S	/^subc0: .quad 0x07FFFFDA, 0x03FFFFFE$/;"	l
subc0	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	15;"	d
subc2	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S	/^subc2: .quad 0x07FFFFFE, 0x03FFFFFE$/;"	l
subc2	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	16;"	d
subdaemon	lightningd/subdaemon.c	/^static int subdaemon(const char *dir, const char *name,$/;"	f	file:
subdaemon	lightningd/subdaemon.h	/^struct subdaemon {$/;"	s
subdaemon_req	lightningd/subdaemon.c	/^struct subdaemon_req {$/;"	s	file:
subdaemon_req	lightningd/subdaemon.h	81;"	d
subdaemon_req_	lightningd/subdaemon.c	/^void subdaemon_req_(struct subdaemon *sd,$/;"	f
subdaemon_status	lightningd/subdaemon.h	/^enum subdaemon_status {$/;"	g
subdir	libsodium/Makefile	/^subdir = .$/;"	m
subdir	libsodium/dist-build/Makefile	/^subdir = dist-build$/;"	m
subdir	libsodium/msvc-scripts/Makefile	/^subdir = msvc-scripts$/;"	m
subdir	libsodium/src/Makefile	/^subdir = src$/;"	m
subdir	libsodium/src/libsodium/Makefile	/^subdir = src\/libsodium$/;"	m
subdir	libsodium/src/libsodium/include/Makefile	/^subdir = src\/libsodium\/include$/;"	m
subdir	libsodium/test/Makefile	/^subdir = test$/;"	m
subdir	libsodium/test/default/Makefile	/^subdir = test\/default$/;"	m
subdir	secp256k1/Makefile	/^subdir = .$/;"	m
substrings	ccan/ccan/str/test/run.c	/^static const char *substrings[] = { "far", "bar", "baz", "b", "ba", "z", "ar",$/;"	v	file:
substrings	ccan/ccan/tal/str/test/run.c	/^static const char *substrings[]$/;"	v	file:
subtable_of	ccan/ccan/opt/private.h	10;"	d
subtables	ccan/ccan/opt/test/utils.c	/^struct opt_table subtables[] = {$/;"	v	typeref:struct:opt_table
subtract_fee	lightningd/commit_tx.c	/^static void subtract_fee(enum side funder,$/;"	f	file:
sumadd	secp256k1/src/scalar_4x64_impl.h	238;"	d
sumadd	secp256k1/src/scalar_4x64_impl.h	883;"	d
sumadd	secp256k1/src/scalar_8x32_impl.h	317;"	d
sumadd	secp256k1/src/scalar_8x32_impl.h	639;"	d
sumadd_fast	secp256k1/src/scalar_4x64_impl.h	247;"	d
sumadd_fast	secp256k1/src/scalar_4x64_impl.h	884;"	d
sumadd_fast	secp256k1/src/scalar_8x32_impl.h	326;"	d
sumadd_fast	secp256k1/src/scalar_8x32_impl.h	640;"	d
swap_conditional	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^swap_conditional(limb a[5], limb b[5], limb iswap) {$/;"	f	file:
swap_inputs	permute_tx.c	/^static void swap_inputs(struct bitcoin_tx_input *inputs,$/;"	f	file:
swap_outputs	permute_tx.c	/^static void swap_outputs(struct bitcoin_tx_output *outputs,$/;"	f	file:
swap_status	daemon/test/scripts/helpers.sh	/^swap_status()$/;"	f
swapmove	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common.h	450;"	d
sync_routing_table	daemon/peer.c	/^static void sync_routing_table(struct lightningd_state *dstate, struct peer *peer)$/;"	f	file:
sysconfdir	libsodium/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	libsodium/dist-build/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	libsodium/msvc-scripts/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	libsodium/src/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	libsodium/src/libsodium/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	libsodium/src/libsodium/include/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	libsodium/test/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	libsodium/test/default/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	secp256k1/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
t	libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h	/^    uint64_t t[2];$/;"	m	struct:crypto_generichash_blake2b_state
t_cost	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint32_t t_cost;  \/* number of passes *\/$/;"	m	struct:Argon2_Context
table	ccan/ccan/htable/htable.h	/^	uintptr_t *table;$/;"	m	struct:htable
tag	daemon/broadcast.h	/^	void *tag;$/;"	m	struct:queued_message
tag	lightningd/handshake/handshake.c	/^	u8 tag[crypto_aead_chacha20poly1305_ietf_ABYTES];$/;"	m	struct:act_one	file:
tag	lightningd/handshake/handshake.c	/^	u8 tag[crypto_aead_chacha20poly1305_ietf_ABYTES];$/;"	m	struct:act_three	file:
tag	lightningd/handshake/handshake.c	/^	u8 tag[crypto_aead_chacha20poly1305_ietf_ABYTES];$/;"	m	struct:act_two	file:
tail	tests/utils.py	/^    def tail(self):$/;"	m	class:TailableProc
take	ccan/ccan/take/take.h	15;"	d
take_	ccan/ccan/take/take.c	/^void *take_(const void *p)$/;"	f
take_allocfail	ccan/ccan/take/take.c	/^void take_allocfail(void (*fn)(const void *p))$/;"	f
take_any	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb_cast-multi.c	/^static void take_any(struct any *any)$/;"	f	file:
take_any	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb_cast.c	/^static void take_any(struct any *any)$/;"	f	file:
take_cleanup	ccan/ccan/take/take.c	/^void take_cleanup(void)$/;"	f
take_typeof	ccan/ccan/take/take.h	110;"	d
take_typeof	ccan/ccan/take/take.h	112;"	d
taken	ccan/ccan/take/take.c	/^bool taken(const void *p)$/;"	f
taken_any	ccan/ccan/take/take.c	/^bool taken_any(void)$/;"	f
takenarr	ccan/ccan/take/take.c	/^static const void **takenarr;$/;"	v	file:
tal	ccan/ccan/tal/tal.h	34;"	d
tal_add_destructor	ccan/ccan/tal/tal.h	158;"	d
tal_add_destructor2	ccan/ccan/tal/tal.h	184;"	d
tal_add_destructor2_	ccan/ccan/tal/tal.c	/^bool tal_add_destructor2_(const tal_t *ctx, void (*destroy)(void *me, void *arg),$/;"	f
tal_add_destructor_	ccan/ccan/tal/tal.c	/^bool tal_add_destructor_(const tal_t *ctx, void (*destroy)(void *me))$/;"	f
tal_add_notifier	ccan/ccan/tal/tal.h	269;"	d
tal_add_notifier_	ccan/ccan/tal/tal.c	/^bool tal_add_notifier_(const tal_t *ctx, enum tal_notify_type types,$/;"	f
tal_alloc_	ccan/ccan/tal/tal.c	/^void *tal_alloc_(const tal_t *ctx, size_t size,$/;"	f
tal_alloc_arr_	ccan/ccan/tal/tal.c	/^void *tal_alloc_arr_(const tal_t *ctx, size_t size, size_t count, bool clear,$/;"	f
tal_append_fmt	ccan/ccan/tal/str/str.c	/^bool tal_append_fmt(char **baseptr, const char *fmt, ...)$/;"	f
tal_append_vfmt	ccan/ccan/tal/str/str.c	/^bool tal_append_vfmt(char **baseptr, const char *fmt, va_list ap)$/;"	f
tal_arr	ccan/ccan/tal/tal.h	81;"	d
tal_arrz	ccan/ccan/tal/tal.h	98;"	d
tal_check	ccan/ccan/tal/tal.c	/^bool tal_check(const tal_t *ctx, const char *errorstr)$/;"	f
tal_cleanup	ccan/ccan/tal/tal.c	/^void tal_cleanup(void)$/;"	f
tal_count	ccan/ccan/tal/tal.h	312;"	d
tal_del_destructor	ccan/ccan/tal/tal.h	169;"	d
tal_del_destructor	ccan/ccan/tal/tal.h	200;"	d
tal_del_destructor2	ccan/ccan/tal/tal.h	212;"	d
tal_del_destructor2_	ccan/ccan/tal/tal.c	/^bool tal_del_destructor2_(const tal_t *ctx, void (*destroy)(void *me, void *arg),$/;"	f
tal_del_destructor_	ccan/ccan/tal/tal.c	/^bool tal_del_destructor_(const tal_t *ctx, void (*destroy)(void *me))$/;"	f
tal_del_notifier	ccan/ccan/tal/tal.h	280;"	d
tal_del_notifier_	ccan/ccan/tal/tal.c	/^bool tal_del_notifier_(const tal_t *ctx,$/;"	f
tal_dump	ccan/ccan/tal/tal.c	/^void tal_dump(void)$/;"	f
tal_dump_	ccan/ccan/tal/tal.c	/^static void tal_dump_(unsigned int level, const struct tal_hdr *t)$/;"	f	file:
tal_dup	ccan/ccan/tal/tal.h	354;"	d
tal_dup_	ccan/ccan/tal/tal.c	/^void *tal_dup_(const tal_t *ctx, const void *p, size_t size,$/;"	f
tal_dup_arr	ccan/ccan/tal/tal.h	367;"	d
tal_expand	ccan/ccan/tal/tal.h	409;"	d
tal_expand_	ccan/ccan/tal/tal.c	/^bool tal_expand_(tal_t **ctxp, const void *src, size_t size, size_t count)$/;"	f
tal_first	ccan/ccan/tal/tal.c	/^tal_t *tal_first(const tal_t *root)$/;"	f
tal_fmt	ccan/ccan/tal/str/str.c	/^char *tal_fmt(const tal_t *ctx, const char *fmt, ...)$/;"	f
tal_free	ccan/ccan/tal/tal.c	/^void *tal_free(const tal_t *ctx)$/;"	f
tal_freefn	daemon/lightning-cli.c	/^static void tal_freefn(void *ptr)$/;"	f	file:
tal_freefn	daemon/options.c	/^static void tal_freefn(void *ptr)$/;"	f	file:
tal_hdr	ccan/ccan/tal/tal.c	/^struct tal_hdr {$/;"	s	file:
tal_hex	utils.c	/^char *tal_hex(const tal_t *ctx, const tal_t *data)$/;"	f
tal_hexdata	utils.c	/^u8 *tal_hexdata(const tal_t *ctx, const void *str, size_t len)$/;"	f
tal_hexeq	bitcoin/test/run-tx-encode.c	/^static void tal_hexeq(const u8 *p, const char *hex)$/;"	f	file:
tal_hexstr	utils.c	/^char *tal_hexstr(const tal_t *ctx, const void *data, size_t len)$/;"	f
tal_len	ccan/ccan/tal/tal.c	/^size_t tal_len(const tal_t *ptr)$/;"	f
tal_name	ccan/ccan/tal/tal.c	/^const char *tal_name(const tal_t *t)$/;"	f
tal_next	ccan/ccan/tal/tal.c	/^tal_t *tal_next(const tal_t *prev)$/;"	f
tal_notify_type	ccan/ccan/tal/tal.h	/^enum tal_notify_type {$/;"	g
tal_parent	ccan/ccan/tal/tal.c	/^tal_t *tal_parent(const tal_t *ctx)$/;"	f
tal_reallocfn	daemon/lightning-cli.c	/^static void *tal_reallocfn(void *ptr, size_t size)$/;"	f	file:
tal_reallocfn	daemon/options.c	/^static void *tal_reallocfn(void *ptr, size_t size)$/;"	f	file:
tal_resize	ccan/ccan/tal/tal.h	113;"	d
tal_resize_	ccan/ccan/tal/tal.c	/^bool tal_resize_(tal_t **ctxp, size_t size, size_t count, bool clear)$/;"	f
tal_resizez	ccan/ccan/tal/tal.h	128;"	d
tal_set_backend	ccan/ccan/tal/tal.c	/^void tal_set_backend(void *(*alloc_fn)(size_t size),$/;"	f
tal_set_name	ccan/ccan/tal/tal.h	294;"	d
tal_set_name_	ccan/ccan/tal/tal.c	/^bool tal_set_name_(tal_t *ctx, const char *name, bool literal)$/;"	f
tal_sql_blob	daemon/db.c	/^static u8 *tal_sql_blob(const tal_t *ctx, sqlite3_stmt *stmt, int idx)$/;"	f	file:
tal_steal	ccan/ccan/tal/tal.h	141;"	d
tal_steal	ccan/ccan/tal/tal.h	144;"	d
tal_steal_	ccan/ccan/tal/tal.c	/^void *tal_steal_(const tal_t *new_parent, const tal_t *ctx)$/;"	f
tal_strcat	ccan/ccan/tal/str/str.c	/^char *tal_strcat(const tal_t *ctx, const char *s1, const char *s2)$/;"	f
tal_strdup	ccan/ccan/tal/str/str.c	/^char *tal_strdup(const tal_t *ctx, const char *p)$/;"	f
tal_strjoin	ccan/ccan/tal/str/str.c	/^char *tal_strjoin(const tal_t *ctx,$/;"	f
tal_strndup	ccan/ccan/tal/str/str.c	/^char *tal_strndup(const tal_t *ctx, const char *p, size_t n)$/;"	f
tal_strreg	ccan/ccan/tal/str/str.c	/^bool tal_strreg(const tal_t *ctx, const char *string, const char *regex, ...)$/;"	f
tal_strsplit	ccan/ccan/tal/str/str.c	/^char **tal_strsplit(const tal_t *ctx,$/;"	f
tal_t	ccan/ccan/tal/tal.h	/^typedef void tal_t;$/;"	t
tal_tmpctx	utils.h	19;"	d
tal_typechk_	ccan/ccan/tal/tal.h	476;"	d
tal_typechk_	ccan/ccan/tal/tal.h	478;"	d
tal_typechk_	ccan/ccan/tal/tal.h	482;"	d
tal_typeof	ccan/ccan/tal/tal.h	472;"	d
tal_typeof	ccan/ccan/tal/tal.h	481;"	d
tal_vfmt	ccan/ccan/tal/str/str.c	/^char *tal_vfmt(const tal_t *ctx, const char *fmt, va_list ap)$/;"	f
talz	ccan/ccan/tal/tal.h	48;"	d
tardir	libsodium/Makefile	/^	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2$/;"	m
tardir	libsodium/Makefile	/^	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz$/;"	m
tardir	libsodium/Makefile	/^	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz$/;"	m
tardir	libsodium/Makefile	/^	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z$/;"	m
tardir	libsodium/Makefile	/^	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz$/;"	m
tardir	secp256k1/Makefile	/^	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2$/;"	m
tardir	secp256k1/Makefile	/^	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz$/;"	m
tardir	secp256k1/Makefile	/^	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz$/;"	m
tardir	secp256k1/Makefile	/^	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z$/;"	m
tardir	secp256k1/Makefile	/^	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz$/;"	m
target	bitcoin/block.h	/^	le32 target;$/;"	m	struct:bitcoin_block_hdr
target_alias	libsodium/Makefile	/^target_alias = $/;"	m
target_alias	libsodium/dist-build/Makefile	/^target_alias = $/;"	m
target_alias	libsodium/msvc-scripts/Makefile	/^target_alias = $/;"	m
target_alias	libsodium/src/Makefile	/^target_alias = $/;"	m
target_alias	libsodium/src/libsodium/Makefile	/^target_alias = $/;"	m
target_alias	libsodium/src/libsodium/include/Makefile	/^target_alias = $/;"	m
target_alias	libsodium/test/Makefile	/^target_alias = $/;"	m
target_alias	libsodium/test/default/Makefile	/^target_alias = $/;"	m
target_alias	secp256k1/Makefile	/^target_alias = $/;"	m
tcon_cast	ccan/ccan/tcon/tcon.h	214;"	d
tcon_cast_ptr	ccan/ccan/tcon/tcon.h	215;"	d
tcon_check	ccan/ccan/tcon/tcon.h	134;"	d
tcon_check_ptr	ccan/ccan/tcon/tcon.h	149;"	d
tcon_container_cast	ccan/ccan/tcon/tcon.h	266;"	d
tcon_container_cast_ptr	ccan/ccan/tcon/tcon.h	268;"	d
tcon_container_check	ccan/ccan/tcon/tcon.h	256;"	d
tcon_container_check_ptr	ccan/ccan/tcon/tcon.h	258;"	d
tcon_container_of	ccan/ccan/tcon/tcon.h	329;"	d
tcon_container_of_	ccan/ccan/tcon/tcon.h	/^static inline void *tcon_container_of_(const void *member_ptr, size_t offset)$/;"	f
tcon_container_ptr_type	ccan/ccan/tcon/tcon.h	262;"	d
tcon_container_sizeof	ccan/ccan/tcon/tcon.h	264;"	d
tcon_container_type	ccan/ccan/tcon/tcon.h	260;"	d
tcon_member_cast	ccan/ccan/tcon/tcon.h	297;"	d
tcon_member_cast_ptr	ccan/ccan/tcon/tcon.h	299;"	d
tcon_member_check	ccan/ccan/tcon/tcon.h	287;"	d
tcon_member_check_ptr	ccan/ccan/tcon/tcon.h	289;"	d
tcon_member_of	ccan/ccan/tcon/tcon.h	358;"	d
tcon_member_of_	ccan/ccan/tcon/tcon.h	/^static inline void *tcon_member_of_(void *container_ptr, size_t offset)$/;"	f
tcon_member_ptr_type	ccan/ccan/tcon/tcon.h	293;"	d
tcon_member_sizeof	ccan/ccan/tcon/tcon.h	295;"	d
tcon_member_type	ccan/ccan/tcon/tcon.h	291;"	d
tcon_offset	ccan/ccan/tcon/tcon.h	308;"	d
tcon_ptr_type	ccan/ccan/tcon/tcon.h	199;"	d
tcon_ptr_type	ccan/ccan/tcon/tcon.h	201;"	d
tcon_sizeof	ccan/ccan/tcon/tcon.h	169;"	d
tcon_type	ccan/ccan/tcon/tcon.h	159;"	d
tcon_type	ccan/ccan/tcon/tcon.h	161;"	d
tcon_unwrap	ccan/ccan/tcon/tcon.h	116;"	d
tcon_value	ccan/ccan/tcon/tcon.h	191;"	d
tearDown	tests/test_lightningd.py	/^    def tearDown(self):$/;"	m	class:BaseLightningDTests
tearDownBitcoind	tests/test_lightningd.py	/^def tearDownBitcoind():$/;"	f
tearDownModule	tests/test_lightningd.py	/^def tearDownModule():$/;"	f
tell_waiter	daemon/invoice.c	/^static void tell_waiter(struct command *cmd, const struct invoice *paid)$/;"	f	file:
temp_k	lightningd/handshake/handshake.c	/^	struct secret temp_k;$/;"	m	struct:handshake	typeref:struct:handshake::secret	file:
temporary_channel_id	wire/test/run-peer-wire.c	/^	struct channel_id temporary_channel_id;$/;"	m	struct:msg_accept_channel	typeref:struct:msg_accept_channel::channel_id	file:
temporary_channel_id	wire/test/run-peer-wire.c	/^	struct channel_id temporary_channel_id;$/;"	m	struct:msg_funding_created	typeref:struct:msg_funding_created::channel_id	file:
temporary_channel_id	wire/test/run-peer-wire.c	/^	struct channel_id temporary_channel_id;$/;"	m	struct:msg_funding_locked	typeref:struct:msg_funding_locked::channel_id	file:
temporary_channel_id	wire/test/run-peer-wire.c	/^	struct channel_id temporary_channel_id;$/;"	m	struct:msg_funding_signed	typeref:struct:msg_funding_signed::channel_id	file:
temporary_channel_id	wire/test/run-peer-wire.c	/^	struct channel_id temporary_channel_id;$/;"	m	struct:msg_open_channel	typeref:struct:msg_open_channel::channel_id	file:
test	ccan/ccan/crypto/hkdf_sha256/test/api-rfc5869.c	/^struct test {$/;"	s	file:
test	ccan/ccan/crypto/hmac_sha256/test/api-rfc4231.c	/^struct test {$/;"	s	file:
test	ccan/ccan/crypto/ripemd160/test/run-test-vectors.c	/^	const char *test;$/;"	m	struct:test	file:
test	ccan/ccan/crypto/ripemd160/test/run-test-vectors.c	/^struct test {$/;"	s	file:
test	ccan/ccan/crypto/sha256/test/run-test-vectors.c	/^	const char *test;$/;"	m	struct:test	file:
test	ccan/ccan/crypto/sha256/test/run-test-vectors.c	/^struct test {$/;"	s	file:
test	ccan/tools/configurator/configurator.c	/^struct test {$/;"	s	file:
test	daemon/jsmn/jsmn_test.c	/^static void test(int (*func)(void), const char *name) {$/;"	f	file:
testCreateECDHSecret	secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testCreateECDHSecret() throws AssertFailException{$/;"	m	class:NativeSecp256k1Test
testPrivKeyTweakAdd_1	secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testPrivKeyTweakAdd_1() throws AssertFailException {$/;"	m	class:NativeSecp256k1Test
testPrivKeyTweakAdd_2	secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testPrivKeyTweakAdd_2() throws AssertFailException {$/;"	m	class:NativeSecp256k1Test
testPrivKeyTweakMul_1	secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testPrivKeyTweakMul_1() throws AssertFailException {$/;"	m	class:NativeSecp256k1Test
testPrivKeyTweakMul_2	secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testPrivKeyTweakMul_2() throws AssertFailException {$/;"	m	class:NativeSecp256k1Test
testPubKeyCreateNeg	secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testPubKeyCreateNeg() throws AssertFailException{$/;"	m	class:NativeSecp256k1Test
testPubKeyCreatePos	secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testPubKeyCreatePos() throws AssertFailException{$/;"	m	class:NativeSecp256k1Test
testRandomize	secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testRandomize() throws AssertFailException {$/;"	m	class:NativeSecp256k1Test
testSchnorrSign	secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testSchnorrSign() throws AssertFailException{$/;"	m	class:NativeSecp256k1Test
testSecKeyVerifyNeg	secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testSecKeyVerifyNeg() throws AssertFailException{$/;"	m	class:NativeSecp256k1Test
testSecKeyVerifyPos	secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testSecKeyVerifyPos() throws AssertFailException{$/;"	m	class:NativeSecp256k1Test
testSignNeg	secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testSignNeg() throws AssertFailException{$/;"	m	class:NativeSecp256k1Test
testSignPos	secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testSignPos() throws AssertFailException{$/;"	m	class:NativeSecp256k1Test
testVerifyNeg	secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testVerifyNeg() throws AssertFailException{$/;"	m	class:NativeSecp256k1Test
testVerifyPos	secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testVerifyPos() throws AssertFailException{$/;"	m	class:NativeSecp256k1Test
test_add_neg_y_diff_x	secp256k1/src/tests.c	/^void test_add_neg_y_diff_x(void) {$/;"	f
test_arg	ccan/ccan/opt/test/utils.c	/^char *test_arg(const char *optarg, const char *arg)$/;"	f
test_array_nomem	daemon/jsmn/jsmn_test.c	/^int test_array_nomem() {$/;"	f
test_bad_scalar	secp256k1/src/modules/ecdh/tests_impl.h	/^void test_bad_scalar(void) {$/;"	f
test_cb_called	ccan/ccan/opt/test/utils.c	/^unsigned int test_cb_called;$/;"	v
test_cmp	ccan/ccan/asort/test/run.c	/^static int test_cmp(const int *key, const int *elt, int *flag)$/;"	f	file:
test_connect	tests/test_lightningd.py	/^    def test_connect(self):$/;"	m	class:LegacyLightningDTests
test_connect	tests/test_lightningd.py	/^    def test_connect(self):$/;"	m	class:LightningDTests
test_constant_wnaf	secp256k1/src/tests.c	/^void test_constant_wnaf(const secp256k1_scalar *number, int w) {$/;"	f
test_constant_wnaf_negate	secp256k1/src/tests.c	/^void test_constant_wnaf_negate(const secp256k1_scalar *number) {$/;"	f
test_corruption	wire/test/run-peer-wire.c	822;"	d	file:
test_count	daemon/jsmn/jsmn_test.c	/^int test_count() {$/;"	f
test_daemons	lightningd/lightningd.c	/^static void test_daemons(const struct lightningd *ld)$/;"	f	file:
test_data	libsodium/test/default/sign.c	/^static TestData test_data[] = {$/;"	v	file:
test_ec_combine	secp256k1/src/tests.c	/^void test_ec_combine(void) {$/;"	f
test_ecdh_generator_basepoint	secp256k1/src/modules/ecdh/tests_impl.h	/^void test_ecdh_generator_basepoint(void) {$/;"	f
test_ecdsa_der_parse	secp256k1/src/tests.c	/^int test_ecdsa_der_parse(const unsigned char *sig, size_t siglen, int certainly_der, int certainly_not_der) {$/;"	f
test_ecdsa_edge_cases	secp256k1/src/tests.c	/^void test_ecdsa_edge_cases(void) {$/;"	f
test_ecdsa_end_to_end	secp256k1/src/tests.c	/^void test_ecdsa_end_to_end(void) {$/;"	f
test_ecdsa_openssl	secp256k1/src/tests.c	/^void test_ecdsa_openssl(void) {$/;"	f
test_ecdsa_recovery_edge_cases	secp256k1/src/modules/recovery/tests_impl.h	/^void test_ecdsa_recovery_edge_cases(void) {$/;"	f
test_ecdsa_recovery_end_to_end	secp256k1/src/modules/recovery/tests_impl.h	/^void test_ecdsa_recovery_end_to_end(void) {$/;"	f
test_ecdsa_sign_verify	secp256k1/src/tests.c	/^void test_ecdsa_sign_verify(void) {$/;"	f
test_ecmult_constants	secp256k1/src/tests.c	/^void test_ecmult_constants(void) {$/;"	f
test_ecmult_gen_blind	secp256k1/src/tests.c	/^void test_ecmult_gen_blind(void) {$/;"	f
test_ecmult_gen_blind_reset	secp256k1/src/tests.c	/^void test_ecmult_gen_blind_reset(void) {$/;"	f
test_empty	daemon/jsmn/jsmn_test.c	/^int test_empty() {$/;"	f
test_failed	daemon/jsmn/jsmn_test.c	/^static int test_failed = 0;$/;"	v	file:
test_ge	secp256k1/src/tests.c	/^void test_ge(void) {$/;"	f
test_group_decompress	secp256k1/src/tests.c	/^void test_group_decompress(const secp256k1_fe* x) {$/;"	f
test_ilog32	ccan/ccan/ilog/test/run-out-of-line.c	/^static int test_ilog32(uint32_t _v){$/;"	f	file:
test_ilog32	ccan/ccan/ilog/test/run.c	/^static int test_ilog32(uint32_t _v){$/;"	f	file:
test_ilog64	ccan/ccan/ilog/test/run-out-of-line.c	/^static int test_ilog64(uint64_t _v){$/;"	f	file:
test_ilog64	ccan/ccan/ilog/test/run.c	/^static int test_ilog64(uint64_t _v){$/;"	f	file:
test_input_length	daemon/jsmn/jsmn_test.c	/^int test_input_length() {$/;"	f
test_issue_22	daemon/jsmn/jsmn_test.c	/^int test_issue_22() {$/;"	f
test_keyvalue	daemon/jsmn/jsmn_test.c	/^int test_keyvalue() {$/;"	f
test_maxfee	daemon/test/run-maxfee.c	/^static void test_maxfee(size_t htlcs, u64 funds)$/;"	f	file:
test_multihop_payment	tests/test_lightningd.py	/^    def test_multihop_payment(self):$/;"	m	class:LegacyLightningDTests
test_noarg	ccan/ccan/opt/test/utils.c	/^char *test_noarg(void *arg UNNEEDED)$/;"	f
test_nonstrict	daemon/jsmn/jsmn_test.c	/^int test_nonstrict() {$/;"	f
test_num_add_sub	secp256k1/src/tests.c	/^void test_num_add_sub(void) {$/;"	f
test_num_negate	secp256k1/src/tests.c	/^void test_num_negate(void) {$/;"	f
test_objects_arrays	daemon/jsmn/jsmn_test.c	/^int test_objects_arrays() {$/;"	f
test_partial_array	daemon/jsmn/jsmn_test.c	/^int test_partial_array() {$/;"	f
test_partial_string	daemon/jsmn/jsmn_test.c	/^int test_partial_string() {$/;"	f
test_passed	daemon/jsmn/jsmn_test.c	/^static int test_passed = 0;$/;"	v	file:
test_point_times_order	secp256k1/src/tests.c	/^void test_point_times_order(const secp256k1_gej *point) {$/;"	f
test_primitive	daemon/jsmn/jsmn_test.c	/^int test_primitive() {$/;"	f
test_rand_bits	secp256k1/src/tests.c	/^void test_rand_bits(int rand32, int bits) {$/;"	f
test_rand_int	secp256k1/src/tests.c	/^void test_rand_int(uint32_t range, uint32_t subrange) {$/;"	f
test_random_pubkeys	secp256k1/src/tests.c	/^void test_random_pubkeys(void) {$/;"	f
test_routing_gossip	tests/test_lightningd.py	/^    def test_routing_gossip(self):$/;"	m	class:LegacyLightningDTests
test_scalar_split	secp256k1/src/tests.c	/^void test_scalar_split(void) {$/;"	f
test_schnorr_end_to_end	secp256k1/src/modules/schnorr/tests_impl.h	/^void test_schnorr_end_to_end(void) {$/;"	f
test_schnorr_hash	secp256k1/src/modules/schnorr/tests_impl.h	/^void test_schnorr_hash(unsigned char *h32, const unsigned char *r32, const unsigned char *msg32) {$/;"	f
test_schnorr_recovery	secp256k1/src/modules/schnorr/tests_impl.h	/^void test_schnorr_recovery(void) {$/;"	f
test_schnorr_sign_verify	secp256k1/src/modules/schnorr/tests_impl.h	/^void test_schnorr_sign_verify(void) {$/;"	f
test_schnorr_threshold	secp256k1/src/modules/schnorr/tests_impl.h	/^void test_schnorr_threshold(void) {$/;"	f
test_simple	daemon/jsmn/jsmn_test.c	/^int test_simple() {$/;"	f
test_sqrt	secp256k1/src/tests.c	/^void test_sqrt(const secp256k1_fe *a, const secp256k1_fe *k) {$/;"	f
test_string	daemon/jsmn/jsmn_test.c	/^int test_string() {$/;"	f
test_style	ccan/tools/configurator/configurator.c	/^enum test_style {$/;"	g	file:
test_successful_payment	tests/test_lightningd.py	/^    def test_successful_payment(self):$/;"	m	class:LegacyLightningDTests
test_unicode_characters	daemon/jsmn/jsmn_test.c	/^int test_unicode_characters() {$/;"	f
test_unquoted_keys	daemon/jsmn/jsmn_test.c	/^int test_unquoted_keys() {$/;"	f
test_varargs_macros	libsodium/configure	/^  test_varargs_macros ();$/;"	f
test_vector	libsodium/test/default/pwhash_scrypt_ll.c	/^static void test_vector(const char *password, const char *salt, uint64_t N,$/;"	f	file:
test_wnaf	secp256k1/src/tests.c	/^void test_wnaf(const secp256k1_scalar *number, int w) {$/;"	f
test_write	ccan/ccan/read_write_all/test/run-write_all.c	/^static ssize_t test_write(int fd, const void *buf, size_t count)$/;"	f	file:
testnet	daemon/lightningd.h	/^	bool testnet;$/;"	m	struct:lightningd_state
testnet_config	daemon/options.c	/^static const struct config testnet_config = {$/;"	v	typeref:struct:config	file:
tests	ccan/ccan/crypto/hkdf_sha256/test/api-rfc5869.c	/^static struct test tests[] = { {$/;"	v	typeref:struct:test	file:
tests	ccan/ccan/crypto/hmac_sha256/test/api-rfc4231.c	/^static struct test tests[] = { {$/;"	v	typeref:struct:test	file:
tests	ccan/ccan/crypto/ripemd160/test/run-test-vectors.c	/^static struct test tests[] = {$/;"	v	typeref:struct:test	file:
tests	ccan/ccan/crypto/sha256/test/run-test-vectors.c	/^static struct test tests[] = {$/;"	v	typeref:struct:test	file:
tests	ccan/tools/configurator/configurator.c	/^static struct test tests[] = {$/;"	v	typeref:struct:test	file:
tests	libsodium/test/default/aead_aes256gcm.c	/^} tests[] = {$/;"	v	typeref:struct:__anon62	file:
tests	libsodium/test/default/generichash.c	/^} tests[] = {$/;"	v	typeref:struct:__anon63	file:
tests_LINK	secp256k1/Makefile	/^tests_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
tests_OBJECTS	secp256k1/Makefile	/^tests_OBJECTS = $(am_tests_OBJECTS)$/;"	m
testvals	ccan/ccan/ptrint/test/run.c	/^static ptrdiff_t testvals[] = {$/;"	v	file:
their_commit	daemon/peer.h	/^struct their_commit {$/;"	s
their_commits	daemon/peer.h	/^	struct list_head their_commits;$/;"	m	struct:peer	typeref:struct:peer::list_head
their_commitsigs	daemon/peer.h	/^	u64 their_commitsigs;$/;"	m	struct:peer
their_fee	daemon/peer.h	/^		u64 their_fee;$/;"	m	struct:peer::__anon49
their_htlc_added	daemon/peer.c	/^static void their_htlc_added(struct peer *peer, struct htlc *htlc,$/;"	f	file:
their_htlc_depth	daemon/peer.c	/^static enum watch_result their_htlc_depth(struct peer *peer,$/;"	f	file:
their_preimages	daemon/peer.h	/^	struct shachain their_preimages;$/;"	m	struct:peer	typeref:struct:peer::shachain
their_prev_revocation_hash	daemon/peer.h	/^	struct sha256 *their_prev_revocation_hash;$/;"	m	struct:peer	typeref:struct:peer::sha256
their_script	daemon/peer.h	/^		u8 *our_script, *their_script;$/;"	m	struct:peer::__anon49
their_sessionpubkey	daemon/cryptopkt.c	/^	u8 our_sessionpubkey[33], their_sessionpubkey[33];$/;"	m	struct:key_negotiate	file:
their_sig	daemon/peer.h	/^		secp256k1_ecdsa_signature *their_sig;$/;"	m	struct:peer::__anon49
theirsig	daemon/peer.h	/^		secp256k1_ecdsa_signature theirsig;$/;"	m	struct:peer::__anon48
threads	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    uint32_t threads;$/;"	m	struct:Argon2_instance_t
threads	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint32_t threads; \/* maximum number of threads *\/$/;"	m	struct:Argon2_Context
three	ccan/ccan/endian/test/compile_ok-constant.c	/^	char three[BSWAP_64(0xFF00000000000000ULL)];$/;"	m	struct:foo	file:
time	ccan/ccan/timer/timer.h	/^	uint64_t time;$/;"	m	struct:timer
time	daemon/log.c	/^	struct timeabs time;$/;"	m	struct:log_entry	typeref:struct:log_entry::timeabs	file:
time_add_	ccan/ccan/time/time.h	/^static inline struct timespec time_add_(struct timespec a, struct timespec b)$/;"	f
time_after	ccan/ccan/time/time.h	/^static inline bool time_after(struct timeabs a, struct timeabs b)$/;"	f
time_before	ccan/ccan/time/time.h	/^static inline bool time_before(struct timeabs a, struct timeabs b)$/;"	f
time_between	ccan/ccan/time/time.h	/^static inline struct timerel time_between(struct timeabs recent, struct timeabs old)$/;"	f
time_check_	ccan/ccan/time/time.c	/^struct timespec time_check_(struct timespec t, const char *abortstr)$/;"	f
time_divide	ccan/ccan/time/time.c	/^struct timerel time_divide(struct timerel t, unsigned long div)$/;"	f
time_from_msec	ccan/ccan/time/time.h	/^static inline struct timerel time_from_msec(uint64_t msec)$/;"	f
time_from_nsec	ccan/ccan/time/time.h	/^static inline struct timerel time_from_nsec(uint64_t nsec)$/;"	f
time_from_sec	ccan/ccan/time/time.h	/^static inline struct timerel time_from_sec(uint64_t sec)$/;"	f
time_from_usec	ccan/ccan/time/time.h	/^static inline struct timerel time_from_usec(uint64_t usec)$/;"	f
time_greater	ccan/ccan/time/time.h	/^static inline bool time_greater(struct timerel a, struct timerel b)$/;"	f
time_greater_	ccan/ccan/time/time.h	/^static inline bool time_greater_(struct timespec a, struct timespec b)$/;"	f
time_less	ccan/ccan/time/time.h	/^static inline bool time_less(struct timerel a, struct timerel b)$/;"	f
time_less_	ccan/ccan/time/time.h	/^static inline bool time_less_(struct timespec a, struct timespec b)$/;"	f
time_mono	ccan/ccan/time/time.c	/^struct timemono time_mono(void)$/;"	f
time_mono	ccan/ccan/timer/test/run.c	5;"	d	file:
time_multiply	ccan/ccan/time/time.c	/^struct timerel time_multiply(struct timerel t, unsigned long mult)$/;"	f
time_now	ccan/ccan/time/time.c	/^struct timeabs time_now(void)$/;"	f
time_sub	ccan/ccan/time/time.h	/^static inline struct timerel time_sub(struct timerel a, struct timerel b)$/;"	f
time_sub_	ccan/ccan/time/time.h	/^static inline struct timespec time_sub_(struct timespec recent,$/;"	f
time_to_grains	ccan/ccan/timer/timer.c	/^static uint64_t time_to_grains(struct timemono t)$/;"	f	file:
time_to_msec	ccan/ccan/time/time.h	/^static inline uint64_t time_to_msec(struct timerel t)$/;"	f
time_to_nsec	ccan/ccan/time/time.h	/^static inline uint64_t time_to_nsec(struct timerel t)$/;"	f
time_to_sec	ccan/ccan/time/time.h	/^static inline uint64_t time_to_sec(struct timerel t)$/;"	f
time_to_usec	ccan/ccan/time/time.h	/^static inline uint64_t time_to_usec(struct timerel t)$/;"	f
timeabs	ccan/ccan/time/time.h	/^struct timeabs {$/;"	s
timeabs_add	ccan/ccan/time/time.h	/^static inline struct timeabs timeabs_add(struct timeabs a, struct timerel b)$/;"	f
timeabs_check	ccan/ccan/time/time.c	/^struct timeabs timeabs_check(struct timeabs t, const char *abortstr)$/;"	f
timeabs_eq	ccan/ccan/time/time.h	/^static inline bool timeabs_eq(struct timeabs a, struct timeabs b)$/;"	f
timeabs_sub	ccan/ccan/time/time.h	/^static inline struct timeabs timeabs_sub(struct timeabs abs, struct timerel rel)$/;"	f
timeabs_to_timeval	ccan/ccan/time/time.h	/^static inline struct timeval timeabs_to_timeval(struct timeabs t)$/;"	f
timemono	ccan/ccan/time/time.h	/^struct timemono {$/;"	s
timemono_add	ccan/ccan/time/time.h	/^static inline struct timemono timemono_add(struct timemono a, struct timerel b)$/;"	f
timemono_between	ccan/ccan/time/time.h	/^static inline struct timerel timemono_between(struct timemono recent,$/;"	f
timemono_check	ccan/ccan/time/time.c	/^struct timemono timemono_check(struct timemono t, const char *abortstr)$/;"	f
timemono_eq	ccan/ccan/time/time.h	/^static inline bool timemono_eq(struct timemono a, struct timemono b)$/;"	f
timemono_from_nsec	ccan/ccan/timer/test/run.c	/^static struct timemono timemono_from_nsec(unsigned long long nsec)$/;"	f	file:
timemono_from_usec	ccan/ccan/timer/test/run-ff.c	/^static struct timemono timemono_from_usec(unsigned long long usec)$/;"	f	file:
timemono_since	ccan/ccan/time/time.h	/^static inline struct timerel timemono_since(struct timemono old)$/;"	f
timeout	ccan/ccan/io/benchmarks/run-different-speed.c	/^static int timeout[2];$/;"	v	file:
timeout	ccan/ccan/io/benchmarks/run-length-prefix.c	/^static int timeout[2];$/;"	v	file:
timeout_usec	ccan/ccan/io/test/run-15-timeout.c	/^	int timeout_usec;$/;"	m	struct:data	file:
timer	ccan/ccan/io/test/run-15-timeout.c	/^	struct timer timer;$/;"	m	struct:data	typeref:struct:data::timer	file:
timer	ccan/ccan/timer/timer.h	/^struct timer {$/;"	s
timer	daemon/timeout.c	/^	struct timer timer;$/;"	m	struct:oneshot	typeref:struct:oneshot::timer	file:
timer_add_raw	ccan/ccan/timer/timer.c	/^static void timer_add_raw(struct timers *timers, struct timer *t)$/;"	f	file:
timer_addmono	ccan/ccan/timer/timer.c	/^void timer_addmono(struct timers *timers, struct timer *t, struct timemono when)$/;"	f
timer_addrel	ccan/ccan/timer/timer.c	/^void timer_addrel(struct timers *timers, struct timer *t, struct timerel rel)$/;"	f
timer_del	ccan/ccan/timer/timer.c	/^void timer_del(struct timers *timers UNNEEDED, struct timer *t)$/;"	f
timer_earliest	ccan/ccan/timer/timer.c	/^bool timer_earliest(struct timers *timers, struct timemono *first)$/;"	f
timer_expired	daemon/timeout.c	/^void timer_expired(struct lightningd_state *dstate, struct timer *timer)$/;"	f
timer_fast_forward	ccan/ccan/timer/timer.c	/^static void timer_fast_forward(struct timers *timers, uint64_t time)$/;"	f	file:
timer_init	ccan/ccan/timer/timer.c	/^void timer_init(struct timer *t)$/;"	f
timer_level	ccan/ccan/timer/timer.c	/^struct timer_level {$/;"	s	file:
timer_list_check	ccan/ccan/timer/timer.c	/^static bool timer_list_check(const struct list_head *l,$/;"	f	file:
timerel	ccan/ccan/time/time.h	/^struct timerel {$/;"	s
timerel_add	ccan/ccan/time/time.h	/^static inline struct timerel timerel_add(struct timerel a, struct timerel b)$/;"	f
timerel_check	ccan/ccan/time/time.c	/^struct timerel timerel_check(struct timerel t, const char *abortstr)$/;"	f
timerel_eq	ccan/ccan/time/time.h	/^static inline bool timerel_eq(struct timerel a, struct timerel b)$/;"	f
timerel_to_timeval	ccan/ccan/time/time.h	/^static inline struct timeval timerel_to_timeval(struct timerel t)$/;"	f
timers	ccan/ccan/io/test/run-15-timeout.c	/^	struct timers timers;$/;"	m	struct:data	typeref:struct:data::timers	file:
timers	ccan/ccan/timer/timer.h	/^struct timers {$/;"	s
timers	daemon/lightningd.h	/^	struct timers timers;$/;"	m	struct:lightningd_state	typeref:struct:lightningd_state::timers
timers_check	ccan/ccan/timer/timer.c	/^struct timers *timers_check(const struct timers *timers, const char *abortstr)$/;"	f
timers_cleanup	ccan/ccan/timer/timer.c	/^void timers_cleanup(struct timers *timers)$/;"	f
timers_dump	ccan/ccan/timer/timer.c	/^void timers_dump(const struct timers *timers, FILE *fp)$/;"	f
timers_expire	ccan/ccan/timer/timer.c	/^struct timer *timers_expire(struct timers *timers, struct timemono expire)$/;"	f
timers_far_get	ccan/ccan/timer/timer.c	/^static void timers_far_get(struct timers *timers,$/;"	f	file:
timers_init	ccan/ccan/timer/timer.c	/^void timers_init(struct timers *timers, struct timemono start)$/;"	f
timespec	ccan/ccan/time/time.h	/^struct timespec {$/;"	s
timespec_to_timeval	ccan/ccan/time/time.h	/^static inline struct timeval timespec_to_timeval(struct timespec ts)$/;"	f
timestamp	bitcoin/block.h	/^	le32 timestamp;$/;"	m	struct:bitcoin_block_hdr
timestamp	wire/test/run-peer-wire.c	/^	u32 timestamp;$/;"	m	struct:msg_channel_update	file:
timestamp	wire/test/run-peer-wire.c	/^	u32 timestamp;$/;"	m	struct:msg_node_announcement	file:
timeval_to_timeabs	ccan/ccan/time/time.h	/^static inline struct timeabs timeval_to_timeabs(struct timeval tv)$/;"	f
timeval_to_timerel	ccan/ccan/time/time.h	/^static inline struct timerel timeval_to_timerel(struct timeval tv)$/;"	f
timeval_to_timespec	ccan/ccan/time/time.h	/^static inline struct timespec timeval_to_timespec(struct timeval tv)$/;"	f
tip	daemon/chaintopology.c	/^	struct block *tip;$/;"	m	struct:topology	typeref:struct:topology::block	file:
tlen	ccan/ccan/opt/opt.h	/^		size_t tlen;$/;"	m	union:opt_table::__anon5
tmpctx	lightningd/test/run-key_derive.c	/^static void *tmpctx;$/;"	v	file:
to	daemon/peer.c	/^	enum feechange_state from, to;$/;"	m	struct:feechanges_table	typeref:enum:feechanges_table::	file:
to	daemon/peer.c	/^	enum htlc_state from, to;$/;"	m	struct:htlcs_table	typeref:enum:htlcs_table::	file:
to	test/test_protocol.c	/^	enum htlc_state from, to;$/;"	m	struct:state_table	typeref:enum:state_table::	file:
to_base58	bitcoin/base58.c	/^static char *to_base58(const tal_t *ctx, u8 version,$/;"	f	file:
to_base64	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	/^static size_t to_base64(char *dst, size_t dst_len, const void *src,$/;"	f	file:
to_child	ccan/ccan/ptr_valid/ptr_valid.h	/^	int to_child, from_child;$/;"	m	struct:ptr_valid_batch
to_eol	ccan/ccan/cdump/cdump.c	/^static size_t to_eol(const char *p)$/;"	f	file:
to_self_delay	lightningd/channel_config.h	/^	u16 to_self_delay;$/;"	m	struct:channel_config
to_self_delay	wire/test/run-peer-wire.c	/^	u16 to_self_delay;$/;"	m	struct:msg_accept_channel	file:
to_self_delay	wire/test/run-peer-wire.c	/^	u16 to_self_delay;$/;"	m	struct:msg_open_channel	file:
to_tal_hdr	ccan/ccan/tal/tal.c	/^static struct tal_hdr *to_tal_hdr(const void *ctx)$/;"	f	file:
to_tal_hdr_or_null	ccan/ccan/tal/tal.c	/^static struct tal_hdr *to_tal_hdr_or_null(const void *ctx)$/;"	f	file:
to_them	test/test_state_coverage.c	/^	bool to_them;$/;"	m	struct:htlc	file:
to_them_idx	daemon/peer.h	/^		int to_us_idx, to_them_idx;$/;"	m	struct:peer::__anon50
to_us_idx	daemon/peer.h	/^		int to_us_idx, to_them_idx;$/;"	m	struct:peer::__anon50
toggle	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128.h	47;"	d
toggle	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128_aes128ctr.c	/^void toggle(int128 *r)$/;"	f
tok_ignore_attribute	ccan/ccan/cdump/cdump.c	/^static bool tok_ignore_attribute(struct parse_state *ps)$/;"	f	file:
tok_is	ccan/ccan/cdump/cdump.c	/^static bool tok_is(const struct token **toks, const char *target)$/;"	f	file:
tok_maybe_take_cdump_note	ccan/ccan/cdump/cdump.c	/^static bool tok_maybe_take_cdump_note(const tal_t *ctx,$/;"	f	file:
tok_peek	ccan/ccan/cdump/cdump.c	/^static const struct token *tok_peek(const struct token **toks)$/;"	f	file:
tok_take	ccan/ccan/cdump/cdump.c	/^static const struct token *tok_take(const struct token **toks)$/;"	f	file:
tok_take_array	ccan/ccan/cdump/cdump.c	/^static bool tok_take_array(struct parse_state *ps, struct cdump_type **type)$/;"	f	file:
tok_take_conglom	ccan/ccan/cdump/cdump.c	/^static bool tok_take_conglom(struct parse_state *ps,$/;"	f	file:
tok_take_enum	ccan/ccan/cdump/cdump.c	/^static bool tok_take_enum(struct parse_state *ps)$/;"	f	file:
tok_take_expr	ccan/ccan/cdump/cdump.c	/^static bool tok_take_expr(struct parse_state *ps, const char *term)$/;"	f	file:
tok_take_expr_str	ccan/ccan/cdump/cdump.c	/^static char *tok_take_expr_str(const tal_t *ctx,$/;"	f	file:
tok_take_ident	ccan/ccan/cdump/cdump.c	/^static const char *tok_take_ident(const tal_t *ctx, const struct token **toks)$/;"	f	file:
tok_take_if	ccan/ccan/cdump/cdump.c	/^static const struct token *tok_take_if(const struct token **toks,$/;"	f	file:
tok_take_type	ccan/ccan/cdump/cdump.c	/^static bool tok_take_type(struct parse_state *ps, struct cdump_type **type)$/;"	f	file:
tok_take_unknown_statement	ccan/ccan/cdump/cdump.c	/^static void tok_take_unknown_statement(struct parse_state *ps)$/;"	f	file:
tok_take_until	ccan/ccan/cdump/cdump.c	/^static char *tok_take_until(const tal_t *ctx,$/;"	f	file:
token	ccan/ccan/cdump/cdump.c	/^struct token {$/;"	s	file:
tokenize	ccan/ccan/cdump/cdump.c	/^static struct token *tokenize(const void *ctx, const char *code)$/;"	f	file:
toknext	daemon/jsmn/jsmn.h	/^	unsigned int toknext; \/* next token to allocate *\/$/;"	m	struct:__anon59
toks	ccan/ccan/cdump/cdump.c	/^	const struct token *toks;$/;"	m	struct:parse_state	typeref:struct:parse_state::token	file:
toksuper	daemon/jsmn/jsmn.h	/^	int toksuper; \/* superior token node, e.g parent object or array *\/$/;"	m	struct:__anon59
too_cluttered	test/test_state_coverage.c	/^static bool too_cluttered(enum state_input i, enum state src)$/;"	f	file:
too_large	status.c	/^static bool too_large(size_t len, int type)$/;"	f	file:
top_build_prefix	libsodium/Makefile	/^top_build_prefix = $/;"	m
top_build_prefix	libsodium/dist-build/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	libsodium/msvc-scripts/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	libsodium/src/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	libsodium/src/libsodium/Makefile	/^top_build_prefix = ..\/..\/$/;"	m
top_build_prefix	libsodium/src/libsodium/include/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	libsodium/test/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	libsodium/test/default/Makefile	/^top_build_prefix = ..\/..\/$/;"	m
top_build_prefix	secp256k1/Makefile	/^top_build_prefix = $/;"	m
top_builddir	libsodium/Makefile	/^top_builddir = .$/;"	m
top_builddir	libsodium/dist-build/Makefile	/^top_builddir = ..$/;"	m
top_builddir	libsodium/msvc-scripts/Makefile	/^top_builddir = ..$/;"	m
top_builddir	libsodium/src/Makefile	/^top_builddir = ..$/;"	m
top_builddir	libsodium/src/libsodium/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	libsodium/src/libsodium/include/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	libsodium/test/Makefile	/^top_builddir = ..$/;"	m
top_builddir	libsodium/test/default/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	secp256k1/Makefile	/^top_builddir = .$/;"	m
top_distdir	libsodium/Makefile	/^top_distdir = $(distdir)$/;"	m
top_distdir	secp256k1/Makefile	/^top_distdir = $(distdir)$/;"	m
top_srcdir	libsodium/Makefile	/^top_srcdir = .$/;"	m
top_srcdir	libsodium/dist-build/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	libsodium/msvc-scripts/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	libsodium/src/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	libsodium/src/libsodium/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	libsodium/src/libsodium/include/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	libsodium/test/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	libsodium/test/default/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	secp256k1/Makefile	/^top_srcdir = .$/;"	m
topic	daemon/lightningd.h	/^	char * topic;$/;"	m	struct:lightningd_state
topology	daemon/chaintopology.c	/^struct topology {$/;"	s	file:
topology	daemon/lightningd.h	/^	struct topology *topology;$/;"	m	struct:lightningd_state	typeref:struct:lightningd_state::topology
topology_changed	daemon/chaintopology.c	/^static void topology_changed(struct lightningd_state *dstate,$/;"	f	file:
total	daemon/routing.h	/^		s64 total;$/;"	m	struct:node::__anon54
total_order	ccan/ccan/order/order.h	28;"	d
total_order_by_field	ccan/ccan/order/order.h	69;"	d
total_order_cast	ccan/ccan/order/order.h	19;"	d
total_order_cb	ccan/ccan/order/order.h	14;"	d
total_order_cmp	ccan/ccan/order/order.h	34;"	d
total_order_noctx_cb	ccan/ccan/order/order.h	/^typedef int (*total_order_noctx_cb)(const void *, const void *);$/;"	t
towire	wire/towire.c	/^void towire(u8 **pptr, const void *data, size_t len)$/;"	f
towire_accept_channel	wire/gen_peer_wire.c	/^u8 *towire_accept_channel(const tal_t *ctx, const struct channel_id *temporary_channel_id, u64 dust_limit_satoshis, u64 max_htlc_value_in_flight_msat, u64 channel_reserve_satoshis, u32 minimum_depth, u32 htlc_minimum_msat, u16 to_self_delay, u16 max_accepted_htlcs, const struct pubkey *funding_pubkey, const struct pubkey *revocation_basepoint, const struct pubkey *payment_basepoint, const struct pubkey *delayed_payment_basepoint, const struct pubkey *first_per_commitment_point)$/;"	f
towire_announcement_signatures	wire/gen_peer_wire.c	/^u8 *towire_announcement_signatures(const tal_t *ctx, const struct channel_id *channel_id, const secp256k1_ecdsa_signature *node_signature, const secp256k1_ecdsa_signature *bitcoin_signature)$/;"	f
towire_bad_command	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_bad_command(const tal_t *ctx)$/;"	f
towire_bad_fdpass	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_bad_fdpass(const tal_t *ctx)$/;"	f
towire_bool	wire/towire.c	/^void towire_bool(u8 **pptr, bool v)$/;"	f
towire_channel_announcement	wire/gen_peer_wire.c	/^u8 *towire_channel_announcement(const tal_t *ctx, const secp256k1_ecdsa_signature *node_signature_1, const secp256k1_ecdsa_signature *node_signature_2, const secp256k1_ecdsa_signature *bitcoin_signature_1, const secp256k1_ecdsa_signature *bitcoin_signature_2, const struct channel_id *channel_id, const struct pubkey *node_id_1, const struct pubkey *node_id_2, const struct pubkey *bitcoin_key_1, const struct pubkey *bitcoin_key_2, const u8 *features)$/;"	f
towire_channel_config	lightningd/channel_config.c	/^void towire_channel_config(u8 **pptr, const struct channel_config *config)$/;"	f
towire_channel_id	wire/towire.c	/^void towire_channel_id(u8 **pptr, const struct channel_id *channel_id)$/;"	f
towire_channel_update	wire/gen_peer_wire.c	/^u8 *towire_channel_update(const tal_t *ctx, const secp256k1_ecdsa_signature *signature, const struct channel_id *channel_id, u32 timestamp, u16 flags, u16 cltv_expiry_delta, u32 htlc_minimum_msat, u32 fee_base_msat, u32 fee_proportional_millionths)$/;"	f
towire_closing_signed	wire/gen_peer_wire.c	/^u8 *towire_closing_signed(const tal_t *ctx, const struct channel_id *channel_id, u64 fee_satoshis, const secp256k1_ecdsa_signature *signature)$/;"	f
towire_commit_sig	wire/gen_peer_wire.c	/^u8 *towire_commit_sig(const tal_t *ctx, const struct channel_id *channel_id, const secp256k1_ecdsa_signature *signature, const secp256k1_ecdsa_signature *htlc_signature)$/;"	f
towire_crypto_state	lightningd/cryptomsg.c	/^void towire_crypto_state(u8 **ptr, const struct crypto_state *cs)$/;"	f
towire_error	wire/gen_peer_wire.c	/^u8 *towire_error(const tal_t *ctx, const struct channel_id *channel_id, const u8 *data)$/;"	f
towire_funding_created	wire/gen_peer_wire.c	/^u8 *towire_funding_created(const tal_t *ctx, const struct channel_id *temporary_channel_id, const struct sha256 *txid, u8 output_index, const secp256k1_ecdsa_signature *signature)$/;"	f
towire_funding_locked	wire/gen_peer_wire.c	/^u8 *towire_funding_locked(const tal_t *ctx, const struct channel_id *temporary_channel_id, const struct channel_id *channel_id, const struct pubkey *next_per_commitment_point)$/;"	f
towire_funding_signed	wire/gen_peer_wire.c	/^u8 *towire_funding_signed(const tal_t *ctx, const struct channel_id *temporary_channel_id, const secp256k1_ecdsa_signature *signature)$/;"	f
towire_gossipctl_new_peer	lightningd/gossip/gen_gossip_control_wire.c	/^u8 *towire_gossipctl_new_peer(const tal_t *ctx, u64 unique_id, const struct crypto_state *crypto_state)$/;"	f
towire_gossipctl_release_peer	lightningd/gossip/gen_gossip_control_wire.c	/^u8 *towire_gossipctl_release_peer(const tal_t *ctx, u64 unique_id)$/;"	f
towire_gossipctl_release_peer_response	lightningd/gossip/gen_gossip_control_wire.c	/^u8 *towire_gossipctl_release_peer_response(const tal_t *ctx, u64 unique_id, const struct crypto_state *crypto_state)$/;"	f
towire_gossipstatus_bad_new_peer_request	lightningd/gossip/gen_gossip_status_wire.c	/^u8 *towire_gossipstatus_bad_new_peer_request(const tal_t *ctx)$/;"	f
towire_gossipstatus_bad_release_request	lightningd/gossip/gen_gossip_status_wire.c	/^u8 *towire_gossipstatus_bad_release_request(const tal_t *ctx)$/;"	f
towire_gossipstatus_bad_request	lightningd/gossip/gen_gossip_status_wire.c	/^u8 *towire_gossipstatus_bad_request(const tal_t *ctx)$/;"	f
towire_gossipstatus_fdpass_failed	lightningd/gossip/gen_gossip_status_wire.c	/^u8 *towire_gossipstatus_fdpass_failed(const tal_t *ctx)$/;"	f
towire_gossipstatus_init_failed	lightningd/gossip/gen_gossip_status_wire.c	/^u8 *towire_gossipstatus_init_failed(const tal_t *ctx)$/;"	f
towire_gossipstatus_peer_bad_msg	lightningd/gossip/gen_gossip_status_wire.c	/^u8 *towire_gossipstatus_peer_bad_msg(const tal_t *ctx, u64 unique_id, const u8 *err)$/;"	f
towire_gossipstatus_peer_nongossip	lightningd/gossip/gen_gossip_status_wire.c	/^u8 *towire_gossipstatus_peer_nongossip(const tal_t *ctx, u64 unique_id, const struct crypto_state *crypto_state, const u8 *msg)$/;"	f
towire_gossipstatus_peer_ready	lightningd/gossip/gen_gossip_status_wire.c	/^u8 *towire_gossipstatus_peer_ready(const tal_t *ctx, u64 unique_id)$/;"	f
towire_handshake_exit_req	lightningd/handshake/gen_handshake_control_wire.c	/^u8 *towire_handshake_exit_req(const tal_t *ctx)$/;"	f
towire_handshake_initiator_req	lightningd/handshake/gen_handshake_control_wire.c	/^u8 *towire_handshake_initiator_req(const tal_t *ctx, const struct pubkey *my_id, const struct pubkey *responder_id)$/;"	f
towire_handshake_initiator_resp	lightningd/handshake/gen_handshake_control_wire.c	/^u8 *towire_handshake_initiator_resp(const tal_t *ctx, const struct crypto_state *cs)$/;"	f
towire_handshake_responder_req	lightningd/handshake/gen_handshake_control_wire.c	/^u8 *towire_handshake_responder_req(const tal_t *ctx, const struct pubkey *my_id)$/;"	f
towire_handshake_responder_resp	lightningd/handshake/gen_handshake_control_wire.c	/^u8 *towire_handshake_responder_resp(const tal_t *ctx, const struct pubkey *initiator_id, const struct crypto_state *cs)$/;"	f
towire_hsm_ecdh_req	lightningd/hsm/gen_hsm_client_wire.c	/^u8 *towire_hsm_ecdh_req(const tal_t *ctx, const struct pubkey *point)$/;"	f
towire_hsm_ecdh_resp	lightningd/hsm/gen_hsm_client_wire.c	/^u8 *towire_hsm_ecdh_resp(const tal_t *ctx, const struct sha256 *ss)$/;"	f
towire_hsmctl_hsmfd_ecdh	lightningd/hsm/gen_hsm_control_wire.c	/^u8 *towire_hsmctl_hsmfd_ecdh(const tal_t *ctx, u64 unique_id)$/;"	f
towire_hsmctl_hsmfd_ecdh_response	lightningd/hsm/gen_hsm_control_wire.c	/^u8 *towire_hsmctl_hsmfd_ecdh_response(const tal_t *ctx)$/;"	f
towire_hsmctl_init_load	lightningd/hsm/gen_hsm_control_wire.c	/^u8 *towire_hsmctl_init_load(const tal_t *ctx)$/;"	f
towire_hsmctl_init_new	lightningd/hsm/gen_hsm_control_wire.c	/^u8 *towire_hsmctl_init_new(const tal_t *ctx)$/;"	f
towire_hsmctl_init_response	lightningd/hsm/gen_hsm_control_wire.c	/^u8 *towire_hsmctl_init_response(const tal_t *ctx, const struct pubkey *node_id)$/;"	f
towire_hsmctl_shutdown	lightningd/hsm/gen_hsm_control_wire.c	/^u8 *towire_hsmctl_shutdown(const tal_t *ctx)$/;"	f
towire_hsmstatus_bad_request	lightningd/hsm/gen_hsm_status_wire.c	/^u8 *towire_hsmstatus_bad_request(const tal_t *ctx)$/;"	f
towire_hsmstatus_client_bad_request	lightningd/hsm/gen_hsm_status_wire.c	/^u8 *towire_hsmstatus_client_bad_request(const tal_t *ctx, u64 unique_id, const u8 *msg)$/;"	f
towire_hsmstatus_fd_failed	lightningd/hsm/gen_hsm_status_wire.c	/^u8 *towire_hsmstatus_fd_failed(const tal_t *ctx)$/;"	f
towire_hsmstatus_init_failed	lightningd/hsm/gen_hsm_status_wire.c	/^u8 *towire_hsmstatus_init_failed(const tal_t *ctx)$/;"	f
towire_hsmstatus_writemsg_failed	lightningd/hsm/gen_hsm_status_wire.c	/^u8 *towire_hsmstatus_writemsg_failed(const tal_t *ctx)$/;"	f
towire_init	wire/gen_peer_wire.c	/^u8 *towire_init(const tal_t *ctx, const u8 *globalfeatures, const u8 *localfeatures)$/;"	f
towire_initr_act1_bad_ecdh_for_ss	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_initr_act1_bad_ecdh_for_ss(const tal_t *ctx)$/;"	f
towire_initr_act1_write_failed	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_initr_act1_write_failed(const tal_t *ctx)$/;"	f
towire_initr_act2_bad_ecdh_for_ss	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_initr_act2_bad_ecdh_for_ss(const tal_t *ctx)$/;"	f
towire_initr_act2_bad_pubkey	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_initr_act2_bad_pubkey(const tal_t *ctx)$/;"	f
towire_initr_act2_bad_tag	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_initr_act2_bad_tag(const tal_t *ctx)$/;"	f
towire_initr_act2_bad_version	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_initr_act2_bad_version(const tal_t *ctx)$/;"	f
towire_initr_act2_read_failed	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_initr_act2_read_failed(const tal_t *ctx)$/;"	f
towire_initr_act3_bad_hsm_ecdh	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_initr_act3_bad_hsm_ecdh(const tal_t *ctx)$/;"	f
towire_initr_act3_write_failed	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_initr_act3_write_failed(const tal_t *ctx)$/;"	f
towire_initr_act_one	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_initr_act_one(const tal_t *ctx)$/;"	f
towire_initr_act_three	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_initr_act_three(const tal_t *ctx)$/;"	f
towire_initr_act_two	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_initr_act_two(const tal_t *ctx)$/;"	f
towire_ipv6	wire/towire.c	/^void towire_ipv6(u8 **pptr, const struct ipv6 *ipv6)$/;"	f
towire_node_announcement	wire/gen_peer_wire.c	/^u8 *towire_node_announcement(const tal_t *ctx, const secp256k1_ecdsa_signature *signature, u32 timestamp, const struct pubkey *node_id, const u8 rgb_color[3], const u8 alias[32], const u8 *features, const u8 *addresses)$/;"	f
towire_open_channel	wire/gen_peer_wire.c	/^u8 *towire_open_channel(const tal_t *ctx, const struct channel_id *temporary_channel_id, u64 funding_satoshis, u64 push_msat, u64 dust_limit_satoshis, u64 max_htlc_value_in_flight_msat, u64 channel_reserve_satoshis, u32 htlc_minimum_msat, u32 feerate_per_kw, u16 to_self_delay, u16 max_accepted_htlcs, const struct pubkey *funding_pubkey, const struct pubkey *revocation_basepoint, const struct pubkey *payment_basepoint, const struct pubkey *delayed_payment_basepoint, const struct pubkey *first_per_commitment_point)$/;"	f
towire_pad	wire/test/run-peer-wire.c	/^void towire_pad(u8 **pptr, size_t num)$/;"	f
towire_pad	wire/test/run-peer-wire.c	10;"	d	file:
towire_pad	wire/test/run-peer-wire.c	4;"	d	file:
towire_pad	wire/test/run-peer-wire.c	6;"	d	file:
towire_pad	wire/towire.c	/^void towire_pad(u8 **pptr, size_t num)$/;"	f
towire_pad_arr	wire/test/run-peer-wire.c	/^static const void *towire_pad_arr;$/;"	v	file:
towire_pubkey	wire/towire.c	/^void towire_pubkey(u8 **pptr, const struct pubkey *pubkey)$/;"	f
towire_respr_act1_bad_hsm_ecdh	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_respr_act1_bad_hsm_ecdh(const tal_t *ctx)$/;"	f
towire_respr_act1_bad_pubkey	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_respr_act1_bad_pubkey(const tal_t *ctx)$/;"	f
towire_respr_act1_bad_tag	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_respr_act1_bad_tag(const tal_t *ctx)$/;"	f
towire_respr_act1_bad_version	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_respr_act1_bad_version(const tal_t *ctx)$/;"	f
towire_respr_act1_read_failed	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_respr_act1_read_failed(const tal_t *ctx)$/;"	f
towire_respr_act2_bad_ecdh_for_ss	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_respr_act2_bad_ecdh_for_ss(const tal_t *ctx)$/;"	f
towire_respr_act2_write_failed	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_respr_act2_write_failed(const tal_t *ctx)$/;"	f
towire_respr_act3_bad_ciphertext	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_respr_act3_bad_ciphertext(const tal_t *ctx)$/;"	f
towire_respr_act3_bad_ecdh_for_ss	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_respr_act3_bad_ecdh_for_ss(const tal_t *ctx)$/;"	f
towire_respr_act3_bad_pubkey	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_respr_act3_bad_pubkey(const tal_t *ctx)$/;"	f
towire_respr_act3_bad_tag	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_respr_act3_bad_tag(const tal_t *ctx)$/;"	f
towire_respr_act3_bad_version	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_respr_act3_bad_version(const tal_t *ctx)$/;"	f
towire_respr_act3_read_failed	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_respr_act3_read_failed(const tal_t *ctx)$/;"	f
towire_respr_act_one	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_respr_act_one(const tal_t *ctx)$/;"	f
towire_respr_act_three	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_respr_act_three(const tal_t *ctx)$/;"	f
towire_respr_act_two	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_respr_act_two(const tal_t *ctx)$/;"	f
towire_revoke_and_ack	wire/gen_peer_wire.c	/^u8 *towire_revoke_and_ack(const tal_t *ctx, const struct channel_id *channel_id, const struct sha256 *per_commitment_secret, const struct pubkey *next_per_commitment_point, const secp256k1_ecdsa_signature *htlc_timeout_signature)$/;"	f
towire_secp256k1_ecdsa_signature	wire/towire.c	/^void towire_secp256k1_ecdsa_signature(u8 **pptr,$/;"	f
towire_secp256k1_ecdsa_signature_array	wire/towire.c	/^void towire_secp256k1_ecdsa_signature_array(u8 **pptr,$/;"	f
towire_sha256	wire/towire.c	/^void towire_sha256(u8 **pptr, const struct sha256 *sha256)$/;"	f
towire_shutdown	wire/gen_peer_wire.c	/^u8 *towire_shutdown(const tal_t *ctx, const struct channel_id *channel_id, const u8 *scriptpubkey)$/;"	f
towire_struct_accept_channel	wire/test/run-peer-wire.c	/^static void *towire_struct_accept_channel(const tal_t *ctx,$/;"	f	file:
towire_struct_announcement_signatures	wire/test/run-peer-wire.c	/^static void *towire_struct_announcement_signatures(const tal_t *ctx,$/;"	f	file:
towire_struct_channel_announcement	wire/test/run-peer-wire.c	/^static void *towire_struct_channel_announcement(const tal_t *ctx,$/;"	f	file:
towire_struct_channel_update	wire/test/run-peer-wire.c	/^static void *towire_struct_channel_update(const tal_t *ctx,$/;"	f	file:
towire_struct_closing_signed	wire/test/run-peer-wire.c	/^static void *towire_struct_closing_signed(const tal_t *ctx,$/;"	f	file:
towire_struct_commit_sig	wire/test/run-peer-wire.c	/^static void *towire_struct_commit_sig(const tal_t *ctx,$/;"	f	file:
towire_struct_error	wire/test/run-peer-wire.c	/^static void *towire_struct_error(const tal_t *ctx,$/;"	f	file:
towire_struct_funding_created	wire/test/run-peer-wire.c	/^static void *towire_struct_funding_created(const tal_t *ctx,$/;"	f	file:
towire_struct_funding_locked	wire/test/run-peer-wire.c	/^static void *towire_struct_funding_locked(const tal_t *ctx,$/;"	f	file:
towire_struct_funding_signed	wire/test/run-peer-wire.c	/^static void *towire_struct_funding_signed(const tal_t *ctx,$/;"	f	file:
towire_struct_init	wire/test/run-peer-wire.c	/^static void *towire_struct_init(const tal_t *ctx,$/;"	f	file:
towire_struct_node_announcement	wire/test/run-peer-wire.c	/^static void *towire_struct_node_announcement(const tal_t *ctx,$/;"	f	file:
towire_struct_open_channel	wire/test/run-peer-wire.c	/^static void *towire_struct_open_channel(const tal_t *ctx,$/;"	f	file:
towire_struct_revoke_and_ack	wire/test/run-peer-wire.c	/^static void *towire_struct_revoke_and_ack(const tal_t *ctx,$/;"	f	file:
towire_struct_shutdown	wire/test/run-peer-wire.c	/^static void *towire_struct_shutdown(const tal_t *ctx,$/;"	f	file:
towire_struct_update_add_htlc	wire/test/run-peer-wire.c	/^static void *towire_struct_update_add_htlc(const tal_t *ctx,$/;"	f	file:
towire_struct_update_fail_htlc	wire/test/run-peer-wire.c	/^static void *towire_struct_update_fail_htlc(const tal_t *ctx,$/;"	f	file:
towire_struct_update_fee	wire/test/run-peer-wire.c	/^static void *towire_struct_update_fee(const tal_t *ctx,$/;"	f	file:
towire_struct_update_fulfill_htlc	wire/test/run-peer-wire.c	/^static void *towire_struct_update_fulfill_htlc(const tal_t *ctx,$/;"	f	file:
towire_success	lightningd/handshake/gen_handshake_status_wire.c	/^u8 *towire_success(const tal_t *ctx)$/;"	f
towire_u16	wire/towire.c	/^void towire_u16(u8 **pptr, u16 v)$/;"	f
towire_u32	wire/towire.c	/^void towire_u32(u8 **pptr, u32 v)$/;"	f
towire_u64	wire/towire.c	/^void towire_u64(u8 **pptr, u64 v)$/;"	f
towire_u8	wire/towire.c	/^void towire_u8(u8 **pptr, u8 v)$/;"	f
towire_u8_array	wire/towire.c	/^void towire_u8_array(u8 **pptr, const u8 *arr, size_t num)$/;"	f
towire_update_add_htlc	wire/gen_peer_wire.c	/^u8 *towire_update_add_htlc(const tal_t *ctx, const struct channel_id *channel_id, u64 id, u32 amount_msat, u32 cltv_expiry, const struct sha256 *payment_hash, const u8 onion_routing_packet[1254])$/;"	f
towire_update_fail_htlc	wire/gen_peer_wire.c	/^u8 *towire_update_fail_htlc(const tal_t *ctx, const struct channel_id *channel_id, u64 id, const u8 *reason)$/;"	f
towire_update_fail_malformed_htlc	wire/gen_peer_wire.c	/^u8 *towire_update_fail_malformed_htlc(const tal_t *ctx, const struct channel_id *channel_id, u64 id, const struct sha256 *sha256_of_onion, u16 failure_code)$/;"	f
towire_update_fee	wire/gen_peer_wire.c	/^u8 *towire_update_fee(const tal_t *ctx, const struct channel_id *channel_id, u32 feerate_per_kw)$/;"	f
towire_update_fulfill_htlc	wire/gen_peer_wire.c	/^u8 *towire_update_fulfill_htlc(const tal_t *ctx, const struct channel_id *channel_id, u64 id, const struct sha256 *payment_preimage)$/;"	f
trace	ccan/ccan/likely/likely.c	/^struct trace {$/;"	s	file:
trace_eq	ccan/ccan/likely/likely.c	/^static bool trace_eq(const struct trace *t1, const struct trace *t2)$/;"	f	file:
trail	test/test_state_coverage.c	/^	const struct trail *trail;$/;"	m	struct:peer	typeref:struct:peer::trail	file:
trail	test/test_state_coverage.c	/^struct trail {$/;"	s	file:
transform	libsodium/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	libsodium/dist-build/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	libsodium/msvc-scripts/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	libsodium/src/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	libsodium/src/libsodium/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	libsodium/src/libsodium/include/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	libsodium/test/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	libsodium/test/default/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	secp256k1/Makefile	/^transform = $(program_transform_name)$/;"	m
trap	ccan/ccan/breakpoint/breakpoint.c	/^static void trap(int signum)$/;"	f	file:
trc	lightningd/handshake/test/run-handshake.c	/^const void *trc;$/;"	v
trc	lightningd/test/run-cryptomsg.c	/^const void *trc;$/;"	v
trc	status.c	/^const void *trc;$/;"	v
try_commit	daemon/peer.c	/^static void try_commit(struct peer *peer)$/;"	f	file:
try_connect_one	daemon/dns.c	/^static void try_connect_one(struct dns_async *d)$/;"	f	file:
try_input	test/test_state_coverage.c	/^static void try_input(const struct peer *peer,$/;"	f	file:
try_reading	ccan/ccan/io/fdpass/test/run.c	/^static struct io_plan *try_reading(struct io_conn *conn, int *fd)$/;"	f	file:
try_reconnect	daemon/peer.c	/^static void try_reconnect(struct peer *peer)$/;"	f	file:
try_writing	ccan/ccan/io/fdpass/test/run.c	/^static struct io_plan *try_writing(struct io_conn *conn, int *pfd)$/;"	f	file:
ts	ccan/ccan/time/time.h	/^	struct timespec ts;$/;"	m	struct:timeabs	typeref:struct:timeabs::timespec
ts	ccan/ccan/time/time.h	/^	struct timespec ts;$/;"	m	struct:timemono	typeref:struct:timemono::timespec
ts	ccan/ccan/time/time.h	/^	struct timespec ts;$/;"	m	struct:timerel	typeref:struct:timerel::timespec
tv	libsodium/test/default/aead_aes256gcm.c	/^tv(void)$/;"	f	file:
tv	libsodium/test/default/aead_chacha20poly1305.c	/^tv(void)$/;"	f	file:
tv	libsodium/test/default/chacha20.c	/^void tv(void)$/;"	f	file:
tv	libsodium/test/default/generichash.c	/^tv(void)$/;"	f	file:
tv	libsodium/test/default/pwhash.c	/^static void tv(void)$/;"	f	file:
tv	libsodium/test/default/pwhash_scrypt.c	/^static void tv(void)$/;"	f	file:
tv2	libsodium/test/default/pwhash.c	/^static void tv2(void)$/;"	f	file:
tv2	libsodium/test/default/pwhash_scrypt.c	/^static void tv2(void)$/;"	f	file:
tv3	libsodium/test/default/pwhash.c	/^static void tv3(void)$/;"	f	file:
tv3	libsodium/test/default/pwhash_scrypt.c	/^static void tv3(void)$/;"	f	file:
tv_ietf	libsodium/test/default/aead_chacha20poly1305.c	/^tv_ietf(void)$/;"	f	file:
tv_ietf	libsodium/test/default/chacha20.c	/^void tv_ietf(void)$/;"	f	file:
tv_nsec	ccan/ccan/time/time.h	/^	long     tv_nsec;       \/* nanoseconds *\/$/;"	m	struct:timespec
tv_sec	ccan/ccan/time/time.h	/^	time_t   tv_sec;        \/* seconds *\/$/;"	m	struct:timespec
two	ccan/ccan/endian/test/compile_ok-constant.c	/^	char two[BSWAP_32(0xFF000000)];$/;"	m	struct:foo	file:
tx	bitcoin/block.h	/^	struct bitcoin_tx **tx;$/;"	m	struct:bitcoin_block	typeref:struct:bitcoin_block::bitcoin_tx
tx	daemon/peer.h	/^		const struct bitcoin_tx *tx;$/;"	m	struct:peer::__anon47	typeref:struct:peer::__anon47::bitcoin_tx
tx	daemon/peer.h	/^		const struct bitcoin_tx *tx;$/;"	m	struct:peer::__anon50	typeref:struct:peer::__anon50::bitcoin_tx
tx	daemon/peer.h	/^	struct bitcoin_tx *tx;$/;"	m	struct:commit_info	typeref:struct:commit_info::bitcoin_tx
tx_bytes	daemon/channel.c	/^static size_t tx_bytes(size_t num_nondust_htlcs)$/;"	f	file:
tx_in_block	daemon/chaintopology.c	/^static bool tx_in_block(const struct block *b,$/;"	f	file:
txid	bitcoin/tx.h	/^	struct sha256_double txid;$/;"	m	struct:bitcoin_tx_input	typeref:struct:bitcoin_tx_input::sha256_double
txid	daemon/peer.h	/^		struct sha256_double txid;$/;"	m	struct:peer::__anon47	typeref:struct:peer::__anon47::sha256_double
txid	daemon/peer.h	/^		struct sha256_double txid;$/;"	m	struct:peer::__anon50	typeref:struct:peer::__anon50::sha256_double
txid	daemon/peer.h	/^	struct sha256_double txid;$/;"	m	struct:anchor_input	typeref:struct:anchor_input::sha256_double
txid	daemon/peer.h	/^	struct sha256_double txid;$/;"	m	struct:commit_info	typeref:struct:commit_info::sha256_double
txid	daemon/peer.h	/^	struct sha256_double txid;$/;"	m	struct:outgoing_tx	typeref:struct:outgoing_tx::sha256_double
txid	daemon/peer.h	/^	struct sha256_double txid;$/;"	m	struct:their_commit	typeref:struct:their_commit::sha256_double
txid	daemon/watch.h	/^	struct sha256_double txid;$/;"	m	struct:txwatch	typeref:struct:txwatch::sha256_double
txid	daemon/watch.h	/^	struct sha256_double txid;$/;"	m	struct:txwatch_output	typeref:struct:txwatch_output::sha256_double
txid	lightning.pb-c.h	/^  Sha256Hash *txid;$/;"	m	struct:_OpenAnchor
txid	wire/test/run-peer-wire.c	/^	struct sha256 txid;$/;"	m	struct:msg_funding_created	typeref:struct:msg_funding_created::sha256	file:
txid_from_hex	lightningd/test/run-commit_tx.c	/^static struct sha256_double txid_from_hex(const char *hex)$/;"	f	file:
txid_hash	daemon/watch.c	/^size_t txid_hash(const struct sha256_double *txid)$/;"	f
txids	daemon/bitcoind.c	/^	struct sha256_double *txids;$/;"	m	struct:normalizing	typeref:struct:normalizing::sha256_double	file:
txids	daemon/chaintopology.c	/^	struct sha256_double *txids;$/;"	m	struct:block	typeref:struct:block::sha256_double	file:
txlocator	daemon/chaintopology.h	/^struct txlocator {$/;"	s
txnum	wire/wire.h	/^	u32 txnum : 24;$/;"	m	struct:channel_id
txnums	daemon/chaintopology.c	/^	u32 *txnums;$/;"	m	struct:block	file:
txo_hash	daemon/watch.c	/^size_t txo_hash(const struct txwatch_output *out)$/;"	f
txout_get_htlc	daemon/output_to_htlc.c	/^struct htlc *txout_get_htlc(struct htlc_output_map *omap,$/;"	f
txowatch	daemon/watch.h	/^struct txowatch {$/;"	s
txowatch_eq	daemon/watch.c	/^bool txowatch_eq(const struct txowatch *w, const struct txwatch_output *out)$/;"	f
txowatch_fire	daemon/watch.c	/^void txowatch_fire(struct lightningd_state *dstate,$/;"	f
txowatch_keyof	daemon/watch.c	/^const struct txwatch_output *txowatch_keyof(const struct txowatch *w)$/;"	f
txowatches	daemon/lightningd.h	/^	struct txowatch_hash txowatches;$/;"	m	struct:lightningd_state	typeref:struct:lightningd_state::txowatch_hash
txs	daemon/chaintopology.c	/^	const char **txs;$/;"	m	struct:txs_to_broadcast	file:
txs_to_broadcast	daemon/chaintopology.c	/^struct txs_to_broadcast {$/;"	s	file:
txwatch	daemon/watch.h	/^struct txwatch {$/;"	s
txwatch_eq	daemon/watch.c	/^bool txwatch_eq(const struct txwatch *w, const struct sha256_double *txid)$/;"	f
txwatch_fire	daemon/watch.c	/^void txwatch_fire(struct lightningd_state *dstate,$/;"	f
txwatch_keyof	daemon/watch.c	/^const struct sha256_double *txwatch_keyof(const struct txwatch *w)$/;"	f
txwatch_output	daemon/watch.h	/^struct txwatch_output {$/;"	s
txwatches	daemon/lightningd.h	/^	struct txwatch_hash txwatches;$/;"	m	struct:lightningd_state	typeref:struct:lightningd_state::txwatch_hash
type	ccan/ccan/cdump/cdump.h	/^	struct cdump_type *type;$/;"	m	struct:cdump_array	typeref:struct:cdump_array::cdump_type
type	ccan/ccan/cdump/cdump.h	/^	struct cdump_type *type;$/;"	m	struct:cdump_member	typeref:struct:cdump_member::cdump_type
type	ccan/ccan/opt/opt.h	/^	enum opt_type type;$/;"	m	struct:opt_table	typeref:enum:opt_table::opt_type
type	ccan/ccan/tal/tal.c	/^	enum prop_type type;$/;"	m	struct:prop_hdr	typeref:enum:prop_hdr::prop_type	file:
type	daemon/broadcast.h	/^	int type;$/;"	m	struct:queued_message
type	daemon/jsmn/jsmn.h	/^	jsmntype_t type;$/;"	m	struct:__anon58
type	daemon/netaddr.h	/^	int type; \/* See socket(2): SOCK_STREAM currently *\/$/;"	m	struct:netaddr
type	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    argon2_type type;$/;"	m	struct:Argon2_instance_t
type	lightning.pb-c.h	/^  uint32_t type;$/;"	m	struct:_NestedPkt
type_defined	ccan/ccan/cdump/cdump.c	/^static bool type_defined(const struct cdump_type *t)$/;"	f	file:
type_to_string	type_to_string.h	/^struct type_to_string {$/;"	s
type_to_string	type_to_string.h	28;"	d
type_to_string_	type_to_string.c	/^char *type_to_string_(const tal_t *ctx,  const char *typename,$/;"	f
types	ccan/ccan/tal/tal.c	/^	enum tal_notify_type types;$/;"	m	struct:notifier	typeref:enum:notifier::tal_notify_type	file:
typesafe_cb	ccan/ccan/typesafe_cb/typesafe_cb.h	86;"	d
typesafe_cb_cast	ccan/ccan/typesafe_cb/typesafe_cb.h	32;"	d
typesafe_cb_cast	ccan/ccan/typesafe_cb/typesafe_cb.h	38;"	d
typesafe_cb_cast3	ccan/ccan/typesafe_cb/typesafe_cb.h	61;"	d
typesafe_cb_postargs	ccan/ccan/typesafe_cb/typesafe_cb.h	130;"	d
typesafe_cb_preargs	ccan/ccan/typesafe_cb/typesafe_cb.h	108;"	d
u	ccan/ccan/cdump/cdump.h	/^	} u;$/;"	m	struct:cdump_type	typeref:union:cdump_type::__anon6
u	ccan/ccan/crypto/ripemd160/ripemd160.h	/^	} u;$/;"	m	struct:ripemd160	typeref:union:ripemd160::__anon11
u	ccan/ccan/crypto/sha256/sha256.h	/^	} u;$/;"	m	struct:sha256	typeref:union:sha256::__anon7
u	ccan/ccan/crypto/siphash24/siphash24.h	/^	} u;$/;"	m	struct:siphash_seed	typeref:union:siphash_seed::__anon9
u	ccan/ccan/intmap/intmap.h	/^	} u;$/;"	m	struct:intmap	typeref:union:intmap::__anon12
u	ccan/ccan/opt/opt.h	/^	} u;$/;"	m	struct:opt_table	typeref:union:opt_table::__anon5
u	ccan/ccan/strmap/strmap.h	/^	} u;$/;"	m	struct:strmap	typeref:union:strmap::__anon1
u	ccan/ccan/tal/tal.c	/^	} u;$/;"	m	struct:notifier	typeref:union:notifier::__anon3	file:
u1	ccan/ccan/io/io_plan.h	/^	union io_plan_union u1, u2;$/;"	m	struct:io_plan_arg	typeref:union:io_plan_arg::io_plan_union
u16	ccan/ccan/short_types/short_types.h	/^typedef uint16_t u16;$/;"	t
u2	ccan/ccan/io/io_plan.h	/^	union io_plan_union u1, u2;$/;"	m	struct:io_plan_arg	typeref:union:io_plan_arg::
u32	ccan/ccan/crypto/ripemd160/ripemd160.h	/^		uint32_t u32[5];$/;"	m	union:ripemd160::__anon11
u32	ccan/ccan/crypto/sha256/sha256.h	/^		uint32_t u32[8];$/;"	m	union:sha256::__anon7
u32	ccan/ccan/crypto/siphash24/siphash24.h	/^		uint32_t u32[4];$/;"	m	union:siphash_seed::__anon9
u32	ccan/ccan/short_types/short_types.h	/^typedef uint32_t u32;$/;"	t
u32	libsodium/src/libsodium/crypto_shorthash/siphash24/ref/shorthash_siphash24.c	/^typedef uint32_t u32;$/;"	t	file:
u32	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128.h	/^  uint32_t u32[4];$/;"	m	union:__anon67
u32	libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c	/^typedef uint32_t u32;$/;"	t	file:
u32	test/test_state_coverage.c	/^		uint32_t u32[sizeof(struct core_state)\/sizeof(uint32_t)];$/;"	m	union:situation::__anon39	file:
u32_to_string	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	/^static void u32_to_string(char *str, uint32_t x) {$/;"	f	file:
u64	ccan/ccan/crypto/siphash24/siphash24.h	/^		uint64_t u64;$/;"	m	union:siphash24_ctx::__anon10
u64	ccan/ccan/crypto/siphash24/siphash24.h	/^		uint64_t u64[2];$/;"	m	union:siphash_seed::__anon9
u64	ccan/ccan/short_types/short_types.h	/^typedef uint64_t u64;$/;"	t
u64	libsodium/src/libsodium/crypto_shorthash/siphash24/ref/shorthash_siphash24.c	/^typedef uint64_t u64;$/;"	t	file:
u64	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128.h	/^  uint64_t u64[2];$/;"	m	union:__anon67
u8	ccan/ccan/crypto/ripemd160/ripemd160.h	/^		unsigned char u8[20];$/;"	m	union:ripemd160::__anon11
u8	ccan/ccan/crypto/sha256/sha256.h	/^		unsigned char u8[32];$/;"	m	union:sha256::__anon7
u8	ccan/ccan/crypto/siphash24/siphash24.h	/^		unsigned char u8[16];$/;"	m	union:siphash_seed::__anon9
u8	ccan/ccan/crypto/siphash24/siphash24.h	/^		unsigned char u8[8];$/;"	m	union:siphash24_ctx::__anon10
u8	ccan/ccan/short_types/short_types.h	/^typedef uint8_t u8;$/;"	t
u8	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^typedef uint8_t u8;$/;"	t	file:
u8	libsodium/src/libsodium/crypto_shorthash/siphash24/ref/shorthash_siphash24.c	/^typedef uint8_t   u8;$/;"	t	file:
u8	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128.h	/^  uint8_t  u8[16];$/;"	m	union:__anon67
u8	libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c	/^typedef uint8_t  u8;$/;"	t	file:
uint128_t	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-ref.c	/^typedef unsigned __int128 uint128_t;$/;"	t	file:
uint128_t	libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-ref.c	/^typedef unsigned uint128_t __attribute__ ((mode(TI)));$/;"	t	file:
uint128_t	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	/^typedef unsigned __int128 uint128_t;$/;"	t
uint128_t	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	/^typedef unsigned uint128_t __attribute__ ((mode(TI)));$/;"	t
uint128_t	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^typedef unsigned __int128 uint128_t;$/;"	t	file:
uint128_t	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^typedef unsigned uint128_t __attribute__ ((mode(TI)));$/;"	t	file:
uint128_t	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^typedef unsigned uint128_t __attribute__ ((mode(TI)));$/;"	t	file:
uint128_t	secp256k1/src/util.h	/^SECP256K1_GNUC_EXT typedef unsigned __int128 uint128_t;$/;"	t
uint32	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/types.h	/^typedef uint32_t uint32;$/;"	t
uint64	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/types.h	/^typedef uint64_t uint64;$/;"	t
uintmap_add	ccan/ccan/intmap/intmap.h	173;"	d
uintmap_after	ccan/ccan/intmap/intmap.h	294;"	d
uintmap_clear	ccan/ccan/intmap/intmap.h	245;"	d
uintmap_del	ccan/ccan/intmap/intmap.h	214;"	d
uintmap_empty	ccan/ccan/intmap/intmap.h	105;"	d
uintmap_first	ccan/ccan/intmap/intmap.h	268;"	d
uintmap_get	ccan/ccan/intmap/intmap.h	134;"	d
uintmap_init	ccan/ccan/intmap/intmap.h	75;"	d
uintmap_unwrap_	ccan/ccan/intmap/intmap.h	315;"	d
umap	ccan/ccan/intmap/test/run-order-smallsize.c	/^typedef UINTMAP(uint8_t *) umap;$/;"	t	file:
umap	ccan/ccan/intmap/test/run-order.c	/^typedef UINTMAP(unsigned int *) umap;$/;"	t	file:
uncounting_illegal_callback_fn	secp256k1/src/tests.c	/^static void uncounting_illegal_callback_fn(const char* str, void* data) {$/;"	f	file:
uniform	libsodium/src/libsodium/include/sodium/randombytes.h	/^    uint32_t    (*uniform)(const uint32_t upper_bound); \/* optional, a default implementation will be used if NULL *\/$/;"	m	struct:randombytes_implementation
unions	ccan/ccan/cdump/cdump.h	/^	cdump_map_t unions;$/;"	m	struct:cdump_definitions
unique_id	lightningd/gossip/gossip.c	/^	u64 unique_id;$/;"	m	struct:peer	file:
unique_id	lightningd/peer_control.h	/^	u64 unique_id;$/;"	m	struct:peer
unlikely	ccan/ccan/likely/likely.h	53;"	d
unlikely	ccan/ccan/likely/likely.h	56;"	d
unlikely	ccan/ccan/likely/likely.h	63;"	d
unlink_noerr	ccan/ccan/noerr/noerr.c	/^int unlink_noerr(const char *pathname)$/;"	f
unpaid	daemon/invoice.c	/^	struct list_head paid, unpaid;$/;"	m	struct:invoices	typeref:struct:invoices::	file:
untrimmed	lightningd/commit_tx.c	/^static const struct htlc **untrimmed(const tal_t *ctx,$/;"	f	file:
unused	ccan/ccan/htable/test/run-type-int.c	/^	unsigned char unused;$/;"	m	struct:obj	file:
unused	ccan/ccan/htable/test/run-type.c	/^	unsigned char unused;$/;"	m	struct:obj	file:
unused_tal_destructor	ccan/ccan/tal/benchmark/samba-allocs.c	/^static void unused_tal_destructor(void *p)$/;"	f	file:
unused_talloc_destructor	ccan/ccan/tal/benchmark/samba-allocs.c	/^static int unused_talloc_destructor(void *p)$/;"	f	file:
update_add_htlc	lightning.pb-c.h	/^    UpdateAddHtlc *update_add_htlc;$/;"	m	union:_Pkt::__anon45
update_add_htlc__descriptor	lightning.pb-c.c	/^const ProtobufCMessageDescriptor update_add_htlc__descriptor =$/;"	v
update_add_htlc__field_descriptors	lightning.pb-c.c	/^static const ProtobufCFieldDescriptor update_add_htlc__field_descriptors[5] =$/;"	v	file:
update_add_htlc__field_indices_by_name	lightning.pb-c.c	/^static const unsigned update_add_htlc__field_indices_by_name[] = {$/;"	v	file:
update_add_htlc__free_unpacked	lightning.pb-c.c	/^void   update_add_htlc__free_unpacked$/;"	f
update_add_htlc__get_packed_size	lightning.pb-c.c	/^size_t update_add_htlc__get_packed_size$/;"	f
update_add_htlc__init	lightning.pb-c.c	/^void   update_add_htlc__init$/;"	f
update_add_htlc__number_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange update_add_htlc__number_ranges[1 + 1] =$/;"	v	file:
update_add_htlc__pack	lightning.pb-c.c	/^size_t update_add_htlc__pack$/;"	f
update_add_htlc__pack_to_buffer	lightning.pb-c.c	/^size_t update_add_htlc__pack_to_buffer$/;"	f
update_add_htlc__unpack	lightning.pb-c.c	/^       update_add_htlc__unpack$/;"	f
update_add_htlc_eq	wire/test/run-peer-wire.c	/^static bool update_add_htlc_eq(const struct msg_update_add_htlc *a,$/;"	f	file:
update_and_expire	ccan/ccan/timer/test/run-corrupt.c	/^static void update_and_expire(struct timers *timers)$/;"	f	file:
update_bounds	ccan/ccan/tal/tal.c	/^static void update_bounds(const void *new, size_t size)$/;"	f	file:
update_commit	lightning.pb-c.h	/^    UpdateCommit *update_commit;$/;"	m	union:_Pkt::__anon45
update_commit__descriptor	lightning.pb-c.c	/^const ProtobufCMessageDescriptor update_commit__descriptor =$/;"	v
update_commit__field_descriptors	lightning.pb-c.c	/^static const ProtobufCFieldDescriptor update_commit__field_descriptors[1] =$/;"	v	file:
update_commit__field_indices_by_name	lightning.pb-c.c	/^static const unsigned update_commit__field_indices_by_name[] = {$/;"	v	file:
update_commit__free_unpacked	lightning.pb-c.c	/^void   update_commit__free_unpacked$/;"	f
update_commit__get_packed_size	lightning.pb-c.c	/^size_t update_commit__get_packed_size$/;"	f
update_commit__init	lightning.pb-c.c	/^void   update_commit__init$/;"	f
update_commit__number_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange update_commit__number_ranges[1 + 1] =$/;"	v	file:
update_commit__pack	lightning.pb-c.c	/^size_t update_commit__pack$/;"	f
update_commit__pack_to_buffer	lightning.pb-c.c	/^size_t update_commit__pack_to_buffer$/;"	f
update_commit__unpack	lightning.pb-c.c	/^       update_commit__unpack$/;"	f
update_common	ccan/ccan/htable/htable.c	/^static COLD void update_common(struct htable *ht, const void *p)$/;"	f	file:
update_core	test/test_state_coverage.c	/^static void update_core(struct core_state *core, const struct peer *peer)$/;"	f	file:
update_fail_htlc	lightning.pb-c.h	/^    UpdateFailHtlc *update_fail_htlc;$/;"	m	union:_Pkt::__anon45
update_fail_htlc__descriptor	lightning.pb-c.c	/^const ProtobufCMessageDescriptor update_fail_htlc__descriptor =$/;"	v
update_fail_htlc__field_descriptors	lightning.pb-c.c	/^static const ProtobufCFieldDescriptor update_fail_htlc__field_descriptors[2] =$/;"	v	file:
update_fail_htlc__field_indices_by_name	lightning.pb-c.c	/^static const unsigned update_fail_htlc__field_indices_by_name[] = {$/;"	v	file:
update_fail_htlc__free_unpacked	lightning.pb-c.c	/^void   update_fail_htlc__free_unpacked$/;"	f
update_fail_htlc__get_packed_size	lightning.pb-c.c	/^size_t update_fail_htlc__get_packed_size$/;"	f
update_fail_htlc__init	lightning.pb-c.c	/^void   update_fail_htlc__init$/;"	f
update_fail_htlc__number_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange update_fail_htlc__number_ranges[1 + 1] =$/;"	v	file:
update_fail_htlc__pack	lightning.pb-c.c	/^size_t update_fail_htlc__pack$/;"	f
update_fail_htlc__pack_to_buffer	lightning.pb-c.c	/^size_t update_fail_htlc__pack_to_buffer$/;"	f
update_fail_htlc__unpack	lightning.pb-c.c	/^       update_fail_htlc__unpack$/;"	f
update_fail_htlc_eq	wire/test/run-peer-wire.c	/^static bool update_fail_htlc_eq(const struct msg_update_fail_htlc *a,$/;"	f	file:
update_fee	daemon/chaintopology.c	/^static void update_fee(struct lightningd_state *dstate, u64 rate, u64 *feerate)$/;"	f	file:
update_fee	lightning.pb-c.h	/^    UpdateFee *update_fee;$/;"	m	union:_Pkt::__anon45
update_fee__descriptor	lightning.pb-c.c	/^const ProtobufCMessageDescriptor update_fee__descriptor =$/;"	v
update_fee__field_descriptors	lightning.pb-c.c	/^static const ProtobufCFieldDescriptor update_fee__field_descriptors[1] =$/;"	v	file:
update_fee__field_indices_by_name	lightning.pb-c.c	/^static const unsigned update_fee__field_indices_by_name[] = {$/;"	v	file:
update_fee__free_unpacked	lightning.pb-c.c	/^void   update_fee__free_unpacked$/;"	f
update_fee__get_packed_size	lightning.pb-c.c	/^size_t update_fee__get_packed_size$/;"	f
update_fee__init	lightning.pb-c.c	/^void   update_fee__init$/;"	f
update_fee__number_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange update_fee__number_ranges[1 + 1] =$/;"	v	file:
update_fee__pack	lightning.pb-c.c	/^size_t update_fee__pack$/;"	f
update_fee__pack_to_buffer	lightning.pb-c.c	/^size_t update_fee__pack_to_buffer$/;"	f
update_fee__unpack	lightning.pb-c.c	/^       update_fee__unpack$/;"	f
update_fee_eq	wire/test/run-peer-wire.c	/^static bool update_fee_eq(const struct msg_update_fee *a,$/;"	f	file:
update_first	ccan/ccan/timer/timer.c	/^static bool update_first(struct timers *timers)$/;"	f	file:
update_fulfill_htlc	lightning.pb-c.h	/^    UpdateFulfillHtlc *update_fulfill_htlc;$/;"	m	union:_Pkt::__anon45
update_fulfill_htlc__descriptor	lightning.pb-c.c	/^const ProtobufCMessageDescriptor update_fulfill_htlc__descriptor =$/;"	v
update_fulfill_htlc__field_descriptors	lightning.pb-c.c	/^static const ProtobufCFieldDescriptor update_fulfill_htlc__field_descriptors[2] =$/;"	v	file:
update_fulfill_htlc__field_indices_by_name	lightning.pb-c.c	/^static const unsigned update_fulfill_htlc__field_indices_by_name[] = {$/;"	v	file:
update_fulfill_htlc__free_unpacked	lightning.pb-c.c	/^void   update_fulfill_htlc__free_unpacked$/;"	f
update_fulfill_htlc__get_packed_size	lightning.pb-c.c	/^size_t update_fulfill_htlc__get_packed_size$/;"	f
update_fulfill_htlc__init	lightning.pb-c.c	/^void   update_fulfill_htlc__init$/;"	f
update_fulfill_htlc__number_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange update_fulfill_htlc__number_ranges[1 + 1] =$/;"	v	file:
update_fulfill_htlc__pack	lightning.pb-c.c	/^size_t update_fulfill_htlc__pack$/;"	f
update_fulfill_htlc__pack_to_buffer	lightning.pb-c.c	/^size_t update_fulfill_htlc__pack_to_buffer$/;"	f
update_fulfill_htlc__unpack	lightning.pb-c.c	/^       update_fulfill_htlc__unpack$/;"	f
update_fulfill_htlc_eq	wire/test/run-peer-wire.c	/^static bool update_fulfill_htlc_eq(const struct msg_update_fulfill_htlc *a,$/;"	f	file:
update_revocation	lightning.pb-c.h	/^    UpdateRevocation *update_revocation;$/;"	m	union:_Pkt::__anon45
update_revocation__descriptor	lightning.pb-c.c	/^const ProtobufCMessageDescriptor update_revocation__descriptor =$/;"	v
update_revocation__field_descriptors	lightning.pb-c.c	/^static const ProtobufCFieldDescriptor update_revocation__field_descriptors[2] =$/;"	v	file:
update_revocation__field_indices_by_name	lightning.pb-c.c	/^static const unsigned update_revocation__field_indices_by_name[] = {$/;"	v	file:
update_revocation__free_unpacked	lightning.pb-c.c	/^void   update_revocation__free_unpacked$/;"	f
update_revocation__get_packed_size	lightning.pb-c.c	/^size_t update_revocation__get_packed_size$/;"	f
update_revocation__init	lightning.pb-c.c	/^void   update_revocation__init$/;"	f
update_revocation__number_ranges	lightning.pb-c.c	/^static const ProtobufCIntRange update_revocation__number_ranges[1 + 1] =$/;"	v	file:
update_revocation__pack	lightning.pb-c.c	/^size_t update_revocation__pack$/;"	f
update_revocation__pack_to_buffer	lightning.pb-c.c	/^size_t update_revocation__pack_to_buffer$/;"	f
update_revocation__unpack	lightning.pb-c.c	/^       update_revocation__unpack$/;"	f
update_trail	test/test_state_coverage.c	/^static void update_trail(struct trail *t,$/;"	f	file:
upper_bits	ccan/ccan/isaac/isaac.c	/^static inline uint32_t upper_bits(uint32_t y)$/;"	f	file:
upper_bits	ccan/ccan/isaac/isaac64.c	/^static inline uint32_t upper_bits(uint32_t y)$/;"	f	file:
upto_field	wire/test/run-peer-wire.c	41;"	d	file:
url	contrib/pylightning/setup.py	/^      url='http:\/\/github.com\/ElementsProject\/lightning',$/;"	v
us	test/test_state_coverage.c	/^	struct peer us, other;$/;"	m	struct:fail_details	typeref:struct:fail_details::peer	file:
usage	bitcoin/libbase58/clitool.c	/^void usage(const char *prog)$/;"	f	file:
usage_error	libsodium/build-aux/test-driver	/^usage_error ()$/;"	f
usage_error	secp256k1/build-aux/test-driver	/^usage_error ()$/;"	f
use_irc	daemon/lightningd.h	/^	bool use_irc;$/;"	m	struct:config
used	daemon/jsonrpc.h	/^	size_t used;$/;"	m	struct:json_connection
uses_witness	bitcoin/tx.c	/^static bool uses_witness(const struct bitcoin_tx *tx)$/;"	f	file:
v	ccan/ccan/crypto/siphash24/siphash24.h	/^	uint64_t v[4];$/;"	m	struct:siphash24_ctx
v	ccan/ccan/intmap/intmap.h	/^	void *v;$/;"	m	struct:intmap
v	ccan/ccan/strmap/strmap.h	/^	void *v;$/;"	m	struct:strmap
v	daemon/gen_feechange_state_names.h	/^	enum feechange_state v;$/;"	m	struct:__anon46	typeref:enum:__anon46::feechange_state
v	daemon/gen_htlc_state_names.h	/^	enum htlc_state v;$/;"	m	struct:__anon60	typeref:enum:__anon60::htlc_state
v	daemon/gen_pkt_names.h	/^	Pkt__PktCase v;$/;"	m	struct:__anon61
v	daemon/gen_state_names.h	/^	enum state v;$/;"	m	struct:__anon51	typeref:enum:__anon51::state
v	daemon/gen_state_names.h	/^	enum state_input v;$/;"	m	struct:__anon52	typeref:enum:__anon52::state_input
v	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^typedef struct block_ { uint64_t v[ARGON2_QWORDS_IN_BLOCK]; } block;$/;"	m	struct:block_
v	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51.h	/^    uint64_t v[5];$/;"	m	struct:__anon66
v	lightningd/handshake/handshake.c	/^	u8 v;$/;"	m	struct:act_one	file:
v	lightningd/handshake/handshake.c	/^	u8 v;$/;"	m	struct:act_three	file:
v	lightningd/handshake/handshake.c	/^	u8 v;$/;"	m	struct:act_two	file:
v	secp256k1/src/hash.h	/^    unsigned char v[32];$/;"	m	struct:__anon24
v0_0	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S	/^v0_0: .quad 0, 0$/;"	l
v0_0	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	4;"	d
v121666_121666	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S	/^v121666_121666: .quad 121666, 121666$/;"	l
v121666_121666	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	12;"	d
v19_19	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S	/^v19_19: .quad 19, 19$/;"	l
v19_19	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	9;"	d
v1_0	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S	/^v1_0: .quad 1, 0$/;"	l
v1_0	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	5;"	d
v2_1	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S	/^v2_1: .quad 2, 1$/;"	l
v2_1	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	6;"	d
v38_1	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S	/^v38_1: .quad 38, 1$/;"	l
v38_1	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	10;"	d
v38_38	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S	/^v38_38: .quad 38, 38$/;"	l
v38_38	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	11;"	d
v9_0	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S	/^v9_0: .quad 9, 0$/;"	l
v9_0	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	7;"	d
v9_9	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S	/^v9_9: .quad 9, 9$/;"	l
v9_9	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	8;"	d
val	ccan/ccan/str/test/compile_fail-STR_MAX_CHARS.c	/^	int val;$/;"	m	struct:s	file:
val_container	ccan/ccan/tcon/test/compile_ok-value.c	/^struct val_container {$/;"	s	file:
valid	test/test_state_coverage.c	/^	bool valid;$/;"	m	struct:core_state	file:
validate_inputs	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^int validate_inputs(const argon2_context *context) {$/;"	f
value	ccan/ccan/cdump/cdump.h	/^	const char *value;$/;"	m	struct:cdump_enum_val
value	ccan/ccan/order/test/fancy_cmp.h	/^	unsigned value;$/;"	m	struct:item
varint_get	bitcoin/varint.c	/^size_t varint_get(const u8 *p, size_t max, varint_t *val)$/;"	f
varint_put	bitcoin/varint.c	/^size_t varint_put(u8 buf[VARINT_MAX_LEN], varint_t v)$/;"	f
varint_t	bitcoin/varint.h	8;"	d
vbroadcastss	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vbroadcastss 0(%rsi),%xmm10$/;"	l
vbroadcastss	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vbroadcastss 0(%rsi),%xmm10$/;"	l
vec	libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c	/^typedef unsigned int vec __attribute__ ((vector_size(16)));$/;"	t	file:
vectors	ccan/ccan/crypto/siphash24/test/run.c	/^static const uint8_t vectors[][sizeof(uint64_t)] =$/;"	v	file:
verbose	ccan/tools/configurator/configurator.c	/^static int verbose;$/;"	v	file:
verbose	check-bolt.c	/^static bool verbose = false;$/;"	v	file:
verbose	test/test_protocol.c	/^static bool verbose = false;$/;"	v	file:
verify	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    public static boolean verify(byte[] data, byte[] signature, byte[] pub) throws AssertFailException{$/;"	m	class:NativeSecp256k1
verify1_DEPENDENCIES	libsodium/test/default/Makefile	/^verify1_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
verify1_LDADD	libsodium/test/default/Makefile	/^verify1_LDADD = $(TESTS_LDADD)$/;"	m
verify1_OBJECTS	libsodium/test/default/Makefile	/^verify1_OBJECTS = verify1.$(OBJEXT)$/;"	m
verify1_SOURCE	libsodium/test/default/Makefile	/^verify1_SOURCE = cmptest.h verify1.c$/;"	m
verify1_SOURCES	libsodium/test/default/Makefile	/^verify1_SOURCES = verify1.c$/;"	m
verify_signed_privmsg	daemon/irc_announce.c	/^static bool verify_signed_privmsg($/;"	f	file:
version	bitcoin/block.h	/^	le32 version;$/;"	m	struct:bitcoin_block_hdr
version	bitcoin/tx.h	/^	u32 version;$/;"	m	struct:bitcoin_tx
version	contrib/pylightning/setup.py	/^      version='0.0.1',$/;"	v
version	daemon/sphinx.h	/^	u8 version;$/;"	m	struct:onionpacket
version	version.c	/^const char *version(void)$/;"	f
version_and_exit	version.c	/^char *version_and_exit(const void *unused)$/;"	f
vfprintf	ccan/ccan/opt/test/run-helpers.c	20;"	d	file:
visited_state	test/test_state_coverage.c	/^static bool visited_state(const struct sithash *sithash,$/;"	f	file:
void_container	ccan/ccan/tcon/test/compile_ok-void.c	/^struct void_container {$/;"	s	file:
vp	ccan/ccan/io/io_plan.h	/^	void *vp;$/;"	m	union:io_plan_union
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm0,%xmm0,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm1,%xmm0,%xmm11$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm2,%xmm2,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm2,%xmm2,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm3,%xmm2,%xmm1$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm4,%xmm4,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm5,%xmm4,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm6,%xmm6,%xmm14$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm7,%xmm6,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm8,%xmm8,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm9,%xmm8,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm9,%xmm9,%xmm13$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc0(%rip),%xmm11,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc0(%rip),%xmm2,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc0(%rip),%xmm9,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc2(%rip),%xmm0,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc2(%rip),%xmm1,%xmm4$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc2(%rip),%xmm3,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc2(%rip),%xmm3,%xmm5$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc2(%rip),%xmm5,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc2(%rip),%xmm5,%xmm7$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc2(%rip),%xmm7,%xmm8$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc2(%rip),%xmm7,%xmm9$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc2(%rip),%xmm9,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm0,%xmm0,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm1,%xmm0,%xmm11$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm2,%xmm2,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm2,%xmm2,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm3,%xmm2,%xmm1$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm4,%xmm4,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm5,%xmm4,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm6,%xmm6,%xmm14$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm7,%xmm6,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm8,%xmm8,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm9,%xmm8,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm9,%xmm9,%xmm13$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc0(%rip),%xmm11,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc0(%rip),%xmm2,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc0(%rip),%xmm9,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc2(%rip),%xmm0,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc2(%rip),%xmm1,%xmm4$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc2(%rip),%xmm3,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc2(%rip),%xmm3,%xmm5$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc2(%rip),%xmm5,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc2(%rip),%xmm5,%xmm7$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc2(%rip),%xmm7,%xmm8$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc2(%rip),%xmm7,%xmm9$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc2(%rip),%xmm9,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm0,%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm0,%xmm10,%xmm11$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm0,%xmm10,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm0,%xmm12,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm1,%xmm10,%xmm13$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm1,%xmm10,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm1,%xmm12,%xmm0$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm1,%xmm12,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm10,%xmm10,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm13,%xmm9,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm14,%xmm0,%xmm0$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm14,%xmm4,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm14,%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm14,%xmm6,%xmm6$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm15,%xmm13,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm15,%xmm14,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm15,%xmm14,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm15,%xmm2,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm15,%xmm4,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm15,%xmm4,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm15,%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm15,%xmm6,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm15,%xmm7,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm15,%xmm8,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm2,%xmm0,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm2,%xmm10,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm2,%xmm13,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm2,%xmm2,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm3,%xmm10,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm3,%xmm10,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm3,%xmm10,%xmm6$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm3,%xmm10,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm3,%xmm12,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm3,%xmm12,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm3,%xmm12,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm4,%xmm0,%xmm5$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm4,%xmm10,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm4,%xmm13,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm4,%xmm2,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm4,%xmm4,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm4,%xmm6,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm4,%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm5,%xmm10,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm5,%xmm12,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm6,%xmm0,%xmm0$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm6,%xmm0,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm6,%xmm13,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm6,%xmm2,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm6,%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm7,%xmm10,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm7,%xmm10,%xmm5$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm7,%xmm12,%xmm8$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm8,%xmm0,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm8,%xmm14,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm8,%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm8,%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm8,%xmm8,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm9,%xmm10,%xmm11$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm9,%xmm10,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm9,%xmm12,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 0(%rsp),%xmm10,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 0(%rsp),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 0(%rsp),%xmm2,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 112(%rsp),%xmm10,%xmm8$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 112(%rsp),%xmm13,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 112(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 128(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 144(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 144(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 16(%rsp),%xmm13,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 16(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 16(%rsp),%xmm6,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 160(%rsp),%xmm0,%xmm0$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 160(%rsp),%xmm1,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 160(%rsp),%xmm1,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 160(%rsp),%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 160(%rsp),%xmm3,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 176(%rsp),%xmm1,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 176(%rsp),%xmm1,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 176(%rsp),%xmm2,%xmm6$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 176(%rsp),%xmm3,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 192(%rsp),%xmm0,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 208(%rsp),%xmm1,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 208(%rsp),%xmm2,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 208(%rsp),%xmm3,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 224(%rsp),%xmm0,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 224(%rsp),%xmm1,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 240(%rsp),%xmm2,%xmm11$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 240(%rsp),%xmm3,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 256(%rsp),%xmm0,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 256(%rsp),%xmm1,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 256(%rsp),%xmm1,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 272(%rsp),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 288(%rsp),%xmm0,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 288(%rsp),%xmm1,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 288(%rsp),%xmm1,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 288(%rsp),%xmm3,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 304(%rsp),%xmm0,%xmm0$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 304(%rsp),%xmm3,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 304(%rsp),%xmm3,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 304(%rsp),%xmm9,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 320(%rsp),%xmm1,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 336(%rsp),%xmm3,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 336(%rsp),%xmm3,%xmm11$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 336(%rsp),%xmm9,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 352(%rsp),%xmm0,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 352(%rsp),%xmm1,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 368(%rsp),%xmm3,%xmm13$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 368(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 384(%rsp),%xmm0,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 384(%rsp),%xmm1,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 384(%rsp),%xmm3,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 400(%rsp),%xmm3,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 416(%rsp),%xmm0,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 416(%rsp),%xmm1,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 416(%rsp),%xmm3,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 416(%rsp),%xmm9,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 432(%rsp),%xmm0,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 432(%rsp),%xmm1,%xmm0$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 432(%rsp),%xmm3,%xmm6$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 432(%rsp),%xmm3,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 432(%rsp),%xmm9,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 448(%rsp),%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 448(%rsp),%xmm2,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 448(%rsp),%xmm6,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 448(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 464(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 48(%rsp),%xmm10,%xmm5$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 48(%rsp),%xmm13,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 48(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 48(%rsp),%xmm2,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 48(%rsp),%xmm6,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 480(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 480(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 480(%rsp),%xmm1,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 480(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 480(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 480(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 480(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 480(%rsp),%xmm6,%xmm6$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 480(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 496(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 512(%rsp),%xmm0,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 512(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 512(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 512(%rsp),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 512(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 512(%rsp),%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 512(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 512(%rsp),%xmm6,%xmm5$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 528(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 528(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 528(%rsp),%xmm1,%xmm8$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 528(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 528(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 544(%rsp),%xmm14,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 544(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 544(%rsp),%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 544(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 560(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 560(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 560(%rsp),%xmm1,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 560(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 560(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 560(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 560(%rsp),%xmm6,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 576(%rsp),%xmm0,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 576(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 576(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 576(%rsp),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 576(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 576(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 576(%rsp),%xmm6,%xmm8$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 592(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 592(%rsp),%xmm0,%xmm11$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 592(%rsp),%xmm1,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 592(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 592(%rsp),%xmm14,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 592(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 592(%rsp),%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 592(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 592(%rsp),%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 592(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 608(%rsp),%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 624(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 624(%rsp),%xmm0,%xmm13$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 624(%rsp),%xmm1,%xmm11$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 624(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 624(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 624(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 624(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 624(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 624(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 624(%rsp),%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 624(%rsp),%xmm6,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 624(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 64(%rsp),%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 640(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 640(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 640(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 640(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 640(%rsp),%xmm6,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 640(%rsp),%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 640(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 656(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 656(%rsp),%xmm1,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 656(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 656(%rsp),%xmm14,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 656(%rsp),%xmm8,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 688(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 688(%rsp),%xmm1,%xmm13$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 688(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 688(%rsp),%xmm14,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 688(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 688(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 688(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 688(%rsp),%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 688(%rsp),%xmm6,%xmm11$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 704(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 704(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 704(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 704(%rsp),%xmm6,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 720(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 720(%rsp),%xmm1,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 720(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 736(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 736(%rsp),%xmm1,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 736(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 736(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 736(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 736(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 736(%rsp),%xmm6,%xmm13$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 752(%rsp),%xmm6,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 768(%rsp),%xmm1,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 80(%rsp),%xmm10,%xmm0$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 80(%rsp),%xmm13,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 80(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 80(%rsp),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 96(%rsp),%xmm4,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 96(%rsp),%xmm6,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq v38_38(%rip),%xmm14,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq v38_38(%rip),%xmm7,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm0,%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm0,%xmm10,%xmm11$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm0,%xmm10,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm0,%xmm12,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm1,%xmm10,%xmm13$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm1,%xmm10,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm1,%xmm12,%xmm0$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm1,%xmm12,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm10,%xmm10,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm13,%xmm9,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm14,%xmm0,%xmm0$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm14,%xmm4,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm14,%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm14,%xmm6,%xmm6$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm15,%xmm13,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm15,%xmm14,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm15,%xmm14,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm15,%xmm2,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm15,%xmm4,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm15,%xmm4,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm15,%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm15,%xmm6,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm15,%xmm7,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm15,%xmm8,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm2,%xmm0,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm2,%xmm10,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm2,%xmm13,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm2,%xmm2,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm3,%xmm10,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm3,%xmm10,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm3,%xmm10,%xmm6$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm3,%xmm10,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm3,%xmm12,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm3,%xmm12,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm3,%xmm12,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm4,%xmm0,%xmm5$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm4,%xmm10,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm4,%xmm13,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm4,%xmm2,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm4,%xmm4,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm4,%xmm6,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm4,%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm5,%xmm10,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm5,%xmm12,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm6,%xmm0,%xmm0$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm6,%xmm0,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm6,%xmm13,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm6,%xmm2,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm6,%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm7,%xmm10,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm7,%xmm10,%xmm5$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm7,%xmm12,%xmm8$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm8,%xmm0,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm8,%xmm14,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm8,%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm8,%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm8,%xmm8,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm9,%xmm10,%xmm11$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm9,%xmm10,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm9,%xmm12,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 0(%rsp),%xmm10,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 0(%rsp),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 0(%rsp),%xmm2,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 112(%rsp),%xmm10,%xmm8$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 112(%rsp),%xmm13,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 112(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 128(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 144(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 144(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 16(%rsp),%xmm13,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 16(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 16(%rsp),%xmm6,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 160(%rsp),%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 160(%rsp),%xmm2,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 160(%rsp),%xmm6,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 160(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 176(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 192(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 192(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 192(%rsp),%xmm1,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 192(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 192(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 192(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 192(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 192(%rsp),%xmm6,%xmm6$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 192(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 208(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 224(%rsp),%xmm0,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 224(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 224(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 224(%rsp),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 224(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 224(%rsp),%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 224(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 224(%rsp),%xmm6,%xmm5$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 240(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 240(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 240(%rsp),%xmm1,%xmm8$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 240(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 240(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 256(%rsp),%xmm14,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 256(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 256(%rsp),%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 256(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 272(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 272(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 272(%rsp),%xmm1,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 272(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 272(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 272(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 272(%rsp),%xmm6,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 288(%rsp),%xmm0,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 288(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 288(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 288(%rsp),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 288(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 288(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 288(%rsp),%xmm6,%xmm8$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 304(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 304(%rsp),%xmm0,%xmm11$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 304(%rsp),%xmm1,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 304(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 304(%rsp),%xmm14,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 304(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 304(%rsp),%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 304(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 304(%rsp),%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 304(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 320(%rsp),%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 336(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 336(%rsp),%xmm0,%xmm13$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 336(%rsp),%xmm1,%xmm11$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 336(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 336(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 336(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 336(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 336(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 336(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 336(%rsp),%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 336(%rsp),%xmm6,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 336(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 352(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 352(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 352(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 352(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 352(%rsp),%xmm6,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 352(%rsp),%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 352(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 368(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 368(%rsp),%xmm1,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 368(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 368(%rsp),%xmm14,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 368(%rsp),%xmm8,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 400(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 400(%rsp),%xmm1,%xmm13$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 400(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 400(%rsp),%xmm14,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 400(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 400(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 400(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 400(%rsp),%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 400(%rsp),%xmm6,%xmm11$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 416(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 416(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 416(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 416(%rsp),%xmm6,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 432(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 432(%rsp),%xmm1,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 432(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 448(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 448(%rsp),%xmm1,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 448(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 448(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 448(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 448(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 448(%rsp),%xmm6,%xmm13$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 464(%rsp),%xmm6,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 48(%rsp),%xmm10,%xmm5$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 48(%rsp),%xmm13,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 48(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 48(%rsp),%xmm2,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 48(%rsp),%xmm6,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 480(%rsp),%xmm1,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 64(%rsp),%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 80(%rsp),%xmm10,%xmm0$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 80(%rsp),%xmm13,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 80(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 80(%rsp),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 96(%rsp),%xmm4,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 96(%rsp),%xmm6,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq v38_38(%rip),%xmm14,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq v38_38(%rip),%xmm7,%xmm15$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsllq $4,%xmm0,%xmm1$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsllq $4,%xmm10,%xmm11$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsllq $4,%xmm2,%xmm4$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsllq $4,%xmm3,%xmm9$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsllq $4,%xmm0,%xmm1$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsllq $4,%xmm10,%xmm11$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsllq $4,%xmm2,%xmm4$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsllq $4,%xmm3,%xmm9$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm0,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm0,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm1,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm10,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm10,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm11,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm12,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm12,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm13,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm14,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm14,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm2,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm3,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm3,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm4,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm5,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm5,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm5,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm7,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm7,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm7,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm8,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm9,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm0,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm1,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm1,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm11,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm11,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm11,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm12,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm13,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm13,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm2,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm3,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm4,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm5,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm6,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm6,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm6,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm7,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm8,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm8,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm8,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm9,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm9,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm9,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm0,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm0,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm1,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm10,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm10,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm11,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm12,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm12,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm13,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm14,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm14,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm2,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm3,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm3,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm4,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm5,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm5,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm5,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm7,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm7,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm7,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm8,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm9,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm0,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm1,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm1,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm11,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm11,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm11,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm12,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm13,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm13,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm2,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm3,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm4,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm5,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm6,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm6,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm6,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm7,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm8,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm8,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm8,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm9,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm9,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm9,%xmm2$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm0,%xmm1,%xmm0$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm0,%xmm10,%xmm0$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm0,%xmm13,%xmm9$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm0,%xmm5,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm0,%xmm9,%xmm5$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm1,%xmm2,%xmm10$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm1,%xmm2,%xmm3$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm1,%xmm3,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm1,%xmm5,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm10,%xmm11,%xmm12$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm10,%xmm3,%xmm9$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm10,%xmm8,%xmm0$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm10,%xmm9,%xmm0$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm10,%xmm9,%xmm5$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm11,%xmm0,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm11,%xmm3,%xmm2$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm12,%xmm11,%xmm7$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm12,%xmm2,%xmm0$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm13,%xmm11,%xmm9$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm14,%xmm1,%xmm3$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm14,%xmm13,%xmm9$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm14,%xmm4,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm15,%xmm6,%xmm5$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm15,%xmm8,%xmm7$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm2,%xmm0,%xmm0$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm2,%xmm1,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm3,%xmm1,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm3,%xmm1,%xmm2$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm3,%xmm10,%xmm9$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm3,%xmm2,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm3,%xmm4,%xmm2$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm3,%xmm4,%xmm5$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm3,%xmm5,%xmm3$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm3,%xmm6,%xmm7$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm3,%xmm8,%xmm9$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm4,%xmm1,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm5,%xmm3,%xmm4$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm5,%xmm6,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm5,%xmm6,%xmm3$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm5,%xmm6,%xmm5$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm5,%xmm7,%xmm5$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm7,%xmm5,%xmm3$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm7,%xmm5,%xmm6$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm7,%xmm8,%xmm4$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm7,%xmm8,%xmm7$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm7,%xmm9,%xmm7$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm8,%xmm7,%xmm3$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm9,%xmm12,%xmm3$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm9,%xmm7,%xmm8$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm0,%xmm1,%xmm0$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm0,%xmm10,%xmm0$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm0,%xmm13,%xmm9$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm0,%xmm5,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm0,%xmm9,%xmm5$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm1,%xmm2,%xmm10$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm1,%xmm2,%xmm3$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm1,%xmm3,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm1,%xmm5,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm10,%xmm11,%xmm12$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm10,%xmm3,%xmm9$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm10,%xmm8,%xmm0$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm10,%xmm9,%xmm0$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm10,%xmm9,%xmm5$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm11,%xmm0,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm11,%xmm3,%xmm2$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm12,%xmm11,%xmm7$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm12,%xmm2,%xmm0$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm13,%xmm11,%xmm9$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm14,%xmm1,%xmm2$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm14,%xmm13,%xmm9$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm14,%xmm4,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm15,%xmm6,%xmm5$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm15,%xmm8,%xmm7$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm2,%xmm0,%xmm0$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm2,%xmm1,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm3,%xmm1,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm3,%xmm1,%xmm2$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm3,%xmm10,%xmm9$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm3,%xmm2,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm3,%xmm4,%xmm2$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm3,%xmm4,%xmm5$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm3,%xmm5,%xmm3$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm3,%xmm6,%xmm7$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm3,%xmm8,%xmm9$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm4,%xmm1,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm5,%xmm3,%xmm4$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm5,%xmm6,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm5,%xmm6,%xmm3$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm5,%xmm6,%xmm5$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm5,%xmm7,%xmm5$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm7,%xmm5,%xmm3$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm7,%xmm5,%xmm6$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm7,%xmm8,%xmm4$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm7,%xmm8,%xmm7$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm7,%xmm9,%xmm7$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm8,%xmm7,%xmm3$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm9,%xmm12,%xmm2$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm9,%xmm7,%xmm8$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm0,%xmm1,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm0,%xmm10,%xmm9$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm0,%xmm13,%xmm0$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm0,%xmm9,%xmm0$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm1,%xmm2,%xmm1$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm1,%xmm3,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm1,%xmm5,%xmm6$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm10,%xmm11,%xmm10$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm10,%xmm3,%xmm3$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm10,%xmm9,%xmm4$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm10,%xmm9,%xmm6$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm10,%xmm9,%xmm9$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm11,%xmm0,%xmm0$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm12,%xmm11,%xmm6$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm12,%xmm11,%xmm8$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm13,%xmm11,%xmm3$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm14,%xmm13,%xmm8$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm2,%xmm0,%xmm12$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm2,%xmm1,%xmm15$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm3,%xmm1,%xmm1$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm3,%xmm1,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm3,%xmm2,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm3,%xmm4,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm3,%xmm4,%xmm3$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm3,%xmm5,%xmm4$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm3,%xmm6,%xmm3$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm3,%xmm8,%xmm3$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm4,%xmm1,%xmm14$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm4,%xmm1,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm5,%xmm3,%xmm3$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm5,%xmm6,%xmm0$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm5,%xmm6,%xmm15$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm5,%xmm6,%xmm3$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm5,%xmm7,%xmm6$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm7,%xmm5,%xmm4$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm7,%xmm5,%xmm5$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm7,%xmm8,%xmm15$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm7,%xmm8,%xmm4$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm7,%xmm9,%xmm8$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm8,%xmm7,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm9,%xmm7,%xmm7$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm0,%xmm1,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm0,%xmm10,%xmm9$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm0,%xmm13,%xmm0$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm0,%xmm5,%xmm0$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm0,%xmm9,%xmm0$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm1,%xmm2,%xmm1$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm1,%xmm3,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm1,%xmm5,%xmm6$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm10,%xmm11,%xmm10$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm10,%xmm3,%xmm3$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm10,%xmm8,%xmm0$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm10,%xmm9,%xmm4$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm10,%xmm9,%xmm6$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm10,%xmm9,%xmm9$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm11,%xmm0,%xmm0$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm11,%xmm3,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm12,%xmm11,%xmm6$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm12,%xmm11,%xmm8$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm13,%xmm11,%xmm3$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm14,%xmm1,%xmm1$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm14,%xmm13,%xmm8$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm2,%xmm0,%xmm12$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm2,%xmm1,%xmm15$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm3,%xmm1,%xmm1$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm3,%xmm1,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm3,%xmm2,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm3,%xmm4,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm3,%xmm4,%xmm3$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm3,%xmm5,%xmm4$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm3,%xmm6,%xmm3$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm3,%xmm8,%xmm3$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm4,%xmm1,%xmm14$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm4,%xmm1,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm5,%xmm3,%xmm3$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm5,%xmm6,%xmm0$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm5,%xmm6,%xmm15$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm5,%xmm6,%xmm3$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm5,%xmm7,%xmm6$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm7,%xmm5,%xmm4$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm7,%xmm5,%xmm5$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm7,%xmm8,%xmm15$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm7,%xmm8,%xmm4$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm7,%xmm9,%xmm8$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm8,%xmm7,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm9,%xmm12,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm9,%xmm7,%xmm7$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm11,%xmm0,%xmm13$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm12,%xmm1,%xmm13$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm13,%xmm2,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm13,%xmm4,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm13,%xmm6,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm13,%xmm8,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm14,%xmm3,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm14,%xmm5,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm14,%xmm7,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm14,%xmm9,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm11,%xmm0,%xmm13$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm12,%xmm1,%xmm13$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm13,%xmm2,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm13,%xmm4,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm13,%xmm6,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm13,%xmm8,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm14,%xmm3,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm14,%xmm5,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm14,%xmm7,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm14,%xmm9,%xmm15$/;"	l
w	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	/^    uint32_t w[16];$/;"	m	union:__anon65
w	secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static final Lock w = rwl.writeLock();$/;"	f	class:NativeSecp256k1	file:
w_done	ccan/ccan/io/test/run-12-bidir.c	/^static struct io_plan *w_done(struct io_conn *conn, struct data *d)$/;"	f	file:
wait_connected	tests/utils.py	/^        def wait_connected():$/;"	f	function:LightningNode.connect
wait_for_log	tests/utils.py	/^    def wait_for_log(self, regex, offset=1000, timeout=60):$/;"	m	class:TailableProc
waitanyinvoice_command	daemon/invoice.c	/^static const struct json_command waitanyinvoice_command = {$/;"	v	typeref:struct:json_command	file:
waiting_statepair	test/test_state_coverage.c	/^static bool waiting_statepair(enum state a, enum state b)$/;"	f	file:
waitinvoice	contrib/pylightning/lightning/lightning.py	/^    def waitinvoice(self, label=None, async=False):$/;"	m	class:LegacyLightningRpc
waitinvoice_command	daemon/invoice.c	/^static const struct json_command waitinvoice_command = {$/;"	v	typeref:struct:json_command	file:
wake_and_close	ccan/ccan/io/test/run-08-hangup-on-idle.c	/^static struct io_plan *wake_and_close(struct io_conn *conn, char *buf)$/;"	f	file:
wake_it	ccan/ccan/io/test/run-08-read-after-hangup.c	/^static struct io_plan *wake_it(struct io_conn *conn, struct io_conn *reader)$/;"	f	file:
wallet	daemon/lightningd.h	/^	struct list_head wallet;$/;"	m	struct:lightningd_state	typeref:struct:lightningd_state::list_head
wallet	daemon/wallet.c	/^struct wallet {$/;"	s	file:
wallet_add_signed_input	daemon/wallet.c	/^bool wallet_add_signed_input(struct lightningd_state *dstate,$/;"	f
wallet_can_spend	daemon/wallet.c	/^bool wallet_can_spend(struct lightningd_state *dstate,$/;"	f
walletkey	daemon/peer.h	/^	struct pubkey walletkey;$/;"	m	struct:anchor_input	typeref:struct:anchor_input::pubkey
want_feechange	daemon/peer.c	/^static bool want_feechange(const struct peer *peer)$/;"	f	file:
warn	ccan/ccan/err/err.c	/^void warn(const char *fmt, ...)$/;"	f
warnx	ccan/ccan/err/err.c	/^void warnx(const char *fmt, ...)$/;"	f
watch	daemon/peer.h	/^		struct txwatch *watch;$/;"	m	struct:peer::__anon48	typeref:struct:peer::__anon48::txwatch
watch_result	daemon/watch.h	/^enum watch_result {$/;"	g
watch_topology_changed	daemon/watch.c	/^void watch_topology_changed(struct lightningd_state *dstate)$/;"	f
watch_tx	daemon/watch.h	99;"	d
watch_tx_	daemon/watch.c	/^struct txwatch *watch_tx_(const tal_t *ctx,$/;"	f
watch_txid	daemon/watch.h	81;"	d
watch_txid_	daemon/watch.c	/^struct txwatch *watch_txid_(const tal_t *ctx,$/;"	f
watch_txo	daemon/watch.h	118;"	d
watch_txo_	daemon/watch.c	/^struct txowatch *watch_txo_(const tal_t *ctx,$/;"	f
watches	daemon/peer.h	/^	struct list_head watches;$/;"	m	struct:peer	typeref:struct:peer::list_head
watching_txid	daemon/watch.c	/^bool watching_txid(struct lightningd_state *dstate,$/;"	f
wbuf	ccan/ccan/io/test/run-12-bidir.c	/^	char wbuf[32];$/;"	m	struct:data	file:
wbuf	ccan/ccan/io/test/run-14-duplex-both-read.c	/^	char wbuf[32];$/;"	m	struct:data	file:
wbuf	ccan/ccan/io/test/run-16-duplex-test.c	/^	char wbuf[32];$/;"	m	struct:data	file:
we_broadcast	daemon/chaintopology.c	/^static bool we_broadcast(struct lightningd_state *dstate,$/;"	f	file:
when_to_fail	ccan/ccan/tal/test/run-allocfail.c	/^static int alloc_count, when_to_fail, err_count;$/;"	v	file:
which_fail	test/test_state_coverage.c	/^	enum failure which_fail;$/;"	m	struct:failpoint	typeref:enum:failpoint::failure	file:
wire_sync_read	wire/wire_sync.c	/^u8 *wire_sync_read(const tal_t *ctx, int fd)$/;"	f
wire_sync_write	wire/wire_sync.c	/^bool wire_sync_write(int fd, const void *msg)$/;"	f
wire_type	wire/gen_peer_wire.h	/^enum wire_type {$/;"	g
wire_type_name	wire/gen_peer_wire.c	/^const char *wire_type_name(int e)$/;"	f
with_field	wire/test/run-peer-wire.c	45;"	d	file:
witness	bitcoin/tx.h	/^	u8 **witness;$/;"	m	struct:bitcoin_tx_input
witnessscript	daemon/peer.h	/^		u8 *witnessscript;$/;"	m	struct:peer::__anon47
wnaf	secp256k1/src/bench_internal.c	/^    int wnaf[256];$/;"	m	struct:__anon19	file:
worst_run	ccan/ccan/htable/tools/speed.c	/^static size_t worst_run(struct htable *ht, size_t *deleted)$/;"	f	file:
wpkh	daemon/output_to_htlc.c	/^	struct wscript_by_wpkh *wpkh;$/;"	m	struct:htlc_output_map	typeref:struct:htlc_output_map::wscript_by_wpkh	file:
write	ccan/ccan/read_write_all/test/run-write_all.c	14;"	d	file:
write	ccan/ccan/read_write_all/test/run-write_all.c	16;"	d	file:
write_all	ccan/ccan/read_write_all/read_write_all.c	/^bool write_all(int fd, const void *data, size_t size)$/;"	f
write_all	lightningd/handshake/test/run-handshake.c	43;"	d	file:
write_buf	ccan/ccan/io/test/run-10-many.c	/^static struct io_plan *write_buf(struct io_conn *conn, struct buffer *buf)$/;"	f	file:
write_buf	ccan/ccan/io/test/run-19-always.c	/^static struct io_plan *write_buf(struct io_conn *conn, struct data *d)$/;"	f	file:
write_buf	lightningd/test/run-cryptomsg.c	/^static char *write_buf;$/;"	v	file:
write_buffer	daemon/sphinx.c	/^static void write_buffer(u8 *dst, const void *src, const size_t len, int *pos)$/;"	f	file:
write_complete	ccan/ccan/io/benchmarks/run-different-speed.c	/^static struct io_plan write_complete(struct io_conn *conn, struct client *client)$/;"	f	file:
write_complete	ccan/ccan/io/benchmarks/run-length-prefix.c	/^static struct io_plan write_complete(struct io_conn *conn, struct client *client)$/;"	f	file:
write_config	tests/utils.py	/^def write_config(filename, opts):$/;"	f
write_fd	lightningd/handshake/test/run-handshake.c	/^static int read_fd, write_fd;$/;"	v	file:
write_ip	daemon/routing.c	/^u8 *write_ip(const tal_t *ctx, const char *srcip, int port)$/;"	f
write_json	daemon/jsonrpc.c	/^static struct io_plan *write_json(struct io_conn *conn,$/;"	f	file:
write_out	test/test_protocol.c	/^static void write_out(int fd, const void *p, size_t len)$/;"	f	file:
write_reply	ccan/ccan/io/benchmarks/run-different-speed.c	/^static struct io_plan write_reply(struct io_conn *conn, struct client *client)$/;"	f	file:
write_reply	ccan/ccan/io/benchmarks/run-length-prefix.c	/^static struct io_plan write_reply(struct io_conn *conn, struct client *client)$/;"	f	file:
write_return	ccan/ccan/read_write_all/test/run-write_all.c	/^static ssize_t write_return;$/;"	v	file:
write_sessionkey	daemon/cryptopkt.c	/^static struct io_plan *write_sessionkey(struct io_conn *conn,$/;"	f	file:
write_to_client	test/test_protocol.c	/^static void write_to_client(const char *desc, int fd, const void *dst, size_t len)$/;"	f	file:
write_to_socket	ccan/ccan/io/test/run-03-readpartial.c	/^static void write_to_socket(const char *str, const struct addrinfo *addrinfo)$/;"	f	file:
writebuffer	irc.h	/^	char *writebuffer;$/;"	m	struct:ircstate
writequeue	irc.h	/^	struct list_head writequeue;$/;"	m	struct:ircstate	typeref:struct:ircstate::list_head
writer	ccan/ccan/io/benchmarks/run-loop.c	/^	struct io_conn *reader, *writer;$/;"	m	struct:buffer	typeref:struct:buffer::	file:
writer	ccan/ccan/io/test/run-10-many.c	/^	struct io_conn *reader, *writer;$/;"	m	struct:buffer	typeref:struct:buffer::	file:
wscript	daemon/output_to_htlc.c	/^	const u8 *wscript;$/;"	m	struct:wscript_by_wpkh	file:
wscript_by_wpkh	daemon/output_to_htlc.c	/^struct wscript_by_wpkh {$/;"	s	file:
wscript_for_htlc	daemon/commit_tx.c	/^u8 *wscript_for_htlc(const tal_t *ctx,$/;"	f
wscripts	daemon/peer.h	/^		const u8 **wscripts;$/;"	m	struct:peer::__anon50
x	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb_cast-multi.c	/^	int x;$/;"	m	struct:any	file:
x	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb_cast-multi.c	/^	int x;$/;"	m	struct:bar	file:
x	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb_cast-multi.c	/^	int x;$/;"	m	struct:baz	file:
x	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb_cast-multi.c	/^	int x;$/;"	m	struct:foo	file:
x	ccan/ccan/typesafe_cb/test/compile_fail-typesafe_cb_cast-multi.c	/^	int x;$/;"	m	struct:other	file:
x	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb_cast.c	/^	int x;$/;"	m	struct:any	file:
x	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb_cast.c	/^	int x;$/;"	m	struct:bar	file:
x	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb_cast.c	/^	int x;$/;"	m	struct:baz	file:
x	ccan/ccan/typesafe_cb/test/compile_ok-typesafe_cb_cast.c	/^	int x;$/;"	m	struct:foo	file:
x	libsodium/test/default/hash.c	/^static unsigned char x[] = "testing\\n";$/;"	v	file:
x	libsodium/test/default/hash3.c	/^static unsigned char x[] = "testing\\n";$/;"	v	file:
x	libsodium/test/default/randombytes.c	/^static unsigned char x[65536];$/;"	v	file:
x	secp256k1/src/group.h	/^    secp256k1_fe x; \/* actual X: x\/z^2 *\/$/;"	m	struct:__anon31
x	secp256k1/src/group.h	/^    secp256k1_fe x;$/;"	m	struct:__anon30
x	secp256k1/src/group.h	/^    secp256k1_fe_storage x;$/;"	m	struct:__anon32
x1	ccan/ccan/tcon/test/compile_ok-value.c	/^	int x1;$/;"	m	struct:other_struct	file:
x1	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c	20;"	d	file:
x2	ccan/ccan/tcon/test/compile_ok-value.c	/^	char *x2;$/;"	m	struct:other_struct	file:
x2	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c	21;"	d	file:
x2	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c	64;"	d	file:
x2	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c	67;"	d	file:
x2	libsodium/test/default/hash.c	/^static unsigned char x2[] = "The Conscience of a Hacker is a small essay written January 8, 1986 by a computer security hacker who went by the handle of The Mentor, who belonged to the 2nd generation of Legion of Doom.";$/;"	v	file:
xcode	ccan/ccan/order/test/fancy_cmp.h	/^	unsigned xcode;$/;"	m	struct:cmp_info
xmit_add_htlc	test/test_protocol.c	/^static void xmit_add_htlc(struct peer *peer, const struct htlc *h)$/;"	f	file:
xmit_commit	test/test_protocol.c	/^static void xmit_commit(struct peer *peer, struct signature sig)$/;"	f	file:
xmit_feechange	test/test_protocol.c	/^static void xmit_feechange(struct peer *peer)$/;"	f	file:
xmit_remove_htlc	test/test_protocol.c	/^static void xmit_remove_htlc(struct peer *peer, const struct htlc *h)$/;"	f	file:
xmit_revoke	test/test_protocol.c	/^static void xmit_revoke(struct peer *peer, unsigned int number)$/;"	f	file:
xmmi	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^typedef __m128i xmmi;$/;"	t	file:
xor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^xor  %rdx,%rax$/;"	l
xor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^xor  %rdx,%rcx$/;"	l
xor	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xor %rax,%rax$/;"	l
xor2	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128.h	20;"	d
xor2	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128_aes128ctr.c	/^void xor2(int128 *r, const int128 *x)$/;"	f
xor_block	ccan/ccan/crypto/hmac_sha256/hmac_sha256.c	/^static inline void xor_block(uint64_t block[BLOCK_U64S], uint64_t pad)$/;"	f	file:
xor_block	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^void xor_block(block *dst, const block *src) {$/;"	f
xor_rcon	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128.h	50;"	d
xor_rcon	libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128_aes128ctr.c	/^void xor_rcon(int128 *r)$/;"	f
xorbytes	daemon/sphinx.c	/^static void xorbytes(uint8_t *d, const uint8_t *a, const uint8_t *b, size_t len)$/;"	f	file:
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 0(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 0(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 100(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 104(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 108(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 112(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 116(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 12(%rsi),%eax$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 12(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 120(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 124(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 128(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 132(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 136(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 140(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 144(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 148(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 152(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 156(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 16(%rsi),%eax$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 16(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 160(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 164(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 168(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 172(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 176(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 180(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 184(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 188(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 192(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 196(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 20(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 200(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 204(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 208(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 212(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 216(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 220(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 224(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 228(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 232(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 236(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 24(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 240(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 244(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 248(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 252(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 28(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 32(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 32(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 36(%rsi),%eax$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 36(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 4(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 4(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 40(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 40(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 44(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 44(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 48(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 48(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 52(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 52(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 56(%rsi),%eax$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 56(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 60(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 60(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 64(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 68(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 72(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 76(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 8(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 8(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 80(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 84(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 88(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 92(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S	/^xorl 96(%rsi),%edx$/;"	l
xorq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^xorq 0(%rsi),%rdx$/;"	l
xorq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^xorq 16(%rsi),%r8$/;"	l
xorq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^xorq 24(%rsi),%r9$/;"	l
xorq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^xorq 8(%rsi),%rcx$/;"	l
xorq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^xorq 0(%rsi),%rdx$/;"	l
xorq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^xorq 16(%rsi),%r8$/;"	l
xorq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^xorq 24(%rsi),%r9$/;"	l
xorq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^xorq 8(%rsi),%rcx$/;"	l
xy2d	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe xy2d;$/;"	m	struct:__anon71
y	secp256k1/src/group.h	/^    secp256k1_fe y; \/* actual Y: y\/z^3 *\/$/;"	m	struct:__anon31
y	secp256k1/src/group.h	/^    secp256k1_fe y;$/;"	m	struct:__anon30
y	secp256k1/src/group.h	/^    secp256k1_fe_storage y;$/;"	m	struct:__anon32
y	test/test_protocol.c	/^	int y;$/;"	m	struct:sent	file:
yminusx	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe yminusx;$/;"	m	struct:__anon71
yplusx	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe yplusx;$/;"	m	struct:__anon71
z	secp256k1/src/group.h	/^    secp256k1_fe z;$/;"	m	struct:__anon31
z2	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c	22;"	d	file:
z2	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c	65;"	d	file:
z2	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c	68;"	d	file:
zero	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^static unsigned char zero[32];$/;"	v	file:
zero	libsodium/test/default/core1.c	/^static unsigned char zero[32];$/;"	v	file:
zip_safe	contrib/pylightning/setup.py	/^      zip_safe=True)$/;"	v
